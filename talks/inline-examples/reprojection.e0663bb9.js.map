{"mappings":"4vCAAAA,EAAO,qBAAsBC,SAASC,KAAKC,MAAK,uSCE5CC,EAAO,GAoBXC,EAAOC,QAAQL,kBAlBGM,WACZC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BN,EAAQI,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAAOC,QAAQM,iBAXEC,OACXC,EAAWV,EAAQS,MAEP,MAAZC,EAAgB,MAAA,IACRC,MAAK,oCAAuCF,UAGjDC,uoBCAHE,KAAI,aACI,0LASDC,EAAAC,IAAA,cACHC,UAAS,EAAE,MAAS,KAAS,MAAS,YAE5CC,EAAM,GAEVA,EAAY,IAAA,IAAAC,EAAAC,QAAA,CACVC,OAAM,IAAAC,EAAAC,UAGJC,EAAM,IAAAC,EAAAL,QAEVF,EAAY,IAAA,IAAAC,EAAAC,QAGZM,MAFQ,sGAGLC,MAAI,SAAWC,UACPA,EAASC,UAEjBF,MAAI,SAAWE,OACVC,EAASN,EAAOO,KAAKF,GACrBG,EAAOC,EAAAC,wBAA2BJ,EAAM,CAC1CK,MAAK,mBAEPH,EAAQI,aAAY,0DACsC,IAAAC,MAChDC,cACVN,EAAQO,YAAW,GACnBP,EAAQQ,WAAU,aAClBR,EAAQS,OAAQ,EAChBvB,EAAY,IAAEwB,UAAS,IAAAC,EAAAvB,QAAUY,OAGrCd,EAAe,OAAA,IAAA0B,EAAAxB,QAAA,CACbC,OAAM,IAAAwB,EAAAzB,QAAA,CACJ0B,IAAGC,EAAA3B,QACH4B,OAAM,IAAAC,EAAA7B,QACNgB,aAAY,wGAEdc,MAAK,IAAAC,EAAAC,MAAA,CACHC,OAAM,IAAAF,EAAAG,OAAA,CACJC,MAAK,UACLC,MAAO,UAKN,IAAAC,EAAArC,QAAA,CACLF,OAAM,CAAGA,EAAY,IAAGA,EAAY,IAAGA,EAAe,QACtDwC,OAAM,MACNC,KAAI,IAAAC,EAAAxC,QAAA,CACFoB,WAAU,YACVqB,OAAM9C,EAAA+C,WAAA,CAAc,EAAG,KACvBC,KAAM,wjBC/EP,MAAAC,EAAAlE,EAAA,8lBAsDHmE,EAAA,SAAAC,GAGK,SACHC,EAAYnC,UACVA,EAAOoC,EAAAC,OAAA,GAAcrC,IACRsC,WACXtC,EAAQsC,SAAQC,EAAAC,YAEbxC,EAAQyC,eACXzC,EAAQyC,aAAYC,EAAAF,SAAA,CAClBG,aAAa,KAIjBT,EAAAU,KAAAC,KAAM7C,IAAO6C,YAfCC,EAAAX,EAAAD,GAkBhBC,EAAAY,UAAAC,eAAc,uCAGhBb,EArBA,sBAuBeF,4SC7EZ,MAAAgB,EAAAnF,EAAA,qxBAiBHoF,EAAA,SAAAhB,GAGK,SACHiB,EAAYC,OAAZC,EACEnB,EAAAU,KAAAC,KAAMO,IAAGP,KAKTQ,EAAKC,uBAAsBC,EAAAC,OAAAC,EAAAC,aAAAC,EAAAvE,QAETwE,eAChBR,EAAIS,WAAWC,KAAKV,IAOtBC,EAAKU,SAAWC,SAASC,cAAa,WAChC/C,EAAQmC,EAAKU,SAAS7C,MAC5BA,EAAMgD,SAAQ,WACdhD,EAAMM,MAAK,OACXN,EAAMiD,OAAM,OACZjD,EAAMkD,OAAM,IAEZf,EAAKU,SAASM,UAASC,EAAAC,mBAAA,iBAEjBC,EAAYpB,EAAIqB,qBACtBD,EAAUE,aAAarB,EAAKU,SAAUS,EAAUG,YAAc,MAM9DtB,EAAKuB,UAAS,GAMdvB,EAAKwB,kBAAmB,WA1CO/B,EAAAK,EAAAjB,GAiDjCiB,EAAAJ,UAAA+B,oBAAmB,SAACC,EAAMC,OAClB5B,EAAGP,KAAQoC,YACb7B,EAAI8B,YAAYH,GAAI,KAChBI,EAAK,IAAAC,EAAAhG,QAAmB2F,OAAMM,EAAWL,GAC/C5B,EAAIkC,cAAcH,KAItBhC,EAAAJ,UAAAwC,gBAAe,gCACMjC,6BACdS,SAASyB,WAAWC,YAAW5C,KAAMkB,UAC1C7B,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAOvBM,EAAAJ,UAAA2C,YAAW,SAACV,MACLA,QAQAW,oBAAoBX,QACpBF,oBAAmBc,EAAAxG,QAAiByG,WAAYb,OAE/Cc,EAAmBd,EAAWc,iBAAiBC,MAAI,SAAWC,EAAGC,UAC9DD,EAAE5B,OAAS6B,EAAE7B,UAEhB8B,EAAYlB,EAAWkB,eAExBtB,UAAUnG,OAAS,MAGrB,IACG0H,EAAe,GACjBC,EAAkB,KACb5H,EAAI,EAAG6H,EAAKP,EAAiBrH,OAAQD,EAAI6H,IAAM7H,EAAC,KACjD8H,EAAaR,EAAiBtH,MACpCwG,EAAWuB,WAAa/H,WAEd8H,EAAYJ,KACnBI,EAAWE,aAAWC,EAAArH,QAAgBsH,OACrCJ,EAAWE,aAAWC,EAAArH,QAAgBuH,gBAKpCxG,EAAQmG,EAAWnG,MACnByG,EAAUzG,EAAM0G,OAAO7B,EAAYoB,GACpCQ,IAGDA,IAAYR,SACTxB,UAAUkC,KAAKF,GACpBR,EAAkBQ,oBAEEzG,GACpBgG,EAAgBW,KAAK3G,SAGhB3B,EAAI2H,EAAgB1H,OAAS,EAAGD,GAAK,IAAKA,EACjD2H,EAAgB3H,GAAGuI,gBAAgB/B,0BAGhBjB,SAAQlB,KAAO+B,gBAE/BE,oBAAmBc,EAAAxG,QAAiB4H,YAAahC,QAE5CH,wBACHd,SAAS7C,MAAM+F,QAAO,QACtBpC,kBAAmB,QAGrBqC,wBAAwBlC,aA1DlBH,wBACFd,SAAS7C,MAAM+F,QAAO,YACtBpC,kBAAmB,IAwE9B1B,EAAAJ,UAAAoE,oBAAmB,SAACC,EAAOpC,EAAYqC,EAAcC,EAAUC,WACvDrB,EAAYlB,EAAWkB,UAEvBsB,EAAcxC,EAAWc,iBAGtBtH,EAFSgJ,EAAY/I,OAEL,EAAGD,GAAK,IAAKA,EAAC,KAC/B8H,EAAakB,EAAYhJ,GACzB2B,EAAQmG,EAAWnG,SAEvBA,EAAMsH,eAAWC,EAAAC,OACVrB,EAAYJ,IACnBqB,EAAYpH,GAAK,KAGXyH,EADgBzH,EAAM0H,cACDC,eACzBV,EACApC,EACAqC,MAEEO,EAAI,KACA9H,EAASwH,EAASnH,EAAOyH,MAC3B9H,EAAM,OACDA,MAOnBqD,EA7KA,sBA+KeD,gbChMZ,MAAA6E,EAAAjK,EAAA,mpBAuBHkK,EAAA,SAAA9F,GAGK,SACH+F,EAAY7E,OAAZC,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK6E,KAAO9E,WAXUN,EAAAmF,EAAA/F,GAmBxB+F,EAAAlF,UAAA+B,oBAAmB,SAACC,EAAMC,iBAQ1BiD,EAAAlF,UAAA4C,oBAAmB,SAACX,OACZkB,EAAYlB,EAAWkB,UACvBiC,EAA6BnD,EAAWmD,2BACxCC,EAA6BpD,EAAWoD,qCAG5CD,EACAnD,EAAWqD,KAAK,GAAK,EACrBrD,EAAWqD,KAAK,GAAK,EACrB,EAAInC,EAAUoC,YACd,EAAKpC,EAAUoC,YACdpC,EAAUqC,UACVrC,EAAUrE,OAAO,IACjBqE,EAAUrE,OAAO,kBAGRuG,EAA4BD,IAkB1CF,EAAAlF,UAAAyF,2BAA0B,SACxBC,EACAzD,EACAqC,EACAqB,EACApB,EACAqB,EACApB,EACAqB,OAEI9I,EACEoG,EAAYlB,EAAWkB,UAQ1B,SACMsC,EAA2BK,EAASC,EAAS3I,EAAO4I,UACpDzB,EAAS1E,KAAK+F,EAASG,EAASD,EAAU1I,EAAQ,KAAM4I,OAG3DvI,EAAa0F,EAAU1F,WAEvBwI,EAAoBC,EAAAxI,MAASgI,EAAWS,QAAS1I,GACjD2I,EAAO,EAAK,EAAG,OACjB3I,EAAW4I,YAAcV,EAAY,KACjCW,EAAmB7I,EAAW8I,YAC9BC,EAAUC,EAAAC,SAAYJ,GAC5BF,EAAQrC,KAAI,EAAGyC,EAAY,IAAKA,EAAY,YAGxC/B,EAAcxC,EAAWc,iBACzB4D,EAAYlC,EAAY/I,OAExBkL,EAAO,GACPC,EAAQ,GACLpL,EAAI,EAAGA,EAAI2K,EAAQ1K,OAAQD,IAAC,IAAA,IAC1BqL,EAAIH,EAAY,EAAGG,GAAK,IAAKA,EAAC,KAC/BvD,EAAakB,EAAYqC,GACzB1J,EAAQmG,EAAWnG,SAEvBA,EAAMsH,eAAWC,EAAAC,OACVrB,EAAYJ,IACnBqB,EAAY3E,KAAKgG,EAAUzI,GAAK,KAE1B2J,EAAgB3J,EAAM0H,cACtBxI,EAASc,EAAM4J,eACjBD,GAAiBzK,EAAM,KACnB2K,EAAc3K,EAAO4K,WACvBjB,EACAP,EACEyB,EAAW1B,EAA2B1E,KAC1C,KACAwC,EAAWuC,SAEbe,EAAS,GAAKI,EAAY,GAAKb,EAAQ3K,GAAG,GAC1CoL,EAAS,GAAKI,EAAY,GAAKb,EAAQ3K,GAAG,GAC1CsB,EAASgK,EAActB,2BACrBoB,EACA5E,EACAqC,EACA6C,EACAP,MAGA7J,EAAM,OACDA,MAKQ,IAAnB6J,EAAQlL,YAGN0L,EAAQ,EAAIR,EAAQlL,cAC1BkL,EAAQS,SAAO,SAAEC,EAAGC,UAAOD,EAAEE,YAAcD,EAAIH,KAC/CR,EAAQ5D,MAAI,SAAEC,EAAGC,UAAMD,EAAEuE,WAAatE,EAAEsE,cACxCZ,EAAQa,MAAI,SAAEH,UACJvK,EAASuK,EAAE/C,SAAS+C,EAAEvB,QAASuB,EAAElK,MAAOkK,EAAEtB,aAE7CjJ,IAiBTmI,EAAAlF,UAAAoE,oBAAmB,SAACC,EAAOpC,EAAYqC,EAAcC,EAAUC,wBAiB/DU,EAAAlF,UAAA0H,uBAAsB,SACpBhC,EACAzD,EACAqC,EACAqB,EACAnB,EACAoB,eAasBtD,IAXNxC,KAAQ2F,2BACtBC,EACAzD,EACAqC,EACAqB,EAAYgC,EAAAC,KAAA9H,KAGZ0E,EACAoB,IASJV,EAAAlF,UAAAkC,OAAM,uBACQiD,MAQdD,EAAAlF,UAAA2C,YAAW,SAACV,iBAQZiD,EAAAlF,UAAAmE,wBAAuB,SAAClC,YACH4F,kBACjB5F,EAAW6F,oBAAoB/D,KAAKgE,IAG1C7C,EAjOA,YAsOG,SACM6C,EAAgB1H,EAAK4B,YACb+F,mBAGF/C,wXC7PZ,IACHgD,EAAA,oBACEC,IAKKpI,KACEqI,UAAW,SAMlBD,EAAAlI,UAAAoI,QAAO,gBACKD,gBACHA,UAAW,OACX3F,oBAQT0F,EAAAlI,UAAAwC,gBAAe,aACjB0F,EAzBA,aA2BeD,wFCnCf5M,EAAQgN,eAAc,SAAYpF,UACzBA,GAAKA,EAAEqF,WAAarF,EAAC,CAAI5G,QAAS4G,IAG3C5H,EAAQkN,kBAAiB,SAAYtF,GACnCzH,OAAOgN,eAAevF,EAAC,aAAc,CAAGwF,OAAO,KAGjDpN,EAAQqN,UAAS,SAAYpM,EAAQqM,UACnCnN,OAAOD,KAAKe,GAAQ+K,SAAO,SAAUuB,GAC5B,YAAHA,GAAwB,eAAHA,IAKrBA,KAAOD,GAAQA,EAAKC,KAAStM,EAAOsM,IAIxCpN,OAAOgN,eAAeG,EAAMC,EAAG,CAC7BC,YAAY,EACZ5M,IAAG,kBACMK,EAAOsM,UAKbD,GAGTtN,EAAQyN,OAAM,SAAYH,EAAMI,EAAU9M,GACxCT,OAAOgN,eAAeG,EAAMI,EAAQ,CAClCF,YAAY,EACZ5M,IAAKA,oHCxBN+M,EAAAF,OAAAzN,EAAA,QAAA,IACauM,IAOboB,EAAAF,OAAAzN,EAAA,SAAA,IACa4N,IAQbD,EAAAF,OAAAzN,EAAA,QAAA,IACa6N,IAUbF,EAAAF,OAAAzN,EAAA,cAAA,IACa8N,IApCb,IAAAC,EAAArO,EAAA,uBAQa6M,WACP,WAOOqB,WACP,WAQOC,cAWAC,EAAWE,OAIrBC,EAGAC,EAEAC,EARAC,GAAS,wBAWLC,EAAWC,MAAM3J,UAAUmG,MAAMtG,KAAK+J,kBACvCH,GAAM3J,OAAa0J,GAAQJ,EAAAS,OAAiBH,EAAUH,KACzDE,GAAS,EACTD,EAAQ1J,KACRyJ,EAAWG,EACXJ,EAAaD,EAAGS,MAAKhK,KAAO8J,YAEvBN,gLC5CKS,EAAaC,EAAUC,EAAQC,WACzCC,EAAKC,EACHC,EAAaH,GAAkBI,EACjCC,EAAM,EACNC,EAAOR,EAAStO,OAChB+O,GAAQ,EAELF,EAAMC,IAIXJ,GAAOC,EAAWL,EADlBG,EAAMI,GAAQC,EAAOD,GAAQ,IACIN,IAEvB,EAERM,EAAMJ,EAAM,GAGZK,EAAOL,EACPM,GAASL,GAIO,OACbK,EAAQF,GAAOA,WAURD,EAA0BrH,EAAGC,UACpCD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,WASlBwH,EAASC,EAAKC,UACrBD,EAAIE,QAAQD,IAAQ,WAWbE,EAAkBH,EAAKhM,EAAQoM,OACvCC,EAAIL,EAAIjP,UACViP,EAAI,IAAMhM,EAAM,OACX,KACEA,GAAUgM,EAAIK,EAAI,GAAC,OACrBA,EAAI,MAEPvP,OAAC,KACDsP,EAAY,GAAC,IACVtP,EAAI,EAAGA,EAAIuP,IAAKvP,KACfkP,EAAIlP,GAAKkD,EAAM,OACVlD,EAAI,UAGNsP,EAAY,GAAC,IACjBtP,EAAI,EAAGA,EAAIuP,IAAKvP,KACfkP,EAAIlP,IAAMkD,EAAM,OACXlD,WAINA,EAAI,EAAGA,EAAIuP,IAAKvP,EAAC,IAChBkP,EAAIlP,IAAMkD,EAAM,OACXlD,KACEkP,EAAIlP,GAAKkD,SACdgM,EAAIlP,EAAI,GAAKkD,EAASA,EAASgM,EAAIlP,GAC9BA,EAAI,EAEJA,SAKRuP,EAAI,WASCC,EAAgBN,EAAKO,EAAOC,QACnCD,EAAQC,GAAG,KACVC,EAAMT,EAAIO,GAChBP,EAAIO,GAASP,EAAIQ,GACjBR,EAAIQ,GAAOC,IACTF,IACAC,YASUE,EAAOV,EAAK9F,WACpByG,EAAY3B,MAAM4B,QAAQ1G,GAAQA,EAAI,CAAIA,GAC1CnJ,EAAS4P,EAAU5P,OAChBD,EAAI,EAAGA,EAAIC,EAAQD,IAC1BkP,EAAIA,EAAIjP,QAAU4P,EAAU7P,YAUhB+P,EAAOb,EAAKC,OACpBnP,EAAIkP,EAAIE,QAAQD,GAChBH,EAAQhP,GAAI,SACdgP,GACFE,EAAIc,OAAOhQ,EAAG,GAETgP,WASOiB,EAAKf,EAAKgB,WAEpBlD,EADE/M,EAASiP,EAAIjP,SAAW,EAGrBD,EAAI,EAAGA,EAAIC,EAAQD,OAEtBkQ,EADJlD,EAAQkC,EAAIlP,GACIA,EAAGkP,GAAG,OACblC,SAGJ,cAQOoB,EAAO+B,EAAMC,OACrBC,EAAOF,EAAKlQ,UACdoQ,IAASD,EAAKnQ,OAAM,OACf,UAEAD,EAAI,EAAGA,EAAIqQ,EAAMrQ,OACpBmQ,EAAKnQ,KAAOoQ,EAAKpQ,GAAC,OACb,SAGJ,WAUOsQ,EAAWpB,EAAKqB,OAG1BvQ,EAFEC,EAASiP,EAAIjP,OACb0P,EAAMzB,MAAMgB,EAAIjP,YAEjBD,EAAI,EAAGA,EAAIC,EAAQD,IACtB2P,EAAI3P,GAAC,CAAKwQ,MAAOxQ,EAAGgN,MAAOkC,EAAIlP,QAEjC2P,EAAIpI,MAAI,SAAWC,EAAGC,UACb8I,EAAW/I,EAAEwF,MAAOvF,EAAEuF,QAAUxF,EAAEgJ,MAAQ/I,EAAE+I,SAEhDxQ,EAAI,EAAGA,EAAIkP,EAAIjP,OAAQD,IAC1BkP,EAAIlP,GAAK2P,EAAI3P,GAAGgN,eASJyD,EAAUvB,EAAKgB,OACzBM,SACWtB,EAAIwB,OAAK,SAAWC,EAAIC,UACrCJ,EAAQI,GACAV,EAAKS,EAAIC,EAAK1B,MAETsB,GAAQ,WASTK,EAAS3B,EAAK4B,EAAUC,OAChCC,EAAUF,GAAYjC,SACrBK,EAAIwB,OAAK,SAAWO,EAAYT,MACvB,IAAVA,EAAW,OACN,MAEHU,EAAMF,EAAQ9B,EAAIsB,EAAQ,GAAIS,WAC3BC,EAAM,GAAMH,GAAsB,IAARG,6BA/NpC3D,EAAAF,OAAAzN,EAAA,gBAAA,IACa0O,IAiCbf,EAAAF,OAAAzN,EAAA,6BAAA,IACaiP,IASbtB,EAAAF,OAAAzN,EAAA,YAAA,IACaqP,IAWb1B,EAAAF,OAAAzN,EAAA,qBAAA,IACayP,IAyCb9B,EAAAF,OAAAzN,EAAA,mBAAA,IACa4P,IAcbjC,EAAAF,OAAAzN,EAAA,UAAA,IACagQ,IAabrC,EAAAF,OAAAzN,EAAA,UAAA,IACamQ,IAcbxC,EAAAF,OAAAzN,EAAA,QAAA,IACaqQ,IAiBb1C,EAAAF,OAAAzN,EAAA,UAAA,IACawO,IAmBbb,EAAAF,OAAAzN,EAAA,cAAA,IACa0Q,IAmBb/C,EAAAF,OAAAzN,EAAA,aAAA,IACa6Q,IAcblD,EAAAF,OAAAzN,EAAA,YAAA,IACaiR,6JC7NAM,gCAEF9Q,MAAK,4DAHhBkN,EAAAF,OAAAzN,EAAA,YAAA,IACauR,IAqBb5D,EAAAF,OAAAzN,EAAA,UAAA,IACawR,8BAQHC,IApBV,IACCC,EAAc,WAWFF,EAAOjC,UACdA,EAAIoC,SAAWpC,EAAIoC,OAASC,SAASF,QAOjCD,EAAO,wLCJjB9D,EAAAF,OAAAzN,EAAA,UAAA,IACa6R,IAQblE,EAAAF,OAAAzN,EAAA,SAAA,IACa8R,IAUbnE,EAAAF,OAAAzN,EAAA,YAAA,IACa+R,IAkCbpE,EAAAF,OAAAzN,EAAA,OAAA,IACagS,IAebrE,EAAAF,OAAAzN,EAAA,gBAAA,IACaiS,IAkBbtE,EAAAF,OAAAzN,EAAA,SAAA,IACayO,IAabd,EAAAF,OAAAzN,EAAA,UAAA,IACakS,IAYbvE,EAAAF,OAAAzN,EAAA,SAAA,IACamS,IAUbxE,EAAAF,OAAAzN,EAAA,aAAA,IACaoS,IAUbzE,EAAAF,OAAAzN,EAAA,aAAA,IACaqS,IAgBb1E,EAAAF,OAAAzN,EAAA,WAAA,IACasS,IAyBb3E,EAAAF,OAAAzN,EAAA,uBAAA,IACauS,IAQb5E,EAAAF,OAAAzN,EAAA,UAAA,IACawS,IAUb7E,EAAAF,OAAAzN,EAAA,eAAA,IACayS,IAyBb9E,EAAAF,OAAAzN,EAAA,eAAA,IACa0S,IASb/E,EAAAF,OAAAzN,EAAA,YAAA,IACa2S,IA9Qb,IAAAC,EAAAlT,EAAA,gBA0BGmT,EAAI,IAAOvE,MAAM,YAMPuD,WACN,EAAG,EAAG,EAAG,EAAG,EAAG,YAQTC,EAAMgB,UACbd,EAAIc,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,YAUvBf,EAASgB,EAAYC,OAC7BC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,UAEtBD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,WAcOf,EAAIc,EAAWlL,EAAGC,EAAGgM,EAAGC,EAAGC,EAAGC,UAC5ClB,EAAU,GAAKlL,EACfkL,EAAU,GAAKjL,EACfiL,EAAU,GAAKe,EACff,EAAU,GAAKgB,EACfhB,EAAU,GAAKiB,EACfjB,EAAU,GAAKkB,EACRlB,WASOb,EAAac,EAAYC,UACvCD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,WAYOtE,EAAMqE,EAAWzI,OACzB4J,EAAI5J,EAAW,GACf6J,EAAI7J,EAAW,UACrBA,EAAW,GAAKyI,EAAU,GAAKmB,EAAInB,EAAU,GAAKoB,EAAIpB,EAAU,GAChEzI,EAAW,GAAKyI,EAAU,GAAKmB,EAAInB,EAAU,GAAKoB,EAAIpB,EAAU,GACzDzI,WASO6H,EAAOY,EAAWqB,OAC1BC,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,UACdpC,EAASe,EAAWd,EAAIa,EAAMuB,EAAKE,GAAMA,EAAKF,EAAK,EAAG,aAU/CjC,EAAMW,EAAWmB,EAAGC,UAC3BnC,EAASe,EAAWd,EAAIa,EAAMoB,EAAG,EAAG,EAAGC,EAAG,EAAG,aAUtC9B,EAAU9O,EAAQ2Q,EAAGC,UAC5BlC,EAAI1O,EAAQ2Q,EAAG,EAAG,EAAGC,EAAG,EAAG,YAUpB7B,EAAUS,EAAWyB,EAAIC,UAChCzC,EAASe,EAAWd,EAAIa,EAAM,EAAG,EAAG,EAAG,EAAG0B,EAAIC,aAgBvClC,EAAQQ,EAAW2B,EAAKC,EAAKC,EAAIC,EAAIT,EAAOU,EAAKC,OACzDR,EAAMD,KAAKC,IAAIH,GACfC,EAAMC,KAAKD,IAAID,UACrBrB,EAAU,GAAK6B,EAAKP,EACpBtB,EAAU,GAAK8B,EAAKN,EACpBxB,EAAU,IAAM6B,EAAKL,EACrBxB,EAAU,GAAK8B,EAAKR,EACpBtB,EAAU,GAAK+B,EAAMF,EAAKP,EAAMU,EAAMH,EAAKL,EAAMG,EACjD3B,EAAU,GAAK+B,EAAMD,EAAKN,EAAMQ,EAAMF,EAAKR,EAAMM,EAC1C5B,WAiBOP,EAAoBkC,EAAKC,EAAKC,EAAIC,EAAIT,EAAOU,EAAKC,UACzDnC,EAASL,GAtLR,EAAG,EAAG,EAAG,EAAG,EAAG,GAsLWmC,EAAKC,EAAKC,EAAIC,EAAIT,EAAOU,EAAKC,aAQlDtC,EAAOvR,UACdwR,EAAYxR,EAAQA,YAUbwR,EAAYnP,EAAQrC,OAC5B8T,EAAMrC,EAAYzR,YACT,IAAR8T,EAAW,QAEZnN,EAAI3G,EAAO,GACX4G,EAAI5G,EAAO,GACX4S,EAAI5S,EAAO,GACX6S,EAAI7S,EAAO,GACX8S,EAAI9S,EAAO,GACX+S,EAAI/S,EAAO,UAEjBqC,EAAO,GAAKwQ,EAAIiB,EAChBzR,EAAO,IAAMuE,EAAIkN,EACjBzR,EAAO,IAAMuQ,EAAIkB,EACjBzR,EAAO,GAAKsE,EAAImN,EAChBzR,EAAO,IAAMuQ,EAAIG,EAAIF,EAAIC,GAAKgB,EAC9BzR,EAAO,KAAOsE,EAAIoM,EAAInM,EAAIkM,GAAKgB,EAExBzR,WAQOoP,EAAYsC,UACnBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,YASxBrC,EAASqC,mBACJA,EAAIC,KAAI,MAAK,mMCzQ/BtH,EAAAF,OAAAzN,EAAA,UAAA,IACakV,IAPb,IAAAC,EAAAzV,EAAA,sDAOawV,EAAOE,EAAWC,OAC3BD,EAAS,MAAA,IAAAE,EAAAtU,QACaqU,iMCT1B,MAAAE,EAAA7V,EAAA,+cAQH8V,EAAA,SAAA1R,GAGK,SACH2R,EAAYC,OAAZzQ,EAAAR,KAEQkR,EAAO,oDADH,WAAAJ,EAAA9D,QAAuB8D,EAAA9D,QAAA,IAAgB8D,EAAA9D,QAAWmE,MAAK,KAAM,IAGjE,gBAEJF,EAAI,uBAGNzQ,EAAAnB,EAAAU,KAAAC,KAAMkR,IAAOlR,MAURiR,KAAOA,EAKZzQ,EAAK4Q,KAAI,iBAGT5Q,EAAK0Q,QAAUA,WA/BUjR,EAAA+Q,EAAA3R,GAiC7B2R,EAjCA,CAA6BhV,iBAmCd+U,6LC1BZ7H,EAAAF,OAAAzN,EAAA,kBAAA,IACa8V,IA8BbnI,EAAAF,OAAAzN,EAAA,UAAA,IACa+V,IAuBbpI,EAAAF,OAAAzN,EAAA,SAAA,IACagW,IAiBbrI,EAAAF,OAAAzN,EAAA,4BAAA,IACaiW,IA0BbtI,EAAAF,OAAAzN,EAAA,sBAAA,IACakW,IAebvI,EAAAF,OAAAzN,EAAA,kBAAA,IACamW,IAiBbxI,EAAAF,OAAAzN,EAAA,cAAA,IACaoW,IAUbzI,EAAAF,OAAAzN,EAAA,0BAAA,IACaqW,IA4Bb1I,EAAAF,OAAAzN,EAAA,eAAA,IACasW,IAYb3I,EAAAF,OAAAzN,EAAA,kBAAA,IACauW,IAgBb5I,EAAAF,OAAAzN,EAAA,uBAAA,IACawW,IAQb7I,EAAAF,OAAAzN,EAAA,gCAAA,IACayW,IAUb9I,EAAAF,OAAAzN,EAAA,iCAAA,IACa0W,IAYb/I,EAAAF,OAAAzN,EAAA,qCAAA,IACa2W,IAebhJ,EAAAF,OAAAzN,EAAA,2BAAA,IACa4W,IAWbjJ,EAAAF,OAAAzN,EAAA,UAAA,IACawO,IAebb,EAAAF,OAAAzN,EAAA,uBAAA,IACa6W,IAeblJ,EAAAF,OAAAzN,EAAA,UAAA,IACagQ,IAmBbrC,EAAAF,OAAAzN,EAAA,oBAAA,IACa8W,IAmBbnJ,EAAAF,OAAAzN,EAAA,qBAAA,IACa+W,IAcbpJ,EAAAF,OAAAzN,EAAA,yBAAA,IACagX,IAiBbrJ,EAAAF,OAAAzN,EAAA,eAAA,IACaiX,IAWbtJ,EAAAF,OAAAzN,EAAA,YAAA,IACakX,IAebvJ,EAAAF,OAAAzN,EAAA,iBAAA,IACamX,IA0BbxJ,EAAAF,OAAAzN,EAAA,WAAA,IACaoX,IAabzJ,EAAAF,OAAAzN,EAAA,iBAAA,IACaqX,IASb1J,EAAAF,OAAAzN,EAAA,kBAAA,IACasX,IASb3J,EAAAF,OAAAzN,EAAA,aAAA,IACauX,IASb5J,EAAAF,OAAAzN,EAAA,aAAA,IACawX,IAoBb7J,EAAAF,OAAAzN,EAAA,mBAAA,IACayX,IAeb9J,EAAAF,OAAAzN,EAAA,qBAAA,IACa0X,IAuCb/J,EAAAF,OAAAzN,EAAA,aAAA,IACa2X,IAQbhK,EAAAF,OAAAzN,EAAA,uBAAA,IACa4X,IAYbjK,EAAAF,OAAAzN,EAAA,mBAAA,IACa6X,IAgCblK,EAAAF,OAAAzN,EAAA,aAAA,IACa8X,IASbnK,EAAAF,OAAAzN,EAAA,WAAA,IACa+X,IASbpK,EAAAF,OAAAzN,EAAA,cAAA,IACagY,IASbrK,EAAAF,OAAAzN,EAAA,eAAA,IACaiY,IASbtK,EAAAF,OAAAzN,EAAA,YAAA,IACaqL,IAUbsC,EAAAF,OAAAzN,EAAA,cAAA,IACakY,IAcbvK,EAAAF,OAAAzN,EAAA,WAAA,IACamY,IAQbxK,EAAAF,OAAAzN,EAAA,kBAAA,IACaoY,IAebzK,EAAAF,OAAAzN,EAAA,mBAAA,IACaqY,IAgBb1K,EAAAF,OAAAzN,EAAA,qBAAA,IACasY,IAkEb3K,EAAAF,OAAAzN,EAAA,kBAAA,IACauY,IA8Cb5K,EAAAF,OAAAzN,EAAA,SAAA,IACaqC,KAz0Bb,IAAAmW,EAAA9Y,EAAA,+HAkBaoW,EAAelK,WACvB6M,EAASnC,IACNlW,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,EACjD0W,EAAiB2B,EAAQ7M,EAAYxL,WAEhCqY,WA0BO1C,EAAO0C,EAAQrL,EAAOsL,UAChCA,GACFA,EAAW,GAAKD,EAAO,GAAKrL,EAC5BsL,EAAW,GAAKD,EAAO,GAAKrL,EAC5BsL,EAAW,GAAKD,EAAO,GAAKrL,EAC5BsL,EAAW,GAAKD,EAAO,GAAKrL,EACrBsL,IAGLD,EAAO,GAAKrL,EACZqL,EAAO,GAAKrL,EACZqL,EAAO,GAAKrL,EACZqL,EAAO,GAAKrL,YAYF4I,EAAMyC,EAAQC,UACxBA,GACFA,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GAChBC,GAEAD,EAAO3N,iBAUFmL,EAAyBwC,EAAQxE,EAAGC,OAC9CK,EAAIC,SAEND,EADEN,EAAIwE,EAAO,GACRA,EAAO,GAAKxE,EACRwE,EAAO,GAAKxE,EAChBA,EAAIwE,EAAO,GAEX,GASKlE,GANVC,EADEN,EAAIuE,EAAO,GACRA,EAAO,GAAKvE,EACRuE,EAAO,GAAKvE,EAChBA,EAAIuE,EAAO,GAEX,GAEejE,WAWR0B,EAAmBuC,EAAQpO,UAClC+L,EAAWqC,EAAQpO,EAAW,GAAIA,EAAW,aAetC8L,EAAewC,EAASC,UAEpCD,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,YAaVvC,EAAWqC,EAAQxE,EAAGC,UAC7BuE,EAAO,IAAMxE,GAAKA,GAAKwE,EAAO,IAAMA,EAAO,IAAMvE,GAAKA,GAAKuE,EAAO,YAU3DpC,EAAuBoC,EAAQpO,OACvCwO,EAAOJ,EAAO,GACdK,EAAOL,EAAO,GACdM,EAAON,EAAO,GACdO,EAAOP,EAAO,GACdxE,EAAI5J,EAAW,GACf6J,EAAI7J,EAAW,GACjB4O,EAAYC,EAAAlY,QAAgBmY,eAC5BlF,EAAI4E,EACNI,GAA2BC,EAAAlY,QAAgBoY,KAClCnF,EAAI8E,IACbE,GAA2BC,EAAAlY,QAAgBqY,OAEzCnF,EAAI4E,EACNG,GAA2BC,EAAAlY,QAAgBsY,MAClCpF,EAAI8E,IACbC,GAA2BC,EAAAlY,QAAgBuY,OAEzCN,IAAYC,EAAAlY,QAAkBmY,UAChCF,EAAYC,EAAAlY,QAAgBwY,cAEvBP,WAQO3C,WACNmD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,YAY1BlD,EAAesC,EAAMC,EAAMC,EAAMC,EAAMN,UACjDA,GACFA,EAAW,GAAKG,EAChBH,EAAW,GAAKI,EAChBJ,EAAW,GAAKK,EAChBL,EAAW,GAAKM,EACTN,IAECG,EAAMC,EAAMC,EAAMC,YASdxC,EAAoBkC,UAC3BnC,EAAekD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUf,YAQlDjC,EAA6BpM,EAAYqO,OACjDzE,EAAI5J,EAAW,GACf6J,EAAI7J,EAAW,UACdkM,EAAetC,EAAGC,EAAGD,EAAGC,EAAGwE,YAQpBhC,EAA8B9K,EAAa8M,UAElD3B,EADQP,EAAoBkC,GACF9M,YAWnB+K,EACd+C,EACAC,EACA7J,EACA8J,EACAlB,UAGO1B,EADQR,EAAoBkC,GACEgB,EAAiBC,EAAQ7J,EAAK8J,YAQrDhD,EAAwBiD,EAAOnB,UAEtCzB,EADQT,EAAoBkC,GACRmB,YAUbrL,EAAOmK,EAASC,UAE5BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YAWV/B,EAAoB8B,EAASC,EAASkB,UAElDzF,KAAK0F,IAAIpB,EAAQ,GAAKC,EAAQ,IAAMkB,GACpCzF,KAAK0F,IAAIpB,EAAQ,GAAKC,EAAQ,IAAMkB,GACpCzF,KAAK0F,IAAIpB,EAAQ,GAAKC,EAAQ,IAAMkB,GACpCzF,KAAK0F,IAAIpB,EAAQ,GAAKC,EAAQ,IAAMkB,WAWxB9J,EAAO2I,EAASC,UAC1BA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,WAOO7B,EAAiB2B,EAAQpO,GACnCA,EAAW,GAAKoO,EAAO,KACzBA,EAAO,GAAKpO,EAAW,IAErBA,EAAW,GAAKoO,EAAO,KACzBA,EAAO,GAAKpO,EAAW,IAErBA,EAAW,GAAKoO,EAAO,KACzBA,EAAO,GAAKpO,EAAW,IAErBA,EAAW,GAAKoO,EAAO,KACzBA,EAAO,GAAKpO,EAAW,aASX0M,EAAkB0B,EAAQ7M,WAC/BxL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,EACjD0W,EAAiB2B,EAAQ7M,EAAYxL,WAEhCqY,WAWOzB,EACdyB,EACAiB,EACAC,EACA7J,EACA8J,QAEOD,EAAS7J,EAAK6J,GAAUC,EAC7B1C,EAASuB,EAAQiB,EAAgBC,GAASD,EAAgBC,EAAS,WAE9DlB,WAQOxB,EAAYwB,EAAQoB,WACzBzZ,EAAI,EAAG6H,EAAK4R,EAAMxZ,OAAQD,EAAI6H,IAAM7H,EAC3C2W,EAAkB0B,EAAQoB,EAAMzZ,WAE3BqY,WAQOvB,EAASuB,EAAQxE,EAAGC,GAClCuE,EAAO,GAAKpE,KAAK2F,IAAIvB,EAAO,GAAIxE,GAChCwE,EAAO,GAAKpE,KAAK2F,IAAIvB,EAAO,GAAIvE,GAChCuE,EAAO,GAAKpE,KAAK4F,IAAIxB,EAAO,GAAIxE,GAChCwE,EAAO,GAAKpE,KAAK4F,IAAIxB,EAAO,GAAIvE,YAYlBiD,EAAcsB,EAAQvP,OAChCgR,SACJA,EAAMhR,EAASmO,EAAcoB,OAI7ByB,EAAMhR,EAASoO,EAAemB,OAI9ByB,EAAMhR,EAAS+O,EAAYQ,KANlByB,GAUTA,EAAMhR,EAAS8O,EAAWS,OAInB,WASOrB,EAAQqB,OAClB0B,EAAO,SACNhC,EAAQM,KACX0B,EAAO9O,EAASoN,GAAUd,EAAUc,IAE/B0B,WASO9C,EAAcoB,UACpBA,EAAO,GAAIA,EAAO,aASZnB,EAAemB,UACrBA,EAAO,GAAIA,EAAO,aASZlB,EAAUkB,WACfA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,YASjDjB,EAAUiB,EAAQ2B,OAC5B/P,SACA+P,IAAMC,EAAArZ,QAAYsZ,YACpBjQ,EAAagN,EAAcoB,GAClB2B,IAAMC,EAAArZ,QAAYuZ,aAC3BlQ,EAAaiN,EAAemB,GACnB2B,IAAMC,EAAArZ,QAAYwZ,SAC3BnQ,EAAa2N,EAAWS,GACf2B,IAAMC,EAAArZ,QAAYyZ,UAC3BpQ,EAAa4N,EAAYQ,aAElB,EAAO,IAETpO,WAQOoN,EAAgBkB,EAASC,OACjCC,EAAOxE,KAAK2F,IAAIrB,EAAQ,GAAIC,EAAQ,IACpCE,EAAOzE,KAAK2F,IAAIrB,EAAQ,GAAIC,EAAQ,WAC7BvE,KAAK4F,IAAItB,EAAQ,GAAIC,EAAQ,IAE3BC,IADFxE,KAAK4F,IAAItB,EAAQ,GAAIC,EAAQ,IACXE,YAWjBpB,EACdjU,EACAyG,EACAC,EACAF,EACAyO,OAEMnE,EAAMrK,EAAaD,EAAK,GAAM,EAC9BuK,EAAMtK,EAAaD,EAAK,GAAM,EAC9ByQ,EAAcrG,KAAKD,IAAIjK,GACvBwQ,EAActG,KAAKC,IAAInK,GACvByQ,EAAOrG,EAAKmG,EACZG,EAAOtG,EAAKoG,EACZG,EAAOtG,EAAKkG,EACZK,EAAOvG,EAAKmG,EACZ1G,EAAIxQ,EAAO,GACXyQ,EAAIzQ,EAAO,GACXuX,EAAK/G,EAAI2G,EAAOG,EAChBE,EAAKhH,EAAI2G,EAAOG,EAChBG,EAAKjH,EAAI2G,EAAOG,EAChBI,EAAKlH,EAAI2G,EAAOG,EAChBK,EAAKlH,EAAI2G,EAAOC,EAChBO,EAAKnH,EAAI2G,EAAOC,EAChBQ,EAAKpH,EAAI2G,EAAOC,EAChBS,EAAKrH,EAAI2G,EAAOC,SACfvE,EACLlC,KAAK2F,IAAIgB,EAAIC,EAAIC,EAAIC,GACrB9G,KAAK2F,IAAIoB,EAAIC,EAAIC,EAAIC,GACrBlH,KAAK4F,IAAIe,EAAIC,EAAIC,EAAIC,GACrB9G,KAAK4F,IAAImB,EAAIC,EAAIC,EAAIC,GACrB7C,YAUYf,EAAUc,UACjBA,EAAO,GAAKA,EAAO,YAQZb,EAAoBe,EAASC,UAEpCxB,EADcS,EAAgBc,EAASC,aAYhCf,EAAgBc,EAASC,EAASF,OAC1C8C,EAAe9C,IA1Ybe,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,UA2YjCvB,EAAWS,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB4C,EAAa,GAAK7C,EAAQ,GAE1B6C,EAAa,GAAK5C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB4C,EAAa,GAAK7C,EAAQ,GAE1B6C,EAAa,GAAK5C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB4C,EAAa,GAAK7C,EAAQ,GAE1B6C,EAAa,GAAK5C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB4C,EAAa,GAAK7C,EAAQ,GAE1B6C,EAAa,GAAK5C,EAAQ,IAG5BpC,EAAoBgF,GAEfA,WAOO1D,EAAUW,UACjBpN,EAASoN,GAAUd,EAAUc,YAStBV,EAAQU,UACdA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,aASpCT,EAAWS,UACjBA,EAAO,GAAIA,EAAO,aASZR,EAAYQ,UAClBA,EAAO,GAAIA,EAAO,aASZpN,EAASoN,UAChBA,EAAO,GAAKA,EAAO,YAUZP,EAAWS,EAASC,UAEhCD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YAUVT,EAAQM,UACfA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,YAQrCL,EAAeK,EAAQC,UACjCA,GACFA,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GACvBC,EAAW,GAAKD,EAAO,GAChBC,GAEAD,WAQKJ,EAAgBI,EAAQrL,OAChCqO,GAAWhD,EAAO,GAAKA,EAAO,IAAM,GAAMrL,EAAQ,GAClDsO,GAAWjD,EAAO,GAAKA,EAAO,IAAM,GAAMrL,EAAQ,GACxDqL,EAAO,IAAMgD,EACbhD,EAAO,IAAMgD,EACbhD,EAAO,IAAMiD,EACbjD,EAAO,IAAMiD,WAWCpD,EAAkBG,EAAQkD,EAAO7L,OAC3C8L,GAAa,EACXC,EAAWxF,EAAuBoC,EAAQkD,GAC1CG,EAASzF,EAAuBoC,EAAQ3I,MAE5C+L,IAAQ3C,EAAAlY,QAAkBwY,cAC1BsC,IAAM5C,EAAAlY,QAAkBwY,aAExBoC,GAAa,WAEP/C,EAAOJ,EAAO,GACdK,EAAOL,EAAO,GACdM,EAAON,EAAO,GACdO,EAAOP,EAAO,GACdsD,EAASJ,EAAM,GACfK,EAASL,EAAM,GACfM,EAAOnM,EAAI,GACXoM,EAAOpM,EAAI,GACXqM,GAASD,EAAOF,IAAWC,EAAOF,GACpC9H,OAAC,EAAEC,OAAC,EACD4H,EAAM5C,EAAAlY,QAAgBuY,SAAYsC,EAAQ3C,EAAAlY,QAAgBuY,SAG/DqC,GADA3H,EAAIgI,GAAQC,EAAOlD,GAAQmD,IACTtD,GAAQ5E,GAAK8E,GAG9B6C,KACEE,EAAM5C,EAAAlY,QAAgBqY,QACvBwC,EAAQ3C,EAAAlY,QAAgBqY,QAI1BuC,GADA1H,EAAIgI,GAAQD,EAAOlD,GAAQoD,IACTrD,GAAQ5E,GAAK8E,GAG9B4C,KACEE,EAAM5C,EAAAlY,QAAgBsY,QACvBuC,EAAQ3C,EAAAlY,QAAgBsY,QAI1BsC,GADA3H,EAAIgI,GAAQC,EAAOpD,GAAQqD,IACTtD,GAAQ5E,GAAK8E,GAG9B6C,KACEE,EAAM5C,EAAAlY,QAAgBoY,OACvByC,EAAQ3C,EAAAlY,QAAgBoY,OAI1BwC,GADA1H,EAAIgI,GAAQD,EAAOpD,GAAQsD,IACTrD,GAAQ5E,GAAK8E,UAG5B4C,WAcOrD,EAAeE,EAAQ2D,EAAa1D,EAAY2D,OAC1DzQ,EAAW,MACXyQ,EAAY,UACRjZ,EAAQqV,EAAO,GAAKA,EAAO,GAC3B1S,EAAS0S,EAAO,GAAKA,EAAO,GACzBrY,EAAI,EAAGA,EAAIic,IAAajc,EAC/BwL,EAAYlD,KACV+P,EAAO,GAAMrV,EAAQhD,EAAKic,EAC1B5D,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM1S,EAAS3F,EAAKic,EAC3B5D,EAAO,GAAMrV,EAAQhD,EAAKic,EAC1B5D,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM1S,EAAS3F,EAAKic,QAI/BzQ,EAAW,CACT6M,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGX2D,EAAYxQ,EAAaA,EAAa,WAChC0Q,EAAE,GACFC,EAAE,GACQC,GAAPpc,EAAI,EAAOwL,EAAYvL,QAAQD,EAAIoc,EAAGpc,GAAK,EAClDkc,EAAG5T,KAAKkD,EAAYxL,IACpBmc,EAAG7T,KAAKkD,EAAYxL,EAAI,WA5xBzB,SACyBkc,EAAIC,EAAI7D,UAK3BnC,EAJMlC,KAAK2F,IAAIvL,MAAM,KAAM6N,GACrBjI,KAAK2F,IAAIvL,MAAM,KAAM8N,GACrBlI,KAAK4F,IAAIxL,MAAM,KAAM6N,GACrBjI,KAAK4F,IAAIxL,MAAM,KAAM8N,GACY7D,GAwxBvC+D,CAAmBH,EAAIC,EAAI7D,YAWpBrW,GAAMoW,EAAQrW,OACtB6I,EAAmB7I,EAAW8I,YAC9BzH,EAAS8T,EAAUkB,MAEvBrW,EAAW4I,aACVvH,EAAO,GAAKwH,EAAiB,IAAMxH,EAAO,IAAMwH,EAAiB,IAAC,KAE7DE,EAAaE,EAASJ,GAItB0O,EAHatF,KAAKqI,OACrBjZ,EAAO,GAAKwH,EAAiB,IAAME,GAEVA,EAC5BsN,EAAO,IAAMkB,EACblB,EAAO,IAAMkB,SAERlB,oQCj1BP6B,YAAW,cACXC,aAAY,eACZC,SAAQ,WACRC,UAAS,qLCHTtB,QAAS,EACTK,aAAc,EACdD,MAAO,EACPF,MAAO,EACPC,MAAO,EACPF,KAAM,oMCqGKuD,IAjHV,IAAAC,EAAAld,EAAA,eAOHmd,EAAA,oBACEC,IAIKrY,KACEsY,OAAM,GAKRtY,KACEuY,WAAa,EAKfvY,KACEwY,cAAgB,UAMvBH,EAAAnY,UAAAuY,MAAK,gBACEH,OAAM,QACNC,WAAa,GAMpBF,EAAAnY,UAAA6H,eAAc,uBACAwQ,WAAUvY,KAAQwY,eAMhCH,EAAAnY,UAAAgI,OAAM,mBACKH,iBAAc,KACjBpM,EAAI,UACGmN,KAAG9I,KAASsY,OAAM,KACrBI,EAAS1Y,KAAQsY,OAAOxP,GACZ,IAAP,EAANnN,MAAmB+c,EAAUrW,4BACpBiW,OAAOxP,UACZyP,eAYfF,EAAAnY,UAAA/D,IAAG,SAACwc,EAAKjb,EAAagB,OACdoK,EAAM8P,EAAOD,EAAKjb,EAAagB,UAC9BoK,KAAG9I,KAASsY,OAAMtY,KAAQsY,OAAOxP,GAAO,MASjDuP,EAAAnY,UAAAqN,IAAG,SAACoL,EAAKjb,EAAagB,EAAOga,OACrB5P,EAAM8P,EAAOD,EAAKjb,EAAagB,QAChC4Z,OAAOxP,GAAO4P,SACZH,YAUTF,EAAAnY,UAAA2Y,QAAO,SAACC,QACDN,cAAgBM,OAChB5Q,UAETmQ,EAtFA,GA6FG,SACMO,EAAOD,EAAKjb,EAAagB,UAEzBhB,EAAW,IAASib,EAAG,KADVja,EAAKyZ,EAAAY,SAAYra,GAAK,kBAI7B0Z,MAOFF,EAAM,IAAOE,+LC/EvBlP,EAAAF,OAAAzN,EAAA,YAAA,IACawd,iCA8BHC,IAuDV9P,EAAAF,OAAAzN,EAAA,WAAA,IACa0d,IAkEb/P,EAAAF,OAAAzN,EAAA,aAAA,IACa2d,IAWbhQ,EAAAF,OAAAzN,EAAA,YAAA,IACa2S,IAoBbhF,EAAAF,OAAAzN,EAAA,iBAAA,IACa4d,IA7Nb,IAAAhL,EAAAlT,EAAA,iCAmBGme,EAAa,oDAQbC,EAAe,qCAQLN,EAASra,SACP,iBAALA,EACFA,EAEAwP,EAASxP,GAQjB,SACM4a,EAAU5a,OACX4N,EAAKnL,SAASC,cAAa,UACjCkL,EAAGjO,MAAMK,MAAQA,EACC,KAAd4N,EAAGjO,MAAMK,MAAK,CAChByC,SAASoY,KAAKC,YAAYlN,OACpBmN,EAAMC,iBAAiBpN,GAAI5N,aACjCyC,SAASoY,KAAK3W,YAAY0J,GACnBmN,eAwBHE,EAKFC,EAnBOZ,GAcLW,EAAK,GAKPC,EAAY,WAOJC,OACJnb,KACAib,EAAMG,eAAeD,GACvBnb,EAAQib,EAAME,WAEVD,GAtBa,KAsBc,KACzBje,EAAI,UACGmN,KAAO6Q,EACE,IAAP,EAANhe,cACIge,EAAM7Q,KACX8Q,GAIRlb,EA4BL,SAC0Bmb,OACvBE,EAAGC,EAAG5W,EAAGD,EAAGzE,KAEZ2a,EAAgBY,KAAKJ,KACvBA,EAAIP,EAAUO,IAGZT,EAAca,KAAKJ,GAAC,KAEhB3O,EAAI2O,EAAEje,OAAS,EACjByT,OAAC,EAEHA,EADEnE,GAAK,EACH,EAEA,MAEAgP,EAAiB,IAANhP,GAAiB,IAANA,EAC5B6O,EAAII,SAASN,EAAEO,OAAO,EAAI,EAAI/K,EAAGA,GAAI,IACrC2K,EAAIG,SAASN,EAAEO,OAAO,EAAI,EAAI/K,EAAGA,GAAI,IACrCjM,EAAI+W,SAASN,EAAEO,OAAO,EAAI,EAAI/K,EAAGA,GAAI,IAEnClM,EADE+W,EACEC,SAASN,EAAEO,OAAO,EAAI,EAAI/K,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACF0K,GAAKA,GAAK,GAAKA,EACfC,GAAKA,GAAK,GAAKA,EACf5W,GAAKA,GAAK,GAAKA,EACX8W,IACF/W,GAAKA,GAAK,GAAKA,IAGnBzE,EAAK,CAAIqb,EAAGC,EAAG5W,EAAGD,EAAI,UACS,GAAtB0W,EAAE9O,QAAO,SAGlBmO,EADAxa,EAAQmb,EAAExT,MAAM,GAAG,GAAI8K,MAAK,KAAM5Q,IAAI8Z,SAER,GAArBR,EAAE9O,QAAO,UAElBrM,EAAQmb,EAAExT,MAAM,GAAG,GAAI8K,MAAK,KAAM5Q,IAAI8Z,SAChCpW,KAAK,GACXiV,EAAUxa,cAEH,EAAO,WAETA,EA3EO4b,CAAoBT,GAC5BF,EAAME,GAAKnb,IACTkb,SAEGlb,aAYGua,EAAQva,UAClBmL,MAAM4B,QAAQ/M,GACTA,EAEAsa,EAAWta,YA+DNwa,EAAUxa,UACxBA,EAAM,GAAC6b,EAAAC,MAAW9b,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAC6b,EAAAC,MAAW9b,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAC6b,EAAAC,MAAW9b,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAC6b,EAAAC,MAAU9b,EAAM,GAAI,EAAG,GACvBA,WAOOwP,EAASxP,OACnBqb,EAAIrb,EAAM,GACVqb,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdC,EAAItb,EAAM,GACVsb,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEd5W,EAAI1E,EAAM,UACV0E,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,WAGD2W,EAAC,IAASC,EAAC,IAAS5W,EAAC,UADfZ,IAAb9D,EAAM,GAAmB,EAAIA,EAAM,IACG,aAOlCya,EAAcU,UACxBR,EAAgBoB,KAAKZ,KACvBA,EAAIP,EAAUO,IAGdT,EAAcqB,KAAKZ,IAA6B,IAAvBA,EAAE9O,QAAO,UAAyC,IAAtB8O,EAAE9O,QAAO,6MCxNlDyP,EAAM7R,EAAO4M,EAAKC,UACzB5F,KAAK2F,IAAI3F,KAAK4F,IAAI7M,EAAO4M,GAAMC,0BAFrCtM,EAAAF,OAAAzN,EAAA,SAAA,IACaif,2BAaHE,2BA0BAC,IA0BVzR,EAAAF,OAAAzN,EAAA,0BAAA,IACaqf,IAuBb1R,EAAAF,OAAAzN,EAAA,mBAAA,IACasf,IAYb3R,EAAAF,OAAAzN,EAAA,qBAAA,IACauf,IAqDb5R,EAAAF,OAAAzN,EAAA,aAAA,IACawf,IASb7R,EAAAF,OAAAzN,EAAA,aAAA,IACayf,IAUb9R,EAAAF,OAAAzN,EAAA,UAAA,IACa0f,IAYb/R,EAAAF,OAAAzN,EAAA,QAAA,IACa2f,QAlLHR,WAIG9K,KAELA,KAAK8K,KAGR,SAAalL,OACTC,EAAyBG,KAAMuL,IAAI3L,UACjCC,EAAI,EAAIA,GAAK,GAedkL,WAIG/K,KAELA,KAAK+K,KAGR,SAAanL,UACRI,KAAKwL,IAAI5L,GAAKI,KAAKyL,gBAiBhBT,EAAuBpL,EAAGC,EAAG+G,EAAII,EAAIH,EAAII,OACjD/G,EAAK2G,EAAKD,EACVzG,EAAK8G,EAAKD,KACL,IAAP9G,GAAmB,IAAPC,EAAQ,KAChBuL,IAAM9L,EAAIgH,GAAM1G,GAAML,EAAImH,GAAM7G,IAAOD,EAAKA,EAAKC,EAAKA,GACxDuL,EAAI,GACN9E,EAAKC,EACLG,EAAKC,GACIyE,EAAI,IACb9E,GAAM1G,EAAKwL,EACX1E,GAAM7G,EAAKuL,UAGRT,EAAgBrL,EAAGC,EAAG+G,EAAII,YAWnBiE,EAAgBrE,EAAII,EAAIH,EAAII,OACpC/G,EAAK2G,EAAKD,EACVzG,EAAK8G,EAAKD,SACT9G,EAAKA,EAAKC,EAAKA,WAUR+K,EAAkBvK,WAC1BrF,EAAIqF,EAAI3U,OAELD,EAAI,EAAGA,EAAIuP,EAAGvP,IAAC,SAElB4f,EAAS5f,EACT6f,EAAQ5L,KAAK0F,IAAI/E,EAAI5U,GAAGA,IACnBoe,EAAIpe,EAAI,EAAGoe,EAAI7O,EAAG6O,IAAC,KACpB0B,EAAW7L,KAAK0F,IAAI/E,EAAIwJ,GAAGpe,IAC7B8f,EAAWD,IACbA,EAAQC,EACRF,EAASxB,MAIC,IAAVyB,EAAW,OACN,SAIHlQ,EAAMiF,EAAIgL,GAChBhL,EAAIgL,GAAUhL,EAAI5U,GAClB4U,EAAI5U,GAAK2P,UAGAtE,EAAIrL,EAAI,EAAGqL,EAAIkE,EAAGlE,YACnB0U,GAAQnL,EAAIvJ,GAAGrL,GAAK4U,EAAI5U,GAAGA,GACxBggB,EAAIhgB,EAAGggB,EAAIzQ,EAAI,EAAGyQ,IACrBhgB,GAAKggB,EACPpL,EAAIvJ,GAAG2U,GAAK,EAEZpL,EAAIvJ,GAAG2U,IAAMD,EAAOnL,EAAI5U,GAAGggB,WAO7BnM,EAAC,IAAO3F,MAAMqB,GACX6M,EAAI7M,EAAI,EAAG6M,GAAK,EAAGA,IAAC,CAC3BvI,EAAEuI,GAAKxH,EAAIwH,GAAG7M,GAAKqF,EAAIwH,GAAGA,WACjBvQ,EAAIuQ,EAAI,EAAGvQ,GAAK,EAAGA,IAC1B+I,EAAI/I,GAAG0D,IAAMqF,EAAI/I,GAAGuQ,GAAKvI,EAAEuI,UAGxBvI,WASOuL,EAAUa,UACC,IAAjBA,EAAwBhM,KAAKiM,YASvBb,EAAUc,UAChBA,EAAiBlM,KAAKiM,GAAM,aAUtBZ,EAAO9X,EAAGC,OAClB2W,EAAI5W,EAAIC,SACP2W,EAAI3W,EAAI,EAAI2W,EAAI3W,EAAI2W,WAWbmB,EAAK/X,EAAGC,EAAGoM,UAClBrM,EAAIqM,GAAKpM,EAAID,2KCkInB+F,EAAAF,OAAAzN,EAAA,UAAA,IACauJ,IA7Ub,MAAAiX,EAAA9gB,EAAA,svBAqFH+gB,EAAA,SAAA3c,GAGK,SACH4c,EAAY9e,OAAZqD,EAAAR,KACQkc,EAAW3c,EAAAC,OAAA,GAAcrC,UACxB+e,EAAY1f,QAEnBgE,EAAAnB,EAAAU,KAAAC,KAAMkc,IAAWlc,MAMZmc,kBAAoB,KAMzB3b,EAAK4b,cAAgB,KAMrB5b,EAAK6b,iBAAmB,KAMxB7b,EAAK8b,UAAY,KAGbnf,EAAQ6G,SACVxD,EAAKwD,OAAS7G,EAAQ6G,QAGpB7G,EAAQoD,KACVC,EAAK+b,OAAOpf,EAAQoD,KAGtBC,EAAKgc,iBAAgBC,EAAAC,mBAAAC,EAAApgB,QACcqgB,QACjCpc,EAAKqc,iCAGDrgB,EAASW,EAAQX,OACQW,EAAQX,OACnC,YACJgE,EAAK3C,UAAUrB,YAnDCyD,EAAAgc,EAAA5c,GA0DlB4c,EAAA/b,UAAA4c,eAAc,SAACC,OACPC,EAAQD,GAAqB,UACnCC,EAAM/Y,KAAIjE,MACHgd,GAOTf,EAAA/b,UAAA+c,oBAAmB,SAACC,OACZC,EAASD,GAAuB,UACtCC,EAAOlZ,KAAIjE,KAAMod,iBACVD,GASTlB,EAAA/b,UAAAgH,UAAS,kBACyBlH,KAAO7D,IAAGwgB,EAAApgB,QAAeqgB,SAAY,MAMvEX,EAAA/b,UAAAmd,eAAc,eACN7gB,EAAMwD,KAAQkH,mBACZ1K,EAAiCA,EAAO8gB,WAAlC1Z,EAAArH,QAAeuH,WAM/BmY,EAAA/b,UAAAqd,oBAAmB,gBACZC,WAMPvB,EAAA/b,UAAA2c,4BAA2B,gBAChBR,wCACYA,uBACdA,iBAAmB,UAEpB7f,EAAMwD,KAAQkH,YAChB1K,IAAMwD,KACHqc,iBAAgB3b,EAAAC,OACnBnE,EAAMuG,EAAAxG,QACIkhB,OAAMzd,KACXud,oBAAmBvd,YAIvBwd,WAQPvB,EAAA/b,UAAAwd,YAAW,SAACnZ,eACA+X,eAGEA,UAAUoB,YAAYnZ,GAHf,IACNoZ,SAAO,SAAE9hB,UAAYA,EAAO,QAa3CogB,EAAA/b,UAAA8D,OAAM,SAAC7B,EAAYtD,OACXoI,EAAajH,KAAQgF,iBAEvBiC,EAAc2W,aAAazb,GAAU,OAChC8E,EAAcpE,YAAYV,EAAYtD,IAgBjDod,EAAA/b,UAAAqc,OAAM,SAAChc,QACI4b,yCACYA,wBACdA,kBAAoB,MAEtB5b,GAAGP,KACDwd,eAEEpB,qCACYA,oBACdA,cAAgB,MAEnB7b,SACG4b,kBAAiBzb,EAAAC,OACpBJ,EAAGsd,EAAAthB,QACayG,YAAU,SAChB8a,OAEF7a,EADmE6a,EACpC3b,WAAWc,iBAC1CQ,EAAUzD,KAAQod,eAAc,aAGnCna,EAAiB0E,MAAI,SAAWoW,UACxBA,EAAgBzgB,QAAUmG,EAAWnG,SAE9C,IAEF2F,EAAiBgB,KAAKR,gBAIrB2Y,cAAa1b,EAAAC,OAAAX,KAAA+C,EAAAxG,QAA0BkhB,OAAQld,EAAIyD,OAAQzD,QAC3Did,YAUTvB,EAAA/b,UAAArC,UAAS,SAACrB,QACH+Q,IAAGoP,EAAApgB,QAAeqgB,OAAQpgB,IAOjCyf,EAAA/b,UAAA8E,YAAW,uBACCsX,YAAStc,KACZsc,UAAStc,KAAQG,uBAEZmc,WAMdL,EAAA/b,UAAA0E,YAAW,wBACK0X,WAQhBL,EAAA/b,UAAAC,eAAc,kBACL,MAMT8b,EAAA/b,UAAAwC,gBAAe,gBACR7E,UAAU,MACfwB,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAEzBic,EA/OA,qBAwPgBnX,EAAOrB,EAAYJ,OAC5BI,EAAWua,QAAO,OACd,MAEHvY,EAAapC,EAAUoC,cAE3BA,EAAahC,EAAWwa,eACxBxY,GAAchC,EAAWya,cAAa,OAE/B,MAEHhf,EAAOmE,EAAUnE,YAChBA,EAAOuE,EAAW0a,SAAWjf,GAAQuE,EAAW2a,kBAG1CpC,8YC5VZ,MAAAS,EAAAxhB,EAAA,6lBAuCHojB,EAAA,SAAAhf,GAGK,SACHif,EAAYnhB,OAAZqD,EACEnB,EAAAU,KAAAC,OAAAA,KAKMue,EAAUhf,EAAAC,OAAA,GAAcrC,UAE9BohB,EAAU5B,EAAApgB,QAAeiiB,cACHhc,IAApBrF,EAAQshB,QAAwBthB,EAAQshB,QAAU,WACN,iBAAhCF,EAAU5B,EAAApgB,QAAeiiB,SAAuB,IAE9DD,EAAU5B,EAAApgB,QAAemiB,cACHlc,IAApBrF,EAAQ6gB,SAAwB7gB,EAAQ6gB,QAC1CO,EAAU5B,EAAApgB,QAAeoiB,SAAWxhB,EAAQoE,OAC5Cgd,EAAU5B,EAAApgB,QAAeqiB,qBACGpc,IAA1BrF,EAAQ+gB,cAA8B/gB,EAAQ+gB,cAAgBlJ,EAAAA,EAChEuJ,EAAU5B,EAAApgB,QAAesiB,qBACGrc,IAA1BrF,EAAQ8gB,cAA8B9gB,EAAQ8gB,cAAgB,EAChEM,EAAU5B,EAAApgB,QAAeuiB,eACHtc,IAApBrF,EAAQghB,QAAwBhhB,EAAQghB,SAAWnJ,EAAAA,EACrDuJ,EAAU5B,EAAApgB,QAAewiB,eACHvc,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,QAAUpJ,EAAAA,EAMpDxU,EAAKwe,gBACsBxc,IAAzB+b,EAAW/c,UAA0BrE,EAAQqE,UAAS,kBACjD+c,EAAW/c,UAElBhB,EAAKye,cAAcV,GAMnB/d,EAAK0e,OAAS,cA1CMjf,EAAAqe,EAAAjf,GAgDtBif,EAAApe,UAAAif,aAAY,uBACEH,YAUdV,EAAApe,UAAAkd,cAAa,SAACgC,GAC6B,IACnCC,EAAKrf,KACJkf,QAAM,CAET5hB,MAAK0C,KACLgG,aAAyBxD,IAAhB4c,GAAmCA,GAE1C7d,EAAMvB,KAAQsf,mBACpBD,EAAMZ,QAAOlE,EAAAC,MAAS5K,KAAK2P,MAA0B,IAArBvf,KAAMwf,cAAsB,IAAK,EAAG,GACpEH,EAAM1b,YAAW3D,KAAQqd,iBACzBgC,EAAMrB,QAAOhe,KAAQyf,aACrBJ,EAAMrL,OAAMhU,KAAQyG,YACpB4Y,EAAM9d,YACOiB,IAAXjB,EAAuBA,GAA2B,IAAlB8d,EAAMrZ,QAAoBgP,EAAAA,EAAW,EACvEqK,EAAMnB,cAAale,KAAQ0f,mBAC3BL,EAAMpB,cAAgBrO,KAAK4F,IAAGxV,KAAM2f,mBAAoB,GACxDN,EAAMlB,QAAOne,KAAQ4f,aACrBP,EAAMjB,QAAOpe,KAAQ6f,kBAChBX,OAASG,EAEPA,GASTf,EAAApe,UAAA4c,eAAc,SAACC,wBAUfuB,EAAApe,UAAA+c,oBAAmB,SAACC,wBAWpBoB,EAAApe,UAAAuG,UAAS,uBAC6DtK,IAAGwgB,EAAApgB,QACvDujB,SAUlBxB,EAAApe,UAAAwf,iBAAgB,uBACqBvjB,IAAGwgB,EAAApgB,QAAeqiB,iBASvDN,EAAApe,UAAAyf,iBAAgB,uBACqBxjB,IAAGwgB,EAAApgB,QAAesiB,iBASvDP,EAAApe,UAAA0f,WAAU,uBAC2BzjB,IAAGwgB,EAAApgB,QAAeuiB,WASvDR,EAAApe,UAAA2f,WAAU,uBAC2B1jB,IAAGwgB,EAAApgB,QAAewiB,WASvDT,EAAApe,UAAAsf,WAAU,uBAC2BrjB,IAAGwgB,EAAApgB,QAAeiiB,UAOvDF,EAAApe,UAAAmd,eAAc,gCAUdiB,EAAApe,UAAAuf,WAAU,uBAC4BtjB,IAAGwgB,EAAApgB,QAAemiB,UAUxDJ,EAAApe,UAAAof,UAAS,uBAC4BnjB,IAAGwgB,EAAApgB,QAAeoiB,UAUvDL,EAAApe,UAAA9D,UAAS,SAAC4X,QACHzG,IAAGoP,EAAApgB,QAAeujB,OAAQ9L,IASjCsK,EAAApe,UAAA6f,iBAAgB,SAAC7B,QACV3Q,IAAGoP,EAAApgB,QAAeqiB,eAAgBV,IASzCI,EAAApe,UAAA8f,iBAAgB,SAAC/B,QACV1Q,IAAGoP,EAAApgB,QAAesiB,eAAgBZ,IAWzCK,EAAApe,UAAA+f,WAAU,SAAC7B,QACJ7Q,IAAGoP,EAAApgB,QAAewiB,SAAUX,IAWnCE,EAAApe,UAAAggB,WAAU,SAAC/B,QACJ5Q,IAAGoP,EAAApgB,QAAeuiB,SAAUX,IASnCG,EAAApe,UAAAigB,WAAU,SAAC1B,YACY,iBAAPA,EAAsB,SAC/BlR,IAAGoP,EAAApgB,QAAeiiB,QAASC,IASlCH,EAAApe,UAAAkgB,WAAU,SAACpC,QACJzQ,IAAGoP,EAAApgB,QAAemiB,QAASV,IAUlCM,EAAApe,UAAAmgB,UAAS,SAACC,QACH/S,IAAGoP,EAAApgB,QAAeoiB,QAAS2B,IAMlChC,EAAApe,UAAAwC,gBAAe,gBACJwc,cACFA,OAAO5hB,MAAQ,UACf4hB,OAAS,MAEhB7f,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAEzBse,EApSA,sBAsSeD,gVCzGZnV,EAAAF,OAAAzN,EAAA,sBAAA,IACamhB,IArOb,MAAA6D,EAAAtlB,EAAA,6mBAWHulB,EAAA,SAAAnhB,GAKK,SACHohB,EAAYve,EAAM4G,EAAK4X,OAAvBlgB,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKsI,IAAMA,EAQXtI,EAAKkgB,SAAWA,WAtBazgB,EAAAwgB,EAAAphB,GAwBjCohB,EAxBA,YAqEAE,EAAA,SAAAthB,GAGK,SACHuhB,EAAYC,OAAZrgB,EACEnB,EAAAU,KAAAC,OAAAA,qBAMOQ,GAMPA,EAAKsgB,QAAU,UAEIte,IAAfqe,GACFrgB,EAAKye,cAAc4B,YApBA5gB,EAAA2gB,EAAAvhB,GA8BvBuhB,EAAA1gB,UAAA/D,IAAG,SAAC2M,OACEH,cACKmY,SAAO9gB,KAAS8gB,QAAQhH,eAAehR,KAC9CH,EAAK3I,KAAQ8gB,QAAQhY,IAEhBH,GAQTiY,EAAA1gB,UAAA6gB,QAAO,uBACQD,SAAWplB,OAAOD,KAAIuE,KAAM8gB,UAAO,IAQlDF,EAAA1gB,UAAA8gB,cAAa,uBACEF,SAAOvhB,EAAAC,OAAA,QAAoBshB,UAAO,IAMjDF,EAAA1gB,UAAA+gB,cAAa,wBACGH,SAOhBF,EAAA1gB,UAAAghB,OAAM,SAACpY,EAAK4X,OACNS,EACJA,EAAYzE,EAAmB5T,QAC1BrG,cAAa,IAAK+d,EAAYW,EAAWrY,EAAK4X,IACnDS,EAASrgB,EAAAvE,QAAmBwE,oBACvB0B,cAAa,IAAK+d,EAAYW,EAAWrY,EAAK4X,KAUrDE,EAAA1gB,UAAAqN,IAAG,SAACzE,EAAKH,EAAOyY,OACRC,EAAMrhB,KAAQ8gB,UAAO9gB,KAAU8gB,QAAO,OACxCM,EACFC,EAAOvY,GAAOH,WAER+X,EAAWW,EAAOvY,GACxBuY,EAAOvY,GAAOH,EACV+X,IAAa/X,GAAK3I,KACfkhB,OAAOpY,EAAK4X,KAYvBE,EAAA1gB,UAAA+e,cAAa,SAACoC,EAAQD,WACTtY,KAAOuY,EAAMrhB,KACjBuN,IAAIzE,EAAKuY,EAAOvY,GAAMsY,IAS/BR,EAAA1gB,UAAAohB,gBAAe,SAAC9kB,GACTA,EAAOskB,uBAGAA,UAAO9gB,KAAU8gB,QAAO,IAAQtkB,EAAOskB,UASrDF,EAAA1gB,UAAAqhB,MAAK,SAACzY,EAAKsY,WACAN,SAAWhY,KAAG9I,KAAS8gB,QAAO,KAC/BJ,EAAQ1gB,KAAQ8gB,QAAQhY,eAClBgY,QAAQhY,kBACHgY,WAAO9gB,KACjB8gB,QAAU,MAEZM,GAAUphB,KACRkhB,OAAOpY,EAAK4X,KAIzBE,EA1IA,YA+IMY,EAAoB,YAMV9E,EAAmB5T,UAC1B0Y,EAAqB1H,eAAehR,GACvC0Y,EAAqB1Y,GACpB0Y,EAAqB1Y,GAAG,UAAgBA,YAGhC6X,mSC7KZzX,EAAAF,OAAAzN,EAAA,mBAAA,IACakmB,IAMbvY,EAAAF,OAAAzN,EAAA,kBAAA,IACammB,IA3Db,IACHC,EAAA,WAGK,SACHC,EAAY1f,GAGPlC,KACE6hB,mBAIF7hB,KACE8hB,iBAMF9hB,KACEkC,KAAOA,EAMTlC,KACEnB,OAAS,YAQhB+iB,EAAA1hB,UAAAwhB,eAAc,gBACPI,kBAAmB,GAO1BF,EAAA1hB,UAAAuhB,gBAAe,gBACRI,oBAAqB,GAE9BD,EA9CA,YAmDgBH,EAAgB3D,GAC9BA,EAAI2D,2BAMUC,EAAe5D,GAC7BA,EAAI4D,2BAGSC,4KC/Db5gB,eAAc,yLC0GbmI,EAAAF,OAAAzN,EAAA,WAAA,IACawmB,IAtHb,MAAAC,EAAA/mB,EAAA,ojBAgBHgnB,EAAA,SAAA5iB,YACE6iB,QAAA1hB,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK2hB,UAAY,WARIliB,EAAAiiB,EAAA7iB,GAevB6iB,EAAAhiB,UAAAsd,QAAO,kBACE2E,eACF1f,cAAaM,EAAAxG,QAAWkhB,SAS/ByE,EAAAhiB,UAAAkiB,YAAW,uBACGD,WAYdD,EAAAhiB,UAAAmiB,GAAE,SAACngB,EAAMogB,MACHzY,MAAM4B,QAAQvJ,GAAI,SACdqgB,EAAMrgB,EAAKtG,OACXH,EAAI,IAAOoO,MAAM0Y,GACd5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EACzBF,EAAKE,GAAC+E,EAAAC,OAAAX,KAAiBkC,EAAKvG,GAAI2mB,UAE3B7mB,uBAEoCyG,EAAOogB,IAatDJ,EAAAhiB,UAAAsiB,KAAI,SAACtgB,EAAMogB,OACLxZ,KACAe,MAAM4B,QAAQvJ,GAAI,KACdqgB,EAAMrgB,EAAKtG,OACjBkN,EAAG,IAAOe,MAAM0Y,WACP5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EACzBmN,EAAInN,GAAC+E,EAAA+hB,WAAAziB,KAAqBkC,EAAKvG,GAAI2mB,QAGrCxZ,EAAGpI,EAAA+hB,WAAAziB,KAA2CkC,EAAOogB,UAElC,EAAYI,OAAS5Z,EACnCA,GASToZ,EAAAhiB,UAAAyiB,GAAE,SAACzgB,EAAMogB,OACDxZ,EAA6BwZ,EAAUI,UACzC5Z,EACFiZ,EAAQjZ,WACCe,MAAM4B,QAAQvJ,GAAI,IAAA,IAClBvG,EAAI,EAAG6H,EAAKtB,EAAKtG,OAAQD,EAAI6H,IAAM7H,EAACqE,KACtC4iB,oBAAoB1gB,EAAKvG,GAAI2mB,aAG/BM,oBAAoB1gB,EAAMogB,IAGrCJ,EA9FA,qBAsGgBH,EAAQjZ,MAClBe,MAAM4B,QAAQ3C,GAAG,IAAA,IACVnN,EAAI,EAAG6H,EAAKsF,EAAIlN,OAAQD,EAAI6H,IAAM7H,EAAC+E,EAAAmiB,cAC5B/Z,EAAInN,yBAG0CmN,aAInDmZ,4PChIZ,MAAA/c,EAAAjK,EAAA,4jBAyBH6nB,EAAA,SAAAzjB,GAGK,SACH0jB,EAAYC,OAAZxiB,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKyiB,aAAeD,EAMpBxiB,EAAK0iB,iBAAmB,KAMxB1iB,EAAK2iB,aAAe,KAMpB3iB,EAAK4iB,WAAa,cA7BDnjB,EAAA8iB,EAAA1jB,GAoCnB0jB,EAAA7iB,UAAAsc,iBAAgB,SAACta,EAAMogB,MAChBpgB,GAASogB,OAGRe,EAASrjB,KAAQojB,aAAUpjB,KAAUojB,WAAU,IAC/CE,EAAmBD,EAAUnhB,KAAUmhB,EAAUnhB,GAAI,KAChB,IAAvCohB,EAAiBvY,QAAQuX,IAC3BgB,EAAiBrf,KAAKqe,KAc1BS,EAAA7iB,UAAAuC,cAAa,SAAC8gB,GACqC,IAC3CzF,EAAkB,iBAALyF,EAAkB,IAAAhhB,EAAAhG,QAAagnB,GAASA,EACrDrhB,EAAO4b,EAAI5b,KACZ4b,EAAIjf,SACPif,EAAIjf,OAAMmB,KAAQijB,cAAYjjB,UAG5BwjB,EADEH,EAASrjB,KAAQojB,YAAUpjB,KAASojB,WAAWlhB,MAEjDmhB,EAAS,KACLI,EAAWzjB,KAAQmjB,eAAYnjB,KAAUmjB,aAAY,IACrDO,EAAe1jB,KACdkjB,mBAAgBljB,KAAUkjB,iBAAgB,IAC3ChhB,KAAQuhB,IACZA,EAAYvhB,GAAQ,EACpBwhB,EAAgBxhB,GAAQ,KAExBuhB,EAAYvhB,WACLvG,EAAI,EAAG6H,EAAK6f,EAAUznB,OAAQD,EAAI6H,IAAM7H,MAU7B,KARhB6nB,kBADmBH,EAAU1nB,GACqC0nB,EAChE1nB,GACCgoB,YAAY7F,GAEqDuF,EAClE1nB,GACCoE,KAAIC,KAAO8d,KAEWA,EAAI+D,mBAAkB,CAC/C2B,GAAY,aAIdC,EAAYvhB,GACY,IAAtBuhB,EAAYvhB,GAAW,KACrB0hB,EAAKF,EAAgBxhB,cAClBwhB,EAAgBxhB,GAChB0hB,KAAE5jB,KACF4iB,oBAAoB1gB,EAAI2F,EAAAuB,aAExBqa,EAAYvhB,UAEdshB,IAOXT,EAAA7iB,UAAAwC,gBAAe,gBACR0gB,YAAU7jB,EAAAkZ,MAAAzY,KAAeojB,aAUhCL,EAAA7iB,UAAA2jB,aAAY,SAAC3hB,eACEkhB,YAAUpjB,KAASojB,WAAWlhB,SAAUM,GAQvDugB,EAAA7iB,UAAAmC,YAAW,SAACyhB,gBACAV,aAGHU,EACHA,KAAQ9jB,KAASojB,WACjB1nB,OAAOD,KAAIuE,KAAMojB,YAAYxnB,OAAS,IAO5CmnB,EAAA7iB,UAAA0iB,oBAAmB,SAAC1gB,EAAMogB,OAClBe,EAASrjB,KAAQojB,YAAUpjB,KAASojB,WAAWlhB,MACjDmhB,EAAS,KACLlX,EAAQkX,EAAUtY,QAAQuX,IAClB,IAAVnW,SACO+W,kBAAoBhhB,KAAIlC,KAASkjB,kBAExCG,EAAUlX,GAAKtE,EAAAuB,YACR8Z,iBAAiBhhB,KAExBmhB,EAAU1X,OAAOQ,EAAO,GACC,IAArBkX,EAAUznB,eAAYoE,KACZojB,WAAWlhB,OAMnC6gB,EA7JA,sBA+JeD,8RC7KFtjB,IAyBV0J,EAAAF,OAAAzN,EAAA,SAAA,IACakd,gCAcHsL,IAeV7a,EAAAF,OAAAzN,EAAA,WAAA,IACamY,QAxDHlU,EACS,mBAAb9D,OAAO8D,OACV9D,OAAO8D,OAAM,SACHX,EAAQmlB,MACZnlB,MAAAA,EAAuC,MAAA,IAC/BolB,UAAS,sDAGfC,EAASxoB,OAAOmD,GACblD,EAAI,EAAG6H,EAAKsG,UAAUlO,OAAQD,EAAI6H,IAAM7H,EAAC,KAC1Ca,EAASsN,UAAUnO,MACrBa,MAAAA,UACSsM,KAAOtM,EACZA,EAAOsd,eAAehR,KACxBob,EAAOpb,GAAOtM,EAAOsM,WAKtBob,YAOCzL,EAAM0L,WACTC,KAAYD,SACdA,EAAOC,OAYLL,EACS,mBAAbroB,OAAO2lB,OACV3lB,OAAO2lB,OAAM,SACH8C,OACF9C,EAAM,WACD+C,KAAYD,EACrB9C,EAAOpd,KAAKkgB,EAAOC,WAEd/C,YAQC3N,EAAQyQ,OAClBC,MACCA,KAAYD,EAAM,OACd,SAEDC,6KC5DR3G,OAAM,SAON4G,MAAK,QAELC,KAAI,OACJC,MAAK,QACLC,YAAW,cACXC,MAAK,QACLC,SAAQ,WACRC,UAAS,YACTC,SAAQ,WACRC,KAAI,OACJC,MAAK,QACLC,QAAO,UACPC,SAAQ,WACRC,KAAI,OACJC,OAAM,SACNC,UAAS,YACTC,MAAK,gLCQJlc,EAAAF,OAAAzN,EAAA,UAAA,IACaoF,IAuCbuI,EAAAF,OAAAzN,EAAA,cAAA,IACaknB,IAYbvZ,EAAAF,OAAAzN,EAAA,iBAAA,IACasnB,IAjGb,IAAAtjB,EAAAtE,EAAA,qBA4Ca0F,EAAO9B,EAAQqD,EAAMogB,EAAU+C,EAAUC,MACnDD,GAAYA,IAAaxmB,IAC3ByjB,EAAWA,EAASrhB,KAAKokB,IAEvBC,EAAQ,KACJC,EAAmBjD,EACzBA,EAAQ,WACNzjB,EAAO+jB,oBAAoB1gB,EAAMogB,GACjCiD,EAAiBvb,MAAKhK,KAAO8J,gBAG3B0b,EAAS,CACb3mB,OAAQA,EACRqD,KAAMA,EACNogB,SAAUA,UAEZzjB,EAAO2d,iBAAiBta,EAAMogB,GACvBkD,WAuBO/C,EAAW5jB,EAAQqD,EAAMogB,EAAU+C,UAC1C1kB,EAAO9B,EAAQqD,EAAMogB,EAAU+C,GAAU,YAYlCxC,EAAc/Z,GACxBA,GAAOA,EAAIjK,SACbiK,EAAIjK,OAAO+jB,oBAAoB9Z,EAAI5G,KAAM4G,EAAIwZ,kBACvCxZ,kMC9FR0V,QAAO,UACPE,QAAO,UACPoB,OAAM,SACNnB,QAAO,SACPC,eAAc,gBACdC,eAAc,gBACdE,SAAQ,UACRD,SAAQ,UACRlC,OAAM,oLCHN6I,UAAS,YAOTC,WAAU,aAQV1iB,WAAU,aAQVmB,YAAW,cASXwhB,eAAc,4LCpCd7hB,UAAS,YACT8hB,QAAO,UACP/hB,MAAK,QACLwgB,MAAK,gLC0BJnb,EAAAF,OAAAzN,EAAA,OAAA,IACasqB,IAYb3c,EAAAF,OAAAzN,EAAA,mBAAA,IACauqB,IAgCb5c,EAAAF,OAAAzN,EAAA,oBAAA,IACawqB,IAwDb7c,EAAAF,OAAAzN,EAAA,kBAAA,IACayqB,IAkBb9c,EAAAF,OAAAzN,EAAA,uBAAA,IACa0qB,IAgEb/c,EAAAF,OAAAzN,EAAA,UAAA,IACa4C,IAcb+K,EAAAF,OAAAzN,EAAA,UAAA,IACawO,IA4Bbb,EAAAF,OAAAzN,EAAA,UAAA,IACakS,IA0BbvE,EAAAF,OAAAzN,EAAA,SAAA,IACamS,IAUbxE,EAAAF,OAAAzN,EAAA,mBAAA,IACasf,IAUb3R,EAAAF,OAAAzN,EAAA,YAAA,IACa2qB,IAWbhd,EAAAF,OAAAzN,EAAA,4BAAA,IACa4qB,IA6Bbjd,EAAAF,OAAAzN,EAAA,gBAAA,IACa6qB,IAoCbld,EAAAF,OAAAzN,EAAA,cAAA,IACa8qB,IAYbnd,EAAAF,OAAAzN,EAAA,SAAA,IACaqC,IAebsL,EAAAF,OAAAzN,EAAA,iBAAA,IACa+qB,IAzab,IAAA3f,EAAA1L,EAAA,4DAqCa4qB,EAAIjgB,EAAY2gB,UAC9B3gB,EAAW,KAAO2gB,EAAM,GACxB3gB,EAAW,KAAO2gB,EAAM,GACjB3gB,WAUOkgB,EAAgBlgB,EAAY4gB,OACpCzM,EAAIyM,EAAOC,YACXznB,EAASwnB,EAAO1T,YAChByD,EAAKvX,EAAO,GACZ2X,EAAK3X,EAAO,GAId8Q,EAHOlK,EAAW,GAGR2Q,EACRxG,EAHKnK,EAAW,GAGN+Q,EACL,IAAP7G,GAAmB,IAAPC,IACdD,EAAK,OAEDT,EAAIO,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,UAEzBwG,EAAMwD,EAAIjK,EAAMT,EAChBsH,EAAMoD,EAAIhK,EAAMV,YAiBZ0W,EAAiBngB,EAAY+gB,OAevCnX,EAAGC,EAdD8G,EAAK3Q,EAAW,GAChB+Q,EAAK/Q,EAAW,GAChBsR,EAAQyP,EAAQ,GAChBtb,EAAMsb,EAAQ,GACdnQ,EAAKU,EAAM,GACXN,EAAKM,EAAM,GACXT,EAAKpL,EAAI,GACTwL,EAAKxL,EAAI,GACTyE,EAAK2G,EAAKD,EACVzG,EAAK8G,EAAKD,EACVgQ,EACG,IAAP9W,GAAmB,IAAPC,EACR,GACCD,GAAMyG,EAAKC,GAAMzG,GAAM4G,EAAKC,KAAQ9G,EAAKA,EAAKC,EAAKA,GAAM,UAE5D6W,GAAS,GACXpX,EAAIgH,EACJ/G,EAAImH,GACKgQ,GAAS,GAClBpX,EAAIiH,EACJhH,EAAIoH,IAEJrH,EAAIgH,EAAKoQ,EAAQ9W,EACjBL,EAAImH,EAAKgQ,EAAQ7W,IAEXP,EAAGC,YA+BGuW,EAAea,mBAMjBjhB,UACDygB,EAAWzgB,EAAYihB,aAYpBZ,EAAoBa,EAAaC,EAASF,OAClDG,EAAiBzM,EAAAU,OAAU8L,EAAU,IAAK,KAAO,IACjDvX,EAAII,KAAK0F,IAAI,KAAO0R,GACpBC,EAAeJ,GAAsB,EACrCK,EAAYtX,KAAKuX,IAAI,GAAIF,GAE3BG,EAAMxX,KAAKqI,MAAMzI,EAAI,MACrB+F,EAAM3F,KAAKqI,OAAOzI,EAAU,KAAN4X,GAAc,IACpCC,EAAM7X,EAAU,KAAN4X,EAAmB,GAAN7R,SAC3B8R,EAAMzX,KAAK0X,KAAKD,EAAMH,GAAaA,IAExB,KACTG,EAAM,EACN9R,GAAO,GAGLA,GAAO,KACTA,EAAM,EACN6R,GAAO,GAIPA,EAAG,KACMG,EAAAC,UACCjS,EAAK,GAAC,KACPgS,EAAAC,UACCH,EAAK,EAAGJ,GAAY,KAER,GAArBD,EAAsB,GAAA,IAEbF,EAAYW,OAAOT,EAAoB,EAAI,EAAI,aAmC7C7oB,EAAOyH,EAAY8hB,EAAUb,UACvCjhB,EACK8hB,EACJC,QAAO,MAAQ/hB,EAAW,GAAGgiB,QAAQf,IACrCc,QAAO,MAAQ/hB,EAAW,GAAGgiB,QAAQf,gBAW5B9c,EAAO8d,EAAaC,WAC9BC,GAAS,EACJpsB,EAAIksB,EAAYjsB,OAAS,EAAGD,GAAK,IAAKA,EAAC,GAC1CksB,EAAYlsB,IAAMmsB,EAAYnsB,GAAC,CACjCosB,GAAS,eAINA,WAqBOta,EAAO7H,EAAY8J,OAC3BsY,EAAWpY,KAAKD,IAAID,GACpBuY,EAAWrY,KAAKC,IAAIH,GACpBF,EAAI5J,EAAW,GAAKoiB,EAAWpiB,EAAW,GAAKqiB,EAC/CxY,EAAI7J,EAAW,GAAKoiB,EAAWpiB,EAAW,GAAKqiB,SACrDriB,EAAW,GAAK4J,EAChB5J,EAAW,GAAK6J,EACT7J,WAoBO8H,EAAM9H,EAAYsiB,UAChCtiB,EAAW,IAAMsiB,EACjBtiB,EAAW,IAAMsiB,EACVtiB,WAQOiV,EAAgBsN,EAAQC,OAChCtY,EAAKqY,EAAO,GAAKC,EAAO,GACxBrY,EAAKoY,EAAO,GAAKC,EAAO,UACvBtY,EAAKA,EAAKC,EAAKA,WAQRmW,EAASiC,EAAQC,UACxBxY,KAAK8W,KAAK7L,EAAgBsN,EAAQC,aAW3BjC,EAAyBvgB,EAAY+gB,UAC5C9L,EAAgBjV,EAAYmgB,EAAiBngB,EAAY+gB,aA6BlDP,EAAaxgB,EAAYihB,UACnCjhB,EAEAqgB,EAAmB,KAAOrgB,EAAW,GAAIihB,GAAkB,IAE3DZ,EAAmB,KAAOrgB,EAAW,GAAIihB,eAgC/BR,EAAWzgB,EAAYihB,UAC9B1oB,EAAOyH,EAAU,WAAcihB,YAYxBjpB,EAAMgI,EAAYjI,MAC5BA,EAAW4I,WAAQ,KACfG,EAAUC,EAAAC,SAAYjJ,EAAW8I,aACjC4hB,EAAa/B,EAAc1gB,EAAYjI,EAAY+I,GACrD2hB,IACFziB,EAAW,IAAMyiB,EAAa3hB,UAG3Bd,WAQO0gB,EAAc1gB,EAAYjI,EAAY2qB,OAC9C9hB,EAAmB7I,EAAW8I,YAChC4hB,EAAa,KAEf1qB,EAAW4I,aACVX,EAAW,GAAKY,EAAiB,IAAMZ,EAAW,GAAKY,EAAiB,IAAC,KAEpE+hB,EACJD,GAAqB3hB,EAAAC,SAAaJ,GACpC6hB,EAAazY,KAAKqI,OACfrS,EAAW,GAAKY,EAAiB,IAAM+hB,UAGrCF,4NC9aOb,EAAUgB,EAAQ7pB,EAAO8pB,OACjCC,OACclmB,IAAlBimB,EAA8BD,EAAOZ,QAAQa,GAAa,GAASD,EACjEG,EAAUD,EAAa3d,QAAO,YAClC4d,GAAsB,IAAZA,EAAiBD,EAAa9sB,OAAS+sB,GAChChqB,EACb+pB,EAAY,IACR7e,MAAM,EAAIlL,EAAQgqB,GAASnY,KAAI,KAAQkY,WASjCE,EAAgBC,EAAIC,WAC5BC,GAAE,GAASF,GAAI1X,MAAK,KACpB6X,GAAE,GAASF,GAAI3X,MAAK,KAEjBxV,EAAI,EAAGA,EAAIiU,KAAK4F,IAAIuT,EAAGntB,OAAQotB,EAAGptB,QAASD,IAAC,KAC7CstB,EAAK9O,SAAS4O,EAAGptB,IAAC,IAAU,IAC5ButB,EAAK/O,SAAS6O,EAAGrtB,IAAC,IAAU,OAE9BstB,EAAKC,EAAE,OACF,KAELA,EAAKD,EAAE,OACF,SAIJ,yBAjCN/f,EAAAF,OAAAzN,EAAA,aAAA,IACaisB,IAebte,EAAAF,OAAAzN,EAAA,mBAAA,IACaqtB,mqBCpBhBO,EAAA,SAAA9pB,GAOK,SACH+pB,EAAYlnB,EAAMmnB,EAA2BC,EAAgBC,OAA7D/oB,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAQVQ,EAAKgpB,sBAAwBH,EAO7B7oB,EAAK2B,WAAamnB,EAQlB9oB,EAAKipB,QAAUF,WAhCOtpB,EAAAmpB,EAAA/pB,GAkC1B+pB,EAlCA,sBAoCeD,mOCrBFO,uCAQAC,yCAQAjoB,wCAQAkoB,oCAQAC,sCASAC,wCAiCAC,QA1EAL,EAAY,YAQZC,EAAgB,gBAQhBjoB,EAAkB,kBAQlBkoB,EAAiB,iBAQjBC,EAAa,aASbC,EAAe,eAMtBE,EAAS,IAAOC,OAAM,iYASxBzZ,KAAI,IAAA,KAGF0Z,EAAmB,0DAeZH,EAAiB,SAAaI,OACnCC,EAAQD,EAASC,MAAMJ,OACxBI,EAAK,OACD,aAEH/rB,EAAK,CACTgsB,WAAU,SACV7kB,KAAI,QACJnH,MAAK,SACLisB,OAAM,SACNC,QAAO,UAEA5uB,EAAI,EAAG6H,EAAK0mB,EAAoBtuB,OAAQD,EAAI6H,IAAM7H,EAAC,KACpDgN,EAAQyhB,EAAMzuB,EAAI,QACV6G,IAAVmG,IACFtK,EAAM6rB,EAAoBvuB,IAAMgN,UAGpCtK,EAAMmsB,SAAWnsB,EAAMosB,OAAOtZ,MAAK,QAC5B9S,wMC3BIqsB,uCAMAC,qCAMAC,sCAMAC,4CAMAC,sCAMAC,wCAMAC,yCAMAC,uCAMAC,0CAMAC,qCAMAC,uCAMAC,mCAKAxqB,iCAUAyqB,kCAkBAC,mCAMAC,wCA+FAC,IA6DVviB,EAAAF,OAAAzN,EAAA,oBAAA,IACamwB,IAUbxiB,EAAAF,OAAAzN,EAAA,4BAAA,IACaowB,IAebziB,EAAAF,OAAAzN,EAAA,qBAAA,IACaqwB,IAgBb1iB,EAAAF,OAAAzN,EAAA,kBAAA,IACaswB,IAoBb3iB,EAAAF,OAAAzN,EAAA,oBAAA,IACauwB,IAuFb5iB,EAAAF,OAAAzN,EAAA,yBAAA,IACawwB,IApfb,IAAAtP,EAAAxhB,EAAA,kLAqFUyvB,EAAW,kBAMXC,EAAgB,OAMhBC,EAAc,QAMdC,EAAe,GAMfC,EAAwB,EAMxBC,EAAe,QAMfC,EAAoB,GAMpBC,EAAkB,OAMlBC,EAAgB,SAMhBC,EAAmB,SAMnBC,EAAc,CAAI,EAAG,EAAG,EAAG,GAM3BC,EAAmB,EAKnBxqB,EAAY,IAAAmrB,EAAAzvB,QAUZ+uB,EAAU,IAAAW,EAAA1vB,QACvB+uB,EAAWzS,QAAO,WAChBqT,QAAQC,KAAI,8BAKX,IAMCC,EA8GEC,EAnHFC,EAAiB,KAURf,EAAW,GAMXC,EAAY,eAMnBe,EAAUC,EAJRhnB,EAAI,QACJinB,EAAc,sBACdlK,EAAMkK,EAAe7wB,OACrBoB,EAAI,2BAQP,SACM0vB,EAAYC,EAAWC,EAAYC,WACtCC,GAAY,EACPnxB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EAAC,KACpBoxB,EAAgBN,EAAe9wB,MACrC6wB,EAAiBd,EACfiB,EAAS,IAASC,EAAU,IAASpnB,EAAOunB,EAC5C/vB,GAEE6vB,GAAcE,EAAa,KACvBpuB,EAAQ+sB,EACZiB,EAAS,IAEPC,EAAU,IAEVpnB,EACAqnB,EAAU,IAEVE,EACF/vB,GAIF8vB,EAAYA,GAAanuB,GAAS6tB,WAGlCM,WAMGE,YACHC,GAAO,EACLC,EAAQrsB,EAAakgB,UAClBplB,EAAI,EAAG6H,EAAK0pB,EAAMtxB,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwxB,EAAOD,EAAMvxB,GACfkF,EAAa1E,IAAIgxB,GAjDT,MAkDNT,EAAY1iB,MAAKhK,KAAOmtB,EAAKhc,MAAK,gBAC9Boa,GAENe,EAAiB,KACjBF,OAAc5pB,EACd3B,EAAa0M,IAAI4f,EAvDT,OAyDRtsB,EAAa0M,IAAI4f,EAAMtsB,EAAa1E,IAAIgxB,GAAQ,GAAG,GACnDF,GAAO,IAITA,IACFG,cAAcb,GACdA,OAAW/pB,mBAIE2nB,OACTgD,EAAI1rB,EAAAsoB,kBAAqBI,MAC1BgD,UAGC3C,EAAW2C,EAAK3C,SACb7uB,EAAI,EAAG6H,EAAKgnB,EAAS5uB,OAAQD,EAAI6H,IAAM7H,EAAC,KACzC8uB,EAASD,EAAS7uB,GAClBmN,EAAMqkB,EAAK9uB,MAAK,KAAU8uB,EAAK7C,OAAM,KAAUG,OACvBjoB,IAA1B3B,EAAa1E,IAAI2M,KACnBjI,EAAa0M,IAAIzE,EA9EP,KA8EqB,GAC1B4jB,EAAYS,EAAK9uB,MAAO8uB,EAAK7C,OAAQG,KACxC5pB,EAAa0M,IAAIzE,EAAK,GAAG,QACRtG,IAAb+pB,IACFA,EAAWc,YAAYL,EAAO,SAnFjB,GA+FZvB,WAKMtB,OACX7oB,EAASiqB,EAAYpB,MACX3nB,MAAVlB,EAAmB,mCAEb6rB,EAAI1rB,EAAAsoB,kBAAqBI,GACzBmD,EAAUC,EAAYpD,EAAQ,MAIpC7oB,GAHmBksB,MAAMnT,OAAO8S,EAAK9C,aACjC,IACAhQ,OAAO8S,EAAK9C,cAGbiD,EAAQG,wBAA0BH,EAAQI,+BAExCrB,KACHA,EAAiBlrB,SAASC,cAAa,QACxBusB,UAAS,IACxBtB,EAAehuB,MAAMuvB,UAAS,IAC9BvB,EAAehuB,MAAMwvB,UAAS,OAC9BxB,EAAehuB,MAAMiD,OAAM,OAC3B+qB,EAAehuB,MAAMyvB,QAAO,IAC5BzB,EAAehuB,MAAM0vB,OAAM,OAC3B1B,EAAehuB,MAAMgD,SAAQ,WAC7BgrB,EAAehuB,MAAM+F,QAAO,QAC5BioB,EAAehuB,MAAM2vB,KAAI,YAE3B3B,EAAehuB,MAAM8uB,KAAOhD,EAC5BhpB,SAASoY,KAAKC,YAAY6S,GAC1B/qB,EAAS+qB,EAAe4B,aACxB9sB,SAASoY,KAAK3W,YAAYypB,GAE5Bd,EAAYpB,GAAY7oB,SAEnBA,GAQR,SACMisB,EAAYJ,EAAMnwB,UACpBsvB,IACHA,EAAc4B,EAAAC,sBAAyB,EAAG,IAExChB,GAAQf,IACVE,EAAea,KAAOA,EACtBf,EAAcE,EAAea,MAExBb,EAAeiB,YAAYvwB,YAQpB0uB,EAAiByB,EAAMnwB,UAC9BuwB,EAAYJ,EAAMnwB,GAAM2B,eAUjBgtB,EAAyBwB,EAAMnwB,EAAM2c,MAC/C3c,KAAQ2c,EAAK,OACRA,EAAM3c,OAET2B,EAAQ+sB,EAAiByB,EAAMnwB,UACrC2c,EAAM3c,GAAQ2B,EACPA,WAUOitB,EAAkBuB,EAAMiB,EAAOC,WACvCC,EAAWF,EAAMxyB,OACnB+C,EAAQ,EACHhD,EAAI,EAAGA,EAAI2yB,IAAY3yB,EAAC,KACzB4yB,EAAe7C,EAAiByB,EAAMiB,EAAMzyB,IAClDgD,EAAQiR,KAAK4F,IAAI7W,EAAO4vB,GACxBF,EAAOpqB,KAAKsqB,UAEP5vB,WASOktB,EAAepC,EAAS/jB,EAAU8oB,EAASC,GACxC,IAAb/oB,IACF+jB,EAAQ7b,UAAU4gB,EAASC,GAC3BhF,EAAQhc,OAAO/H,GACf+jB,EAAQ7b,WAAW4gB,GAAUC,aAiBjB3C,EACdrC,EACApb,EACAoQ,EACAiQ,EACAC,EACAC,EACAC,EACAC,EACAtf,EACAC,EACA/B,GAEA+b,EAAQsF,OAEQ,IAAZtQ,IACFgL,EAAQuF,aAAevQ,GAErBpQ,GACFob,EAAQwF,aAAajlB,MAAMyf,EAASpb,GAGhBqgB,EAAcQ,qBAElCzF,EAAQ7b,UAAU4B,EAAGC,GACrBga,EAAQ/b,MAAMA,EAAM,GAAIA,EAAM,IAsC/B,SAC+ByhB,EAAO1F,WACjCyF,EAAsBC,EAAMD,oBACzBvzB,EAAI,EAAG6H,EAAK0rB,EAAoBtzB,OAAQD,EAAI6H,EAAI7H,GAAK,EACxDkO,MAAM4B,QAAQyjB,EAAoBvzB,EAAI,IACxC8tB,EAAQyF,EAAoBvzB,IAAIqO,MAC9Byf,EACAyF,EAAoBvzB,EAAI,IAG1B8tB,EAAQyF,EAAoBvzB,IAAMuzB,EAAoBvzB,EAAI,GA/C5DyzB,CAA+CV,EAAejF,IACrD/b,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpC+b,EAAQ7b,UAAU4B,EAAGC,GACrBga,EAAQ/b,MAAMA,EAAM,GAAIA,EAAM,IAC9B+b,EAAQ4F,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIFrF,EAAQ4F,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACAtf,EACAC,EACAof,EAAInhB,EAAM,GACVohB,EAAIphB,EAAM,IAId+b,EAAQ6F,UAwBP,IACCC,EAA8B,cAMlBxD,EAAsB1d,+CAElBA,IAEXkhB,IACHA,EAA2BrB,EAAAC,sBAAyB,EAAG,GAAGqB,QAE5DD,EAA4BlxB,MAAMgQ,UAASohB,EAAAvhB,SAAYG,GAChDkhB,EAA4BlxB,MAAMgQ,4WCjfhCqhB,6BAMAC,6BAMAC,0BAMAC,yCASAC,8CAQAC,mCASAC,8CAMAC,IA7DV,IAEGC,EACY,oBAATC,gBAAuD,IAAnBA,UAAUC,UACjDD,UAAUC,UAAUC,cAAW,GAOxBX,GAAoC,IAA1BQ,EAAGnlB,QAAO,WAMpB4kB,GAAkC,IAAzBO,EAAGnlB,QAAO,YAA4C,GAAvBmlB,EAAGnlB,QAAO,SAMlD6kB,GAAkC,IAAzBM,EAAGnlB,QAAO,YAA2C,GAAtBmlB,EAAGnlB,QAAO,QAMlD8kB,GAAkC,IAA5BK,EAAGnlB,QAAO,aAShB+kB,EACY,oBAAhBQ,iBAAmCA,iBAAmB,EAOlDP,EACa,oBAAjBQ,mBACe,oBAAfC,iBACPC,gBAAgBF,kBAMLP,EACC,oBAALU,OAAyBA,MAAMxwB,UAAUywB,OAKrCV,EAAuB,eAC9BW,GAAU,UAENzzB,EAAUzB,OAAOgN,eAAc,aAAc,CACjDvM,IAAG,WACDy0B,GAAU,KAIdC,OAAOrU,iBAAgB,IAAM,KAAMrf,GACnC0zB,OAAOjO,oBAAmB,IAAM,KAAMzlB,SAC/B2zB,WAGFF,EAd2B,0KClDjC1nB,EAAAF,OAAAzN,EAAA,yBAAA,IACa4yB,IAuBbjlB,EAAAF,OAAAzN,EAAA,cAAA,IACaw1B,IAcb7nB,EAAAF,OAAAzN,EAAA,eAAA,IACay1B,IAWb9nB,EAAAF,OAAAzN,EAAA,eAAA,IACa01B,IAUb/nB,EAAAF,OAAAzN,EAAA,cAAA,IACa21B,IAMbhoB,EAAAF,OAAAzN,EAAA,kBAAA,IACa41B,IAabjoB,EAAAF,OAAAzN,EAAA,mBAAA,IACa61B,iCAnFAjD,EAAsBkD,EAAWC,EAAYC,OACrD/B,EACJ+B,GAAkBA,EAAe31B,OAC7B21B,EAAeC,QAAKC,EAAA1B,wBAAA,IAEhBS,gBAAgBa,GAAa,IAAKC,GAAc,KACpDnwB,SAASC,cAAa,iBACxBiwB,IACF7B,EAAO7wB,MAAQ0yB,GAEbC,IACF9B,EAAOluB,OAASgwB,GAG8B9B,EAAOkC,WAAU,eAUnDX,EAAWhtB,OACrBpF,EAAQoF,EAAQ4tB,YACdtzB,EAAQqb,iBAAiB3V,UAC/BpF,GAASwb,SAAS9b,EAAMuzB,WAAY,IAAMzX,SAAS9b,EAAMwzB,YAAa,aAYxDb,EAAYjtB,OACtBzC,EAASyC,EAAQkqB,aACf5vB,EAAQqb,iBAAiB3V,UAC/BzC,GAAU6Y,SAAS9b,EAAMyzB,UAAW,IAAM3X,SAAS9b,EAAM0zB,aAAc,aASzDd,EAAYe,EAASC,OAC7BC,EAASD,EAAQtvB,WACnBuvB,GACFA,EAAOC,aAAaH,EAASC,YAQjBf,EAAWkB,UAClBA,GAAQA,EAAKzvB,WAAayvB,EAAKzvB,WAAWC,YAAYwvB,GAAQ,cAMvDjB,EAAeiB,QACtBA,EAAKC,WACVD,EAAKxvB,YAAYwvB,EAAKC,oBAYVjB,EAAgBgB,EAAME,WAC9BC,EAAcH,EAAKI,WAEhB72B,EAAI,KAAWA,EAAC,KACjB82B,EAAWF,EAAY52B,GACvB+2B,EAAWJ,EAAS32B,OAGrB82B,IAAaC,EAAQ,MAKtBD,IAAaC,IAKZD,EAMAC,EAOLN,EAAKvwB,aAAa6wB,EAAUD,IAN1BL,EAAKxvB,YAAY6vB,KACf92B,GAPFy2B,EAAK5Y,YAAYkZ,gMClHpB,MAAAjW,EAAAxhB,EAAA,m5CAsIH03B,EAAA,SAAAtzB,GAGK,SACHuzB,EAAYz1B,OAAZqD,EACEnB,EAAAU,KAAAC,OAAAA,KAEM6yB,EAo3CP,SAC4B11B,GAG1B,IACC21B,EAAsB,UACUtwB,IAAhCrF,EAAQ21B,sBACVA,EACoC,iBAA3B31B,EAAQ21B,oBACX3xB,SAAS4xB,eAAe51B,EAAQ21B,qBAChC31B,EAAQ21B,qBAKb,IAeCrzB,EAaAG,EAcAozB,EAzCE3R,EAAM,GAEN4R,EACJ91B,EAAQd,QAC2C,mBAAzBc,EAAQd,OAAQ62B,UACX/1B,EAAQd,OAAM,IAAA82B,EAAA52B,QAAA,CACzBF,OAAmCc,EAAQd,SACjEglB,EAAM+R,EAAA72B,QAAa82B,YAAcJ,EAEjC5R,EAAM+R,EAAA72B,QAAa+2B,QAAUn2B,EAAQ0B,OAErCwiB,EAAM+R,EAAA72B,QAAag3B,WACA/wB,IAAjBrF,EAAQ2B,KAAqB3B,EAAQ2B,KAAI,IAAA00B,EAAAj3B,aAGlBiG,IAArBrF,EAAQsC,WACNoK,MAAM4B,QAAQtO,EAAQsC,UACxBA,EAAQ,IAAAg0B,EAAAl3B,QAAkBY,EAAQsC,SAAS4G,mBAGW,mBAA1BlJ,EAAQsC,SAAUi0B,SAC5C,IAEFj0B,EAAsCtC,EAAQsC,gBAKrB+C,IAAzBrF,EAAQyC,eACNiK,MAAM4B,QAAQtO,EAAQyC,cACxBA,EAAY,IAAA6zB,EAAAl3B,QAAkBY,EAAQyC,aAAayG,mBAGO,mBAA9BlJ,EAAQyC,aAAc8zB,SAEhD,IAEF9zB,EAA0CzC,EAAQyC,oBAK7B4C,IAArBrF,EAAQ61B,SACNnpB,MAAM4B,QAAQtO,EAAQ61B,UACxBA,EAAQ,IAAAS,EAAAl3B,QAAkBY,EAAQ61B,SAAS3sB,mBAGW,mBAA1BlJ,EAAQ61B,SAAUU,SAC5C,IAEFV,EAAW71B,EAAQ61B,UAGrBA,EAAQ,IAAAS,EAAAl3B,eAIRkD,SAAUA,EACVG,aAAcA,EACdkzB,oBAAqBA,EACrBE,SAAUA,EACV3R,OAAQA,GAj8CgBsS,CAAsBx2B,UAG9CqD,EAAKozB,yBAA2BpzB,EAAKqzB,mBAAmB5yB,KAAKT,GAM7DA,EAAKszB,sBACyBtxB,IAA5BrF,EAAQ42B,gBAAgC52B,EAAQ42B,gBAAkB,GAMpEvzB,EAAKwzB,iBACoBxxB,IAAvBrF,EAAQ82B,WACJ92B,EAAQ82B,WAAUxC,EAAA3B,mBAOxBtvB,EAAK0zB,yBAML1zB,EAAK2zB,mBAKL3zB,EAAK4zB,gBAA6C,gBAC3CD,wBAAqB3xB,OACrB6xB,aAAa72B,KAAK82B,QACvBrzB,KAAKT,GAMPA,EAAK+zB,4BAA2B9E,EAAAriB,SAMhC5M,EAAKg0B,4BAA2B/E,EAAAriB,SAMhC5M,EAAKi0B,YAAc,EAMnBj0B,EAAKk0B,YAAc,KAOnBl0B,EAAKm0B,gBAAkB,KAMvBn0B,EAAKo0B,yBAA2B,KAMhCp0B,EAAKq0B,uBAAyB,KAM9Br0B,EAAKs0B,gCAAkC,KAMvCt0B,EAAKu0B,UAAY5zB,SAASC,cAAa,OACvCZ,EAAKu0B,UAAUvzB,UAAS,eACT,iBAAsBqvB,OAAM,YAAc,IACzDrwB,EAAKu0B,UAAU12B,MAAMgD,SAAQ,WAC7Bb,EAAKu0B,UAAU12B,MAAM22B,SAAQ,SAC7Bx0B,EAAKu0B,UAAU12B,MAAMM,MAAK,OAC1B6B,EAAKu0B,UAAU12B,MAAMiD,OAAM,OAM3Bd,EAAKy0B,kBAAoB9zB,SAASC,cAAa,OAC/CZ,EAAKy0B,kBAAkB52B,MAAMgD,SAAQ,WACrCb,EAAKy0B,kBAAkB52B,MAAMkD,OAAM,IACnCf,EAAKy0B,kBAAkB52B,MAAMM,MAAK,OAClC6B,EAAKy0B,kBAAkB52B,MAAMiD,OAAM,OACnCd,EAAKy0B,kBAAkB52B,MAAM62B,cAAa,OAC1C10B,EAAKy0B,kBAAkBzzB,UAAS,sBAChChB,EAAKu0B,UAAUvb,YAAYhZ,EAAKy0B,mBAMhCz0B,EAAK20B,2BAA6Bh0B,SAASC,cAAa,OACxDZ,EAAK20B,2BAA2B92B,MAAMgD,SAAQ,WAC9Cb,EAAK20B,2BAA2B92B,MAAMkD,OAAM,IAC5Cf,EAAK20B,2BAA2B92B,MAAMM,MAAK,OAC3C6B,EAAK20B,2BAA2B92B,MAAMiD,OAAM,OAC5Cd,EAAK20B,2BAA2B92B,MAAM62B,cAAa,OACnD10B,EAAK20B,2BAA2B3zB,UAAS,gCACzChB,EAAKu0B,UAAUvb,YAAYhZ,EAAK20B,4BAMhC30B,EAAK40B,wBAA0B,KAM/B50B,EAAK60B,eAAiBl4B,EAAQm4B,cAM9B90B,EAAK+0B,qBAAuB1C,EAAgBC,oBAM5CtyB,EAAKg1B,gBAAkB,KAMvBh1B,EAAKf,SAAWozB,EAAgBpzB,UAAQ,IAAAg0B,EAAAl3B,QAMxCiE,EAAKZ,aAAeizB,EAAgBjzB,cAAY,IAAA6zB,EAAAl3B,QAMhDiE,EAAKi1B,UAAY5C,EAAgBG,SAOjCxyB,EAAKk1B,gBAAe,GAMpBl1B,EAAK8b,UAAY,KAMjB9b,EAAKm1B,cAMLn1B,EAAKo1B,qBAAoB,GAMzBp1B,EAAKq1B,WAAU,IAAAC,EAAAv5B,QACbiE,EAAKu1B,gBAAgB90B,KAAKT,GAC1BA,EAAKw1B,kBAAkB/0B,KAAKT,IAG9BA,EAAKgc,iBAAgBC,EAAAC,mBAAA0W,EAAA72B,QACY82B,YAC/B7yB,EAAKy1B,0BAEPz1B,EAAKgc,iBAAgBC,EAAAC,mBAAA0W,EAAA72B,QACYg3B,MAC/B/yB,EAAK01B,oBAEP11B,EAAKgc,iBAAgBC,EAAAC,mBAAA0W,EAAA72B,QACY45B,MAC/B31B,EAAK41B,oBAEP51B,EAAKgc,iBAAgBC,EAAAC,mBAAA0W,EAAA72B,QACY+2B,QAC/B9yB,EAAK61B,sBAKP71B,EAAKye,cAAc4T,EAAgBxR,QAEnC7gB,EAAKf,SAAS8H,QAIT,SACO+uB,GACRA,EAAQ/Z,OAAMvc,OACdiB,KAAKT,IAGTA,EAAKf,SAAS+c,iBAAgB+Z,EAAAh6B,QACRi6B,IAGjB,SACOjT,GACRA,EAAMxf,QAAQwY,OAAMvc,OACpBiB,KAAKT,IAGTA,EAAKf,SAAS+c,iBAAgB+Z,EAAAh6B,QACRk6B,OAGjB,SACOlT,GACRA,EAAMxf,QAAQwY,OAAO,OACrBtb,KAAKT,IAGTA,EAAKZ,aAAa2H,QAIb,SACOmvB,GACRA,EAAYna,OAAMvc,OAClBiB,KAAKT,IAGTA,EAAKZ,aAAa4c,iBAAgB+Z,EAAAh6B,QACZi6B,IAGjB,SACOjT,GACRA,EAAMxf,QAAQwY,OAAMvc,OACpBiB,KAAKT,IAGTA,EAAKZ,aAAa4c,iBAAgB+Z,EAAAh6B,QACZk6B,OAGjB,SACOlT,GACRA,EAAMxf,QAAQwY,OAAO,OACrBtb,KAAKT,IAGTA,EAAKi1B,UAAUluB,QAAQ/G,EAAKm2B,oBAAoB11B,KAAKT,IAErDA,EAAKi1B,UAAUjZ,iBAAgB+Z,EAAAh6B,QACTi6B,IAGjB,SACOjT,QACHoT,oBAC4CpT,EAAMxf,UAEvD9C,KAAKT,IAGTA,EAAKi1B,UAAUjZ,iBAAgB+Z,EAAAh6B,QACTk6B,OAGjB,SACOlT,OAEFznB,EADyDynB,EAAMxf,QAClD6yB,aACRp0B,IAAP1G,UAAgBkE,KACN01B,gBAAgB55B,EAAGoS,YAEjCqV,EAAMxf,QAAQwY,OAAO,OACrBtb,KAAKT,aA9TcP,EAAA2yB,EAAAvzB,GAsUzBuzB,EAAA1yB,UAAAC,eAAc,qBACFnE,MAAK,oDAQjB42B,EAAA1yB,UAAA22B,WAAU,SAACP,QACJQ,cAAc7yB,KAAKqyB,IAY1B1D,EAAA1yB,UAAA62B,eAAc,SAACL,QACRM,kBAAkB/yB,KAAKyyB,IAU9B9D,EAAA1yB,UAAA+2B,SAAQ,SAAC35B,GACK0C,KAAQk3B,gBAAgBhE,YAC7BjvB,KAAK3G,IAQds1B,EAAA1yB,UAAAi3B,WAAU,SAACC,QACJC,cAAcpzB,KAAKmzB,IAQ1BxE,EAAA1yB,UAAAy2B,oBAAmB,SAACS,OACZt7B,EAAKs7B,EAAQR,aACRp0B,IAAP1G,IAAgBkE,KACb01B,gBAAgB55B,EAAGoS,YAAckpB,GAExCA,EAAQ7a,OAAMvc,OAOhB4yB,EAAA1yB,UAAAwC,gBAAe,gBACR40B,UAAU,MACfj4B,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAqBvB4yB,EAAA1yB,UAAAq3B,sBAAqB,SAAChzB,EAAOE,EAAU+yB,WAC3B9C,iBAGJ9uB,EAAU5F,KAAQy3B,+BAA+BlzB,GAEjDC,OACyBhC,KAF/Bg1B,OAA8Bh1B,IAAhBg1B,EAA4BA,EAAW,IAEvChzB,aAA6BgzB,EAAYhzB,aAAe,EAChEE,OACwBlC,IAA5Bg1B,EAAY9yB,YAA4B8yB,EAAY9yB,YAAWmD,EAAAC,KAC3DjC,GAA4C,IAA7B2xB,EAAY3xB,yBACrByW,UAAU3W,2BACpBC,EAAU5F,KACL00B,YACLlwB,EACAqB,EACApB,EACA,KACAC,EACA,QAYJkuB,EAAA1yB,UAAAw3B,mBAAkB,SAACnzB,EAAOizB,OAClBG,EAAQ,eACTJ,sBACHhzB,GAAK,SACK0B,GACR0xB,EAAS1zB,KAAKgC,KAEhBuxB,GAEKG,GAwBT/E,EAAA1yB,UAAAoE,oBAAmB,SAACC,EAAOE,EAAU+yB,WACzB9C,iBAGJv3B,EAAUq6B,GAAW,GACrBhzB,OACqBhC,IAAzBrF,EAAQqH,aAA6BrH,EAAQqH,aAAe,EACxDE,EAAcvH,EAAQuH,aAAWmD,EAAAC,iBAC3BwU,UAAUhY,oBACpBC,EAAKvE,KACA00B,YACLlwB,EACAC,EACAC,KAYJkuB,EAAA1yB,UAAA03B,kBAAiB,SAACrzB,EAAOizB,YACb9C,YAAW,OACZ,MAEH9uB,EAAU5F,KAAQy3B,+BAA+BlzB,GAEjDG,OACwBlC,KAF9Bg1B,OAA8Bh1B,IAAhBg1B,EAA4BA,EAAW,IAEvC9yB,YAA4B8yB,EAAY9yB,YAAWmD,EAAAC,KAC3DtD,OACyBhC,IAA7Bg1B,EAAYhzB,aAA6BgzB,EAAYhzB,aAAe,EAChEqB,GAA4C,IAA7B2xB,EAAY3xB,yBACrByW,UAAU1U,uBACpBhC,EAAU5F,KACL00B,YACLlwB,EACAqB,EACAnB,EACA,OAUJkuB,EAAA1yB,UAAA23B,mBAAkB,SAACtU,eACLuU,uBAAsB93B,KAAM+3B,cAAcxU,KAQxDqP,EAAA1yB,UAAA83B,2BAA0B,SAACzU,eACbkU,+BAA8Bz3B,KAAM+3B,cAAcxU,KAShEqP,EAAA1yB,UAAA63B,cAAa,SAACxU,OACN0U,EAAgBj4B,KAAQ+0B,UAAUmD,wBAClCC,qBAEgB5U,EACWA,EAAO6U,eAAe,GACtB7U,SAG/B4U,EAAcE,QAAUJ,EAAiBjK,KACzCmK,EAAcG,QAAUL,EAAiBM,MAa7C3F,EAAA1yB,UAAAs4B,UAAS,uBACkDr8B,IAAGi3B,EAAA72B,QAC9C+2B,SAWhBV,EAAA1yB,UAAAu4B,iBAAgB,eACR55B,EAAMmB,KAAQw4B,wBACLh2B,IAAX3D,EACkB,iBAANA,EACVsC,SAAS4xB,eAAel0B,GACxBA,EAEG,MAWX+zB,EAAA1yB,UAAA43B,uBAAsB,SAACvzB,kCAEdkzB,+BAA+BlzB,GAAKvE,KACpC04B,UAAUC,kBAUnB/F,EAAA1yB,UAAAu3B,+BAA8B,SAAClzB,OACvBpC,EAAUnC,KAAQ00B,mBACnBvyB,UAIDA,EAAWoD,2BACXhB,EAAM8B,SAJD,MAeXusB,EAAA1yB,UAAA42B,YAAW,uBACGr3B,UASdmzB,EAAA1yB,UAAAm3B,YAAW,uBACG5B,WAWd7C,EAAA1yB,UAAA04B,eAAc,SAAC98B,OACPs7B,EAAOp3B,KAAQ01B,gBAAgB55B,EAAGoS,wBACrB1L,IAAZ40B,EAAwBA,EAAU,MAW3CxE,EAAA1yB,UAAA82B,gBAAe,uBACDp3B,cASdgzB,EAAA1yB,UAAAg3B,cAAa,uBAC4B/6B,IAAGi3B,EAAA72B,QAAa82B,aAQzDT,EAAA1yB,UAAAgzB,UAAS,kBACKlzB,KAAQk3B,gBAAgBhE,aAOtCN,EAAA1yB,UAAA24B,WAAU,mBACF51B,EAAgBjD,KAAQk3B,gBAAgBja,sBACrCthB,EAAI,EAAG6H,EAAKP,EAAiBrH,OAAQD,EAAI6H,IAAM7H,EAAC,KAEjDa,EADQyG,EAAiBtH,GAAG2B,MACuC4J,eACrE1K,GAAUA,EAAOs8B,QAAO,OACnB,SAGJ,GAUTlG,EAAA1yB,UAAA64B,uBAAsB,SAACnzB,OACfozB,EAAcC,EAAAC,mBAClBtzB,EAAU5F,KACL04B,UAAUC,6BAELQ,+BAA+BH,IAS7CpG,EAAA1yB,UAAAi5B,+BAA8B,SAACvzB,OACvBzD,EAAUnC,KAAQ00B,mBACnBvyB,UAIDA,EAAWmD,2BACXM,EAAWS,MAAM,EAAG,IAJf,MAaXusB,EAAA1yB,UAAA8E,YAAW,uBACGsX,WASdsW,EAAA1yB,UAAAoT,QAAO,uBAC0DnX,IAAGi3B,EAAA72B,QACpD45B,OAWhBvD,EAAA1yB,UAAAw4B,QAAO,uBAC4Bv8B,IAAGi3B,EAAA72B,QAAag3B,OAQnDX,EAAA1yB,UAAA0B,YAAW,uBACGmzB,WAUdnC,EAAA1yB,UAAAk5B,oBAAmB,uBACLnE,mBAUdrC,EAAA1yB,UAAAm5B,6BAA4B,uBACdlE,4BAMdvC,EAAA1yB,UAAAo5B,iBAAgB,eACRC,EAAav5B,KAAQy4B,0BACpBc,EAAgBA,EAAcC,cAAgBr4B,UAUvDyxB,EAAA1yB,UAAA61B,gBAAe,SAAC0D,EAAMC,EAAeC,EAAYC,iCAExClF,YACL+E,EACAC,EACAC,EACAC,IAQJhH,EAAA1yB,UAAA2zB,mBAAkB,SAACgG,EAAc/V,OACzB5hB,EAAO4hB,GAAY+V,EAAa33B,KAChC43B,EAAe,IAAAC,EAAAx9B,QAAuB2F,EAAIlC,KAAQ65B,QACnDG,sBAAsBF,IAM7BlH,EAAA1yB,UAAA85B,sBAAqB,SAACF,WACVpF,iBAKJuF,EAA6CH,EAAgBG,cAC7D9Y,EAAY8Y,EAAc/3B,QAE9Bif,IAAStD,EAAAthB,QAAsB29B,aAC/B/Y,IAASpe,EAAAxG,QAAe6oB,OACxBjE,IAASpe,EAAAxG,QAAewoB,QAAO,KAEzBoV,EAAGn6B,KAAQs5B,mBACXc,EAAQp6B,KAAQ+0B,UAAUsF,YAAWr6B,KAClC+0B,UAAUsF,cACfF,EACEt7B,EAA8Bo7B,EAAcp7B,eAI3Cs2B,2BAA2BmF,SAASz7B,MAKvCu7B,IAAaD,EAAMA,EAAII,gBAAkBH,GAAUE,SAASz7B,GAAM,UAKxEi7B,EAAgB33B,WAAUnC,KAAQ00B,aACU,SAAnCjyB,cAAcq3B,WACfU,EAAiBx6B,KAAQg3B,kBAAkBtD,WAAWrtB,QACnD1K,EAAI6+B,EAAkB5+B,OAAS,EAAGD,GAAK,EAAGA,IAAC,KAC5C+6B,EAAc8D,EAAkB7+B,MAEpC+6B,EAAYt0B,WAAMpC,MACjB02B,EAAY+D,aAASz6B,KAChBy4B,uBAIK/B,EAAY/S,YAAYmW,IACxBA,EAAgBjY,mBAAkB,SAUrD+Q,EAAA1yB,UAAAw6B,iBAAgB,eACRv4B,EAAUnC,KAAQ00B,YAWlBiG,EAAS36B,KAAQ61B,eAClB8E,EAAUjnB,UAAO,KAChBknB,EAAe56B,KAAQ8zB,iBACvB+G,EAAcD,KACdz4B,EAAU,KACN24B,EAAQ34B,EAAW44B,aACrBD,EAAKE,EAAAz+B,QAAU0+B,YAAcH,EAAKE,EAAAz+B,QAAU2+B,aAAW,KACnDC,EAAmB39B,KAAK82B,MAAQnyB,EAAWi5B,KAAO,EACxDR,EAAkBO,EAAmB,EAAI,EACzCN,EAAcM,EAAmB,EAAI,GAGrCR,EAAUU,kBAAoBT,IAChCD,EAAUW,eACVX,EAAUY,cAAcX,EAAiBC,KAK3C14B,IAAUnC,KACLqC,YAAWm5B,EAAAj/B,QAAiBopB,iBAChCxjB,EAAWs5B,SAAOz7B,KACb61B,WAAWwF,mBAAer7B,KAC1B64B,cAAU74B,KAEXsc,UAAUra,oBAAmBu5B,EAAAj/B,QAChBopB,eAChBxjB,WAIE6F,EAAmBhI,KAAQ41B,qBACxBj6B,EAAI,EAAG6H,EAAKwE,EAAoBpM,OAAQD,EAAI6H,IAAM7H,EACzDqM,EAAoBrM,GAACqE,KAAQmC,GAE/B6F,EAAoBpM,OAAS,GAM/Bg3B,EAAA1yB,UAAAk2B,mBAAkB,gBACPsC,YAAO14B,KAAY04B,UAAUgD,gBAAY17B,KAC3C04B,UAAUiD,mBAAmB,QAG/B33B,UAMP4uB,EAAA1yB,UAAAm2B,qBAAoB,eAMdkD,UACKf,cACPe,EAAav5B,KAAQy4B,yBAGdrD,wBAAuB,SACrBz5B,EAAI,EAAG6H,EAAExD,KAAQw1B,gBAAgB55B,OAAQD,EAAI6H,IAAM7H,EAAC+E,EAAAmiB,cAAA7iB,KACxCw1B,gBAAgB75B,SAEhC65B,gBAAkB,UAClBT,UAAUnS,oBAAmB7f,EAAAxG,QACtBioB,YAAWxkB,KAChB4zB,+BAEFmB,UAAUnS,oBAAmB7f,EAAAxG,QACtB6oB,MAAKplB,KACV4zB,+BAEoBpxB,SAAlBmzB,gBACP/S,oBAAmB7f,EAAAxG,QAAW2oB,OAAMllB,KAAO21B,eAAe,QACrDA,mBAAgBnzB,QAElB4yB,wBAAwB9sB,eACxB8sB,wBAA0B,uBACfL,cAGbwE,WAsBQzwB,KATXywB,EAAc/f,YAAWxZ,KAAM+0B,gBACrBzY,YAAStc,KACZsc,UAAStc,KAAQG,uBAGnBi1B,wBAAuB,IAAAwG,EAAAr/B,QAAAyD,KAAAA,KAErBq1B,gBAEOwG,EAAAt/B,QAAAyD,KACPo1B,wBAAwB5Y,iBAAgBqf,EAAAt/B,QACvBuM,GAAG9I,KAClBg6B,sBAAsB/4B,KAAIjB,YAG9B+0B,UAAUvY,iBAAgBzZ,EAAAxG,QACnBioB,YAAWxkB,KAChB4zB,0BACL,QAEGmB,UAAUvY,iBAAgBzZ,EAAAxG,QACnB6oB,MAAKplB,KACV4zB,2BAAwBnC,EAAAxB,yBAAA,CACFW,SAAS,QAGhCkC,EAAmB9yB,KAASu1B,qBACjBv1B,KACRu1B,qBADLgE,OAEC/D,gBAAe,UAEhB1C,EAAmB/vB,EAAAxG,QACTwoB,QAAO/kB,KACZ6zB,mBAAkB7zB,eAIvB8yB,EAAmB/vB,EAAAxG,QACTyoB,SAAQhlB,KACb6zB,mBAAkB7zB,YAKjB21B,qBACHA,cAAa31B,KAAQ87B,WAAW76B,KAAIjB,MACzC6wB,OAAOrU,iBAAgBzZ,EAAAxG,QAAW2oB,OAAMllB,KAAO21B,eAAe,cA1DvDrZ,YACPyf,aAAY/7B,KAAMk0B,+BACbA,8BAA2B1xB,OAC3BozB,qBAAqBh6B,OAAS,OAC9B0gB,UAAUhU,eACVgU,UAAY,WAEV6X,qBACP6H,qBAAoBh8B,KAAMm0B,yBACrBA,wBAAqB3xB,QAqDzBs5B,cAQPlJ,EAAA1yB,UAAA81B,kBAAiB,gBACVhyB,UAMP4uB,EAAA1yB,UAAA+7B,2BAA0B,gBACnBj4B,UAMP4uB,EAAA1yB,UAAAg2B,mBAAkB,gBACPtB,gDACYA,+BACdA,yBAA2B,WAEzBC,8CACYA,6BACdA,uBAAyB,UAE1B/1B,EAAIkB,KAAQ04B,UACd55B,SACGo9B,2BAEAtH,yBAAwBl0B,EAAAC,OAC3B7B,EAAIgC,EAAAvE,QACYwE,eAAcf,KACzBi8B,2BAA0Bj8B,WAG5B60B,uBAAsBn0B,EAAAC,OACzB7B,EAAIiE,EAAAxG,QACMkhB,OAAMzd,KACXi8B,2BAA0Bj8B,MAIjClB,EAAK68B,mBAAmB,SAErB33B,UAMP4uB,EAAA1yB,UAAA+1B,yBAAwB,gBACbnB,uCACFA,gCAAgCvtB,QAAO7G,EAAAmiB,oBACvCiS,gCAAkC,UAEnC7B,EAAUjzB,KAAQk3B,gBACpBjE,IAAUjzB,KACP80B,gCAA+B,UAC3B7B,EAAUnyB,EAAAvE,QAAkBwE,eAAcf,KAAOgE,OAAMhE,eACvDizB,EAAUlwB,EAAAxG,QAAYkhB,OAAMzd,KAAOgE,OAAMhE,aAG/CgE,UAMP4uB,EAAA1yB,UAAAi8B,WAAU,wBACMzH,aAOhB9B,EAAA1yB,UAAAk8B,WAAU,gBACCjI,oBACP6H,qBAAoBh8B,KAAMm0B,yBAEvBC,mBAMPxB,EAAA1yB,UAAAc,WAAU,mBACF2D,EAAW3E,KAAQk3B,gBAAgBja,sBAChCthB,EAAI,EAAG6H,EAAKmB,EAAY/I,OAAQD,EAAI6H,IAAM7H,EAAC,KAC5C2B,EAAQqH,EAAYhJ,GAAG2B,MACzBA,EAAMsH,eACRtH,EAAM0H,cAAcq3B,uBAS1BzJ,EAAA1yB,UAAA8D,OAAM,gBACKsY,gBAAyC9Z,IAAhCxC,KAASm0B,qBAAgCn0B,KACpDm0B,mBAAqBmI,sBAAqBt8B,KAAMo0B,mBAWzDxB,EAAA1yB,UAAAq8B,cAAa,SAACjG,eACAQ,cAAcprB,OAAO4qB,IAUnC1D,EAAA1yB,UAAAs8B,kBAAiB,SAAC9F,eACJM,kBAAkBtrB,OAAOgrB,IAUvC9D,EAAA1yB,UAAAu8B,YAAW,SAACn/B,UACE0C,KAAQk3B,gBAAgBhE,YACtBxnB,OAAOpO,IAUvBs1B,EAAA1yB,UAAAw8B,cAAa,SAACtF,eACAC,cAAc3rB,OAAO0rB,IAOnCxE,EAAA1yB,UAAAm0B,aAAY,SAAC+G,OAAb56B,EAAAR,KACQwF,EAAIxF,KAAQsT,UACZxU,EAAIkB,KAAQ04B,UACZiE,EAAkB38B,KAAQ00B,YAE5BvyB,EAAa,aACJK,IAATgD,GAAkBo3B,EAAAC,QAAYr3B,IAAS1G,GAAQA,EAAKg+B,QAAK,KACrD/B,EAAYj8B,EAAKi+B,SAAQ/8B,KACxB00B,YAAW10B,KAAQ00B,YAAYqG,eAAYv4B,GAE5Ca,EAAYvE,EAAKwe,WACvBnb,EAAU,CACRs5B,SAAS,EACTn2B,2BAA0BtF,KAAOu0B,4BACjCyI,cAAe,KACfhpB,OAAMrN,EAAAsM,kBACJ5P,EAAUrE,OACVqE,EAAUoC,WACVpC,EAAUqC,SACVF,GAEF2G,MAAKnM,KAAOy0B,cACZ/wB,WAAY,EACZT,iBAAgBjD,KAAOk3B,gBAAgBja,sBACvCgX,WAAUj0B,KAAOg0B,YACjBzuB,2BAA0BvF,KAAOw0B,4BACjCxsB,oBAAmB,GACnBxC,KAAMA,EACNm1B,UAAS36B,KAAO61B,WAChBuF,KAAMA,EACN6B,UAAS,GACT55B,UAAWA,EACX03B,UAAWA,EACXmC,YAAW,YAIVxI,YAAcvyB,OACdma,UAAUzZ,YAAYV,GAEvBA,EAAU,IACRA,EAAWs5B,SAAOz7B,KACfgE,SAEP6F,MAAM3J,UAAU+D,KAAK+F,MAAKhK,KACnB41B,qBACLzzB,EAAW6F,qBAGT20B,IACa38B,KACP20B,kBAAehuB,EAAA+M,QAAA1T,KACN20B,mBAAehuB,EAAAoD,OACpB5H,EAAW6R,OAAMhU,KAAO20B,yBAE7BlyB,cAAa,IAAA06B,EAAA5gC,QAAA6gC,EAAA7gC,QACU8gC,UAASr9B,KAAQ28B,SAExChI,gBAAehuB,EAAAoL,oBAAA/R,KAA4B20B,kBAI1C30B,KACH20B,kBACJxyB,EAAW44B,UAASC,EAAAz+B,QAAU0+B,aAC9B94B,EAAW44B,UAASC,EAAAz+B,QAAU2+B,eAAWv0B,EAAAoD,OAClC5H,EAAW6R,OAAMhU,KAAO20B,wBAG3BlyB,cAAa,IAAA06B,EAAA5gC,QAAA6gC,EAAA7gC,QACU+gC,QAAOt9B,KAAQmC,YAErCA,EAAW6R,OAAMhU,KAAO20B,uBAI7BlyB,cAAa,IAAA06B,EAAA5gC,QAAA6gC,EAAA7gC,QAA2BmpB,WAAU1lB,KAAQmC,SAErD+xB,2BAAwBl0B,KAC3Bk0B,yBAA2BqJ,YAAU,WACxC/8B,EAAK0zB,8BAA2B1xB,EAChChC,EAAKk6B,qBACJ,KAUP9H,EAAA1yB,UAAAs9B,cAAa,SAACvK,QACP1lB,IAAG6lB,EAAA72B,QAAa82B,WAAYJ,IASnCL,EAAA1yB,UAAA2Y,QAAO,SAACrT,QACD+H,IAAG6lB,EAAA72B,QAAa45B,KAAM3wB,IAU7BotB,EAAA1yB,UAAAo3B,UAAS,SAACz4B,QACH0O,IAAG6lB,EAAA72B,QAAa+2B,OAAQz0B,IAS/B+zB,EAAA1yB,UAAAu9B,QAAO,SAAC3+B,QACDyO,IAAG6lB,EAAA72B,QAAag3B,KAAMz0B,IAQ7B8zB,EAAA1yB,UAAA47B,WAAU,eACFvC,EAAav5B,KAAQy4B,mBAEvBjzB,OAAOhD,KACP+2B,EAAa,KACTmE,EAAgBhkB,iBAAiB6f,GACjC56B,EACJ46B,EAAc5H,YACdgM,WAAWD,EAA+B,iBAC1CC,WAAWD,EAA2B,aACtCC,WAAWD,EAA4B,cACvCC,WAAWD,EAAgC,kBACvCp8B,EACJi4B,EAActL,aACd0P,WAAWD,EAA8B,gBACzCC,WAAWD,EAA0B,YACrCC,WAAWD,EAA6B,eACxCC,WAAWD,EAAiC,mBACzClQ,MAAM7uB,IAAW6uB,MAAMlsB,KAC1BkE,EAAI,CAAI7G,EAAO2C,aACFkE,IAEX0mB,QAAQC,KAAI,2EAObtT,QAAQrT,QACR02B,uBAOPtJ,EAAA1yB,UAAAg8B,oBAAmB,eACXp9B,EAAIkB,KAAQ04B,aACd55B,EAAI,KACF0G,OAAOhD,EACLk7B,EAAgBhkB,iBAAgB1Z,KAAM+0B,WACxC2I,EAAc/+B,OAAS++B,EAAcp8B,SACvCkE,EAAI,CACF2U,SAASujB,EAAc/+B,MAAO,IAC9Bwb,SAASujB,EAAcp8B,OAAQ,MAGnCxC,EAAK8+B,gBAAgBp4B,KAG3BotB,EAt3CA,sBA28CeD,43BCjlDZ,MAAAjiB,EAAAzV,EAAA,6nBAUG4iC,EACE,SAQRC,EAAA,SAAAz+B,GAKK,SACH0+B,EAAY77B,EAAM87B,EAAaC,OAA/Bz9B,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKuD,QAAUi6B,EAOfx9B,EAAK2L,MAAQ8xB,WArBoBh+B,EAAA89B,EAAA1+B,GAuBrC0+B,EAvBA,YA4CAG,EAAA,SAAA7+B,GAIK,SACH8+B,EAAYphB,EAAWya,OAAvBh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAW,MAM3Bh3B,EAAK49B,UAAYjhC,EAAQkhC,OAMzB79B,EAAK89B,OAASvhB,GAAqB,GAE/Bvc,EAAK49B,QAAO,IAAA,IACLziC,EAAI,EAAG6H,EAAKhD,EAAK89B,OAAO1iC,OAAQD,EAAI6H,IAAM7H,EACjD6E,EAAK+9B,cAAc/9B,EAAK89B,OAAO3iC,GAAIA,UAIvC6E,EAAKg+B,yBA5BgBv+B,EAAAk+B,EAAA9+B,GAmCvB8+B,EAAAj+B,UAAAuY,MAAK,qBACSgmB,YAAc,GAACz+B,KACpB0+B,OAWTP,EAAAj+B,UAAAqL,OAAM,SAACV,WACIlP,EAAI,EAAG6H,EAAKqH,EAAIjP,OAAQD,EAAI6H,IAAM7H,EAACqE,KACrCiE,KAAK4G,EAAIlP,iBAYlBwiC,EAAAj+B,UAAAqH,QAAO,SAACgI,WACAyN,EAAKhd,KAAQs+B,OACV3iC,EAAI,EAAG6H,EAAKwZ,EAAMphB,OAAQD,EAAI6H,IAAM7H,EAC3C4T,EAAEyN,EAAMrhB,GAAIA,EAAGqhB,IAYnBmhB,EAAAj+B,UAAAwzB,SAAQ,uBACM4K,QASdH,EAAAj+B,UAAAy+B,KAAI,SAACxyB,eACSmyB,OAAOnyB,IASrBgyB,EAAAj+B,UAAAu+B,UAAS,uBACKtiC,IAAI0hC,IASlBM,EAAAj+B,UAAA0+B,SAAQ,SAACzyB,EAAO0yB,QACLT,SAAOp+B,KACTu+B,cAAcM,QAEhBP,OAAO3yB,OAAOQ,EAAO,EAAG0yB,QACxBL,qBACA/7B,cAAa,IACZq7B,EAAevH,EAAAh6B,QAAqBi6B,IAAKqI,EAAM1yB,KAUvDgyB,EAAAj+B,UAAAw+B,IAAG,uBACWI,SAAQ9+B,KAAMy+B,YAAc,IAS1CN,EAAAj+B,UAAA+D,KAAI,SAAC46B,QACMT,SAAOp+B,KACTu+B,cAAcM,OAEf3zB,EAAClL,KAAQy+B,wBACVG,SAAS1zB,EAAG2zB,QACLJ,aASdN,EAAAj+B,UAAAwL,OAAM,SAACmzB,WACCh0B,EAAG7K,KAAQs+B,OACR3iC,EAAI,EAAG6H,EAAKqH,EAAIjP,OAAQD,EAAI6H,IAAM7H,KACrCkP,EAAIlP,KAAOkjC,EAAI,OAAA7+B,KACL8+B,SAASnjC,IAa3BwiC,EAAAj+B,UAAA4+B,SAAQ,SAAC3yB,OACD4yB,EAAI/+B,KAAQs+B,OAAOnyB,eACpBmyB,OAAO3yB,OAAOQ,EAAO,QACrBqyB,qBACA/7B,cAAa,IACZq7B,EAAevH,EAAAh6B,QAAqBk6B,OAAQsI,EAAM5yB,IAEjD4yB,GASTZ,EAAAj+B,UAAA8+B,MAAK,SAAC7yB,EAAO0yB,OACL3zB,EAAClL,KAAQy+B,eACXtyB,EAAQjB,EAAC,MACFkzB,SAAOp+B,KACTu+B,cAAcM,EAAM1yB,OAErB4yB,EAAI/+B,KAAQs+B,OAAOnyB,QACpBmyB,OAAOnyB,GAAS0yB,OAChBp8B,cAAa,IACZq7B,EAAevH,EAAAh6B,QAAqBk6B,OAAQsI,EAAM5yB,SAEnD1J,cAAa,IACZq7B,EAAevH,EAAAh6B,QAAqBi6B,IAAKqI,EAAM1yB,iBAG5CnF,EAAIkE,EAAGlE,EAAImF,IAASnF,EAAChH,KACvB4+B,SAAS53B,OAAGxE,QAEdo8B,SAASzyB,EAAO0yB,KAOzBV,EAAAj+B,UAAAs+B,cAAa,gBACNjxB,IAAIswB,EAAe79B,KAAOs+B,OAAO1iC,SAQxCuiC,EAAAj+B,UAAAq+B,cAAa,SAACM,EAAMI,WACTtjC,EAAI,EAAG6H,EAAExD,KAAQs+B,OAAO1iC,OAAQD,EAAI6H,IAAM7H,UACxC2iC,OAAO3iC,KAAOkjC,GAAQljC,IAAMsjC,EAAU,MAAA,IAAApuB,EAAAtU,QACpB,KAIjC4hC,EA/NA,sBAiOeD,6RCrRb1H,IAAG,MAMHC,OAAM,iLCjBL,MAAA1a,EAAA9gB,EAAA,q1BAuCG4iC,EACE,SAWRqB,EAAA,SAAA7/B,GAGK,SACH8/B,EAAY3H,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAW,GACrBtb,EAAW3c,EAAAC,OAAA,GAAsCrC,UAChD+e,EAAY7f,WAEfA,EAASc,EAAQd,cAErBmE,EAAAnB,EAAAU,KAAAC,KAAMkc,IAAWlc,MAMZo/B,oBAAmB,GAMxB5+B,EAAK6+B,cAAa,GAElB7+B,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAK8+B,sBAGHjjC,EACEwN,MAAM4B,QAAQpP,GAChBA,EAAM,IAAAo3B,EAAAl3B,QAAkBF,EAAOgK,QAAK,CAAKg4B,QAAQ,aAEA,mBAAhBhiC,EAAQq3B,SAA0B,IAGrEr3B,EAAM,IAAAo3B,EAAAl3B,aAAkBiG,EAAS,CAAG67B,QAAQ,IAG9C79B,EAAK++B,UAAUljC,YAxCM4D,EAAAk/B,EAAA9/B,GA8CvB8/B,EAAAj/B,UAAAs/B,mBAAkB,gBACXhiB,WAMP2hB,EAAAj/B,UAAAo/B,qBAAoB,gBACbF,oBAAoB73B,QAAO7G,EAAAmiB,oBAC3Buc,oBAAoBxjC,OAAS,MAE5BS,EAAM2D,KAAQkzB,oBAMTp3B,UALNsjC,oBAAoBn7B,KAAIvD,EAAAC,OACpBtE,EAAMk6B,EAAAh6B,QAAsBi6B,IAAGx2B,KAAOy/B,iBAAgBz/B,MAAAU,EAAAC,OACtDtE,EAAMk6B,EAAAh6B,QAAsBk6B,OAAMz2B,KAAO0/B,oBAAmB1/B,OAGxDA,KAASq/B,cAAar/B,KAC5Bq/B,cAAcvjC,GAAIyL,QAAO7G,EAAAmiB,4BAErBwc,uBAELM,EAActjC,EAAOq3B,WAClB/3B,EAAI,EAAG6H,EAAKm8B,EAAY/jC,OAAQD,EAAI6H,EAAI7H,IAAC,KAC1C2B,EAAQqiC,EAAYhkC,QACrB0jC,cAAavuB,EAAA/D,OAAQzP,IAAK,UAE3BA,EAAKwD,EAAAvE,QACWwE,eAAcf,KACzBw/B,mBAAkBx/B,eAGlB1C,EAAKyF,EAAAxG,QAAYkhB,OAAMzd,KAAOw/B,mBAAkBx/B,YAItDwd,WAOP2hB,EAAAj/B,UAAAu/B,iBAAgB,SAACG,OACTtiC,EAAoDsiC,EAAgB77B,aACrEs7B,cAAavuB,EAAA/D,OAAQzP,IAAK,UAE3BA,EAAKwD,EAAAvE,QACWwE,eAAcf,KACzBw/B,mBAAkBx/B,eAGlB1C,EAAKyF,EAAAxG,QAAYkhB,OAAMzd,KAAOw/B,mBAAkBx/B,YAEpDwd,WAOP2hB,EAAAj/B,UAAAw/B,oBAAmB,SAACE,OACZtiC,EAAoDsiC,EAAgB77B,QACpE+E,EAAGgI,EAAA/D,OAAUzP,QACd+hC,cAAcv2B,GAAKvB,QAAO7G,EAAAmiB,2BACnBwc,cAAcv2B,QACrB0U,WAWP2hB,EAAAj/B,UAAAgzB,UAAS,uBACsF/2B,IAC3F0hC,IAYJsB,EAAAj/B,UAAAq/B,UAAS,SAACljC,QACHkR,IAAIswB,EAAiBxhC,IAO5B8iC,EAAAj/B,UAAA4c,eAAc,SAACC,OACPC,OAAsBxa,IAAdua,EAA0BA,EAAS,eAC5CmW,YAAY3rB,SAAO,SAAWjK,GACjCA,EAAMwf,eAAeE,MAEhBA,GAOTmiB,EAAAj/B,UAAA+c,oBAAmB,SAACC,OACZC,OAAwB3a,IAAf0a,EAA2BA,EAAU,GAE9C2iB,EAAM1iB,EAAOvhB,YAEds3B,YAAY3rB,SAAO,SAAWjK,GACjCA,EAAM2f,oBAAoBE,cAGtB2iB,EAAa9/B,KAAQod,gBAClBzhB,EAAIkkC,EAAKr8B,EAAK2Z,EAAOvhB,OAAQD,EAAI6H,EAAI7H,IAAC,KACvC8H,EAAa0Z,EAAOxhB,GAC1B8H,EAAWgb,SAAWqhB,EAAcrhB,QACpChb,EAAWua,QAAUva,EAAWua,SAAW8hB,EAAc9hB,QACzDva,EAAWya,cAAgBtO,KAAK2F,IAC9B9R,EAAWya,cACX4hB,EAAc5hB,eAEhBza,EAAWwa,cAAgBrO,KAAK4F,IAC9B/R,EAAWwa,cACX6hB,EAAc7hB,eAEhBxa,EAAW0a,QAAUvO,KAAK4F,IAAI/R,EAAW0a,QAAS2hB,EAAc3hB,SAChE1a,EAAW2a,QAAUxO,KAAK2F,IAAI9R,EAAW2a,QAAS0hB,EAAc1hB,cACnC5b,IAAzBs9B,EAAc9rB,cACUxR,IAAtBiB,EAAWuQ,OACbvQ,EAAWuQ,OAAMrN,EAAAyM,gBACf3P,EAAWuQ,OACX8rB,EAAc9rB,QAGhBvQ,EAAWuQ,OAAS8rB,EAAc9rB,eAKjCmJ,GAMTgiB,EAAAj/B,UAAAmd,eAAc,4BACOxZ,OAEvBs7B,EA1MA,sBA4MeD,geC/PZ,MAAAa,EAAA9kC,EAAA,yeASH+kC,EAAA,SAAA3gC,GAOK,SACH4gC,EAAY/9B,EAAM3B,EAAK05B,EAAeiG,EAAc5W,OAApD9oB,EACEnB,EAAAU,KAAAC,KAAMkC,EAAM3B,EAAK+oB,IAActpB,YAQ/BQ,EAAKy5B,cAAgBA,EAMrBz5B,EAAK2/B,OAAS,KAMd3/B,EAAK4/B,YAAc,KASnB5/B,EAAK6/B,cAA4B79B,IAAjB09B,GAA6BA,WAtCnBjgC,EAAAggC,EAAA5gC,GA8C5B3D,OAAAgN,eAAIu3B,EAAA//B,UAAA,QAAK,4BACGigC,SAAMngC,KACTmgC,OAAMngC,KAAQO,IAAIw3B,cAAa/3B,KAAMi6B,qBAEhCkG,qBAEJ57B,QACH47B,OAAS57B,mCAShB7I,OAAAgN,eAAIu3B,EAAA//B,UAAA,aAAU,4BACFkgC,cAAWpgC,KACdogC,YAAWpgC,KAAQO,IAAIu3B,uBAAsB93B,KAAMuE,aAE9C67B,0BAECx6B,QACRw6B,YAAcx6B,mCAQrBq6B,EAAA//B,UAAAwhB,eAAc,WACZriB,EAAAa,UAAMwhB,eAAc3hB,KAAAC,yBACAA,KAASi6B,eACLj6B,KAAOi6B,cAAevY,kBAShDue,EAAA//B,UAAAuhB,gBAAe,WACbpiB,EAAAa,UAAMuhB,gBAAe1hB,KAAAC,0BACAA,KAASi6B,eACNj6B,KAAOi6B,cAAexY,mBAGlDwe,EA/FA,sBAiGeD,iMC1GZ,MAAAzf,EAAAtlB,EAAA,6eAQHqlC,EAAA,SAAAjhC,GAKK,SACHkhC,EAAYr+B,EAAM3B,EAAK+oB,OAAvB9oB,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKD,IAAMA,EAOXC,EAAK2B,gBAAgCK,IAAnB8mB,EAA+BA,EAAiB,cArB/CrpB,EAAAsgC,EAAAlhC,GAuBvBkhC,EAvBA,sBAyBeD,+6BCvBfE,EAAA,SAAAnhC,GAIK,SACHohC,EAAYlgC,EAAK+0B,OAAjB90B,EACEnB,EAAAU,KAAAC,KAAMO,IAAGP,KAOTQ,EAAK6E,KAAO9E,EAMZC,EAAKkgC,gBAMLlgC,EAAKmgC,gBAAiB,EAMtBngC,EAAKogC,WAAY,EAMjBpgC,EAAKqgC,kBAAiB,GAMtBrgC,EAAK60B,eAAiBC,EAClBA,EAAa7D,EAAA3B,mBAAA2B,EAAA3B,mBASjBtvB,EAAKsgC,MAAQ,SAEP/8B,EAAUvD,EAAK6E,KAAKzD,qBAM1BpB,EAAKugC,gBAAkB,EAMvBvgC,EAAKwgC,gBAAe,GAEpBxgC,EAAKU,SAAW6C,EAMhBvD,EAAKygC,wBAAuBvgC,EAAAC,OAC1BoD,EAAO8Z,EAAAthB,QACU29B,YACjB15B,EAAK0gC,mBACL1gC,GAOFA,EAAK2gC,0BAML3gC,EAAK4gC,oBAAmB1gC,EAAAC,OACtBoD,EAAO8Z,EAAAthB,QACU8kC,YACjB7gC,EAAK8gC,YACL9gC,GAMFA,EAAK+gC,sBAAwB/gC,EAAKghC,iBAAiBvgC,KAAKT,GAExDA,EAAKU,SAASsb,iBAAgBzZ,EAAAxG,QAClB4oB,UACV3kB,EAAK+gC,wBAAqB9P,EAAAxB,yBAAA,CACCW,SAAS,aA3GL3wB,EAAAwgC,EAAAphC,GAoHnCohC,EAAAvgC,UAAAuhC,cAAa,SAACC,OACRC,EAAQ,IAAA5H,EAAAx9B,QAAAs/B,EAAAt/B,QACUkoB,MAAKzkB,KACpBqF,KACLq8B,QAEGj/B,cAAck/B,QACUn/B,SAApBk+B,iBAEP3E,aAAY/7B,KAAM0gC,sBACbA,qBAAkBl+B,EACvBm/B,EAAQ,IAAA5H,EAAAx9B,QAAAs/B,EAAAt/B,QACcmoB,SAAQ1kB,KACvBqF,KACLq8B,QAEGj/B,cAAck/B,SAGdjB,gBAAkBnD,WACgB,gBAE9BmD,qBAAkBl+B,MACjBo/B,EAAQ,IAAA7H,EAAAx9B,QAAAs/B,EAAAt/B,QACQslC,YAAW7hC,KAC1BqF,KACLq8B,QAEGj/B,cAAcm/B,IACnB3gC,KAAIjB,MACN,MAYNygC,EAAAvgC,UAAA4hC,sBAAqB,SAACJ,OACdne,EAAQme,EAGZne,EAAMrhB,MAAI25B,EAAAt/B,QAAwBwlC,WAClCxe,EAAMrhB,MAAI25B,EAAAt/B,QAAwBylC,qBAAahiC,KAEnCghC,gBAAgBzd,EAAM0e,WACzB1e,EAAMrhB,MAAI25B,EAAAt/B,QAAwB29B,cAAWl6B,KACjDghC,gBAAgBzd,EAAM0e,YAAa,QAErClB,gBAAkBrlC,OAAOD,KAAIuE,KAAMghC,iBAAiBplC,QAQ3D6kC,EAAAvgC,UAAAgiC,iBAAgB,SAACR,QACVI,sBAAsBJ,OACrBC,EAAQ,IAAA5H,EAAAx9B,QAAAs/B,EAAAt/B,QACQwlC,UAAS/hC,KACxBqF,KACLq8B,QAEGj/B,cAAck/B,QASZhB,iBACJgB,EAAS7f,mBAAgB9hB,KACpB4gC,WAAS5gC,KACVmiC,qBAAqBT,IAAY1hC,KAEjCyhC,cAAazhC,KAAM8gC,OAGG,SAApBC,uBACFF,kBAAkBt5B,QAAO7G,EAAAmiB,oBACzBge,kBAAkBjlC,OAAS,OAC3BglC,WAAY,OACZE,MAAQ,OAUjBL,EAAAvgC,UAAAiiC,qBAAoB,SAACT,UACY,IAAxBA,EAAaU,QAQtB3B,EAAAvgC,UAAAghC,mBAAkB,SAACQ,QACZf,eAA0C,IAA5B3gC,KAAQ+gC,qBACtBe,sBAAsBJ,OACrBC,EAAQ,IAAA5H,EAAAx9B,QAAAs/B,EAAAt/B,QACQ29B,YAAWl6B,KAC1BqF,KACLq8B,WAEGj/B,cAAck/B,QAEdb,MAAK,IAAOuB,aAAaX,EAAax/B,KAAMw/B,GACjDhmC,OAAOgN,eAAc1I,KAAM8gC,MAAK,SAAU,CACxCwB,UAAU,EACV35B,MAAO+4B,EAAa7iC,SAGgB,SAA7BgiC,kBAAkBjlC,OAAY,KAC/Bu+B,EAAGn6B,KAAQqF,KAAKi0B,wBACjBuH,kBAAkB58B,KAAIvD,EAAAC,OAEvBw5B,EAAG0B,EAAAt/B,QACiB8kC,YAAWrhC,KAC1BuiC,mBAAkBviC,MAAAU,EAAAC,OAGlBw5B,EAAG0B,EAAAt/B,QAAsBwlC,UAAS/hC,KAAOkiC,iBAAgBliC,MAa7DU,EAAAC,OAAAX,KAEIkB,SAAQ26B,EAAAt/B,QACOylC,cAAahiC,KAC5BkiC,iBAAgBliC,YAIhBkB,SAASm5B,aAAWr6B,KAASkB,SAASm5B,gBAAkBF,GAAGn6B,KAC7D6gC,kBAAkB58B,KAAIvD,EAAAC,OAAAX,KAElBkB,SAASm5B,cAAWwB,EAAAt/B,QACLwlC,UAAS/hC,KACxBkiC,iBAAgBliC,SAa/BygC,EAAAvgC,UAAAqiC,mBAAkB,SAACb,WAIRc,UAAUd,GAAY,MACxBd,WAAY,MACXe,EAAQ,IAAA5H,EAAAx9B,QAAAs/B,EAAAt/B,QACQkmC,YAAWziC,KAC1BqF,KACLq8B,EAAY1hC,KACP4gC,gBAEFn+B,cAAck/B,KAWvBlB,EAAAvgC,UAAAohC,YAAW,SAACI,QACLP,0BAA4BO,MAC3BrB,KAAQrgC,KAAW8gC,QAAK9gC,KAASwiC,UAAUd,SAC5Cj/B,cAAa,IAAAs3B,EAAAx9B,QACImlC,EAAax/B,KAAIlC,KAAOqF,KAAMq8B,EAAcrB,KAYpEI,EAAAvgC,UAAAshC,iBAAgB,SAACje,OAGT0W,EAAaj6B,KAAQmhC,0BAEvBlH,IAAiBA,EAAcnY,kBACT,kBAAhByB,EAAMmf,aAAiD,IAArBnf,EAAMmf,YAEhDnf,EAAM7B,kBAUV+e,EAAAvgC,UAAAsiC,UAAS,SAACd,eAEDd,WACLhxB,KAAK0F,IAAIosB,EAAarJ,QAAOr4B,KAAQ8gC,MAAMzI,SAAOr4B,KAC3Cq1B,gBACPzlB,KAAK0F,IAAIosB,EAAapJ,QAAOt4B,KAAQ8gC,MAAMxI,SAAOt4B,KAASq1B,gBAO/DoL,EAAAvgC,UAAAwC,gBAAe,gBACJ0+B,2CACYA,0BACdA,oBAAsB,WAExBlgC,SAAS0hB,oBAAmB7f,EAAAxG,QACrB4oB,UAASnlB,KACduhC,4BAGEN,+CACYA,8BACdA,wBAA0B,WAG5BJ,kBAAkBt5B,QAAO7G,EAAAmiB,oBACzBge,kBAAkBjlC,OAAS,OAE3BsF,SAAW,KAChB7B,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAEzBygC,EA1XA,sBA4XeD,kXCtYZ,IAAAmC,EAAA1nC,EAAA,0DAcD4mC,YAAW,cAOXpd,MAAK1hB,EAAAxG,QAAYkoB,MAOjBC,SAAQ3hB,EAAAxG,QAAYmoB,SAOpB+d,YAAW,cAQXpB,YAAW,cAEXnH,YAAW,cACX6H,UAAS,YACTa,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZf,cAAa,2NC5CbX,YAAW,cACXnH,YAAW,cACX6H,UAAS,YACTa,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZf,cAAa,2LCHbtc,WAAU,aAOV2X,UAAS,YAOTC,QAAO,qLCnBPjK,WAAU,aACV8C,KAAI,OACJ7C,OAAM,SACNC,KAAI,+KCyHHrqB,EAAAF,OAAAzN,EAAA,mBAAA,IACaw6B,IAnIb,MAAA4M,EAAA1nC,EAAA,qlBASH+nC,EAAA,SAAA3jC,GAIK,SACH4jC,EAAYC,EAAsBC,OAAlC3iC,EACEnB,EAAAU,KAAAC,MAIK,SACO+D,UACDm/B,EAAqBl5B,MAAM,KAAMjG,MAKvC,SACOA,UAC2CA,EAAQ,GAAI6U,yBAKnEpY,EAAK4iC,uBAAyB5iC,EAAK6iC,iBAAiBpiC,KAAKT,GAMzDA,EAAK8iC,oBAAsBH,EAM3B3iC,EAAK+iC,cAAgB,EAMrB/iC,EAAKgjC,kBAAiB,YA1CFvjC,EAAAgjC,EAAA5jC,GAiDtB4jC,EAAA/iC,UAAAujC,QAAO,SAAC1/B,OACA2/B,EAAQrkC,EAAAa,UAAMujC,QAAO1jC,KAAAC,KAAC+D,GACxB2/B,GACW3/B,EAAQ,GAChByY,iBAAgBzZ,EAAAxG,QAAWkhB,OAAMzd,KAAOojC,+BAExCM,GAMTT,EAAA/iC,UAAAm7B,gBAAe,uBACDkI,eAOdN,EAAA/iC,UAAAmjC,iBAAgB,SAAC9f,OACTkW,EAAmDlW,EAAM1kB,OACzDwgB,EAAQoa,EAAKnc,cAEhBmc,EAAKkK,MAAQtkB,IAAKukB,EAAArnC,QAAesnC,QAClCxkB,IAAKukB,EAAArnC,QAAe8nB,OACpBhF,IAAKukB,EAAArnC,QAAeunC,MAAK,CAEzBrK,EAAK7W,oBAAmB7f,EAAAxG,QAAWkhB,OAAMzd,KAAOojC,4BAC1CW,EAAUtK,EAAK7gB,SACjBmrB,KAAO/jC,KAASwjC,gCACNA,kBAAkBO,UACvBR,oBAEJD,wBAQTL,EAAA/iC,UAAAq7B,cAAa,SAACX,EAAiBC,WAElBpB,EAAMsK,EADbC,EAAW,OAGRT,cAAgB3I,GACrBoJ,EAAWnJ,GAAW76B,KACjBikC,WAAa,GAGlBF,GADAtK,EAAIz5B,KAAoDkkC,UAAU,IACnDtrB,SACP6gB,EAAKnc,aACJsmB,EAAArnC,QAAe4nC,MAAUJ,KAAO/jC,KAASwjC,yBAC3CA,kBAAkBO,IAAW,SAC3BR,gBACLS,EACFvK,EAAK2K,SAIbnB,EA9GA,qBA0HgBlN,EACd5zB,EACAs3B,EACAC,EACAC,EACAC,OAIKz3B,KAAgBu3B,KAAiBv3B,EAAW+6B,aAAW,OAAAmH,EAAAxf,SAGvD1iB,EAAW+6B,YAAYxD,GAAeD,EAAK7gB,UAAM,OAAAyrB,EAAAxf,SAShD7lB,EAASmD,EAAWkB,UAAUrE,OAC9BgY,EAAS2iB,EAAW,GAAK36B,EAAO,GAChCiY,EAAS0iB,EAAW,GAAK36B,EAAO,UAEpC,MAAQ4Q,KAAKwL,IAAIwe,GACjBhqB,KAAK8W,KAAK1P,EAASA,EAASC,EAASA,GAAU2iB,YApCpCoJ,8RClHFne,IAPV,IAAA1W,EAAAlT,EAAA,kCAOU4pB,EAAO7P,EAAAA,EAcpBsvB,EAAA,WAIK,SACHC,EAAYC,EAAkBC,GAIzBzkC,KACE0kC,kBAAoBF,EAKtBxkC,KACE2kC,aAAeF,EAKjBzkC,KACE4kC,UAAS,GAKX5kC,KACE6kC,YAAW,GAKb7kC,KACE8kC,gBAAe,UAMtBP,EAAArkC,UAAAuY,MAAK,gBACEmsB,UAAUhpC,OAAS,OACnBipC,YAAYjpC,OAAS,eACfkpC,kBAObP,EAAArkC,UAAAgkC,QAAO,eACCa,EAAQ/kC,KAAQ4kC,UAChBI,EAAUhlC,KAAQ6kC,YAClB9gC,EAAUghC,EAAS,GACF,GAAnBA,EAASnpC,QACXmpC,EAASnpC,OAAS,EAClBopC,EAAWppC,OAAS,IAEpBmpC,EAAS,GAAKA,EAASrG,MACvBsG,EAAW,GAAKA,EAAWtG,WACtBuG,QAAQ,QAETC,EAAUllC,KAAQ2kC,aAAa5gC,sBACzB+gC,gBAAgBI,GACrBnhC,GAQTwgC,EAAArkC,UAAAujC,QAAO,SAAC1/B,mBACQ4gC,aAAa5gC,KAAO/D,KAAU8kC,iBAAkB,QACxDK,EAAQnlC,KAAQ0kC,kBAAkB3gC,UACpCohC,GAAYtgB,SACT+f,UAAU3gC,KAAKF,QACf8gC,YAAY5gC,KAAKkhC,QACjBL,gBAAe9kC,KAAM2kC,aAAa5gC,KAAY,OAC9CqhC,UAAU,EAACplC,KAAO4kC,UAAUhpC,OAAS,IACnC,IAQX2oC,EAAArkC,UAAA+jC,SAAQ,uBACMW,UAAUhpC,QASxB2oC,EAAArkC,UAAAmlC,mBAAkB,SAACl5B,UACF,EAARA,EAAY,GASrBo4B,EAAArkC,UAAAolC,oBAAmB,SAACn5B,UACH,EAARA,EAAY,GASrBo4B,EAAArkC,UAAAqlC,gBAAe,SAACp5B,UACNA,EAAQ,GAAM,GAOxBo4B,EAAArkC,UAAAslC,SAAQ,eACF7pC,MACCA,GAACqE,KAAS4kC,UAAUhpC,QAAU,GAAK,EAAGD,GAAK,EAAGA,IAACqE,KAC7CilC,QAAQtpC,IAOjB4oC,EAAArkC,UAAAwT,QAAO,kBAC4B,SAArBkxB,UAAUhpC,QAOxB2oC,EAAArkC,UAAAulC,YAAW,SAAC38B,UACHA,KAAG9I,KAAS8kC,iBAOrBP,EAAArkC,UAAAwlC,SAAQ,SAAC3hC,eACK0hC,YAAWzlC,KAAM2kC,aAAa5gC,KAO5CwgC,EAAArkC,UAAA+kC,QAAO,SAAC94B,WACA44B,EAAQ/kC,KAAQ4kC,UAChBI,EAAUhlC,KAAQ6kC,YAClBc,EAAQZ,EAASnpC,OACjBmI,EAAUghC,EAAS54B,GACnBg5B,EAAWH,EAAW74B,GACtBy5B,EAAaz5B,EAEZA,EAAQw5B,GAAS,GAAC,KACjBE,EAAM7lC,KAAQqlC,mBAAmBl5B,GACjC25B,EAAM9lC,KAAQslC,oBAAoBn5B,GAElC45B,EACJD,EAASH,GAASX,EAAWc,GAAUd,EAAWa,GAC9CC,EACAD,EAENd,EAAS54B,GAAS44B,EAASgB,GAC3Bf,EAAW74B,GAAS64B,EAAWe,GAC/B55B,EAAQ45B,EAGVhB,EAAS54B,GAASpI,EAClBihC,EAAW74B,GAASg5B,OACfC,UAAUQ,EAAYz5B,IAQ7Bo4B,EAAArkC,UAAAklC,UAAS,SAACQ,EAAYz5B,WACd44B,EAAQ/kC,KAAQ4kC,UAChBI,EAAUhlC,KAAQ6kC,YAClB9gC,EAAUghC,EAAS54B,GACnBg5B,EAAWH,EAAW74B,GAErBA,EAAQy5B,GAAU,KACjBI,EAAWhmC,KAAQulC,gBAAgBp5B,QACrC64B,EAAWgB,GAAeb,SAC5BJ,EAAS54B,GAAS44B,EAASiB,GAC3BhB,EAAW74B,GAAS64B,EAAWgB,GAC/B75B,EAAQ65B,EAKZjB,EAAS54B,GAASpI,EAClBihC,EAAW74B,GAASg5B,GAMtBZ,EAAArkC,UAAAo7B,aAAY,eAMNv3B,EAASpI,EAAGwpC,EALVX,EAAgBxkC,KAAQ0kC,kBACxBK,EAAQ/kC,KAAQ4kC,UAChBI,EAAUhlC,KAAQ6kC,YACpB14B,EAAQ,EACNjB,EAAI65B,EAASnpC,WAEdD,EAAI,EAAGA,EAAIuP,IAAKvP,GAEnBwpC,EAAWX,EADXzgC,EAAUghC,EAASppC,MAEHkpB,SAAI7kB,KACN8kC,gBAAe9kC,KAAM2kC,aAAa5gC,KAE9CihC,EAAW74B,GAASg5B,EACpBJ,EAAS54B,KAAWpI,GAGxBghC,EAASnpC,OAASuQ,EAClB64B,EAAWppC,OAASuQ,OACfq5B,YAETjB,EA5OA,aA8OeD,wNC7PbH,KAAM,EACNve,QAAS,EACTie,OAAQ,EAKRxf,MAAO,EACPyf,MAAO,0KC2xDN56B,EAAAF,OAAAzN,EAAA,0BAAA,IACa0qC,IAwBb/8B,EAAAF,OAAAzN,EAAA,8BAAA,IACa2qC,IA0Ibh9B,EAAAF,OAAAzN,EAAA,4BAAA,IACa4qC,IAuBbj9B,EAAAF,OAAAzN,EAAA,mBAAA,IACa6qC,IAt+Db,MAAA3pB,EAAAxhB,EAAA,+9BAgSHorC,EAAA,SAAAhnC,GAGK,SACHinC,EAAY9O,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAOoC,EAAAC,OAAA,GAAcg4B,UAM3Bh3B,EAAK+lC,OAAM,CAAI,EAAG,GAMlB/lC,EAAKgmC,YAAW,GAMhBhmC,EAAKimC,oBAOLjmC,EAAKkmC,YAAWzN,EAAA0N,iBAAoBxpC,EAAQQ,WAAU,aAMtD6C,EAAKomC,cAAa,CAAI,IAAK,KAM3BpmC,EAAKqmC,cAAgB,KAMrBrmC,EAAKsmC,kBAMLtmC,EAAKumC,gBAMLvmC,EAAKwmC,mBAAgBxkC,EAEjBrF,EAAQ6B,SACV7B,EAAQ6B,OAAMi6B,EAAAC,mBAAsB/7B,EAAQ6B,OAAQwB,EAAKkmC,cAEvDvpC,EAAQ6W,SACV7W,EAAQ6W,OAAMilB,EAAAgO,eAAkB9pC,EAAQ6W,OAAQxT,EAAKkmC,cAGvDlmC,EAAK0mC,cAAc/pC,YAvEJ8C,EAAAqmC,EAAAjnC,GA8EjBinC,EAAApmC,UAAAgnC,cAAa,SAAC/pC,GAGT,IAGGgqC,EAA2BjB,EAA2B/oC,GAKzD6C,KACEonC,eAAiBD,EAAyBjpB,cAK5Cle,KACEqnC,eAAiBF,EAAyBlpB,cAK5Cje,KACEsnC,YAAcH,EAAyBI,WAKzCvnC,KACEwnC,aAAerqC,EAAQsqC,YAKzBznC,KACE0nC,SAAWvqC,EAAQ2wB,QAKrB9tB,KACE2nC,SAAWR,EAAyBhpB,YAEnCypB,EAAmB3B,EAAuB9oC,GAC1C0qC,EAAuBV,EAAyBW,WAChDC,EAAqB5B,EAAyBhpC,GAKjD6C,KACEgoC,aAAY,CACfhpC,OAAQ4oC,EACRniC,WAAYoiC,EACZniC,SAAUqiC,QAGPE,iBAAiCzlC,IAArBrF,EAAQuI,SAAyBvI,EAAQuI,SAAW,QAChEwiC,uBACgB1lC,IAAnBrF,EAAQ6B,OAAuB7B,EAAQ6B,OAAS,WAEvBwD,IAAvBrF,EAAQsI,WAAwBzF,KAC7BmoC,cAAchrC,EAAQsI,iBACDjD,IAAjBrF,EAAQ+B,MAAkBc,KAC9BooC,QAAQjrC,EAAQ+B,WAGlB+f,cAhEW,IAqEbjf,KACEqoC,SAAWlrC,GAYlBzB,OAAAgN,eAAI49B,EAAApmC,UAAA,UAAO,4BACGwnC,uBAEF5Z,OACNwa,EAAUtoC,KAAQ0nC,cACjBA,SAAW5Z,MACV9uB,EAAMgB,KAAQ8S,eAChB9T,EAAM,KACFupC,EAAaza,GAAO,CAAK,EAAG,EAAG,EAAG,GACxCwa,EAAaA,GAAU,CAAK,EAAG,EAAG,EAAG,OAC/B7iC,EAAUzF,KAAQwoC,gBAClBha,EACH/oB,EAAa,GACb8iC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IACxD9Z,EACHhpB,EAAa,GACb8iC,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,SACzDL,kBAAiB,CAAElpC,EAAO,GAAKwvB,EAASxvB,EAAO,GAAKyvB,sCAY7D6X,EAAApmC,UAAAuoC,mBAAkB,SAACC,OACXvrC,EAAOoC,EAAAC,OAAA,QAAmB6oC,sBAGL7lC,IAAvBrF,EAAQsI,WACVtI,EAAQsI,WAAUzF,KAAQwoC,gBAE1BrrC,EAAQ+B,KAAIc,KAAQ2oC,UAItBxrC,EAAQ6B,OAAMgB,KAAQ4oC,oBAGtBzrC,EAAQuI,SAAQ1F,KAAQ6oC,0BAEN1rC,EAASurC,IAoC7BpC,EAAApmC,UAAAu7B,QAAO,SAACqN,QACGhM,UAAK98B,KAAY07B,gBAAY17B,KAC/B27B,mBAAmB,WAEpBoN,EAAI,IAAOl/B,MAAMC,UAAUlO,QACxBD,EAAI,EAAGA,EAAIotC,EAAKntC,SAAUD,EAAC,KAC9BwB,EAAU2M,UAAUnO,GACpBwB,EAAQ6B,UACV7B,EAAOoC,EAAAC,OAAA,GAAcrC,IACb6B,OAAMi6B,EAAAC,mBACZ/7B,EAAQ6B,OAAMgB,KACT24B,kBAGLx7B,EAAQ6rC,UACV7rC,EAAOoC,EAAAC,OAAA,GAAcrC,IACb6rC,OAAM/P,EAAAC,mBACZ/7B,EAAQ6rC,OAAMhpC,KACT24B,kBAGToQ,EAAKptC,GAAKwB,OAEP8rC,gBAAgBj/B,MAAKhK,KAAO+oC,IAMnCzC,EAAApmC,UAAA+oC,gBAAe,SAACH,OAEVrkC,EADAykC,EAAiBp/B,UAAUlO,UAG7BstC,EAAiB,GACkB,mBAA5Bp/B,UAAUo/B,EAAiB,KAElCzkC,EAAWqF,UAAUo/B,EAAiB,KACpCA,SAEMpM,QAAK,KAEPzd,EAAQvV,UAAUo/B,EAAiB,UACrC7pB,EAAMrgB,QAAMgB,KACTkoC,kBAAkB7oB,EAAMrgB,aAEZwD,IAAf6c,EAAMngB,MAAkBc,KACrBooC,QAAQ/oB,EAAMngB,WAEEsD,IAAnB6c,EAAM3Z,UAAsB1F,KACzBioC,YAAY5oB,EAAM3Z,eAErBjB,GACF0kC,EAAkB1kC,GAAU,YAI5ByS,EAAQ1Z,KAAK82B,MACbt1B,EAAMgB,KAAQ6mC,cAAcxgC,QAC5BZ,EAAUzF,KAAQ8mC,kBAClBphC,EAAQ1F,KAAQ+mC,gBACdqC,EAAM,GACHztC,EAAI,EAAGA,EAAIutC,IAAkBvtC,EAAC,KAC/BwB,EAA2C2M,UAAUnO,GAErD0tC,EAAS,CACbnyB,MAAOA,EACPoyB,UAAU,EACVN,OAAQ7rC,EAAQ6rC,OAChBO,cAA+B/mC,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAC9DC,OAAQrsC,EAAQqsC,QAAMC,EAAAC,SACtBjlC,SAAUA,MAGRtH,EAAQ6B,SACVqqC,EAAUM,aAAe3qC,EACzBqqC,EAAUO,aAAezsC,EAAQ6B,OAAOqH,QACxCrH,EAASqqC,EAAUO,mBAGApnC,IAAjBrF,EAAQ+B,MACVmqC,EAAUQ,iBAAmBpkC,EAC7B4jC,EAAUS,iBAAgB9pC,KAAQ+pC,qBAAqB5sC,EAAQ+B,MAC/DuG,EAAa4jC,EAAUS,kBACd3sC,EAAQsI,aACjB4jC,EAAUQ,iBAAmBpkC,EAC7B4jC,EAAUS,iBAAmB3sC,EAAQsI,WACrCA,EAAa4jC,EAAUS,uBAGAtnC,IAArBrF,EAAQuI,SAAsB,CAChC2jC,EAAUW,eAAiBtkC,MACrB6gB,EAAKhM,EAAAU,OACF9d,EAAQuI,SAAWA,EAAWkK,KAAKiM,GAAI,EAAIjM,KAAKiM,IAAMjM,KAAKiM,GACpEwtB,EAAUY,eAAiBvkC,EAAW6gB,EACtC7gB,EAAW2jC,EAAUY,eAInB7D,EAAgBiD,GAClBA,EAAUC,UAAW,EAGrBpyB,GAASmyB,EAAUE,SAErBH,EAAOnlC,KAAKolC,QAET7C,YAAYviC,KAAKmlC,QACjBc,QAAOlP,EAAAz+B,QAAU0+B,UAAW,QAC5BkP,qBAQP7D,EAAApmC,UAAAw7B,aAAY,uBACE6K,OAAMvL,EAAAz+B,QAAU0+B,WAAa,GAQ3CqL,EAAApmC,UAAAkqC,eAAc,uBACA7D,OAAMvL,EAAAz+B,QAAU2+B,aAAe,GAO7CoL,EAAApmC,UAAAmqC,iBAAgB,eAEVrB,OADCkB,QAAOlP,EAAAz+B,QAAU0+B,WAASj7B,KAAQumC,OAAMvL,EAAAz+B,QAAU0+B,oBAE9Ct/B,EAAI,EAAG6H,EAAExD,KAAQwmC,YAAY5qC,OAAQD,EAAI6H,IAAM7H,EAAC,KACjDytC,EAAMppC,KAAQwmC,YAAY7qC,MAC5BytC,EAAO,GAAG3kC,UACZ0kC,EAAkBC,EAAO,GAAG3kC,UAAU,IAEnCukC,EAAM,IAAA,IACAhiC,EAAI,EAAGsjC,EAAKlB,EAAOxtC,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KACvCqiC,EAAYD,EAAOpiC,OACpBqiC,EAAUC,SAAQ,CACrBN,EAASK,EAAUL,oBAMtBxC,YAAY5qC,OAAS,OACrBorC,cAAgBgC,GAMvB1C,EAAApmC,UAAAiqC,kBAAiB,mBACkB3nC,SAAxBikC,sBACPzK,qBAAoBh8B,KAAMymC,0BACrBA,yBAAsBjkC,QAEnBk5B,wBAGJpH,EAAM92B,KAAK82B,MACbiW,GAAO,EACF5uC,EAACqE,KAAQwmC,YAAY5qC,OAAS,EAAGD,GAAK,IAAKA,EAAC,SAC7CytC,EAAMppC,KAAQwmC,YAAY7qC,GAC5B6uC,GAAiB,EACZxjC,EAAI,EAAGsjC,EAAKlB,EAAOxtC,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KACvCqiC,EAAYD,EAAOpiC,OACrBqiC,EAAUC,cAGRmB,EAAUnW,EAAM+U,EAAUnyB,MAC5BwzB,EACFrB,EAAUE,SAAW,EAAIkB,EAAUpB,EAAUE,SAAW,EACtDmB,GAAY,GACdrB,EAAUC,UAAW,EACrBoB,EAAW,GAEXF,GAAiB,MAEbG,EAAWtB,EAAUG,OAAOkB,MAC9BrB,EAAUM,aAAY,KAClBpzB,EAAK8yB,EAAUM,aAAa,GAC5BhzB,EAAK0yB,EAAUM,aAAa,GAG5Bn6B,EAAI+G,EAAKo0B,GAFJtB,EAAUO,aAAa,GAEFrzB,GAC1B9G,EAAIkH,EAAKg0B,GAFJtB,EAAUO,aAAa,GAEFjzB,QAC3BkwB,cAAa,CAAIr3B,EAAGC,MAEvB45B,EAAUQ,kBAAoBR,EAAUS,iBAAgB,KACpDrkC,EACS,IAAbklC,EACItB,EAAUS,iBACVT,EAAUQ,iBACVc,GACGtB,EAAUS,iBAAmBT,EAAUQ,qBAC5CR,EAAUL,OAAM,KACZxjC,EAAIxF,KAAQ4qC,iBAAgB5qC,KAAM6oC,eAClCgC,EAAqB7qC,KAAQgoC,aAAaviC,WAC9CA,EACA,EACAD,GACA,QAEGqhC,cAAa7mC,KAAQ8qC,oBACxBD,EACAxB,EAAUL,aAGTlC,kBAAoBrhC,OACpBslC,mBAAkB,WAGMvoC,IAA7B6mC,EAAUW,qBACmBxnC,IAA7B6mC,EAAUY,eAA4B,KAEhCvkC,EACS,IAAbilC,EAAcpwB,EAAAU,OACHouB,EAAUY,eAAiBr6B,KAAKiM,GAAI,EAAIjM,KAAKiM,IACpDjM,KAAKiM,GACLwtB,EAAUW,eACVW,GACGtB,EAAUY,eAAiBZ,EAAUW,mBAC1CX,EAAUL,OAAM,KACZgC,EAAmBhrC,KAAQgoC,aAAatiC,SAC5CA,GACA,QAEGmhC,cAAa7mC,KAAQirC,sBACxBD,EACA3B,EAAUL,aAGTjC,gBAAkBrhC,UAEpBqlC,mBAAkB,GACvBR,GAAO,GACFlB,EAAUC,SAAQ,UAIrBkB,EAAc,MACXhE,YAAY7qC,GAAK,UACjBuuC,QAAOlP,EAAAz+B,QAAU0+B,WAAW,OAC3Bx2B,EAAW2kC,EAAO,GAAG3kC,SACvBA,GACF0kC,EAAkB1kC,GAAU,SAK7B+hC,YAAWxmC,KAAQwmC,YAAY0E,OAAOC,SACvCZ,QAAqC/nC,IAAjCxC,KAASymC,sBAAiCzmC,KAC3CymC,oBAAsBnK,sBAAqBt8B,KACzCmqC,kBAAkBlpC,KAAIjB,UAUjCsmC,EAAApmC,UAAA+qC,sBAAqB,SAACvlC,EAAUsjC,OAC1BhqC,EACEosC,EAAaprC,KAAQ4oC,gCACLpmC,IAAlB4oC,IACFpsC,EAAM,CAAIosC,EAAc,GAAKpC,EAAO,GAAIoC,EAAc,GAAKpC,EAAO,aACjDhqC,EAAQ0G,EAAQ1F,KAAQ6oC,qBAC3B7pC,EAAQgqC,IAEjBhqC,GAQTsnC,EAAApmC,UAAA4qC,oBAAmB,SAACrlC,EAAYujC,OAC1BhqC,EACEosC,EAAaprC,KAAQ4oC,oBACrByC,EAAiBrrC,KAAQwoC,qBACThmC,IAAlB4oC,QAAqD5oC,IAAtB6oC,IAOjCrsC,EAAM,CALJgqC,EAAO,GACNvjC,GAAcujC,EAAO,GAAKoC,EAAc,IAAOC,EAEhDrC,EAAO,GACNvjC,GAAcujC,EAAO,GAAKoC,EAAc,IAAOC,WAG7CrsC,GASTsnC,EAAApmC,UAAA0qC,iBAAgB,SAACU,OACT9lC,EAAIxF,KAAQ4mC,iBACd0E,EAAY,KACRzc,EAAIrpB,EAAK,GACTspB,EAAItpB,EAAK,UAEboK,KAAK0F,IAAIuZ,EAAIjf,KAAKD,IAAI27B,IACpB17B,KAAK0F,IAAIwZ,EAAIlf,KAAKC,IAAIy7B,IACxB17B,KAAK0F,IAAIuZ,EAAIjf,KAAKC,IAAIy7B,IACpB17B,KAAK0F,IAAIwZ,EAAIlf,KAAKD,IAAI27B,YAGnB9lC,GAWX8gC,EAAApmC,UAAA09B,gBAAe,SAAC2N,QACT3E,cAAgB/8B,MAAM4B,QAAQ8/B,GAC/BA,EAASllC,QAAK,CACb,IAAK,UACAq1B,gBAAY17B,KACf27B,mBAAmB,IAU5B2K,EAAApmC,UAAA4S,UAAS,eACD9T,EAAMgB,KAAQ4oC,2BACf5pC,qBAGmBA,EAAMgB,KAAO24B,iBAF5B35B,GASXsnC,EAAApmC,UAAA0oC,kBAAiB,uBAC4DzsC,IAAGqvC,EAAAjvC,QAC/DkvC,SAOjBnF,EAAApmC,UAAAwrC,eAAc,uBACA1D,cAMd1B,EAAApmC,UAAAyrC,uBAAsB,uBACRtD,SAASuD,qBAOvBtF,EAAApmC,UAAA68B,SAAQ,SAAC8O,eACWrpC,IAAdqpC,GACFA,EAAU,GAAC7rC,KAASumC,OAAO,GAC3BsF,EAAU,GAAC7rC,KAASumC,OAAO,GACpBsF,QAEKtF,OAAOlgC,SAcvBigC,EAAApmC,UAAA4rC,gBAAe,SAACP,OACRv3B,EAAMhU,KAAQ+rC,wBAAwBR,yBACxBv3B,EAAMhU,KAAO24B,kBAQnC2N,EAAApmC,UAAA6rC,wBAAuB,SAACR,OAChB/lC,EAAO+lC,GAAQvrC,KAASgsC,+BACxBhtC,EAAMgB,KAA8D4oC,6BACnE5pC,EAAQ,OACTyG,EAAUzF,KAAgCwoC,8BAC1BhmC,IAAfiD,EAA0B,OAC3BC,EAAQ1F,KAAgC6oC,mCAC1BrmC,IAAbkD,EAAwB,uBAEN1G,EAAQyG,EAAYC,EAAUF,IAQzD8gC,EAAApmC,UAAAwf,iBAAgB,uBACF0nB,gBAQdd,EAAApmC,UAAAyf,iBAAgB,uBACF0nB,gBAQdf,EAAApmC,UAAA2f,WAAU,uBAC2BosB,qBAAoBjsC,KAChDqnC,iBASTf,EAAApmC,UAAA+f,WAAU,SAAC/gB,QACJgoC,cAAalnC,KAAMyoC,mBAAkB,CAAErqB,QAASlf,MAQvDonC,EAAApmC,UAAA0f,WAAU,uBAC2BqsB,qBAAoBjsC,KAChDonC,iBASTd,EAAApmC,UAAAggB,WAAU,SAAChhB,QACJgoC,cAAalnC,KAAMyoC,mBAAkB,CAAEtqB,QAASjf,MAQvDonC,EAAApmC,UAAAgsC,uBAAsB,SAACC,QAChBjF,cAAalnC,KAAMyoC,mBAAkB,CAAEmD,oBAAqBO,MAQnE7F,EAAApmC,UAAAy4B,cAAa,uBACC+N,aASdJ,EAAApmC,UAAAsoC,cAAa,uBACkCrsC,IAAGqvC,EAAAjvC,QAAc6vC,aAShE9F,EAAApmC,UAAAmsC,eAAc,uBACA7E,cAWdlB,EAAApmC,UAAAosC,uBAAsB,SAACt4B,EAAQu3B,eACjBgB,+BAA8BtT,EAAAgO,eACzBjzB,EAAMhU,KAAO24B,iBAC5B4S,IAWJjF,EAAApmC,UAAAqsC,+BAA8B,SAACv4B,EAAQu3B,OAC/B/lC,EAAO+lC,GAAQvrC,KAAS4qC,mBACxB4B,EAAW7lC,EAAAC,SAAYoN,GAAUxO,EAAK,GACtCinC,EAAW9lC,EAAAuM,UAAac,GAAUxO,EAAK,UACtCoK,KAAK4F,IAAIg3B,EAAaC,IAS/BnG,EAAApmC,UAAAwsC,8BAA6B,SAACC,OACtBC,EAAQD,GAAa,EACrBzuB,EAAale,KAAQ6sC,yBAAwB7sC,KAAMonC,gBACnDnpB,EAAaje,KAAQqnC,eACrB7xB,EAAM5F,KAAKwL,IAAI8C,EAAgBD,GAAiBrO,KAAKwL,IAAIwxB,mBAMnDjkC,UACWuV,EAAgBtO,KAAKuX,IAAIylB,EAAOjkC,EAAQ6M,KAYjE8wB,EAAApmC,UAAA2oC,YAAW,uBAC0B1sC,IAAGqvC,EAAAjvC,QAAcuwC,WAStDxG,EAAApmC,UAAA6sC,8BAA6B,SAACJ,OACtBK,EAAWp9B,KAAKwL,IAAIuxB,GAAa,GACjCzuB,EAAale,KAAQ6sC,yBAAwB7sC,KAAMonC,gBACnDnpB,EAAaje,KAAQqnC,eACrB7xB,EAAM5F,KAAKwL,IAAI8C,EAAgBD,GAAiB+uB,kBAM1CvnC,UACMmK,KAAKwL,IAAI8C,EAAgBzY,GAAcunC,EAAWx3B,IAYtE8wB,EAAApmC,UAAA8rC,6BAA4B,SAACV,OACvB9lC,EAAIxF,KAAQ4qC,iBAAiBU,GAC3Bxd,EAAO9tB,KAAQ0nC,gBACjB5Z,IACFtoB,EAAI,CACFA,EAAK,GAAKsoB,EAAQ,GAAKA,EAAQ,GAC/BtoB,EAAK,GAAKsoB,EAAQ,GAAKA,EAAQ,KAG5BtoB,GAMT8gC,EAAApmC,UAAAod,SAAQ,eACA3f,EAAUqC,KAAQ24B,gBAClBlzB,EAAUzF,KAA+BwoC,gBACzC9iC,EAAQ1F,KAAQ6oC,cAClB7pC,EAAMgB,KAA6D4oC,oBACjE9a,EAAO9tB,KAAQ0nC,YACjB5Z,EAAO,KACHmf,EAAWjtC,KAAQgsC,+BACzBhtC,EAASkuC,EACPluC,EAAMgB,KACD4qC,mBAAgB,CACpBqC,EAAY,GAAK,EAAInf,EAAQ,GAAImf,EAAY,GAAK,EAAInf,EAAQ,IAC/DroB,EACAC,UAIF1G,OAAQA,EAAOqH,MAAM,GACrB1I,gBAA2B6E,IAAf7E,EAA2BA,EAAa,KACpD8H,WAAYA,EACZC,SAAUA,EACVxG,KAAIc,KAAO2oC,YAWfrC,EAAApmC,UAAAyoC,QAAO,eACDzpC,EACEuG,EAAUzF,KAAQwoC,4BACLhmC,IAAfiD,IACFvG,EAAIc,KAAQisC,qBAAqBxmC,IAE5BvG,GASTonC,EAAApmC,UAAA+rC,qBAAoB,SAACxmC,OAEf+P,EAAK+xB,EADLryB,EAAMlV,KAAQ2nC,UAAY,UAErBH,aAAY,KACb2F,EAAO7jC,EAAA0B,kBAAAhL,KAA0BwnC,aAAc/hC,EAAY,GACjEyP,EAASi4B,EACT33B,EAAGxV,KAAQwnC,aAAa2F,GAEtB5F,EADE4F,GAAOntC,KAASwnC,aAAa5rC,OAAS,EAC3B,EAEA4Z,EAAGxV,KAAQwnC,aAAa2F,EAAU,QAGjD33B,EAAGxV,KAAQonC,eACXG,EAAUvnC,KAAQsnC,mBAEbpyB,EAAStF,KAAKwL,IAAI5F,EAAM/P,GAAcmK,KAAKwL,IAAImsB,IASxDjB,EAAApmC,UAAA6pC,qBAAoB,SAAC7qC,WACVsoC,aAAY,SACVA,aAAa5rC,QAAU,EAAC,OACxB,MAEHwxC,EAAS7yB,EAAAC,MACb5K,KAAKqI,MAAM/Y,GACX,EAACc,KACIwnC,aAAa5rC,OAAS,GAEvB2rC,EAAUvnC,KACTwnC,aAAa4F,GAASptC,KAASwnC,aAAa4F,EAAY,eAExD5F,aAAa4F,GAClBx9B,KAAKuX,IAAIogB,EAAUhtB,EAAAC,MAAQtb,EAAOkuC,EAAW,EAAG,gBAI3ChG,eAAiBx3B,KAAKuX,IAAGnnB,KAAMsnC,YAAapoC,EAAIc,KAAQ2nC,WAenErB,EAAApmC,UAAAmtC,IAAG,SAACC,EAAkB9V,GACqC,IACrDtxB,cAEF2D,MAAM4B,QAAQ6hC,IACqD,mBAAvCA,EAAkBC,sBAE9C,IAEE1jC,MAAM4B,QAAQ6hC,GAAgB,qBAChBA,GAAmB,QAC7Bt5B,EAAMilB,EAAAgO,eAAkBqG,EAAgBttC,KAAO24B,iBACrDzyB,EAAQsnC,EAAAC,WAAqBz5B,WACpBs5B,EAAiBI,YAAOC,EAAApxC,QAAoBqxC,OAAM,CACrD55B,EAAMilB,EAAAgO,eACVqG,EAAiB7mC,YAASzG,KACrB24B,kBAEPzyB,EAAQsnC,EAAAC,WAAqBz5B,IACpBvG,OAAMzN,KAAM6oC,cAAWliC,EAAAmM,UAAckB,aAExC65B,EAAc5U,EAAA6U,oBAElB5nC,EADE2nC,EACoEP,EACnE/7B,QACAlD,UAAUw/B,EAAc7tC,KAAO24B,iBAEvB2U,OAIVS,YAAY7nC,EAAUsxB,IAO7B8O,EAAApmC,UAAA6tC,YAAW,SAAC7nC,EAAUsxB,OACdr6B,EAAUq6B,GAAW,GACvBhyB,EAAOrI,EAAQqI,KACdA,IACHA,EAAIxF,KAAQgsC,oCAKV/tB,EAHE6P,OACgBtrB,IAApBrF,EAAQ2wB,QAAwB3wB,EAAQ2wB,QAAO,CAAI,EAAG,EAAG,EAAG,GACxDqf,OAA8B3qC,IAApBrF,EAAQgwC,SAAwBhwC,EAAQgwC,QAGtDlvB,OAD4Bzb,IAA1BrF,EAAQ8gB,cACM9gB,EAAQ8gB,mBACKzb,IAApBrF,EAAQihB,QACJpe,KAAQ+pC,qBAAqB5sC,EAAQihB,SAElC,UAEZ4vB,EAAS9nC,EAAS+nC,qBAGlBvoC,EAAQ1F,KAAQ6oC,cAChB7gB,EAAWpY,KAAKD,KAAKjK,GACvBuiB,EAAWrY,KAAKC,KAAKnK,GACrBwoC,EAAUl5B,EAAAA,EACVm5B,EAAUn5B,EAAAA,EACVo5B,GAAWp5B,EAAAA,EACXq5B,GAAWr5B,EAAAA,EACTG,EAASjP,EAASooC,YACf3yC,EAAI,EAAG6H,EAAKwqC,EAAOpyC,OAAQD,EAAI6H,EAAI7H,GAAKwZ,EAAM,KAC/Co5B,EAAOP,EAAOryC,GAAKqsB,EAAWgmB,EAAOryC,EAAI,GAAKssB,EAC9CumB,EAAOR,EAAOryC,GAAKssB,EAAW+lB,EAAOryC,EAAI,GAAKqsB,EACpDkmB,EAAUt+B,KAAK2F,IAAI24B,EAASK,GAC5BJ,EAAUv+B,KAAK2F,IAAI44B,EAASK,GAC5BJ,EAAUx+B,KAAK4F,IAAI44B,EAASG,GAC5BF,EAAUz+B,KAAK4F,IAAI64B,EAASG,OAI1B/oC,EAAUzF,KAAQusC,+BAA8B,CACjD2B,EAASC,EAASC,EAASC,IAC3B7oC,EAAK,GAAKsoB,EAAQ,GAAKA,EAAQ,GAAItoB,EAAK,GAAKsoB,EAAQ,GAAKA,EAAQ,KAErEroB,EAAa+nB,MAAM/nB,GACfwY,EACArO,KAAK4F,IAAI/P,EAAYwY,GACzBxY,EAAUzF,KAAQ6sC,yBAAyBpnC,EAAY0nC,EAAU,EAAI,GAGrEllB,GAAYA,MACRwmB,GAAcP,EAAUE,GAAW,EACnCM,GAAcP,EAAUE,GAAW,EAGjCM,GAFNF,IAAgB3gB,EAAQ,GAAKA,EAAQ,IAAM,EAAKroB,GAEnBuiB,GAD7B0mB,IAAgB5gB,EAAQ,GAAKA,EAAQ,IAAM,EAAKroB,GACKwiB,EAC/C2mB,EAAUF,EAAa1mB,EAAWymB,EAAaxmB,EAC/CjpB,EAAMgB,KAAQ6uC,qBAAoB,CAAEF,EAASC,GAAUnpC,GACvDhB,EAAWtH,EAAQsH,SAAWtH,EAAQsH,SAAQoD,EAAAuB,UAE3B5G,IAArBrF,EAAQosC,SAAsBvpC,KAC3BipC,gBAAe,CAEhBxjC,WAAYA,EACZzG,OAAQA,EACRuqC,SAAUpsC,EAAQosC,SAClBC,OAAQrsC,EAAQqsC,QAElB/kC,SAGGqiC,kBAAoBrhC,OACpBohC,cAAgB7nC,OAChB+rC,mBAAkB,GAAO,GAC9B5B,EAAkB1kC,GAAU,KAWhC6hC,EAAApmC,UAAA4uC,SAAQ,SAAClpC,EAAYJ,EAAMnE,QACpB0tC,iBAAgB9V,EAAAC,mBACAtzB,EAAU5F,KAAO24B,iBACpCnzB,EACAnE,IASJilC,EAAApmC,UAAA6uC,iBAAgB,SAACnpC,EAAYJ,EAAMnE,QAC5B6mC,kBACHgF,EACEtnC,EACAJ,EACAnE,EAAQrB,KACHwoC,gBAAaxoC,KACb6oC,iBAaXvC,EAAApmC,UAAA8uC,qBAAoB,SAAChwC,EAAQyG,EAAYC,EAAUF,OAC7CypC,EACEnhB,EAAO9tB,KAAQ0nC,YACjB5Z,GAAW9uB,EAAM,KACbiuC,EAAWjtC,KAAQgsC,8BAA8BtmC,GACjDwpC,EAAgBhC,EACpBluC,EACAwG,EAAI,CACHynC,EAAY,GAAK,EAAInf,EAAQ,GAAImf,EAAY,GAAK,EAAInf,EAAQ,IAC/DroB,EACAC,GAEFupC,EAAW,CACTjwC,EAAO,GAAKkwC,EAAc,GAC1BlwC,EAAO,GAAKkwC,EAAc,WAGvBD,GAMT3I,EAAApmC,UAAA48B,MAAK,wBACW8L,0BAAgDpmC,IAA/BxC,KAAWwoC,iBAQ5ClC,EAAApmC,UAAAivC,aAAY,SAACC,OACLpwC,EAAMi6B,EAAAoW,iBAAArvC,KAAyB6mC,cAAa7mC,KAAO24B,sBACpD2W,UAAS,CACZtwC,EAAO,GAAKowC,EAAiB,GAC7BpwC,EAAO,GAAKowC,EAAiB,MAQjC9I,EAAApmC,UAAAqvC,qBAAoB,SAACH,OACbpwC,EAAMgB,KAAQ6mC,mBACfqB,kBAAiB,CACpBlpC,EAAO,GAAKowC,EAAiB,GAC7BpwC,EAAO,GAAKowC,EAAiB,MAWjC9I,EAAApmC,UAAAsvC,iBAAgB,SAACC,EAAOC,OAChB1G,EACJ0G,GAAUzW,EAAAC,mBAAuBwW,EAAU1vC,KAAO24B,sBAC/CgX,yBAAyBF,EAAOzG,IASvC1C,EAAApmC,UAAAyvC,yBAAwB,SAACF,EAAOC,OACxBE,EAAQ5vC,KAAQ07B,gBAAY17B,KAAWoqC,iBACvC5kC,EAAIxF,KAAQ4qC,iBAAgB5qC,KAAM6oC,eAClCgH,EAAa7vC,KAAQgoC,aAAaviC,WAAUzF,KAC3C8mC,kBAAoB2I,EACzB,EACAjqC,EACAoqC,GAGEF,IAAU1vC,KACP6mC,cAAa7mC,KAAQ8qC,oBAAoB+E,EAAeH,SAG1D5I,mBAAqB2I,OACrB1E,qBAUPzE,EAAApmC,UAAA4vC,WAAU,SAACvpB,EAAOmpB,QACXF,iBAAiB5/B,KAAKuX,IAAGnnB,KAAMsnC,aAAc/gB,GAAQmpB,IAU5DpJ,EAAApmC,UAAA6vC,eAAc,SAACxpB,EAAOmpB,GAChBA,IACFA,EAAUzW,EAAAC,mBAAsBwW,EAAU1vC,KAAO24B,uBAE9CqX,uBAAuBzpB,EAAOmpB,IAOrCpJ,EAAApmC,UAAA8vC,uBAAsB,SAACzpB,EAAOmpB,OACtBE,EAAQ5vC,KAAQ07B,gBAAY17B,KAAWoqC,iBACvC6F,EAAWjwC,KAAQgoC,aAAatiC,SAAQ1F,KACvC+mC,gBAAkBxgB,EACvBqpB,GAEEF,IAAU1vC,KACP6mC,cAAa7mC,KAAQirC,sBAAsBgF,EAAaP,SAE1D3I,iBAAmBxgB,OACnBwkB,qBASPzE,EAAApmC,UAAAovC,UAAS,SAACtwC,QACHkpC,kBAAiBjP,EAAAC,mBAAoBl6B,EAAMgB,KAAO24B,mBAOzD2N,EAAApmC,UAAAgoC,kBAAiB,SAAClpC,QACX6nC,cAAgB7nC,OAChB+rC,qBAQPzE,EAAApmC,UAAAgqC,QAAO,SAACgG,EAAM3pB,eACPggB,OAAO2J,IAAS3pB,OAChB/I,eACO+oB,OAAO2J,IASrB5J,EAAApmC,UAAAioC,cAAa,SAAC1iC,QACPqhC,kBAAoBrhC,OACpBslC,qBASPzE,EAAApmC,UAAA+nC,YAAW,SAACviC,QACLqhC,gBAAkBrhC,OAClBqlC,qBAQPzE,EAAApmC,UAAAkoC,QAAO,SAAClpC,QACDipC,cAAanoC,KAAM+pC,qBAAqB7qC,KAW/ConC,EAAApmC,UAAA6qC,kBAAiB,SAACoF,EAAsBC,OAChCR,EAAQ5vC,KACP07B,gBAAY17B,KAAWoqC,kBAAoBgG,EAG5CH,EAAWjwC,KAAQgoC,aAAatiC,SAAQ1F,KACvC+mC,gBACL6I,GAEIpqC,EAAIxF,KAAQ4qC,iBAAiBqF,GAC7BJ,EAAa7vC,KAAQgoC,aAAaviC,WAAUzF,KAC3C8mC,kBACL,EACAthC,EACAoqC,GAEIS,EAASrwC,KAAQgoC,aAAahpC,OAAMgB,KACnC6mC,cACLgJ,EACArqC,EACAoqC,EAAQ5vC,KACHgvC,qBAAoBhvC,KAClB6mC,cACLgJ,EACAI,EACAzqC,SAIKrJ,IAAGqvC,EAAAjvC,QAAcuwC,YAAcmD,GAAWjwC,KAC5CuN,IAAGi+B,EAAAjvC,QAAcuwC,SAAUmD,QAEzB9zC,IAAGqvC,EAAAjvC,QAAc6vC,cAAgByD,GAAa7vC,KAChDuN,IAAGi+B,EAAAjvC,QAAc6vC,WAAYyD,QAG5B1zC,IAAGqvC,EAAAjvC,QAAckvC,SAAMrlC,EAAA2D,OAAA/J,KAChB7D,IAAGqvC,EAAAjvC,QAAckvC,QAAS4E,IAASrwC,KAE3CuN,IAAGi+B,EAAAjvC,QAAckvC,OAAQ4E,QAGvB3U,iBAAmByU,GAAoBnwC,KACzCqqC,wBAEFrD,mBAAgBxkC,GAYvB8jC,EAAApmC,UAAAy7B,mBAAkB,SAAC2U,EAAcC,EAAyBb,OAClDnG,OAA4B/mC,IAAjB8tC,EAA6BA,EAAe,IACvDrlC,EAAYslC,GAA2B,EAEvCN,EAAWjwC,KAAQgoC,aAAatiC,SAAQ1F,KAAM+mC,iBAC9CvhC,EAAIxF,KAAQ4qC,iBAAiBqF,GAC7BJ,EAAa7vC,KAAQgoC,aAAaviC,WAAUzF,KAC3C8mC,kBACL77B,EACAzF,GAEI6qC,EAASrwC,KAAQgoC,aAAahpC,OAAMgB,KACnC6mC,cACLgJ,EACArqC,GACA,EAAKxF,KACAgvC,qBAAoBhvC,KAClB6mC,cACLgJ,EACAI,EACAzqC,OAIa,IAAb+jC,IAAcvpC,KAAUgnC,0BACrBF,kBAAoB+I,OACpB9I,gBAAkBkJ,OAClBpJ,cAAgBwJ,YAChBtF,wBAID/B,EACJ0G,IAA4B,IAAbnG,EAAcvpC,KAAQgnC,mBAAgBxkC,QAClDwkC,mBAAgBxkC,OAGdgmC,kBAAoBqH,GAAa7vC,KACjC6oC,gBAAkBoH,GAAWjwC,KAC5B4oC,qBAAiBxiC,EAAA2D,OAAA/J,KACV4oC,oBAAqByH,UAEzB3U,gBAAY17B,KACdqqC,wBAGFpB,gBAAe,CAClBvjC,SAAUuqC,EACVjxC,OAAQqxC,EACR5qC,WAAYoqC,EACZtG,SAAUA,EACVC,OAAMC,EAAA+G,QACNxH,OAAQA,MAWd1C,EAAApmC,UAAAuwC,iBAAgB,gBACT9U,mBAAmB,QAEnBuO,QAAOlP,EAAAz+B,QAAU2+B,YAAa,IAWrCoL,EAAApmC,UAAAwwC,eAAc,SAACJ,EAAcC,EAAyBb,OAC9C1G,EACJ0G,GAAUzW,EAAAC,mBAAuBwW,EAAU1vC,KAAO24B,sBAC/CgY,uBAAuBL,EAAcC,EAAyBvH,IAUrE1C,EAAApmC,UAAAywC,uBAAsB,SAACL,EAAcC,EAAyBb,QACvDxF,QAAOlP,EAAAz+B,QAAU2+B,aAAa,QAE9BS,mBAAmB2U,EAAcC,EAAyBb,IAUjEpJ,EAAApmC,UAAA2uC,qBAAoB,SAACjF,EAAcgH,OAC3BprC,EAAIxF,KAAQ4qC,iBAAgB5qC,KAAM6oC,2BAC5Bb,aAAahpC,OACvB4qC,EACAgH,GAAoB5wC,KAASwoC,gBAC7BhjC,IAaJ8gC,EAAApmC,UAAA2wC,mBAAkB,SAACC,EAAYC,OACvBC,EAAShxC,KAAQ+pC,qBAAqB+G,eAChC7E,qBAAoBjsC,KACzB6sC,yBAAyBmE,EAAWD,KAa7CzK,EAAApmC,UAAA2sC,yBAAwB,SAAC/C,EAAkBiH,OACnC9lC,EAAY8lC,GAAiB,EAC7BvrC,EAAIxF,KAAQ4qC,iBAAgB5qC,KAAM6oC,2BAE5Bb,aAAaviC,WAAWqkC,EAAkB7+B,EAAWzF,IAErE8gC,EA1/CA,YA+/CG,SACM6C,EAAkB1kC,EAAUwsC,GACnC1T,YAAU,WACR94B,EAASwsC,KACR,YAOWhL,EAAuB9oC,WACdqF,IAAnBrF,EAAQ6W,OAAoB,KACxBk9B,OAC+B1uC,IAAnCrF,EAAQg0C,wBACJh0C,EAAQg0C,6CAEMh0C,EAAQ6W,OAAQ7W,EAAQi0C,oBAAqBF,OAG7DvzC,EAAUs7B,EAAA0N,iBAAoBxpC,EAAQQ,WAAU,iBAC3B,IAAvBR,EAAQk0C,YAAuB1zC,EAAW2zC,WAAQ,KAC9Ct9B,EAASrW,EAAW8I,YAAYJ,eACtC2N,EAAO,IAAMgB,EAAAA,EACbhB,EAAO,GAAKgB,EAAAA,iBACQhB,GAAQ,GAAO,0BAWvBkyB,EAA2B/oC,OACrC0qC,EACA3pB,EACAD,EAOAE,OACkB3b,IAApBrF,EAAQghB,QAAwBhhB,EAAQghB,QAxnDnB,EA0nDnBC,OACkB5b,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,QAPnB,GASjBmpB,OACmB/kC,IAAvBrF,EAAQoqC,WAA2BpqC,EAAQoqC,WATnB,EAWpB8J,OACmB7uC,IAAvBrF,EAAQk0C,YAA2Bl0C,EAAQk0C,WAEvCH,OACmC1uC,IAAvCrF,EAAQo0C,4BACJp0C,EAAQo0C,2BAGRC,OACuBhvC,IAA3BrF,EAAQq0C,gBAA+Br0C,EAAQq0C,eAE3C7zC,EAAUs7B,EAAA0N,iBAAoBxpC,EAAQQ,WAAU,aAChD8zC,EAAa9zC,EAAW8I,YAC1B2qC,EAAsBj0C,EAAQi0C,oBAC9Bp9B,EAAS7W,EAAQ6W,UAChBq9B,GAAer9B,IAAUrW,EAAW2zC,aACvCF,GAAsB,EACtBp9B,EAASy9B,QAGiBjvC,IAAxBrF,EAAQsqC,YAAyB,KAC7BA,EAActqC,EAAQsqC,YAC5BvpB,EAAgBupB,EAAYtpB,GAC5BF,OAC2Bzb,IAAzBilC,EAAYrpB,GACRqpB,EAAYrpB,GACZqpB,EAAYA,EAAY7rC,OAAS,GAGrCisC,EADE1qC,EAAQyuC,oBACU8F,EAAAC,wBAClBlK,EACAyJ,GACCE,GAAuBp9B,EACxBw9B,GAGkBE,EAAAE,uBAClB1zB,EACAD,EACAizB,GACCE,GAAuBp9B,EACxBw9B,YAUEK,GALQJ,EAGV7hC,KAAK4F,IAAG7O,EAAAC,SAAU6qC,GAAU9qC,EAAAuM,UAAau+B,IADxC,IAAGxY,EAAA6Y,gBAAAC,EAAAx1C,QAAyBy1C,SAAYr0C,EAAWs0C,oBAIlDC,EAAAC,kBAAuBviC,KAAKuX,IA/DV,EArnDH,GAsrDfirB,EACJP,EACAjiC,KAAKuX,IAnEiB,EAmEMkrB,SAIR7vC,KADtB0b,EAAgB/gB,EAAQ+gB,eAEtBC,EAAU,EAEVD,EAAgB2zB,EAAuBjiC,KAAKuX,IAAIogB,EAAYppB,QAKxC3b,KADtByb,EAAgB9gB,EAAQ8gB,iBAIlBA,OAFoBzb,IAApBrF,EAAQihB,aACoB5b,IAA1BrF,EAAQ+gB,cACMA,EAAgBtO,KAAKuX,IAAIogB,EAAYnpB,GAErCyzB,EAAuBjiC,KAAKuX,IAAIogB,EAAYnpB,GAG9Cg0B,GAKpBh0B,EACED,EACAvO,KAAKqI,MACHrI,KAAKwL,IAAI8C,EAAgBD,GAAiBrO,KAAKwL,IAAImsB,IAEvDtpB,EAAgBC,EAAgBtO,KAAKuX,IAAIogB,EAAYnpB,EAAUD,GAG7D0pB,EADE1qC,EAAQyuC,oBACU8F,EAAAY,kBAClB/K,EACArpB,EACAD,EACAizB,GACCE,GAAuBp9B,EACxBw9B,GAGkBE,EAAAE,uBAClB1zB,EACAD,EACAizB,GACCE,GAAuBp9B,EACxBw9B,UAKJ1J,WAAYD,EACZ3pB,cAAeA,EACfD,cAAeA,EACfE,QAASA,EACTopB,WAAYA,YAQApB,EAAyBhpC,WAEVqF,IAA3BrF,EAAQo1C,gBAA+Bp1C,EAAQo1C,eAC/B,KACVC,EAAoBr1C,EAAQq1C,8BACRhwC,IAAtBgwC,IAAyD,IAAtBA,EAA0BC,EAAAC,oBAEhC,IAAtBF,EAA2BC,EAAAE,KAEH,iBAAjBH,EAA8BC,EAAAG,cACzBJ,oCAcXpM,EAAgBiD,WAC1BA,EAAUM,cAAgBN,EAAUO,wBAChBP,EAAUM,aAAcN,EAAUO,iBAItDP,EAAUQ,mBAAqBR,EAAUS,kBAGzCT,EAAUW,iBAAmBX,EAAUY,gBAa1C,SACMiD,EAAkBtnC,EAAYJ,EAAMnE,EAAUoE,EAAYC,OAE3DsiB,EAAWpY,KAAKD,KAAKjK,GACvBuiB,EAAWrY,KAAKC,KAAKnK,GACrB6oC,EAAO3oC,EAAW,GAAKoiB,EAAWpiB,EAAW,GAAKqiB,EAClDumB,EAAO5oC,EAAW,GAAKoiB,EAAWpiB,EAAW,GAAKqiB,UACtDsmB,IAAS/oC,EAAK,GAAK,EAAInE,EAAS,IAAMoE,GAKfuiB,GAJvBwmB,IAASntC,EAAS,GAAKmE,EAAK,GAAK,GAAKC,IAGtCwiB,GAAYA,GAEIumB,EAAOxmB,EAAWumB,EAAOtmB,aAK5Boe,wpBCrgEbwM,MAAK,QACLC,YAAW,aACXC,YAAW,aACXC,QAAO,UACPC,YAAW,aACXC,kBAAiB,kBACjBC,cAAa,eACbC,oBAAmB,qBACnBxF,OAAM,mNC6BKkE,IAxCV,IACGuB,EAAK,CAKTrB,QAAO,UAKPsB,KAAI,KAKJC,OAAM,IAKNC,OAAM,SAKNC,YAAW,cAKXC,OAAM,SASK5B,EAAe,GAE5BA,EAAgBuB,EAAMrB,SAAY,EAAIpiC,KAAKiM,GAAK,QAAW,IAC3Di2B,EAAgBuB,EAAMC,MAAQ,MAC9BxB,EAAgBuB,EAAME,QAAU,EAChCzB,EAAgBuB,EAAMK,QAAU,KAAO,eAExBL,4KC/CbpY,UAAW,EACXC,YAAa,6KCDbuQ,OAAM,SACNW,WAAU,aACVU,SAAQ,sNCFG6G,wCAMAxB,QANAwB,EAAmB,GAMnBxB,EAAoB,2KC+E9BjpC,EAAAF,OAAAzN,EAAA,mBAAA,IAAAq4C,EAAA9B,2DAYA5oC,EAAAF,OAAAzN,EAAA,kBAAA,IACas4C,IAkBb3qC,EAAAF,OAAAzN,EAAA,qBAAA,IACau4C,IAgBb5qC,EAAAF,OAAAzN,EAAA,iBAAA,IACaw4C,IAOb7qC,EAAAF,OAAAzN,EAAA,kBAAA,IACay4C,IAYb9qC,EAAAF,OAAAzN,EAAA,OAAA,IACaY,IAyBb+M,EAAAF,OAAAzN,EAAA,sBAAA,IACa04C,IA6Db/qC,EAAAF,OAAAzN,EAAA,4BAAA,IACa24C,IAuBbhrC,EAAAF,OAAAzN,EAAA,2BAAA,IACa44C,IAgBbjrC,EAAAF,OAAAzN,EAAA,uBAAA,IACa64C,IASblrC,EAAAF,OAAAzN,EAAA,oBAAA,IACaorC,IAgBbz9B,EAAAF,OAAAzN,EAAA,0CAAA,IACa84C,IA2CbnrC,EAAAF,OAAAzN,EAAA,2BAAA,IACa+4C,IAuBbprC,EAAAF,OAAAzN,EAAA,cAAA,IACa0D,IAgBbiK,EAAAF,OAAAzN,EAAA,YAAA,IACag5C,IAsBbrrC,EAAAF,OAAAzN,EAAA,cAAA,IACai5C,IAqBbtrC,EAAAF,OAAAzN,EAAA,+BAAA,IACak5C,IAsBbvrC,EAAAF,OAAAzN,EAAA,gBAAA,IACam5C,IAmBbxrC,EAAAF,OAAAzN,EAAA,aAAA,IACa8S,IAgBbnF,EAAAF,OAAAzN,EAAA,mBAAA,IACao5C,IAYbzrC,EAAAF,OAAAzN,EAAA,4BAAA,IACaq5C,IAsBb1rC,EAAAF,OAAAzN,EAAA,qBAAA,IACas5C,IAQb3rC,EAAAF,OAAAzN,EAAA,uBAAA,IACau5C,IASb5rC,EAAAF,OAAAzN,EAAA,qBAAA,IACauyC,IAQb5kC,EAAAF,OAAAzN,EAAA,iBAAA,IACaw5C,IAUb7rC,EAAAF,OAAAzN,EAAA,oBAAA,IACa8zC,IAabnmC,EAAAF,OAAAzN,EAAA,sBAAA,IACa29B,IAabhwB,EAAAF,OAAAzN,EAAA,gBAAA,IACay5C,IAab9rC,EAAAF,OAAAzN,EAAA,kBAAA,IACa0rC,IAgBb/9B,EAAAF,OAAAzN,EAAA,iCAAA,IACa05C,IA+Bb/rC,EAAAF,OAAAzN,EAAA,aAAA,IACa25C,IA7mBb,IAAAC,EAAAl6C,EAAA,+RAoDa44C,EAAeuB,EAAOC,EAAYC,OAC5CpxB,UACe1hB,IAAf6yC,EAAwB,SACjB15C,EAAI,EAAG6H,EAAK4xC,EAAMx5C,OAAQD,EAAI6H,IAAM7H,EAC3C05C,EAAW15C,GAAKy5C,EAAMz5C,GAExBuoB,EAASmxB,OAETnxB,EAASkxB,EAAM/uC,eAEV6d,WASO4vB,EAAkBsB,EAAOC,EAAYC,WAChC9yC,IAAf6yC,GAA4BD,IAAUC,EAAU,SACzC15C,EAAI,EAAG6H,EAAK4xC,EAAMx5C,OAAQD,EAAI6H,IAAM7H,EAC3C05C,EAAW15C,GAAKy5C,EAAMz5C,GAExBy5C,EAAQC,SAEHD,WAUOrB,EAAcp2C,SACpBA,EAAW43C,UAAW53C,SACbA,EAAYA,EAAYk2C,YAM3BG,EAAewB,GAC7BA,EAAYjuC,QAAQwsC,YAYN53C,EAAIs5C,SACU,iBAAdA,EAA2BC,EAAAv5C,IACNs5C,GACJA,GAAmB,cAuBpCxB,EAAmBt2C,EAAY8H,EAAYkwC,EAAOC,OAE5DC,EACEC,GAFNn4C,EAAaxB,EAAIwB,IAESo4C,4BACtBD,EAAM,IACRD,EAAkBC,EAAOrwC,EAAYkwC,GACjCC,GAAaA,IAAcj4C,EAAWq4C,YAClCC,EAAgBt4C,EAAWs0C,sBAE/B4D,EACGA,EAAkBI,EAAarC,EAAA9B,gBAAoB8D,aAIpDM,EAAQv4C,EAAWq4C,cACpBE,GAAKnE,EAAAx1C,QAAUy1C,UAAY4D,GAAcA,GAAS7D,EAAAx1C,QAAUy1C,QAC/D6D,EAAkBpwC,WA4BZwwC,EAvBAE,EAAa1B,EACjB92C,EACAxB,EAAG,iBAEDg6C,IAAerC,GAAqBoC,IAAKnE,EAAAx1C,QAAWy1C,QAEtD6D,EAAkBpwC,EAAa9H,EAAWs0C,4BAEtCmE,EAAQ,CACVT,EAAM,GAAKlwC,EAAa,EACxBkwC,EAAM,GACNA,EAAM,GAAKlwC,EAAa,EACxBkwC,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKlwC,EAAa,EACxBkwC,EAAM,GACNA,EAAM,GAAKlwC,EAAa,GAE1B2wC,EAAWD,EAAWC,EAAUA,EAAU,GAG1CP,GAFWQ,EAAAC,YAAeF,EAAS/vC,MAAM,EAAG,GAAI+vC,EAAS/vC,MAAM,EAAG,IACtDgwC,EAAAC,YAAeF,EAAS/vC,MAAM,EAAG,GAAI+vC,EAAS/vC,MAAM,EAAG,KAC9B,OAKjB7D,KAHhByzC,EAAgBL,EAAShC,EAAA9B,gBACX8D,GAChBj4C,EAAWs0C,sBAEb4D,GAAmBI,WAIlBJ,WAUO3B,EAAyBsB,GACvCxB,EAAewB,GACfA,EAAYjuC,SAAO,SAAW/K,GAC5Bg5C,EAAYjuC,SAAO,SAAWgvC,GACxB/5C,IAAW+5C,GAAWC,EAAA3wB,IACPrpB,EAAQ+5C,EAAa1C,kBAmB9BM,EACdsC,EACAC,EACAC,EACAC,GAEAH,EAAalvC,SAAO,SAAWsvC,GAC7BH,EAAanvC,SAAO,SAAWuvC,SACZD,EAAaC,EAAaH,SAC1BG,EAAaD,EAAaD,kBAQjCxC,iCAUAzN,EAAiBhpC,EAAYo5C,UACtCp5C,EAEuB,iBAAVA,EACTxB,EAAIwB,GAEuBA,EAJ3BxB,EAAI46C,YAeC1C,EAAuC2C,mBAQzC5B,EAAOC,EAAYC,WACrB15C,EAASw5C,EAAMx5C,OACfq7C,OAA8Bz0C,IAAlB8yC,EAA8BA,EAAgB,EAC1DpxB,OAAwB1hB,IAAf6yC,EAA2BA,EAAU,IAAOxrC,MAAMjO,GACxDD,EAAI,EAAGA,EAAIC,EAAQD,GAAKs7C,EAAS,KAClCtB,EAAQqB,EAAc,CAAE5B,EAAMz5C,GAAIy5C,EAAMz5C,EAAI,KAClDuoB,EAAOvoB,GAAKg6C,EAAM,GAClBzxB,EAAOvoB,EAAI,GAAKg6C,EAAM,WACb3uC,EAAIiwC,EAAY,EAAGjwC,GAAK,IAAKA,EACpCkd,EAAOvoB,EAAIqL,GAAKouC,EAAMz5C,EAAIqL,UAGvBkd,YAwBGowB,EAAwB93C,EAAQ+5C,EAAaW,EAASC,OAC9DC,EAAaj7C,EAAIK,GACjB66C,EAAWl7C,EAAIo6C,SAEnBa,EACAC,EACAhD,EAAuC6C,UAGvCG,EACAD,EACA/C,EAAuC8C,aAa3Bl4C,EAAW2G,EAAY0xC,UAC9BjpC,EACLzI,EAAU,iBAESpD,IAAnB80C,EAA+BA,EAAc,sBAajC/C,EAAS3uC,EAAY0xC,OAC7BC,EAASlpC,EACbzI,OACmBpD,IAAnB80C,EAA+BA,EAAc,YAAc,aAGvDE,EAAMD,EAAO,UACfC,GAAM,KAAQA,EAAM,OACtBD,EAAO,GAACh9B,EAAAU,OAAWu8B,EAAM,IAAK,KAAO,KAEhCD,WAaO/C,EAAWqC,EAAaC,MAClCD,IAAgBC,EAAW,OACtB,MAEHW,EAAaZ,EAAYb,aAAec,EAAYd,kBACtDa,EAAYtB,YAAcuB,EAAYvB,WAGlBd,EAA4BoC,EAAaC,KACtCjD,IAHlB4D,WAgBKhD,EACdiD,EACAC,OAEMC,EAAaF,EAAiBnC,UAC9BsC,EAAkBF,EAAsBpC,UAC1CuC,EAAatB,EAAAr6C,IAAoBy7C,EAAYC,UAC5CC,IACHA,EAAgBhE,GAEXgE,WAaOpD,EAAal4C,EAAQ+5C,UAG5B9B,EAFkBt4C,EAAIK,GACCL,EAAIo6C,aAkBpBloC,EAAUzI,EAAYpJ,EAAQ+5C,UACtB7B,EAAal4C,EAAQ+5C,EACpCuB,CAAclyC,OAAYpD,EAAWoD,EAAWhK,iBAezC+4C,EAAgB3gC,EAAQxX,EAAQ+5C,EAAa3+B,OACrDkgC,EAAgBpD,EAAal4C,EAAQ+5C,2BACrBviC,EAAQ8jC,OAAet1C,EAAWoV,YAW1Cg9B,EACde,EACA+B,EACAC,UAEsBlD,EACpBiD,EACAC,EAEKG,CAAcnC,GAKpB,IACC9H,EAAiB,cAQLgH,EAAkBl3C,GAChCkwC,EAAiB1xC,EAAIwB,YAQPm3C,IACdjH,EAAiB,cASHC,WACPD,WAQOkH,IACdF,EAAiB,sBAUHxF,EAAiBzpC,EAAY8xC,UACtC7J,EAGEx/B,EAAUzI,EAAY8xC,EAAkB7J,GAFtCjoC,WAYKszB,EAAmBtzB,EAAYmyC,UACxClK,EAGEx/B,EAAUzI,EAAYioC,EAAgBkK,GAFpCnyC,WAYKovC,EAAahhC,EAAQ0jC,UAC9B7J,EAGE8G,EAAgB3gC,EAAQ0jC,EAAkB7J,GAFxC75B,WAYKizB,EAAejzB,EAAQ+jC,UAChClK,EAGE8G,EAAgB3gC,EAAQ65B,EAAgBkK,GAFtC/jC,WAeKihC,EAA8BmC,EAAYC,EAAU/oC,mBACjD0pC,OAGXC,EAAa5vB,EAFb6vB,EAAUF,EAAM,GAChBG,EAAUH,EAAM,MAEhBZ,EAAW7wC,WAAQ,KACf6xC,EAAehB,EAAW3wC,YAC1B8hB,EAAiB5hB,EAAAC,SAAYwxC,IACnC/vB,EAAUjiB,EAAAkgB,cAAiB0xB,EAAOZ,EAAY7uB,MAG5C2vB,GAAoB7vB,EAAaE,GAEnC2vB,EAAO39B,EAAAC,MAAS09B,EAASE,EAAa,GAAIA,EAAa,IACvDD,EAAO59B,EAAAC,MAAS29B,EAASC,EAAa,GAAIA,EAAa,IACvDH,EAAc3pC,EAAS,CAAE4pC,EAASC,SAElCF,EAAc3pC,EAAU0pC,UAEtB3vB,GAAcgvB,EAAS9wC,aAEzB0xC,EAAY,IAAM5vB,EAAU1hB,EAAAC,SAAYywC,EAAS5wC,cAE5CwxC,YASK/C,IAGdhB,EAAwBmE,EAAAC,aACxBpE,EAAwBqE,EAAAD,aAGxBnE,EAAuBoE,EAAAD,YAAAD,EAAAC,YAAAD,EAAAG,aAAAH,EAAAI,YAQzBvD,+aChrBG,IAAAtB,EAAA34C,EAAA,cAiDHy9C,EAAA,WAGK,SACHC,EAAYx7C,GAIP6C,KACE44C,MAAQz7C,EAAQ8T,KAQlBjR,KACE64C,OAAsD17C,EAAQ+4C,MAQhEl2C,KACE84C,aAA6Bt2C,IAAnBrF,EAAQ6W,OAAuB7W,EAAQ6W,OAAS,KAQ5DhU,KACE+4C,kBACqBv2C,IAAxBrF,EAAQ67C,YAA4B77C,EAAQ67C,YAAc,KAKzDh5C,KACEi5C,sBACyBz2C,IAA5BrF,EAAQ+7C,gBAAgC/7C,EAAQ+7C,gBAAe,MAK9Dl5C,KACEm5C,aAA6B32C,IAAnBrF,EAAQi8C,QAAuBj8C,EAAQi8C,OAKnDp5C,KACEq5C,aAASr5C,KAAWm5C,UAAOn5C,KAAS84C,SAKtC94C,KACEs5C,wBAA0Bn8C,EAAQ82C,mBAKpCj0C,KACEu5C,iBAAmB,KAKrBv5C,KACEw5C,eAAiBr8C,EAAQ84C,qBAMhC0C,EAAAz4C,UAAAqG,SAAQ,uBACM8yC,WAQdV,EAAAz4C,UAAAq1C,QAAO,uBACOqD,OAQdD,EAAAz4C,UAAAuG,UAAS,uBACKqyC,SAQdH,EAAAz4C,UAAA81C,SAAQ,uBACM6C,QAUdF,EAAAz4C,UAAA+xC,iBAAgB,uBACFuH,gBAAc5F,EAAA9B,gBAAA9xC,KAAyB64C,SAQrDF,EAAAz4C,UAAAu5C,eAAc,uBACAV,cAcdJ,EAAAz4C,UAAAw5C,mBAAkB,uBACJT,kBAQdN,EAAAz4C,UAAAoxC,SAAQ,uBACM6H,SAQdR,EAAAz4C,UAAAy5C,UAAS,SAACP,QACHD,QAAUC,OACVC,aAAeD,IAAMp5C,KAAS84C,UAMrCH,EAAAz4C,UAAA05C,mBAAkB,uBACJL,kBAMdZ,EAAAz4C,UAAA25C,mBAAkB,SAACC,QACZP,iBAAmBO,GAQ1BnB,EAAAz4C,UAAA9D,UAAS,SAAC4X,QACH8kC,QAAU9kC,OACVqlC,aAASr5C,KAAWm5C,UAAWnlC,IAStC2kC,EAAAz4C,UAAA65C,eAAc,SAACf,QACRD,aAAeC,GAStBL,EAAAz4C,UAAA85C,sBAAqB,SAACnuC,QACfytC,wBAA0BztC,GAQjC8sC,EAAAz4C,UAAA61C,uBAAsB,uBACRuD,yBAEhBX,EAzNA,aA2NeD,uNCjQFuB,gCAMAC,6BAMAp6B,mCAMAq6B,iCAOAC,kCA8BA9B,IAeVpvC,EAAAF,OAAAzN,EAAA,gBAAA,IACai9C,IAgCbtvC,EAAAF,OAAAzN,EAAA,cAAA,IACak9C,IAnHb,MAAAtD,EAAAl6C,EAAA,qiBAWUg/C,EAAS,QAMTC,EAAYtqC,KAAKiM,GAAKo+B,EAMtBn6B,EAAM,EAAKo6B,GAAYA,EAAWA,EAAWA,GAM7CC,EAAY,EAAI,KAAM,GAAK,IAAK,IAOhCC,EAAaH,EAASrqC,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,IAM/Dy+B,EAAA,SAAAj7C,GAGK,SACHk7C,EAAYtpC,UACV5R,EAAAU,KAAAC,KAAA,CACEiR,KAAMA,EACNilC,MAAKnE,EAAAx1C,QAAQg3C,OACbv/B,OAAQ8L,EACRs5B,QAAQ,EACRJ,YAAamB,EACblG,mBAAkB,SAAYxuC,EAAYkwC,UACjClwC,EAAU8U,EAAAG,KAAQi7B,EAAM,GAAKsE,mBAZXh6C,EAAAs6C,EAAAl7C,GAgBjCk7C,EAhBA,YAwBajC,EAAW,KAClBgC,EAAkB,iBAClBA,EAAkB,mBAClBA,EAAkB,mBAClBA,EAAkB,mBAClBA,EAAkB,0DAWR9B,EAAapD,EAAOC,EAAYC,OACxC15C,EAASw5C,EAAMx5C,OACfq7C,EAAY3B,EAAgB,EAAIA,EAAgB,EAClDpxB,EAASmxB,OACE7yC,IAAX0hB,IAGAA,EAFE+yB,EAAY,EAEL7B,EAAM/uC,QAET,IAAOwD,MAAMjO,YAGdD,EAAI,EAAGA,EAAIC,EAAQD,GAAKs7C,EAAS,CACxC/yB,EAAOvoB,GAAMu+C,EAAY9E,EAAMz5C,GAAM,QACjC8T,EAAIwqC,EAASrqC,KAAKwL,IAAIxL,KAAKyqC,IAAKzqC,KAAKiM,KAAOu5B,EAAMz5C,EAAI,GAAK,IAAO,MAClE8T,EAAI2qC,EACN3qC,EAAI2qC,EACK3qC,GAAK2qC,IACd3qC,GAAK2qC,GAEPl2B,EAAOvoB,EAAI,GAAK8T,SAEXyU,WAWOu0B,EAAWrD,EAAOC,EAAYC,OACtC15C,EAASw5C,EAAMx5C,OACfq7C,EAAY3B,EAAgB,EAAIA,EAAgB,EAClDpxB,EAASmxB,OACE7yC,IAAX0hB,IAGAA,EAFE+yB,EAAY,EAEL7B,EAAM/uC,QAET,IAAOwD,MAAMjO,YAGdD,EAAI,EAAGA,EAAIC,EAAQD,GAAKs7C,EAC/B/yB,EAAOvoB,GAAM,IAAMy5C,EAAMz5C,GAAMu+C,EAC/Bh2B,EAAOvoB,EAAI,GACR,IAAMiU,KAAK4qC,KAAK5qC,KAAKuL,IAAIi6B,EAAMz5C,EAAI,GAAKs+C,IAAYrqC,KAAKiM,GAAK,UAE5DqI,uQC1HI+1B,6BAQAn6B,sCAMAgyB,kCAkCAwG,IA1DV,MAAAnD,EAAAl6C,EAAA,mhBAUUg/C,EAAS,QAQTn6B,EAAM,EAAI,KAAM,GAAK,IAAK,IAM1BgyB,EAAmBliC,KAAKiM,GAAKo+B,EAAU,IAUpDQ,EAAA,SAAAp7C,GAIK,SACHq7C,EAAYzpC,EAAM0pC,UAChBt7C,EAAAU,KAAAC,KAAA,CACEiR,KAAMA,EACNilC,MAAKnE,EAAAx1C,QAAQy1C,QACbh+B,OAAQ8L,EACRo5B,gBAAiByB,EACjBvB,QAAQ,EACRnD,cAAenE,EACfkH,YAAal5B,iBAbc7f,EAAAy6C,EAAAr7C,GAgBjCq7C,EAhBA,YAwBapC,EAAW,KAClBmC,EAAkB,cAClBA,EAAkB,YAAY,WAC9BA,EAAkB,qCAClBA,EAAkB,gCAClBA,EAAkB,+CAA+C,8NCtDpEvxC,EAAAF,OAAAzN,EAAA,SAAA,IACakd,IAQbvP,EAAAF,OAAAzN,EAAA,OAAA,IACaY,IAYb+M,EAAAF,OAAAzN,EAAA,OAAA,IACasqB,IA5Bb,IACClM,EAAK,YAKOlB,IACdkB,EAAK,YAQSxd,EAAI8U,UAEhB0I,EAAM1I,IACN0I,EAAM1I,EAAK0W,QAAO,yCAAA,aAClB,cASY9B,EAAI5U,EAAMtT,GACxBgc,EAAM1I,GAAQtT,0KCtBbuL,EAAAF,OAAAzN,EAAA,SAAA,IACakd,IAWbvP,EAAAF,OAAAzN,EAAA,OAAA,IACasqB,IAiBb3c,EAAAF,OAAAzN,EAAA,UAAA,IACamQ,IAgBbxC,EAAAF,OAAAzN,EAAA,OAAA,IACaY,IA3Db,IAAAoD,EAAAtE,EAAA,aAOC2/C,EAAU,YAKEniC,IACdmiC,EAAU,YAWI/0B,EAAIrpB,EAAQ+5C,EAAa5+B,OACjCigC,EAAap7C,EAAO+4C,UACpBsC,EAAkBtB,EAAYhB,UAC9BqC,KAAcgD,IAClBA,EAAWhD,GAAU,IAEvBgD,EAAWhD,GAAYC,GAAmBlgC,WAY5BjM,EAAOlP,EAAQ+5C,OACvBqB,EAAap7C,EAAO+4C,UACpBsC,EAAkBtB,EAAYhB,UAC9BlnC,EAAYusC,EAAWhD,GAAYC,iBAClC+C,EAAWhD,GAAYC,aAClB+C,EAAWhD,YACdgD,EAAWhD,GAEbvpC,WASOlS,EAAIy7C,EAAYC,OAC1BxpC,SACAupC,KAAcgD,GAAc/C,KAAmB+C,EAAWhD,KAC5DvpC,EAAYusC,EAAWhD,GAAYC,IAE9BxpC,+NC3CIwsC,IAUV3xC,EAAAF,OAAAzN,EAAA,eAAA,IACa+6C,IAwCbptC,EAAAF,OAAAzN,EAAA,aAAA,IACakjC,IA6Fbv1B,EAAAF,OAAAzN,EAAA,WAAA,IACaoX,IA6DbzJ,EAAAF,OAAAzN,EAAA,UAAA,IACa2Z,IArOb,IAAA4lC,EAAA7/C,EAAA,iEAqBU4/C,EAAiB,mBAWdvE,EAAY5nC,EAAIM,EAAI+rC,OAC5BC,EAASD,GAAcF,EACvBI,EAAI1gC,EAAAS,UAAatM,EAAG,IACpBwsC,EAAI3gC,EAAAS,UAAahM,EAAG,IACpBmsC,GAAeD,EAAOD,GAAQ,EAC9BG,EAAW7gC,EAAAS,UAAahM,EAAG,GAAKN,EAAG,IAAM,EACzCvL,EACJyM,KAAKC,IAAIsrC,GAAevrC,KAAKC,IAAIsrC,GACjCvrC,KAAKC,IAAIurC,GACPxrC,KAAKC,IAAIurC,GACTxrC,KAAKD,IAAIsrC,GACTrrC,KAAKD,IAAIurC,UACN,EAAIF,EAASprC,KAAKyrC,MAAMzrC,KAAK8W,KAAKvjB,GAAIyM,KAAK8W,KAAK,EAAIvjB,IAQ1D,SACMm4C,EAAkBn0C,EAAa6zC,WAClCp/C,EAAS,EACJD,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,EAAK,IAAK7H,EACrDC,GAAU06C,EAAYnvC,EAAYxL,GAAIwL,EAAYxL,EAAI,GAAIq/C,UAErDp/C,WAeO6iC,EAAUv4B,EAAUsxB,OAC5Br6B,EAAUq6B,GAAW,GACrBwjB,EAAS79C,EAAQ69C,QAAUH,EAC3Bl9C,EAAaR,EAAQQ,YAAU,YAC/BuE,EAAOgE,EAASwnC,UAClBxrC,IAAIyrC,EAAApxC,QAAkB62C,sBACxBltC,EAAWA,EAASqL,QAAQlD,UAAU1Q,EAAU,kBAG9CwJ,EAAa6mC,EAAQryC,EAAG6H,EAAIwD,EAAGsjC,EAD/B1uC,EAAS,SAELsG,kBACY2wC,qBACAI,iCAGAH,2BACAC,YAEhBn3C,EAAS0/C,EADTn0C,EAAyEjB,EAAUq1C,iBAC3CP,wBAGxB9H,iCACAF,YAEXr3C,EAAI,EAAG6H,GADZ2D,EAAyEjB,EAAUq1C,kBACtD3/C,OAAQD,EAAI6H,IAAM7H,EAC7CC,GAAU0/C,EAAkBn0C,EAAYxL,GAAIq/C,wBAI9B7H,kBAEXx3C,EAAI,EAAG6H,GADZ2D,EAAyEjB,EAAUq1C,kBACtD3/C,OAAQD,EAAI6H,IAAM7H,MAExCqL,EAAI,EAAGsjC,GADZ0D,EAAS7mC,EAAYxL,IACGC,OAAQoL,EAAIsjC,IAAMtjC,EACxCpL,GAAU0/C,EAAkBtN,EAAOhnC,GAAIg0C,wBAK3B5H,wBACVoI,EAA4Et1C,EAAUu1C,oBACvF9/C,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAC5CC,GAAU6iC,EAAU+c,EAAW7/C,GAAI67B,2BAK3Bx7B,MAAK,8BAAiCkG,UAG7CtG,EAgBN,SACM8/C,EAAgBv0C,EAAa6zC,WAChCtlC,EAAO,EACL6M,EAAMpb,EAAYvL,OACpB4a,EAAKrP,EAAYob,EAAM,GAAG,GAC1B3L,EAAKzP,EAAYob,EAAM,GAAG,GACrB5mB,EAAI,EAAGA,EAAI4mB,EAAK5mB,IAAC,KAClB8a,EAAKtP,EAAYxL,GAAG,GACpBkb,EAAK1P,EAAYxL,GAAG,GAC1B+Z,GAAI6E,EAAAS,UACQvE,EAAKD,IACd,EAAI5G,KAAKC,IAAG0K,EAAAS,UAAWpE,IAAOhH,KAAKC,IAAG0K,EAAAS,UAAWnE,KACpDL,EAAKC,EACLG,EAAKC,SAECnB,EAAOslC,EAASA,EAAU,WAapBroC,EAAQzM,EAAUsxB,OAC1Br6B,EAAUq6B,GAAW,GACrBwjB,EAAS79C,EAAQ69C,QAAUH,EAC3Bl9C,EAAaR,EAAQQ,YAAU,YAC/BuE,EAAOgE,EAASwnC,UAClBxrC,IAAIyrC,EAAApxC,QAAkB62C,sBACxBltC,EAAWA,EAASqL,QAAQlD,UAAU1Q,EAAU,kBAG9CwJ,EAAa6mC,EAAQryC,EAAG6H,EAAIwD,EAAGsjC,EAD/B50B,EAAO,SAEHxT,kBACY2wC,qBACAI,2BACAH,2BACAI,iCACAH,iCAGAC,YAChB7rC,EAAkEjB,EAAUq1C,iBAC5E7lC,EAAO9F,KAAK0F,IAAIomC,EAAgBv0C,EAAY,GAAI6zC,IAC3Cr/C,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,EAC7C+Z,GAAQ9F,KAAK0F,IAAIomC,EAAgBv0C,EAAYxL,GAAIq/C,yBAInC7H,kBAEXx3C,EAAI,EAAG6H,GADZ2D,EAAyEjB,EAAUq1C,kBACtD3/C,OAAQD,EAAI6H,IAAM7H,MAC7CqyC,EAAS7mC,EAAYxL,GACrB+Z,GAAQ9F,KAAK0F,IAAIomC,EAAgB1N,EAAO,GAAIgN,IACvCh0C,EAAI,EAAGsjC,EAAK0D,EAAOpyC,OAAQoL,EAAIsjC,IAAMtjC,EACxC0O,GAAQ9F,KAAK0F,IAAIomC,EAAgB1N,EAAOhnC,GAAIg0C,yBAKhC5H,wBACVoI,EAA4Et1C,EAAUu1C,oBACvF9/C,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAC5C+Z,GAAQ/C,EAAQ6oC,EAAW7/C,GAAI67B,2BAKvBx7B,MAAK,8BAAiCkG,UAG7CwT,WAcOR,EAAOxG,EAAIwX,EAAUy1B,EAASZ,OACtCC,EAASD,GAAcF,EACvBI,EAAI1gC,EAAAS,UAAatM,EAAG,IACpBktC,EAAIrhC,EAAAS,UAAatM,EAAG,IACpBmtC,EAAO31B,EAAW80B,EAClBc,EAAMlsC,KAAKmsC,KACfnsC,KAAKC,IAAIorC,GAAQrrC,KAAKD,IAAIksC,GACxBjsC,KAAKD,IAAIsrC,GAAQrrC,KAAKC,IAAIgsC,GAAQjsC,KAAKD,IAAIgsC,IAEzCnE,EACJoE,EACAhsC,KAAKyrC,MACHzrC,KAAKC,IAAI8rC,GAAW/rC,KAAKC,IAAIgsC,GAAQjsC,KAAKD,IAAIsrC,GAC9CrrC,KAAKD,IAAIksC,GAAQjsC,KAAKC,IAAIorC,GAAQrrC,KAAKC,IAAIisC,uBAE7BtE,eAAgBsE,iOCvOjC5yC,EAAAF,OAAAzN,EAAA,gBAAA,IACaygD,IAyDb9yC,EAAAF,OAAAzN,EAAA,QAAA,IACao3C,IAxEb,IAAAp4B,EAAAtf,EAAA,sBAca+gD,EAAahoC,EAAQioC,EAAY/K,mBAUnClyC,EAAQyG,EAAYD,EAAM02C,EAAcC,MAC5Cn9C,EAAM,KACFo9C,EAAYH,EAAa,EAAIz2C,EAAK,GAAKC,EACvC42C,EAAaJ,EAAa,EAAIz2C,EAAK,GAAKC,EACxC62C,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAClD/nC,EAAOJ,EAAO,GAAKooC,EAAY,EAAIE,EACnChoC,EAAON,EAAO,GAAKooC,EAAY,EAAIE,EACnCjoC,EAAOL,EAAO,GAAKqoC,EAAa,EAAIE,EACpChoC,EAAOP,EAAO,GAAKqoC,EAAa,EAAIE,EAIpCnoC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,OAIrB7E,EAAC+K,EAAAC,MAASxb,EAAO,GAAIoV,EAAME,GAC3B7E,EAAC8K,EAAAC,MAASxb,EAAO,GAAIqV,EAAME,GACzBk7B,EAAQ,GAAKhqC,SAGfy2C,GAAgBhL,IAClB1hC,IACGigC,EAAQ7/B,KAAKwL,IAAI,EAAIxL,KAAK4F,IAAI,EAAGpB,EAAOpV,EAAO,IAAMywC,GACtDA,EAAQ7/B,KAAKwL,IAAI,EAAIxL,KAAK4F,IAAI,EAAGxW,EAAO,GAAKsV,GAAQm7B,GACvDhgC,IACGggC,EAAQ7/B,KAAKwL,IAAI,EAAIxL,KAAK4F,IAAI,EAAGnB,EAAOrV,EAAO,IAAMywC,GACtDA,EAAQ7/B,KAAKwL,IAAI,EAAIxL,KAAK4F,IAAI,EAAGxW,EAAO,GAAKuV,GAAQk7B,KAGjDjgC,EAAGC,cAYHkjC,EAAK3zC,UACZA,8LCLNkK,EAAAF,OAAAzN,EAAA,2BAAA,IACao2C,IA6DbzoC,EAAAF,OAAAzN,EAAA,qBAAA,IACa+2C,IAoEbppC,EAAAF,OAAAzN,EAAA,0BAAA,IACaq2C,IAxMb,IAAAr3B,EAAAtf,EAAA,kDAiBA,SACMuhD,EACP/2C,EACAg3C,EACAC,EACAlL,OAEMhF,EAAW7lC,EAAAC,SAAY61C,GAAaC,EAAa,GACjDjQ,EAAW9lC,EAAAuM,UAAaupC,GAAaC,EAAa,UAEpDlL,EACK5hC,KAAK2F,IAAI9P,EAAYmK,KAAK4F,IAAIg3B,EAAaC,IAE7C78B,KAAK2F,IAAI9P,EAAYmK,KAAK2F,IAAIi3B,EAAaC,IAcjD,SACMkQ,EAA2Bl3C,EAAYyY,EAAeD,OACzDhhB,EAAS2S,KAAK2F,IAAI9P,EAAYyY,UAGlCjhB,GACE2S,KAAKwL,IAAI,EAHG,GAGSxL,KAAK4F,IAAI,EAAG/P,EAAayY,EAAgB,IAHlD,GAIZ,EACED,IACFhhB,EAAS2S,KAAK4F,IAAIvY,EAAQghB,GAC1BhhB,GACE2S,KAAKwL,IAAI,EARC,GAQWxL,KAAK4F,IAAI,EAAGyI,EAAgBxY,EAAa,IARpD,GAUV,WAESxI,EAAQghB,EAAgB,EAAmB,EAAhBC,YAU1ByzB,EACdlK,EACAmV,EACAC,EACAC,mBAUYr3C,EAAYwF,EAAWzF,EAAM02C,WAClB15C,IAAfiD,EAAwB,KACpByY,EAAgBupB,EAAY,GAC5BxpB,EAAgBwpB,EAAYA,EAAY7rC,OAAS,GACjDmhD,EAAeF,EACjBL,EACEt+B,EACA2+B,EACAr3C,EACAs3C,GAEF5+B,KAGAg+B,cAC4B15C,IAAfo6C,GAA2BA,EAInCD,EACLl3C,EACAs3C,EACA9+B,GANS1D,EAAAC,MACI/U,EAAYwY,EAAe8+B,OAStCC,EAASptC,KAAK2F,IAAIwnC,EAAct3C,GAChCw3C,EAAIrtC,KAAKqI,MAAK3O,EAAA0B,kBAAmBy8B,EAAauV,EAAQ/xC,WACxDw8B,EAAYwV,GAAKF,GAAgBE,EAAIxV,EAAY7rC,OAAS,EACrD6rC,EAAYwV,EAAI,GAElBxV,EAAYwV,cAiBX3K,EACd1F,EACA1uB,EACAg/B,EACAN,EACAC,EACAC,mBAUYr3C,EAAYwF,EAAWzF,EAAM02C,WAClB15C,IAAfiD,EAAwB,KACpBs3C,EAAeF,EACjBL,EACEt+B,EACA2+B,EACAr3C,EACAs3C,GAEF5+B,EACED,OACkBzb,IAAtB06C,EAAkCA,EAAoB,KAGpDhB,cAC4B15C,IAAfo6C,GAA2BA,EAInCD,EACLl3C,EACAs3C,EACA9+B,GANS1D,EAAAC,MACI/U,EAAYwY,EAAe8+B,OAUtCI,EAAevtC,KAAK0X,KACxB1X,KAAKwL,IAAI8C,EAAgB6+B,GAAgBntC,KAAKwL,IAAIwxB,GAFlC,MAIZ13B,GAAUjK,GAAa,GAJX,MAI8B,GAC1C+xC,EAASptC,KAAK2F,IAAIwnC,EAAct3C,GAChC23C,EAAkBxtC,KAAKqI,MAC3BrI,KAAKwL,IAAI8C,EAAgB8+B,GAAUptC,KAAKwL,IAAIwxB,GAAS13B,GAEjDmoC,EAAYztC,KAAK4F,IAAI2nC,EAAcC,GACnCvN,EAAgB3xB,EAAgBtO,KAAKuX,IAAIylB,EAAOyQ,kBACzCxN,EAAe5xB,EAAe8+B,cAgBnCnL,EACd1zB,EACAD,EACA2+B,EACAC,EACAC,mBAUYr3C,EAAYwF,EAAWzF,EAAM02C,WAClB15C,IAAfiD,EAAwB,KACpBs3C,EAAeF,EACjBL,EACEt+B,EACA2+B,EACAr3C,EACAs3C,GAEF5+B,cAC0B1b,IAAfo6C,GAA2BA,IAE1BV,EAGTS,EACLl3C,EACAs3C,EACA9+B,GAN0B1D,EAAAC,MACb/U,EAAYwY,EAAe8+B,4OC1N/C7zC,EAAAF,OAAAzN,EAAA,WAAA,IACa+hD,IAWbp0C,EAAAF,OAAAzN,EAAA,QAAA,IACao3C,IAWbzpC,EAAAF,OAAAzN,EAAA,iBAAA,IACaq3C,IA0Bb1pC,EAAAF,OAAAzN,EAAA,oBAAA,IACam3C,IA9Db,IAAAn4B,EAAAtf,EAAA,sBAWaqiD,EAAQ53C,eACLlD,IAAbkD,EACK,kBAUKitC,EAAKjtC,eACFlD,IAAbkD,EACKA,kBAUKktC,EAAc1nC,OACtBqyC,EAAS,EAAI3tC,KAAKiM,GAAM3Q,kBAOlBxF,EAAUw2C,UACdA,EACKx2C,OAGQlD,IAAbkD,EACFA,EAAWkK,KAAKqI,MAAMvS,EAAW63C,EAAQ,IAAOA,mBAaxC7K,EAAiB8K,OACzBnoC,EAAYmoC,GAAajjC,EAAAS,UAAc,mBAOjCtV,EAAUw2C,UACdA,EACKx2C,OAGQlD,IAAbkD,EACEkK,KAAK0F,IAAI5P,IAAa2P,EACjB,EAEA3P,wLCvED+3C,EAAOniC,UACd1L,KAAKuX,IAAI7L,EAAG,YASLk1B,EAAQl1B,UACf,EAAImiC,EAAO,EAAIniC,YASRouB,EAASpuB,UAChB,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,WASjBoiC,EAAOpiC,UACdA,WAWOqiC,EAAUriC,UACpBA,EAAI,GACCouB,EAAS,EAAIpuB,GAEb,EAAIouB,EAAS,GAAKpuB,EAAI,4BA/C9BpS,EAAAF,OAAAzN,EAAA,UAAA,IACakiD,IASbv0C,EAAAF,OAAAzN,EAAA,WAAA,IACai1C,IASbtnC,EAAAF,OAAAzN,EAAA,YAAA,IACamuC,IASbxgC,EAAAF,OAAAzN,EAAA,UAAA,IACamiD,IAWbx0C,EAAAF,OAAAzN,EAAA,aAAA,IACaoiD,2KCkXbz0C,EAAAF,OAAAzN,EAAA,YAAA,IACaqiD,IAqBb10C,EAAAF,OAAAzN,EAAA,cAAA,IACakyC,IA8BbvkC,EAAAF,OAAAzN,EAAA,cAAA,IACasiD,IA2Bb30C,EAAAF,OAAAzN,EAAA,eAAA,IACauiD,IAtfb,MAAAC,EAAA9iD,EAAA,+9BA0BH+iD,EAAA,SAAA3+C,GAWK,SACH4+C,EAAY92C,EAAa+2C,EAAYC,OAArC39C,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK49C,MAAK,GAMV59C,EAAK69C,4BAA6B,EAMlC79C,EAAK89C,mBAAqB,KAM1B99C,EAAK+9C,WAAY,EAMjB/9C,EAAKg+C,mBAAoB,EAMzBh+C,EAAKi+C,mBAAoB,EAMzBj+C,EAAKk+C,yBAA2B,UAEbl8C,IAAf07C,GAA4BC,GAC9B39C,EAAKm+C,mBACHT,EAC8B/2C,GAEhC3G,EAAK49C,MAAQD,GAEb39C,EAAKo+C,eACiEz3C,EACpE+2C,YAlEcj+C,EAAAg+C,EAAA5+C,GA4EpB4+C,EAAA/9C,UAAA2+C,iBAAgB,SAACC,QACL7pC,8BAGIA,gBAAiB6pC,EAAW7Q,sBAHjBjuC,KAClBiV,gBAAkB6pC,EAAW7Q,qBAAqB5nC,aAIpD+3C,MAAMn6C,KAAIjE,KAAMiV,gBAAgBrZ,aAChC4hB,WAQPygC,EAAA/9C,UAAAqR,MAAK,eACGwtC,EAAO,IAAOd,EAAOj+C,KACpBiV,gBAAgB5O,QAAKrG,KACrBg/C,OAAMh/C,KACNo+C,MAAM/3C,gBAEb04C,EAAQz9B,gBAAethB,MAChB++C,GAUTd,EAAA/9C,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,UAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAC9D0vC,QAEAX,mBAAiBx+C,KAASoiB,qBAC5Bm8B,UAAY3uC,KAAK8W,KAAI04B,EAAAC,qBAAAr/C,KAEjBiV,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACL,SAGCqpC,kBAAiBx+C,KAAQoiB,8CAGzBnN,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OAAMnV,KACNu+C,WACL,EACA/uC,EACAC,EACAyvC,EACAC,KASJlB,EAAA/9C,UAAAyR,WAAU,SAACnC,EAAGC,uCAEL6vC,6BACL,EAACt/C,KACIo+C,MAAKp+C,KACLmV,OACL3F,EACAC,IASJwuC,EAAA/9C,UAAAyS,QAAO,qCAEE2sC,6BACL,EAACt/C,KACIo+C,MAAKp+C,KACLmV,SAiBT8oC,EAAA/9C,UAAAq7C,eAAc,SAACgE,OACTtqC,cACczS,IAAd+8C,GACFtqC,EAAejV,KAAQs/C,6BAA6Bj5C,4BAClC4O,EAAiB,EAACjV,KAAOo+C,MAAKp+C,KAAOmV,OAAQoqC,IAE/DtqC,EAAejV,KAAQiV,0CAGMA,EAAiB,EAACjV,KAAOo+C,MAAKp+C,KAAOmV,SAMtE8oC,EAAA/9C,UAAAs/C,QAAO,uBACOpB,OAMdH,EAAA/9C,UAAAu/C,qBAAoB,mBACTpB,4BAA0Br+C,KAASoiB,cAAW,KAC/Cs9B,EAAU/4C,EAAAmM,UAAA9S,KAAkByG,kBAC7B63C,mBAAkBqB,EAAAC,wBAAA5/C,KAChBs/C,6BACL,EAACt/C,KACIo+C,MAAKp+C,KACLmV,OACLuqC,EACA,QAEGrB,2BAA0Br+C,KAAQoiB,0BAE7Bk8B,oBASdL,EAAA/9C,UAAA2/C,iBAAgB,qCACQJ,uBAAoBK,EAAAvjD,QAAmBwjD,MAU/D9B,EAAA/9C,UAAA8/C,mBAAkB,uBACJ5B,MAAMxiD,QAapBqiD,EAAA/9C,UAAA+/C,cAAa,SAAC9zC,UACRA,EAAQ,GAACnM,KAASo+C,MAAMxiD,QAAUuQ,EAC7B,wBAGF8I,gBAAgB5O,MACT,IAAV8F,EAAc,EAACnM,KAAQo+C,MAAMjyC,EAAQ,GAACnM,KACjCo+C,MAAMjyC,IAAKnM,KAEbg/C,SASTf,EAAA/9C,UAAAggD,eAAc,mBACNlB,EAAMh/C,KAAQg/C,OACd/pC,EAAejV,KAAQiV,gBACvBkrC,EAAIngD,KAAQo+C,MACZgC,EAAW,GACblrC,EAAS,EACJvZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACXmjD,EAAU,IAAAuB,EAAA9jD,QACd0Y,EAAgB5O,MAAM6O,EAAQ7J,GAC9B2zC,GAEFoB,EAAYn8C,KAAK66C,GACjB5pC,EAAS7J,SAEJ+0C,GAMTnC,EAAA/9C,UAAAo/C,2BAA0B,mBACfb,mBAAiBz+C,KAASoiB,cAAW,KACtCnN,EAAejV,KAAQiV,yCACFA,EAAiB,EAACjV,KAAOo+C,MAAKp+C,KAAOmV,QAAMnV,KAC/D0+C,yBAA2BzpC,QAE3BypC,yBAA2BzpC,EAAgB5O,aAC3Cq4C,yBAAyB9iD,OAAM0kD,EAAAC,kBAAAvgD,KAC7B0+C,yBACL,EAAC1+C,KACIo+C,MAAKp+C,KACLmV,cAGJspC,kBAAiBz+C,KAAQoiB,0BAEpBs8B,0BAQdT,EAAA/9C,UAAAsgD,8BAA6B,SAACC,OACtBC,EAAyB,GACzBC,EAAc,UACpBD,EAA0B9kD,OAAMglD,EAAAC,cAAA7gD,KACzBiV,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACLvF,KAAK8W,KAAK+5B,GACVC,EACA,EACAC,OAES1C,EACTyC,EAAyBZ,EAAAvjD,QACVukD,GACfH,IASJ1C,EAAA/9C,UAAAwtC,QAAO,4BACesF,SAStBiL,EAAA/9C,UAAA6gD,iBAAgB,SAAC/sC,2CAERsrC,6BACL,EAACt/C,KACIo+C,MAAKp+C,KACLmV,OACLnB,IAUJiqC,EAAA/9C,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,QAEhBkrC,EAAIc,EAAAC,wBAAAlhD,KACHiV,gBACL,EACA9N,EAAWnH,KACNmV,OAAMnV,KACNo+C,YAEFnpC,gBAAgBrZ,OAAyB,IAAhBukD,EAAKvkD,OAAe,EAAIukD,EAAKA,EAAKvkD,OAAS,QACpE4hB,WAETygC,EA3XA,qBA2YgBL,EAAS5+C,EAAQg8C,EAAQmG,EAAOC,WACxCl2C,EAAIi2C,GAAgB,GAEpBlsC,EAAe,GACZtZ,EAAI,EAAGA,EAAIuP,IAAKvP,EAAC2N,EAAAiC,OAEtB0J,EAAeohC,EAAAnhC,OACFlW,EAAQg8C,EAAS,EAAIprC,KAAKiM,GAAKlgB,EAAKuP,EAAGk2C,WAGxDnsC,EAAgBhR,KAAKgR,EAAgB,GAAIA,EAAgB,QAC9C+oC,EAAQ/oC,EAAe6qC,EAAAvjD,QAAiBukD,GAAE,CACnD7rC,EAAgBrZ,kBAUJ6xC,EAAWz5B,OACnBI,EAAOJ,EAAO,GACdK,EAAOL,EAAO,GACdM,EAAON,EAAO,GACdO,EAAOP,EAAO,GACdiB,EAAe,CACnBb,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,cAES2pC,EAAQ/oC,EAAe6qC,EAAAvjD,QAAiBukD,GAAE,CACnD7rC,EAAgBrZ,kBAaJiiD,EAAWr3B,EAAQ66B,EAAWC,WACtCC,EAAQF,GAAwB,GAChClsC,EAASqR,EAAO8nB,YAChB0Q,EAASx4B,EAAOg7B,YAChBxiD,EAASwnB,EAAO1T,YAChB2uC,EAActsC,GAAUosC,EAAQ,GAChCtsC,EAAe,IAAOpL,MAAM43C,GACzB9lD,EAAI,EAAGA,EAAI8lD,EAAa9lD,GAAKwZ,EAAM,CAC1CF,EAAgBtZ,GAAK,EACrBsZ,EAAgBtZ,EAAI,GAAK,UAChBqL,EAAI,EAAGA,EAAImO,EAAQnO,IAC1BiO,EAAgBtZ,EAAIqL,GAAKhI,EAAOgI,OAG9Bm5C,EAAI,CAAIlrC,EAAgBrZ,QACxBmjD,EAAO,IAAOf,EAAQ/oC,EAAiB+pC,EAAQmB,UACrDrC,EAAYiB,EAAS//C,EAAQwnB,EAAOC,YAAa66B,GAC1CvC,WAWOjB,EAAYiB,EAAS//C,EAAQg8C,EAAQsG,WAC7CrsC,EAAkB8pC,EAAQ9Q,qBAC1B94B,EAAS4pC,EAAQzQ,YACjBiT,EAAQtsC,EAAgBrZ,OAASuZ,EAAS,EAC1CusC,EAAaJ,GAAwB,EAClC3lD,EAAI,EAAGA,GAAK4lD,IAAS5lD,EAAC,KACvBuZ,EAASvZ,EAAIwZ,EACbzF,EAAQgyC,EAAiC,EAAvBnnC,EAAAU,OAAWtf,EAAG4lD,GAAa3xC,KAAKiM,GAAM0lC,EAC9DtsC,EAAgBC,GAAUlW,EAAO,GAAKg8C,EAASprC,KAAKD,IAAID,GACxDuF,EAAgBC,EAAS,GAAKlW,EAAO,GAAKg8C,EAASprC,KAAKC,IAAIH,GAE9DqvC,EAAQvhC,oBA1GKwgC,qpBC9Yb8C,GAAE,KACFa,IAAG,MACH5B,IAAG,MACH6B,KAAI,+KCZH,MAAA7D,EAAA9iD,EAAA,8tBAkBH4mD,EAAA,SAAAxiD,GAKK,SACHyiD,EAAY36C,EAAa+2C,OAAzB19C,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK+9C,WAAY,EAMjB/9C,EAAKg+C,mBAAoB,OAENh8C,IAAf07C,GAA6Br0C,MAAM4B,QAAQtE,EAAY,IAMzD3G,EAAKo+C,eAC0Dz3C,EAC7D+2C,GAPF19C,EAAKm+C,mBACHT,EAC8B/2C,YAxBblH,EAAA6hD,EAAAziD,GAuCvByiD,EAAA5hD,UAAAqR,MAAK,sBACQuwC,EAAU9hD,KAAMiV,gBAAgB5O,QAAKrG,KAASg/C,SAU3D8C,EAAA5hD,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,UAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAC9D0vC,QAEAX,mBAAiBx+C,KAASoiB,qBAC5Bm8B,UAAY3uC,KAAK8W,KAAI04B,EAAA2C,gBAAA/hD,KAEjBiV,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACL,SAGCqpC,kBAAiBx+C,KAAQoiB,yCAGzBnN,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OAAMnV,KACNu+C,WACL,EACA/uC,EACAC,EACAyvC,EACAC,KASJ2C,EAAA5hD,UAAAyS,QAAO,oCAEEsC,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,SAST2sC,EAAA5hD,UAAAq7C,eAAc,4CAELtmC,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,SAST2sC,EAAA5hD,UAAAsgD,8BAA6B,SAACC,OACtBC,EAAyB,UAC/BA,EAA0B9kD,OAAMglD,EAAAoB,eAAAhiD,KACzBiV,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACLsrC,EACAC,EACA,OAESoB,EAAWpB,EAAyBZ,EAAAvjD,QAAiBukD,KAQlEgB,EAAA5hD,UAAAwtC,QAAO,4BACeqF,aAStB+O,EAAA5hD,UAAA6gD,iBAAgB,SAAC/sC,UACR,GAST8tC,EAAA5hD,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,SAEjBA,gBAAgBrZ,OAAMqlD,EAAAgB,mBAAAjiD,KACpBiV,gBACL,EACA9N,EAAWnH,KACNmV,aAEFqI,WAETskC,EArKA,sBAuKeD,kaCoIZ34C,EAAAF,OAAAzN,EAAA,sBAAA,IACa2mD,IAiBbh5C,EAAAF,OAAAzN,EAAA,mBAAA,IACa4mD,IAhVb,MAAAC,EAAAnnD,EAAA,2lBAeHonD,EAAA,SAAAhjD,YACEijD,QAAA9hD,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKw+C,OAAMc,EAAAvjD,QAAkBukD,GAM7BtgD,EAAK2U,OAAS,EAMd3U,EAAKyU,gBAAkB,cApBEhV,EAAAqiD,EAAAjjD,GA4B3BijD,EAAApiD,UAAAqiD,cAAa,SAACvuC,mDAELiB,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACLnB,IAQJsuC,EAAApiD,UAAAq7C,eAAc,gCASd+G,EAAApiD,UAAAsiD,mBAAkB,uBACJvtC,gBAAgB5O,MAAM,EAACrG,KAAOmV,SAM5CmtC,EAAApiD,UAAA+tC,mBAAkB,uBACJh5B,iBAQdqtC,EAAApiD,UAAAuiD,kBAAiB,uBACHxtC,gBAAgB5O,MAAKrG,KAC1BiV,gBAAgBrZ,OAAMoE,KAAQmV,SASvCmtC,EAAApiD,UAAAshD,UAAS,uBACKxC,QAQdsD,EAAApiD,UAAAqtC,sBAAqB,SAACkT,WACXiC,6BAA0B1iD,KAAUoiB,qBACtCugC,yCAA2C,OAC3CD,2BAA0B1iD,KAAQoiB,eAKvCq+B,EAAmB,GACgC,IAD/BzgD,KACd2iD,0CACJlC,GAAgBzgD,KAAS2iD,yCAAwC,OAAA3iD,SAK/D4iD,EAAkB5iD,KAAQwgD,8BAC9BC,UAEgCmC,EAAmB3U,qBACvBryC,OAAMoE,KAAQiV,gBAAgBrZ,OACnDgnD,QAQFD,yCAA2ClC,SAUpD6B,EAAApiD,UAAAsgD,8BAA6B,SAACC,gBAO9B6B,EAAApiD,UAAAouC,UAAS,uBACKn5B,QAOdmtC,EAAApiD,UAAAy+C,mBAAkB,SAACK,EAAQ/pC,QACpBE,OAAS+sC,EAAmBlD,QAC5BA,OAASA,OACT/pC,gBAAkBA,GAQzBqtC,EAAApiD,UAAA0+C,eAAc,SAACz3C,EAAa+2C,iBAU5BoE,EAAApiD,UAAA8gD,UAAS,SAAChC,EAAQ73C,EAAa07C,GACR,IACjB1tC,KACA6pC,EACF7pC,EAAS+sC,EAAmBlD,gBAEnBrjD,EAAI,EAAGA,EAAIknD,IAAWlnD,EAAC,CAAA,GACH,IAAvBwL,EAAYvL,mBACTojD,OAAMc,EAAAvjD,QAAkBukD,aACxB3rC,OAAS,GAGdhO,EAAoCA,EAAY,GAIpD63C,EA6GH,SACyB7pC,OACtB6pC,EACU,GAAV7pC,EACF6pC,EAAMc,EAAAvjD,QAAkBukD,GACL,GAAV3rC,EACT6pC,EAAMc,EAAAvjD,QAAkBolD,IACL,GAAVxsC,IACT6pC,EAAMc,EAAAvjD,QAAkBqlD,aAEmC5C,EAvHhD8D,CADT3tC,EAAShO,EAAYvL,aAGlBojD,OAASA,OACT7pC,OAASA,GAYhBmtC,EAAApiD,UAAA4T,eAAc,SAAC6D,QACJ1C,kBACP0C,EAAW3X,KAAMiV,gBAAejV,KAAOiV,gBAAejV,KAAOmV,aACxDqI,YAWT8kC,EAAApiD,UAAAuN,OAAM,SAACiC,EAAOs5B,OACN/zB,EAAejV,KAAQiuC,wBACzBh5B,EAAe,KACXE,EAAMnV,KAAQsuC,qBAElBr5B,EACA,EACAA,EAAgBrZ,OAChBuZ,EACAzF,EACAs5B,EACA/zB,QAEGuI,YAaT8kC,EAAApiD,UAAAwN,MAAK,SAACwC,EAAI6yC,EAAQrT,OACZv/B,EAAK4yC,OACEvgD,IAAP2N,IACFA,EAAKD,OAEH84B,EAAS0G,EACR1G,IACHA,EAAMriC,EAAAmM,UAAA9S,KAAkByG,kBAEpBwO,EAAejV,KAAQiuC,wBACzBh5B,EAAe,KACXE,EAAMnV,KAAQsuC,oBAElBr5B,EACA,EACAA,EAAgBrZ,OAChBuZ,EACAjF,EACAC,EACA64B,EACA/zB,QAEGuI,YAWT8kC,EAAApiD,UAAA0N,UAAS,SAACoJ,EAAQC,OACVhC,EAAejV,KAAQiuC,wBACzBh5B,EAAe,KACXE,EAAMnV,KAAQsuC,wBAElBr5B,EACA,EACAA,EAAgBrZ,OAChBuZ,EACA6B,EACAC,EACAhC,QAEGuI,YAGX8kC,EAzRA,qBA+SgBJ,EAAmBlD,OAC7B7pC,SACA6pC,GAAMc,EAAAvjD,QAAmBukD,GAC3B3rC,EAAS,EACA6pC,GAAMc,EAAAvjD,QAAmBolD,KAAO3C,GAAMc,EAAAvjD,QAAmBwjD,IAClE5qC,EAAS,EACA6pC,GAAMc,EAAAvjD,QAAmBqlD,OAClCzsC,EAAS,GAEmBA,WAShBgtC,EAAgBa,EAAgB30C,EAAW40C,OACnDhuC,EAAkB+tC,EAAe/U,wBAClCh5B,OAGGE,EAAS6tC,EAAe1U,iCAE5Br5B,EACA,EACAA,EAAgBrZ,OAChBuZ,EACA9G,EACA40C,GAVgB,OACX,eAcIZ,ySCjWZ,MAAA5lC,EAAAxhB,EAAA,upBAqBGioD,EAAYzzB,EAAAriB,SAclB+1C,EAAA,SAAA9jD,YACE+jD,QAAA5iD,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKs4C,QAAOnyC,EAAAkL,cAMZrR,EAAK6iD,iBAAkB,EAMvB7iD,EAAKmiD,yCAA2C,EAMhDniD,EAAKkiD,2BAA6B,EAUlCliD,EAAK8iD,4BAA2Bz7C,EAAAwB,YAAA,SAC9Bk6C,EACA9C,EACA+C,OAEKA,EAAa,OAAAxjD,KACJutC,sBAAsBkT,OAE9BlvC,EAAKvR,KAAQuR,eACnBA,EAAMuC,eAAe0vC,GACdjyC,EAAMg8B,sBAAsBkT,eA9ClBxgD,EAAAmjD,EAAA/jD,GAyDrB+jD,EAAAljD,UAAAujD,oBAAmB,SAAChD,EAAkB+C,eACxBF,4BAA2BtjD,KAChCoiB,cACLq+B,EACA+C,IASJJ,EAAAljD,UAAAqR,MAAK,gCAYL6xC,EAAAljD,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,wBASnCiE,EAAAljD,UAAAyR,WAAU,SAACnC,EAAGC,OACNuoC,EAAKh4C,KAAQ0jD,gBAAe,CAAEl0C,EAAGC,WAChCuoC,EAAM,KAAOxoC,GAAKwoC,EAAM,KAAOvoC,GAWxC2zC,EAAAljD,UAAAwjD,gBAAe,SAAC/N,EAAOgO,OACfzE,EAAeyE,GAAmC,CAAIC,IAAKA,iBAC5D3E,eAAetJ,EAAM,GAAIA,EAAM,GAAIuJ,EAAclqC,EAAAA,GAC/CkqC,GAUTkE,EAAAljD,UAAA2jD,qBAAoB,SAACj+C,eACP+L,WAAW/L,EAAW,GAAIA,EAAW,KASnDw9C,EAAAljD,UAAAqiD,cAAa,SAACvuC,wBAUdovC,EAAAljD,UAAAuG,UAAS,SAACwN,WACCovC,iBAAerjD,KAASoiB,cAAW,KACpCpO,EAAMhU,KAAQuiD,cAAaviD,KAAM84C,UACnCtrB,MAAMxZ,EAAO,KAAOwZ,MAAMxZ,EAAO,MAACrN,EAAAoL,oBAChBiC,QAEjBqvC,gBAAerjD,KAAQoiB,2CAEH02B,QAAS7kC,IAWtCmvC,EAAAljD,UAAAuN,OAAM,SAACiC,EAAOs5B,iBAcdoa,EAAAljD,UAAAwN,MAAK,SAACwC,EAAI6yC,EAAQrT,iBAalB0T,EAAAljD,UAAA4jD,SAAQ,SAACzuC,eACKk4B,sBAAsBl4B,EAAYA,IAWhD+tC,EAAAljD,UAAAqtC,sBAAqB,SAACkT,wBAStB2C,EAAAljD,UAAAwtC,QAAO,gCAaP0V,EAAAljD,UAAA4T,eAAc,SAAC6D,iBAUfyrC,EAAAljD,UAAA6gD,iBAAgB,SAAC/sC,wBAYjBovC,EAAAljD,UAAA0N,UAAS,SAACoJ,EAAQC,iBAmBlBmsC,EAAAljD,UAAAmO,UAAS,SAAC7R,EAAQ+5C,GACsC,IAChDa,EAAUne,EAAA98B,IAAiBK,GAC3Bmb,EACJy/B,EAAWpB,YAAQjE,EAAAx1C,QAAYk3C,YAAW,SAC5BsQ,EAAeC,EAAgB7uC,OACjC8uC,EAAc7M,EAAW3wC,YACzBy9C,EAAkB9M,EAAWqC,iBAC7B/rC,EAAK/G,EAAAuM,UAAagxC,GAAev9C,EAAAuM,UAAc+wC,oBAEnDf,EACAgB,EAAgB,GAChBA,EAAgB,GAChBx2C,GACCA,EACD,EACA,EACA,iBAGAq2C,EACA,EACAA,EAAcnoD,OACduZ,EACA+tC,EACAc,kBAEkB5M,EAAYb,GAC9BwN,EACAC,EACA7uC,mBAGSiiC,EAAYb,eAC1BziC,eAAe6D,SAGxByrC,EAvSA,sBAySeD,gWCjUCgB,EACdlvC,EACAC,EACA7J,EACA8J,EACA9G,EACA40C,WAEMp6C,EAAOo6C,GAAmB,GAC5BtnD,EAAI,EACCqL,EAAIkO,EAAQlO,EAAIqE,EAAKrE,GAAKmO,EAAM,KACjC3F,EAAIyF,EAAgBjO,GACpByI,EAAIwF,EAAgBjO,EAAI,GAC9B6B,EAAKlN,KAAO0S,EAAU,GAAKmB,EAAInB,EAAU,GAAKoB,EAAIpB,EAAU,GAC5DxF,EAAKlN,KAAO0S,EAAU,GAAKmB,EAAInB,EAAU,GAAKoB,EAAIpB,EAAU,UAE1D40C,GAAYp6C,EAAKjN,QAAUD,IAC7BkN,EAAKjN,OAASD,GAETkN,WAaO4E,EACdwH,EACAC,EACA7J,EACA8J,EACAzF,EACAs5B,EACAia,WAEMp6C,EAAOo6C,GAAmB,GAC1BtzC,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,GACf00C,EAAUpb,EAAO,GACjBqb,EAAUrb,EAAO,GACnBrtC,EAAI,EACCqL,EAAIkO,EAAQlO,EAAIqE,EAAKrE,GAAKmO,EAAM,KACjC6B,EAAS/B,EAAgBjO,GAAKo9C,EAC9BntC,EAAShC,EAAgBjO,EAAI,GAAKq9C,EACxCx7C,EAAKlN,KAAOyoD,EAAUptC,EAASrH,EAAMsH,EAASpH,EAC9ChH,EAAKlN,KAAO0oD,EAAUrtC,EAASnH,EAAMoH,EAAStH,UACrCgM,EAAI3U,EAAI,EAAG2U,EAAI3U,EAAImO,IAAUwG,EACpC9S,EAAKlN,KAAOsZ,EAAgB0G,UAG5BsnC,GAAYp6C,EAAKjN,QAAUD,IAC7BkN,EAAKjN,OAASD,GAETkN,WAeO6E,EACduH,EACAC,EACA7J,EACA8J,EACAjF,EACAC,EACA64B,EACAia,WAEMp6C,EAAOo6C,GAAmB,GAC1BmB,EAAUpb,EAAO,GACjBqb,EAAUrb,EAAO,GACnBrtC,EAAI,EACCqL,EAAIkO,EAAQlO,EAAIqE,EAAKrE,GAAKmO,EAAM,KACjC6B,EAAS/B,EAAgBjO,GAAKo9C,EAC9BntC,EAAShC,EAAgBjO,EAAI,GAAKq9C,EACxCx7C,EAAKlN,KAAOyoD,EAAUl0C,EAAK8G,EAC3BnO,EAAKlN,KAAO0oD,EAAUl0C,EAAK8G,UAClB0E,EAAI3U,EAAI,EAAG2U,EAAI3U,EAAImO,IAAUwG,EACpC9S,EAAKlN,KAAOsZ,EAAgB0G,UAG5BsnC,GAAYp6C,EAAKjN,QAAUD,IAC7BkN,EAAKjN,OAASD,GAETkN,WAaO+E,EACdqH,EACAC,EACA7J,EACA8J,EACA6B,EACAC,EACAgsC,WAEMp6C,EAAOo6C,GAAmB,GAC5BtnD,EAAI,EACCqL,EAAIkO,EAAQlO,EAAIqE,EAAKrE,GAAKmO,EAAM,CACvCtM,EAAKlN,KAAOsZ,EAAgBjO,GAAKgQ,EACjCnO,EAAKlN,KAAOsZ,EAAgBjO,EAAI,GAAKiQ,UAC5B0E,EAAI3U,EAAI,EAAG2U,EAAI3U,EAAImO,IAAUwG,EACpC9S,EAAKlN,KAAOsZ,EAAgB0G,UAG5BsnC,GAAYp6C,EAAKjN,QAAUD,IAC7BkN,EAAKjN,OAASD,GAETkN,yBAvINK,EAAAF,OAAAzN,EAAA,eAAA,IACa4oD,IA+Bbj7C,EAAAF,OAAAzN,EAAA,UAAA,IACakS,IAyCbvE,EAAAF,OAAAzN,EAAA,SAAA,IACamS,IAsCbxE,EAAAF,OAAAzN,EAAA,aAAA,IACaqS,2KC5Db1E,EAAAF,OAAAzN,EAAA,mBAAA,IACawmD,IAuBb74C,EAAAF,OAAAzN,EAAA,wBAAA,IACa8jD,IAsBbn2C,EAAAF,OAAAzN,EAAA,6BAAA,IACa+oD,IA4Bbp7C,EAAAF,OAAAzN,EAAA,sBAAA,IACagpD,IAgHbr7C,EAAAF,OAAAzN,EAAA,2BAAA,IACaipD,IA+Cbt7C,EAAAF,OAAAzN,EAAA,gCAAA,IACakpD,IA9Sb,IAAAlqC,EAAAtf,EAAA,iBAcA,SACMypD,EACPzvC,EACA0vC,EACAC,EACAzvC,EACA3F,EACAC,EACAyvC,OAMIhqC,EAJEsB,EAAKvB,EAAgB0vC,GACrB/tC,EAAK3B,EAAgB0vC,EAAU,GAC/B70C,EAAKmF,EAAgB2vC,GAAWpuC,EAChCzG,EAAKkF,EAAgB2vC,EAAU,GAAKhuC,KAE/B,IAAP9G,GAAmB,IAAPC,EACdmF,EAASyvC,WAEHrpC,IAAM9L,EAAIgH,GAAM1G,GAAML,EAAImH,GAAM7G,IAAOD,EAAKA,EAAKC,EAAKA,MACxDuL,EAAI,EACNpG,EAAS0vC,UACAtpC,EAAI,EAAC,SACL3f,EAAI,EAAGA,EAAIwZ,IAAUxZ,EAC5BujD,EAAavjD,GAAC4e,EAAAW,KACZjG,EAAgB0vC,EAAUhpD,GAC1BsZ,EAAgB2vC,EAAUjpD,GAC1B2f,eAGJ4jC,EAAatjD,OAASuZ,GAGtBD,EAASyvC,OAGJhpD,EAAI,EAAGA,EAAIwZ,IAAUxZ,EAC5BujD,EAAavjD,GAAKsZ,EAAgBC,EAASvZ,GAE7CujD,EAAatjD,OAASuZ,WAaR4sC,EAAgB9sC,EAAiBC,EAAQ7J,EAAK8J,EAAQK,OAChEgB,EAAKvB,EAAgBC,GACrB0B,EAAK3B,EAAgBC,EAAS,OAC7BA,GAAUC,EAAQD,EAAS7J,EAAK6J,GAAUC,EAAM,KAC7CsB,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,GAC9B2vC,EAAYtqC,EAAAM,gBAAarE,EAAII,EAAIH,EAAII,GACvCguC,EAAervC,IACjBA,EAAMqvC,GAERruC,EAAKC,EACLG,EAAKC,SAEArB,WAWO6pC,EACdpqC,EACAC,EACAirC,EACAhrC,EACAK,WAES7Z,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACjB6Z,EAAMusC,EAAgB9sC,EAAiBC,EAAQ7J,EAAK8J,EAAQK,GAC5DN,EAAS7J,SAEJmK,WAWO8uC,EACdrvC,EACAC,EACA4vC,EACA3vC,EACAK,WAES7Z,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnB6Z,EAAM6pC,EAAqBpqC,EAAiBC,EAAQirC,EAAMhrC,EAAQK,GAClEN,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvB4Z,WAiBO+uC,EACdtvC,EACAC,EACA7J,EACA8J,EACA4vC,EACAC,EACAx1C,EACAC,EACAyvC,EACAC,EACA8F,MAEI/vC,GAAU7J,EAAG,OACR8zC,MAELxjD,EAAGkf,KACU,IAAbkqC,EAAc,KAEhBlqC,EAAeN,EAAAM,gBACbrL,EACAC,EACAwF,EAAgBC,GAChBD,EAAgBC,EAAS,KAELiqC,EAAkB,KACjCxjD,EAAI,EAAGA,EAAIwZ,IAAUxZ,EACxBujD,EAAavjD,GAAKsZ,EAAgBC,EAASvZ,UAE7CujD,EAAatjD,OAASuZ,EACf0F,SAEAskC,UAGL+F,EAAWD,GAA2B,CAAIrB,IAAKA,KACjDz3C,EAAQ+I,EAASC,EACdhJ,EAAQd,MACbq5C,EACEzvC,EACA9I,EAAQgJ,EACRhJ,EACAgJ,EACA3F,EACAC,EACAy1C,IAEFrqC,EAAeN,EAAAM,gBAAarL,EAAGC,EAAGy1C,EAAS,GAAIA,EAAS,KAClC/F,EAAkB,KACtCA,EAAqBtkC,EAChBlf,EAAI,EAAGA,EAAIwZ,IAAUxZ,EACxBujD,EAAavjD,GAAKupD,EAASvpD,GAE7BujD,EAAatjD,OAASuZ,EACtBhJ,GAASgJ,OAYThJ,GACEgJ,EACAvF,KAAK4F,KACD5F,KAAK8W,KAAK7L,GAAmBjL,KAAK8W,KAAKy4B,IACvC4F,EACA,EACF,MAIJC,IAEFN,EACEzvC,EACA5J,EAAM8J,EACND,EACAC,EACA3F,EACAC,EACAy1C,IAEFrqC,EAAeN,EAAAM,gBAAarL,EAAGC,EAAGy1C,EAAS,GAAIA,EAAS,KAClC/F,GAAkB,KACtCA,EAAqBtkC,EAChBlf,EAAI,EAAGA,EAAIwZ,IAAUxZ,EACxBujD,EAAavjD,GAAKupD,EAASvpD,GAE7BujD,EAAatjD,OAASuZ,SAGnBgqC,WAiBOqF,EACdvvC,EACAC,EACAirC,EACAhrC,EACA4vC,EACAC,EACAx1C,EACAC,EACAyvC,EACAC,EACA8F,WAEMC,EAAWD,GAA2B,CAAIrB,IAAKA,KAC5CjoD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACjBwjD,EAAqBoF,EACnBtvC,EACAC,EACA7J,EACA8J,EACA4vC,EACAC,EACAx1C,EACAC,EACAyvC,EACAC,EACA+F,GAEFhwC,EAAS7J,SAEJ8zC,WAiBOsF,EACdxvC,EACAC,EACA4vC,EACA3vC,EACA4vC,EACAC,EACAx1C,EACAC,EACAyvC,EACAC,EACA8F,WAEMC,EAAWD,GAA2B,CAAIrB,IAAKA,KAC5CjoD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnBwjD,EAAqBqF,EACnBvvC,EACAC,EACAirC,EACAhrC,EACA4vC,EACAC,EACAx1C,EACAC,EACAyvC,EACAC,EACA+F,GAEFhwC,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvBujD,oLCpUOgG,EAAkBlwC,EAAiBC,EAAQtP,EAAYuP,WAC5DxZ,EAAI,EAAG6H,EAAKoC,EAAWhK,OAAQD,EAAI6H,IAAM7H,EAChDsZ,EAAgBC,KAAYtP,EAAWjK,UAElCuZ,WAUO+sC,EACdhtC,EACAC,EACA/N,EACAgO,WAESxZ,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,UAC3CiK,EAAauB,EAAYxL,GACtBqL,EAAI,EAAGA,EAAImO,IAAUnO,EAC5BiO,EAAgBC,KAAYtP,EAAWoB,UAGpCkO,WAWOgsC,EACdjsC,EACAC,EACAkwC,EACAjwC,EACAgpC,WAEMgC,EAAOhC,GAAmB,GAC5BxiD,EAAI,EACCqL,EAAI,EAAGsjC,EAAK8a,EAAaxpD,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KAC7CqE,EAAM42C,EACVhtC,EACAC,EACAkwC,EAAap+C,GACbmO,GAEFgrC,EAAKxkD,KAAO0P,EACZ6J,EAAS7J,SAEX80C,EAAKvkD,OAASD,EACPwkD,WAWOkF,EACdpwC,EACAC,EACAowC,EACAnwC,EACAowC,WAEMT,EAAQS,GAAqB,GAC/B5pD,EAAI,EACCqL,EAAI,EAAGsjC,EAAKgb,EAAc1pD,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KAC9Cm5C,EAAOe,EACXjsC,EACAC,EACAowC,EAAct+C,GACdmO,EACA2vC,EAAMnpD,IAERmpD,EAAMnpD,KAAOwkD,EACbjrC,EAASirC,EAAKA,EAAKvkD,OAAS,UAE9BkpD,EAAMlpD,OAASD,EACRmpD,yBA1FN57C,EAAAF,OAAAzN,EAAA,qBAAA,IACa4pD,IAabj8C,EAAAF,OAAAzN,EAAA,sBAAA,IACa0mD,IAsBb/4C,EAAAF,OAAAzN,EAAA,2BAAA,IACa2lD,IA8Bbh4C,EAAAF,OAAAzN,EAAA,gCAAA,IACa8pD,2KCtCbn8C,EAAAF,OAAAzN,EAAA,sBAAA,IACaiqD,IAiDbt8C,EAAAF,OAAAzN,EAAA,kBAAA,IACaymD,IA0Eb94C,EAAAF,OAAAzN,EAAA,uBAAA,IACakqD,IAsCbv8C,EAAAF,OAAAzN,EAAA,4BAAA,IACamqD,IAuCbx8C,EAAAF,OAAAzN,EAAA,kBAAA,IACaoqD,IAgDbz8C,EAAAF,OAAAzN,EAAA,QAAA,IACaqqD,IAsBb18C,EAAAF,OAAAzN,EAAA,YAAA,IACasqD,IA4Fb38C,EAAAF,OAAAzN,EAAA,iBAAA,IACaslD,IAsCb33C,EAAAF,OAAAzN,EAAA,sBAAA,IACauqD,sCAxZAN,EACdvwC,EACAC,EACA7J,EACA8J,EACAsrC,EACAsF,EACAC,OAEMtF,OAC8Bl+C,IAAlCwjD,EACIA,EAA6B,UAE9BD,IACH16C,EAAMs6C,EACJ1wC,EACAC,EACA7J,EACA8J,EACAsrC,EACAC,EACA,GAEFzrC,EAAkByrC,EAClBxrC,EAAS,EACTC,EAAS,GAEXurC,EAA0B9kD,OAASomD,EACjC/sC,EACAC,EACA7J,EACA8J,EACAsrC,EACAC,EACA,GAEKA,WAcOsB,EACd/sC,EACAC,EACA7J,EACA8J,EACAsrC,EACAC,EACAuF,OAEM/6C,GAAKG,EAAM6J,GAAUC,KACvBjK,EAAI,EAAC,MACAgK,EAAS7J,EAAK6J,GAAUC,EAC7BurC,EAA0BuF,KAAsBhxC,EAAgBC,GAChEwrC,EAA0BuF,KACxBhxC,EAAgBC,EAAS,UAEtB+wC,EAEmB,IACtBC,EAAO,IAAOr8C,MAAMqB,GAC1Bg7C,EAAQ,GAAK,EACbA,EAAQh7C,EAAI,GAAK,MACW,IACtBi7C,EAAK,CAAIjxC,EAAQ7J,EAAM8J,GACzBhJ,EAAQ,EACLg6C,EAAMvqD,OAAS,GAAC,SACfwqD,EAAOD,EAAMznB,MACb2nB,EAAQF,EAAMznB,MAChB4nB,EAAqB,EACnB9vC,EAAKvB,EAAgBoxC,GACrBzvC,EAAK3B,EAAgBoxC,EAAQ,GAC7B5vC,EAAKxB,EAAgBmxC,GACrBvvC,EAAK5B,EAAgBmxC,EAAO,GACzBzqD,EAAI0qD,EAAQlxC,EAAQxZ,EAAIyqD,EAAMzqD,GAAKwZ,EAAM,KAC1C3F,EAAIyF,EAAgBtZ,GACpB8T,EAAIwF,EAAgBtZ,EAAI,GACxB4qD,EAAehsC,EAAAK,uBAA0BpL,EAAGC,EAAG+G,EAAII,EAAIH,EAAII,GAC7D0vC,EAAkBD,IACpBn6C,EAAQxQ,EACR2qD,EAAqBC,GAGrBD,EAAqB7F,IACvByF,GAAS/5C,EAAQ+I,GAAUC,GAAU,EACjCkxC,EAAQlxC,EAAShJ,GACnBg6C,EAAMliD,KAAKoiD,EAAOl6C,GAEhBA,EAAQgJ,EAASixC,GACnBD,EAAMliD,KAAKkI,EAAOi6C,QAIfzqD,EAAI,EAAGA,EAAIuP,IAAKvP,EACnBuqD,EAAQvqD,KACV+kD,EAA0BuF,KACxBhxC,EAAgBC,EAASvZ,EAAIwZ,GAC/BurC,EAA0BuF,KACxBhxC,EAAgBC,EAASvZ,EAAIwZ,EAAS,WAGrC8wC,WAeOR,EACdxwC,EACAC,EACAirC,EACAhrC,EACAsrC,EACAC,EACAuF,EACAtF,WAEShlD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACjBsqD,EAAmBjE,EACjB/sC,EACAC,EACA7J,EACA8J,EACAsrC,EACAC,EACAuF,GAEFtF,EAAe18C,KAAKgiD,GACpB/wC,EAAS7J,SAEJ46C,WAeOP,EACdzwC,EACAC,EACA4vC,EACA3vC,EACAsrC,EACAC,EACAuF,EACAO,WAES7qD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACbglD,EAAc,GACpBsF,EAAmBR,EACjBxwC,EACAC,EACAirC,EACAhrC,EACAsrC,EACAC,EACAuF,EACAtF,GAEF6F,EAAgBviD,KAAK08C,GACrBzrC,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvBqqD,WAcON,EACd1wC,EACAC,EACA7J,EACA8J,EACAsrC,EACAC,EACAuF,MAEI56C,GAAO6J,EAASC,EAAM,MAEjBD,EAAS7J,EAAK6J,GAAUC,EAC7BurC,EAA0BuF,KAAsBhxC,EAAgBC,GAChEwrC,EAA0BuF,KACxBhxC,EAAgBC,EAAS,UAEtB+wC,MAELzvC,EAAKvB,EAAgBC,GACrB0B,EAAK3B,EAAgBC,EAAS,GAElCwrC,EAA0BuF,KAAsBzvC,EAChDkqC,EAA0BuF,KAAsBrvC,MAC5CH,EAAKD,EACLK,EAAKD,MACJ1B,GAAUC,EAAQD,EAAS7J,EAAK6J,GAAUC,EAC7CsB,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,qBACVsB,EAAII,EAAIH,EAAII,GAAM4pC,IAEpCC,EAA0BuF,KAAsBxvC,EAChDiqC,EAA0BuF,KAAsBpvC,EAChDL,EAAKC,EACLG,EAAKC,UAGLJ,GAAMD,GAAMK,GAAMD,IAEpB8pC,EAA0BuF,KAAsBxvC,EAChDiqC,EAA0BuF,KAAsBpvC,GAE3CovC,WAQOL,EAAKj9C,EAAO0M,UACnBA,EAAYzF,KAAK2P,MAAM5W,EAAQ0M,YAsBxBwwC,EACd5wC,EACAC,EACA7J,EACA8J,EACAE,EACAqrC,EACAuF,MAGI/wC,GAAU7J,EAAG,OACR46C,MAWLxvC,EAAII,EARJL,EAAKovC,EAAK3wC,EAAgBC,GAASG,GACnCuB,EAAKgvC,EAAK3wC,EAAgBC,EAAS,GAAIG,GAC3CH,GAAUC,EAEVurC,EAA0BuF,KAAsBzvC,EAChDkqC,EAA0BuF,KAAsBrvC,QAK9CH,EAAKmvC,EAAK3wC,EAAgBC,GAASG,GACnCwB,EAAK+uC,EAAK3wC,EAAgBC,EAAS,GAAIG,IACvCH,GAAUC,IACI9J,SAKZq1C,EAA0BuF,KAAsBxvC,EAChDiqC,EAA0BuF,KAAsBpvC,EACzCovC,QAEFxvC,GAAMD,GAAMK,GAAMD,QACpB1B,EAAS7J,GAAG,KAEXqL,EAAKkvC,EAAK3wC,EAAgBC,GAASG,GACnCyB,EAAK8uC,EAAK3wC,EAAgBC,EAAS,GAAIG,MAC7CH,GAAUC,EAENuB,GAAMD,GAAMK,GAAMD,OAIhB7G,EAAMyG,EAAKD,EACXvG,EAAM4G,EAAKD,EAEXxG,EAAMsG,EAAKF,EACXnG,EAAMyG,EAAKF,EAKf5G,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3DwG,EAAKC,EACLG,EAAKC,IAMP4pC,EAA0BuF,KAAsBxvC,EAChDiqC,EAA0BuF,KAAsBpvC,EAChDL,EAAKC,EACLG,EAAKC,EACLJ,EAAKC,EACLG,EAAKC,WAGP4pC,EAA0BuF,KAAsBxvC,EAChDiqC,EAA0BuF,KAAsBpvC,EACzCovC,WAeOpF,EACd5rC,EACAC,EACAirC,EACAhrC,EACAE,EACAqrC,EACAuF,EACAtF,WAEShlD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACjBsqD,EAAmBJ,EACjB5wC,EACAC,EACA7J,EACA8J,EACAE,EACAqrC,EACAuF,GAEFtF,EAAe18C,KAAKgiD,GACpB/wC,EAAS7J,SAEJ46C,WAeOH,EACd7wC,EACAC,EACA4vC,EACA3vC,EACAE,EACAqrC,EACAuF,EACAO,WAES7qD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACbglD,EAAc,GACpBsF,EAAmBpF,EACjB5rC,EACAC,EACAirC,EACAhrC,EACAE,EACAqrC,EACAuF,EACAtF,GAEF6F,EAAgBviD,KAAK08C,GACrBzrC,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvBqqD,oLChdOQ,EACdxxC,EACAC,EACA7J,EACA8J,EACAuxC,WAEMv/C,OAAkC3E,IAApBkkD,EAAgCA,EAAe,GAC/D/qD,EAAI,EACCqL,EAAIkO,EAAQlO,EAAIqE,EAAKrE,GAAKmO,EACjChO,EAAYxL,KAAOsZ,EAAgB5O,MAAMW,EAAGA,EAAImO,UAElDhO,EAAYvL,OAASD,EACdwL,WAWOw/C,EACd1xC,EACAC,EACAirC,EACAhrC,EACAyxC,WAEMxB,OAAoC5iD,IAArBokD,EAAiCA,EAAgB,GAClEjrD,EAAI,EACCqL,EAAI,EAAGsjC,EAAK6V,EAAKvkD,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KACrCqE,EAAM80C,EAAKn5C,GACjBo+C,EAAazpD,KAAO8qD,EAClBxxC,EACAC,EACA7J,EACA8J,EACAiwC,EAAazpD,IAEfuZ,EAAS7J,SAEX+5C,EAAaxpD,OAASD,EACfypD,WAYOyB,EACd5xC,EACAC,EACA4vC,EACA3vC,EACA2xC,WAEMxB,OACkB9iD,IAAtBskD,EAAkCA,EAAiB,GACjDnrD,EAAI,EACCqL,EAAI,EAAGsjC,EAAKwa,EAAMlpD,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KACtCm5C,EAAO2E,EAAM99C,GACnBs+C,EAAc3pD,KAAOgrD,EACnB1xC,EACAC,EACAirC,EACAhrC,EACAmwC,EAAc3pD,IAEhBuZ,EAASirC,EAAKA,EAAKvkD,OAAS,UAE9B0pD,EAAc1pD,OAASD,EAChB2pD,yBAhFNp8C,EAAAF,OAAAzN,EAAA,sBAAA,IACakrD,IAuBbv9C,EAAAF,OAAAzN,EAAA,2BAAA,IACaorD,IAgCbz9C,EAAAF,OAAAzN,EAAA,gCAAA,IACasrD,6JC1DA/H,EAAW7pC,EAAiBC,EAAQ7J,EAAK8J,WACnD4xC,EAAY,EACZvwC,EAAKvB,EAAgB5J,EAAM8J,GAC3ByB,EAAK3B,EAAgB5J,EAAM8J,EAAS,GACjCD,EAAS7J,EAAK6J,GAAUC,EAAM,KAC7BsB,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,GACpC6xC,GAAanwC,EAAKH,EAAKD,EAAKK,EAC5BL,EAAKC,EACLG,EAAKC,SAEAkwC,EAAY,WAUL3G,EAAYnrC,EAAiBC,EAAQirC,EAAMhrC,WACrDO,EAAO,EACF/Z,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACjB+Z,GAAQopC,EAAW7pC,EAAiBC,EAAQ7J,EAAK8J,GACjDD,EAAS7J,SAEJqK,WAUOsxC,EAAa/xC,EAAiBC,EAAQ4vC,EAAO3vC,WACvDO,EAAO,EACF/Z,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnB+Z,GAAQ0qC,EAAYnrC,EAAiBC,EAAQirC,EAAMhrC,GACnDD,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvB8Z,yBA9CNxM,EAAAF,OAAAzN,EAAA,cAAA,IACaujD,IAoBb51C,EAAAF,OAAAzN,EAAA,eAAA,IACa6kD,IAgBbl3C,EAAAF,OAAAzN,EAAA,gBAAA,IACayrD,2KC/Cb,MAAAlM,EAAA7/C,EAAA,6lBAaHgsD,EAAA,SAAA5nD,GAIK,SACH6nD,EAAY//C,EAAa+2C,OAAzB19C,EACEnB,EAAAU,KAAAC,OAAAA,YACAQ,EAAKo+C,eAAez3C,EAAa+2C,YAPjBj+C,EAAAinD,EAAA7nD,GAelB6nD,EAAAhnD,UAAAqR,MAAK,eACGokC,EAAK,IAAOuR,EAAKlnD,KAAMiV,gBAAgB5O,QAAKrG,KAASg/C,eAC3DrJ,EAAMr0B,gBAAethB,MACd21C,GAUTuR,EAAAhnD,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,OAC3BlqC,EAAejV,KAAQiV,gBACvB4F,EAAeN,EAAAM,gBACnBrL,EACAC,EACAwF,EAAgB,GAChBA,EAAgB,OAEd4F,EAAkBskC,EAAkB,SAChChqC,EAAMnV,KAAQmV,OACXxZ,EAAI,EAAGA,EAAIwZ,IAAUxZ,EAC5BujD,EAAavjD,GAAKsZ,EAAgBtZ,UAEpCujD,EAAatjD,OAASuZ,EACf0F,SAEAskC,GASX+H,EAAAhnD,UAAAq7C,eAAc,uBACCtmC,gBAAejV,KAAaiV,gBAAgB5O,QAA7B,IAQ9B6gD,EAAAhnD,UAAAqiD,cAAa,SAACvuC,8CAC6BiB,gBAAiBjB,IAQ5DkzC,EAAAhnD,UAAAwtC,QAAO,4BACemF,OAStBqU,EAAAhnD,UAAA6gD,iBAAgB,SAAC/sC,uBACGA,EAAMhU,KAAOiV,gBAAgB,GAACjV,KAAQiV,gBAAgB,KAQ1EiyC,EAAAhnD,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,SAEjBA,gBAAgBrZ,OAAMqlD,EAAAkE,kBAAAnlD,KACpBiV,gBACL,EACA9N,EAAWnH,KACNmV,aAEFqI,WAET0pC,EAvGA,sBAyGeD,2SCtGZ/9C,EAAAF,OAAAzN,EAAA,2BAAA,IACaqkD,IAoEb12C,EAAAF,OAAAzN,EAAA,iCAAA,IACa4rD,IAtFb,IAAAC,EAAAnsD,EAAA,gDAiBa2kD,EACd3qC,EACAC,EACAirC,EACAhrC,EACAkyC,EACAC,EACArE,WAEItnD,EAAG6H,EAAIgM,EAAGgH,EAAIC,EAAIG,EAAIC,EACpBpH,EAAI43C,EAAYC,EAAoB,GAEpCC,EAAa,GAEVxtC,EAAI,EAAGytC,EAAKrH,EAAKvkD,OAAQme,EAAIytC,IAAMztC,EAAC,KACrC1O,EAAM80C,EAAKpmC,OACjBvD,EAAKvB,EAAgB5J,EAAM8J,GAC3ByB,EAAK3B,EAAgB5J,EAAM8J,EAAS,GAC/BxZ,EAAIuZ,EAAQvZ,EAAI0P,EAAK1P,GAAKwZ,EAC7BsB,EAAKxB,EAAgBtZ,GACrBkb,EAAK5B,EAAgBtZ,EAAI,IACpB8T,GAAKmH,GAAMC,GAAMpH,GAAOmH,GAAMnH,GAAKA,GAAKoH,KAC3CrH,GAAMC,EAAImH,IAAOC,EAAKD,IAAQH,EAAKD,GAAMA,EACzC+wC,EAActjD,KAAKuL,IAErBgH,EAAKC,EACLG,EAAKC,MAKL4wC,EAAS7D,IACT8D,GAAoB1yC,EAAAA,MACxBuyC,EAAcrkD,KAAIoG,EAAAkB,2BAClBgM,EAAK+wC,EAAc,GACd5rD,EAAI,EAAG6H,EAAK+jD,EAAc3rD,OAAQD,EAAI6H,IAAM7H,EAAC,CAChD8a,EAAK8wC,EAAc5rD,OACbgsD,EAAgB/3C,KAAK0F,IAAImB,EAAKD,GAChCmxC,EAAgBD,IAClBl4C,GAAKgH,EAAKC,GAAM,0BACUxB,EAAiBC,EAAQirC,EAAMhrC,EAAQ3F,EAAGC,KAClEg4C,EAASj4C,EACTk4C,EAAmBC,IAGvBnxC,EAAKC,SAEH+W,MAAMi6B,KAGRA,EAASJ,EAAYC,IAEnBrE,GACFA,EAASh/C,KAAKwjD,EAAQh4C,EAAGi4C,GAClBzE,IAECwE,EAAQh4C,EAAGi4C,YAaPP,EACdlyC,EACAC,EACA4vC,EACA3vC,EACAkyC,WAEIO,EAAc,GACTjsD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnBisD,EAAiBhI,EACf3qC,EACAC,EACAirC,EACAhrC,EACAkyC,EACA,EAAI1rD,EACJisD,GAEF1yC,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvBgsD,2NCjGN1+C,EAAAF,OAAAzN,EAAA,4BAAA,IACassD,IAmCb3+C,EAAAF,OAAAzN,EAAA,wBAAA,IACausD,IA0Cb5+C,EAAAF,OAAAzN,EAAA,yBAAA,IACawsD,IAgCb7+C,EAAAF,OAAAzN,EAAA,0BAAA,IACaysD,IA3Hb,IAAArhD,EAAA1L,EAAA,4BAWa4sD,EACd5yC,EACAC,EACA7J,EACA8J,EACAnB,UAEarN,EAAA+L,cACXsB,GAIG,SACOpO,UACAkiD,EACN7yC,EACAC,EACA7J,EACA8J,EACAvP,EAAW,GACXA,EAAW,gBAgBHkiD,EACd7yC,EACAC,EACA7J,EACA8J,EACA3F,EACAC,WASIw4C,EAAK,EACLzxC,EAAKvB,EAAgB5J,EAAM8J,GAC3ByB,EAAK3B,EAAgB5J,EAAM8J,EAAS,GACjCD,EAAS7J,EAAK6J,GAAUC,EAAM,KAC7BsB,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,GAChC0B,GAAMnH,EACJoH,EAAKpH,IAAMgH,EAAKD,IAAO/G,EAAImH,IAAOpH,EAAIgH,IAAOK,EAAKD,GAAM,GAC1DqxC,IAEOpxC,GAAMpH,IAAMgH,EAAKD,IAAO/G,EAAImH,IAAOpH,EAAIgH,IAAOK,EAAKD,GAAM,GAClEqxC,IAEFzxC,EAAKC,EACLG,EAAKC,SAEO,IAAPoxC,WAYOF,EACd9yC,EACAC,EACAirC,EACAhrC,EACA3F,EACAC,MAEoB,IAAhB0wC,EAAKvkD,OAAY,OACZ,MAEJksD,EAAqB7yC,EAAiBC,EAAQirC,EAAK,GAAIhrC,EAAQ3F,EAAGC,GAAC,OAC/D,UAEA9T,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,KAExCmsD,EAAqB7yC,EAAiBkrC,EAAKxkD,EAAI,GAAIwkD,EAAKxkD,GAAIwZ,EAAQ3F,EAAGC,GAAC,OAEjE,SAGJ,WAYOu4C,EACd/yC,EACAC,EACA4vC,EACA3vC,EACA3F,EACAC,MAEqB,IAAjBq1C,EAAMlpD,OAAY,OACb,UAEAD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,MACfosD,EAAsB9yC,EAAiBC,EAAQirC,EAAMhrC,EAAQ3F,EAAGC,GAAC,OAC5D,EAETyF,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvB,oMC3HNsN,EAAAF,OAAAzN,EAAA,wBAAA,IACa2sD,IAkDbh/C,EAAAF,OAAAzN,EAAA,6BAAA,IACa4sD,IAyBbj/C,EAAAF,OAAAzN,EAAA,wBAAA,IACa6sD,IAoEbl/C,EAAAF,OAAAzN,EAAA,6BAAA,IACa8sD,IA8Cbn/C,EAAAF,OAAAzN,EAAA,kCAAA,IACa+sD,IApNb,IAAA3hD,EAAA1L,EAAA,sEAmBaitD,EACdjzC,EACAC,EACA7J,EACA8J,EACAnB,OAEMu0C,EAAiB5hD,EAAA4L,sBAAA5L,EAAAkL,cAErBoD,EACAC,EACA7J,EACA8J,wBAEcnB,EAAQu0C,wBAGLv0C,EAAQu0C,KAGvBA,EAAkB,IAAMv0C,EAAO,IAAMu0C,EAAkB,IAAMv0C,EAAO,KAGpEu0C,EAAkB,IAAMv0C,EAAO,IAAMu0C,EAAkB,IAAMv0C,EAAO,cAItEiB,EACAC,EACA7J,EACA8J,GAMG,SACOqzC,EAAQC,8BACSz0C,EAAQw0C,EAAQC,kBAa/BN,EACdlzC,EACAC,EACAirC,EACAhrC,EACAnB,WAESrY,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,IAEzCusD,EAAqBjzC,EAAiBC,EAAQirC,EAAKxkD,GAAIwZ,EAAQnB,GAAM,OAE9D,EAETkB,EAASirC,EAAKxkD,UAET,WAWOysD,EACdnzC,EACAC,EACA7J,EACA8J,EACAnB,WAEIk0C,EAAqBjzC,EAAiBC,EAAQ7J,EAAK8J,EAAQnB,8BAK3DiB,EACAC,EACA7J,EACA8J,EACAnB,EAAO,GACPA,EAAO,+BAOPiB,EACAC,EACA7J,EACA8J,EACAnB,EAAO,GACPA,EAAO,+BAOPiB,EACAC,EACA7J,EACA8J,EACAnB,EAAO,GACPA,EAAO,8BAOPiB,EACAC,EACA7J,EACA8J,EACAnB,EAAO,GACPA,EAAO,gBAgBGq0C,EACdpzC,EACAC,EACAirC,EACAhrC,EACAnB,OAEKo0C,EAAqBnzC,EAAiBC,EAAQirC,EAAK,GAAIhrC,EAAQnB,GAAM,OACjE,KAEW,IAAhBmsC,EAAKvkD,OAAY,OACZ,UAEAD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,GAAAyrD,EAAAS,yBAGvC5yC,EACAkrC,EAAKxkD,EAAI,GACTwkD,EAAKxkD,GACLwZ,EACAnB,KAICk0C,EACCjzC,EACAkrC,EAAKxkD,EAAI,GACTwkD,EAAKxkD,GACLwZ,EACAnB,GAAM,OAGD,SAIN,WAWOs0C,EACdrzC,EACAC,EACA4vC,EACA3vC,EACAnB,WAESrY,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,MAEjB0sD,EAA0BpzC,EAAiBC,EAAQirC,EAAMhrC,EAAQnB,GAAM,OAEhE,EAETkB,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvB,sOCrNO2L,EAAQ0N,EAAiBC,EAAQ7J,EAAK8J,EAAQ1Q,WAGxDikD,EAFEF,EAAM,CAAIvzC,EAAgBC,GAASD,EAAgBC,EAAS,IAC5DuzC,EAAM,GAELvzC,EAASC,EAAS9J,EAAK6J,GAAUC,EAAM,IAC5CszC,EAAO,GAAKxzC,EAAgBC,EAASC,GACrCszC,EAAO,GAAKxzC,EAAgBC,EAASC,EAAS,GAC9CuzC,EAAMjkD,EAAS+jD,EAAQC,GAChB,OACEC,EAETF,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,UAEd,yBAfNv/C,EAAAF,OAAAzN,EAAA,WAAA,IACagM,2KCHb2B,EAAAF,OAAAzN,EAAA,yBAAA,IACaotD,IA4Bbz/C,EAAAF,OAAAzN,EAAA,0BAAA,IACaqtD,IA0Cb1/C,EAAAF,OAAAzN,EAAA,2BAAA,IACastD,IAiCb3/C,EAAAF,OAAAzN,EAAA,qBAAA,IACaglD,IAwCbr3C,EAAAF,OAAAzN,EAAA,0BAAA,IACautD,IAhKb,IAAAC,EAAA9tD,EAAA,yBAaa0tD,EAAsB1zC,EAAiBC,EAAQ7J,EAAK8J,WAG9D6zC,EAAO,EACPxyC,EAAKvB,EAAgB5J,EAAM8J,GAC3ByB,EAAK3B,EAAgB5J,EAAM8J,EAAS,GACjCD,EAAS7J,EAAK6J,GAAUC,EAAM,KAC7BsB,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,GACpC8zC,IAASvyC,EAAKD,IAAOK,EAAKD,GAC1BJ,EAAKC,EACLG,EAAKC,SAES,IAATmyC,OAAaxmD,EAAYwmD,EAAO,WAgBzBJ,EACd3zC,EACAC,EACAirC,EACAhrC,EACAoqC,WAEM0J,OAAsBzmD,IAAd+8C,GAA0BA,EAC/B5jD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACXutD,EAAcP,EAClB1zC,EACAC,EACA7J,EACA8J,MAEQ,IAANxZ,MACGstD,GAASC,IAAkBD,IAAUC,EAAW,OAC5C,UAGJD,IAAUC,IAAkBD,GAASC,EAAW,OAC5C,EAGXh0C,EAAS7J,SAEJ,WAgBOw9C,EACd5zC,EACAC,EACA4vC,EACA3vC,EACAoqC,WAES5jD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,OAEhBitD,EAAuB3zC,EAAiBC,EAAQirC,EAAMhrC,EAAQoqC,GAAS,OAEjE,EAELY,EAAKvkD,SACPsZ,EAASirC,EAAKA,EAAKvkD,OAAS,WAGzB,WAgBO2kD,EACdtrC,EACAC,EACAirC,EACAhrC,EACAoqC,WAEM0J,OAAsBzmD,IAAd+8C,GAA0BA,EAC/B5jD,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACXutD,EAAcP,EAClB1zC,EACAC,EACA7J,EACA8J,IAGM,IAANxZ,EACKstD,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IACjCH,EAAA5hD,YACU8N,EAAiBC,EAAQ7J,EAAK8J,GAEnDD,EAAS7J,SAEJ6J,WAgBO4zC,EACd7zC,EACAC,EACA4vC,EACA3vC,EACAoqC,WAES5jD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAC3CuZ,EAASqrC,EACPtrC,EACAC,EACA4vC,EAAMnpD,GACNwZ,EACAoqC,UAGGrqC,mLCxKO/N,EAAY8N,EAAiBC,EAAQ7J,EAAK8J,QACjDD,EAAS7J,EAAM8J,GAAM,SACjBxZ,EAAI,EAAGA,EAAIwZ,IAAUxZ,EAAC,KACvB2P,EAAM2J,EAAgBC,EAASvZ,GACrCsZ,EAAgBC,EAASvZ,GAAKsZ,EAAgB5J,EAAM8J,EAASxZ,GAC7DsZ,EAAgB5J,EAAM8J,EAASxZ,GAAK2P,EAEtC4J,GAAUC,EACV9J,GAAO8J,0BATRjM,EAAAF,OAAAzN,EAAA,eAAA,IACa4L,6JCOAmK,EAAO9L,EAAM2jD,EAAK5d,eACf/oC,IAAb+oC,IACFA,EAAQ,CAAI,EAAG,IAEjBA,EAAS,GAAK/lC,EAAK,GAAK,EAAI2jD,EAC5B5d,EAAS,GAAK/lC,EAAK,GAAK,EAAI2jD,EACrB5d,WAQO1O,EAAQr3B,UACfA,EAAK,GAAK,GAAKA,EAAK,GAAK,WAUlBkI,EAAMlI,EAAMiqC,EAAOlE,eAChB/oC,IAAb+oC,IACFA,EAAQ,CAAI,EAAG,IAEjBA,EAAS,GAAM/lC,EAAK,GAAKiqC,EAAQ,GAAO,EACxClE,EAAS,GAAM/lC,EAAK,GAAKiqC,EAAQ,GAAO,EACjClE,WAYO6d,EAAO5jD,EAAM+lC,UACvB1hC,MAAM4B,QAAQjG,GACTA,QAEUhD,IAAb+oC,EACFA,EAAQ,CAAI/lC,EAAMA,IAElB+lC,EAAS,GAAK/lC,EACd+lC,EAAS,GAAK/lC,GAET+lC,0BAtDRriC,EAAAF,OAAAzN,EAAA,UAAA,IACa+V,IAabpI,EAAAF,OAAAzN,EAAA,WAAA,IACashC,IAUb3zB,EAAAF,OAAAzN,EAAA,SAAA,IACamS,IAiBbxE,EAAAF,OAAAzN,EAAA,UAAA,IACa6tD,8jBCZblgD,EAAAF,OAAAzN,EAAA,YAAA,IACaoE,IA/Cb,IAAA0pD,EAAApuD,EAAA,6jBA+Ca0E,EAAS63B,OACjBr6B,EAAUq6B,GAAyB,GAEnC/3B,EAAQ,IAAAg0B,EAAAl3B,oBAEuBiG,IAAjBrF,EAAQ+B,MAAqB/B,EAAQ+B,OAEvDO,EAASwE,KAAI,IAAAqlD,EAAA/sD,QAAUY,EAAQosD,oBAGQ/mD,IAAnBrF,EAAQsQ,QAAuBtQ,EAAQsQ,SAE3DhO,EAASwE,KAAI,IAAAulD,EAAAjtD,QAAYY,EAAQssD,sBAITjnD,IAAxBrF,EAAQusD,aAA4BvsD,EAAQusD,cAE5CjqD,EAASwE,KAAI,IAAA0lD,EAAAptD,QAAiBY,EAAQysD,qBAGjCnqD,+gBCpEN,MAAAC,EAAAzE,EAAA,0mBA4CH4uD,EAAA,SAAAxqD,GAGK,SACHyqD,EAAYtyB,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/B4C,OAAQ7G,EAAQ6G,OAChBnF,OAAQ1B,EAAQ0B,gBAObkrD,WAAa5oD,SAASC,cAAa,MAMxCZ,EAAKwpD,gBACmBxnD,IAAtBrF,EAAQ8sD,WAA0B9sD,EAAQ8sD,UAM5CzpD,EAAK0pD,eAAiB1pD,EAAKwpD,WAM3BxpD,EAAK2pD,0BAA+C3nD,IAAxBrF,EAAQitD,YAMpC5pD,EAAK6pD,kBACqB7nD,IAAxBrF,EAAQitD,aAA4BjtD,EAAQitD,YAEzC5pD,EAAK6pD,eACR7pD,EAAKwpD,YAAa,OAGdxoD,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,iBAE/C8oD,OACiB9nD,IAArBrF,EAAQmtD,SAAyBntD,EAAQmtD,SAAQ,eAE7CC,OACwB/nD,IAA5BrF,EAAQotD,gBACJptD,EAAQotD,gBACR/oD,EAAS,UAETgpD,OACsBhoD,IAA1BrF,EAAQqtD,cAA8BrtD,EAAQqtD,cAAa,IAEvDC,OAC0BjoD,IAA9BrF,EAAQstD,kBACJttD,EAAQstD,kBACRjpD,EAAS,YAES,iBAAbgpD,GAKThqD,EAAKkqD,eAAiBvpD,SAASC,cAAa,QAC5CZ,EAAKkqD,eAAeC,YAAcH,EAClChqD,EAAKkqD,eAAelpD,UAAYipD,GAEhCjqD,EAAKkqD,eAAiBF,MAGlBr7B,OAA0B3sB,IAAlBrF,EAAQgyB,MAAsBhyB,EAAQgyB,MAAK,IAEzC,iBAALA,GAKT3uB,EAAKoqD,OAASzpD,SAASC,cAAa,QACpCZ,EAAKoqD,OAAOD,YAAcx7B,EAC1B3uB,EAAKoqD,OAAOppD,UAAY+oD,GAExB/pD,EAAKoqD,OAASz7B,MAGV07B,EACJrqD,EAAK6pD,eAAiB7pD,EAAKwpD,WAAaxpD,EAAKkqD,eAAiBlqD,EAAKoqD,OAC/DxoB,EAASjhC,SAASC,cAAa,UACrCghC,EAAO0oB,aAAY,OAAO,UAC1B1oB,EAAO2oB,MAAQT,EACfloB,EAAO5oB,YAAYqxC,GAEnBzoB,EAAO5lB,iBAAgBzZ,EAAAxG,QACXkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,IACvB,OAGIyqD,EACJzpD,EAAS,IACNC,EAAAC,mBAAA,IAEAD,EAAAooB,eAEFrpB,EAAKwpD,YAAcxpD,EAAK6pD,aAAY,IAAM5oD,EAAAqoB,gBAAA,KAC1CtpB,EAAK6pD,aAAY,GAAA,qBACdtmD,EAAUvD,EAAKuD,eACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAYhZ,EAAKupD,YACzBhmD,EAAQyV,YAAY4oB,GAOpB5hC,EAAK0qD,sBAAqB,GAM1B1qD,EAAKwB,kBAAmB,WAnIF/B,EAAA6pD,EAAAzqD,GA4IxByqD,EAAA5pD,UAAAirD,2BAA0B,SAAChpD,OAItB,IACGipD,EAAM,GAMNC,EAAmB,GAErBjB,GAAc,EACZnnD,EAAmBd,EAAWc,iBAC3BtH,EAAI,EAAG6H,EAAKP,EAAiBrH,OAAQD,EAAI6H,IAAM7H,EAAC,KACjD8H,EAAaR,EAAiBtH,eACxB8H,EAAYtB,EAAWkB,gBAI7B7G,EAA6DiH,EAAWnG,MAAO4J,eAChF1K,OAIC8uD,EAAoB9uD,EAAO+uD,qBAC5BD,OAIC/tD,EAAe+tD,EAAkBnpD,MAClC5E,KAIL6sD,EACEA,IAAuD,IAAxC5tD,EAAOgvD,6BAEpB3hD,MAAM4B,QAAQlO,WACPyJ,EAAI,EAAGsjC,EAAK/sC,EAAa3B,OAAQoL,EAAIsjC,IAAMtjC,EAC5CzJ,EAAayJ,KAAMokD,IACvBC,EAAoBpnD,KAAK1G,EAAayJ,IACtCokD,EAAO7tD,EAAayJ,KAAM,QAIxBzJ,KAAgB6tD,IACpBC,EAAoBpnD,KAAK1G,GACzB6tD,EAAO7tD,IAAgB,kBAInB4sD,sBAAoBnqD,KACvByrD,eAAerB,GAEfiB,GAOTvB,EAAA5pD,UAAAwrD,eAAc,SAACvpD,MACRA,OAQC5E,EAAYyC,KAAQmrD,2BAA2BhpD,GAE/C6b,EAAUzgB,EAAa3B,OAAS,UAC7BoG,kBAAoBgc,SACtBja,QAAQ1F,MAAM+F,QAAU4Z,EAAO,GAAA,YAC/Bhc,iBAAmBgc,aAGfzgB,EAAYyC,KAAOkrD,8CAIVnB,oBAGXpuD,EAAI,EAAG6H,EAAKjG,EAAa3B,OAAQD,EAAI6H,IAAM7H,EAAC,KAC7CoI,EAAU5C,SAASC,cAAa,MACtC2C,EAAQ4pB,UAAYpwB,EAAa5B,QAC5BouD,WAAWvwC,YAAYzV,QAGzBmnD,sBAAwB3tD,aA5BlByE,wBACF+B,QAAQ1F,MAAM+F,QAAO,YACrBpC,kBAAmB,IAiC9B8nD,EAAA5pD,UAAA8qD,aAAY,SAACznC,GACXA,EAAM7B,sBACDiqC,qBACAzB,eAAclqD,KAAQgqD,YAM7BF,EAAA5pD,UAAAyrD,cAAa,gBACN5nD,QAAQ6nD,UAAUC,OAAMpqD,EAAAqoB,sBACpBkgC,WAAU97B,EAAA+C,YAAAjxB,KACA0qD,eAAc1qD,KAAO4qD,2BAErBA,OAAM5qD,KAAO0qD,qBAE3BV,YAAUhqD,KAASgqD,YAQ1BF,EAAA5pD,UAAA4rD,eAAc,uBACAzB,cAQdP,EAAA5pD,UAAAurD,eAAc,SAACrB,QACJC,eAAiBD,SAGrBC,aAAeD,OACfrmD,QAAQ6nD,UAAUC,OAAM,yBACpB3B,gBAAclqD,KAChB2rD,kBAWT7B,EAAA5pD,UAAA6rD,aAAY,SAAC9B,QACNC,eAAiBD,OACZI,cAAYrqD,KAASgqD,aAAeC,QAGzC0B,iBASP7B,EAAA5pD,UAAA8rD,aAAY,uBACEhC,YAQdF,EAAA5pD,UAAA8D,OAAM,SAACioD,QACAP,eAAeO,EAAS9pD,aAEjC2nD,EA7TA,sBA+TeD,2TC3WZ,MAAAptC,EAAAxhB,EAAA,olBA2CHixD,EAAA,SAAA7sD,GAGK,SACH8sD,EAAYhvD,OAAZqD,EACEnB,EAAAU,KAAAC,OAAAA,KAEM+D,EAAU5G,EAAQ4G,eACpBA,GAAY5G,EAAQ0B,QAAWkF,EAAQ1F,MAAM62B,gBAC/CnxB,EAAQ1F,MAAM62B,cAAa,QAO7B10B,EAAKuD,QAAUA,GAAoB,KAMnCvD,EAAK4rD,QAAU,KAMf5rD,EAAK6E,KAAO,KAMZ7E,EAAK6rD,aAAY,GAEblvD,EAAQ6G,SACVxD,EAAKwD,OAAS7G,EAAQ6G,QAGpB7G,EAAQ0B,QACV2B,EAAK82B,UAAUn6B,EAAQ0B,iBAzCPoB,EAAAksD,EAAA9sD,GAgDpB8sD,EAAAjsD,UAAAwC,gBAAe,6BACGqB,SAChB1E,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAQvBmsD,EAAAjsD,UAAAkC,OAAM,uBACQiD,MAUd8mD,EAAAjsD,UAAAqc,OAAM,SAAChc,QACI8E,MAAI6oB,EAAAgD,WAAAlxB,KACK+D,iBAETpI,EAAI,EAAG6H,EAAExD,KAAQqsD,aAAazwD,OAAQD,EAAI6H,IAAM7H,EAAC+E,EAAAmiB,cAAA7iB,KACrCqsD,aAAa1wD,UAE7B0wD,aAAazwD,OAAS,OACtByJ,KAAO9E,OACH8E,SACKrF,KAAQosD,QAAOpsD,KAClBosD,QACL7rD,EAAI84B,gCACD7f,YAAWxZ,KAAM+D,cACfC,SAAM6D,EAAAuB,MAAApJ,KACRqsD,aAAapoD,KAAIvD,EAAAC,OACbJ,EAAG68B,EAAA7gC,QAAempB,WAAU1lB,KAAOgE,OAAMhE,OAGpDO,EAAIyD,WASRmoD,EAAAjsD,UAAA8D,OAAM,SAACioD,KAWPE,EAAAjsD,UAAAo3B,UAAS,SAACz4B,QACHutD,QACU,iBAANvtD,EAAsBsC,SAAS4xB,eAAel0B,GAAUA,GAErEstD,EAhHA,sBAkHeD,kSC7JZ,MAAAxsD,EAAAzE,EAAA,ikBA+BHqxD,EAAA,SAAAjtD,GAGK,SACHktD,EAAY/0B,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/B4C,OAAQ7G,EAAQ6G,OAChBnF,OAAQ1B,EAAQ0B,mBAGZ2C,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,YAE/C2tB,OAA0B3sB,IAAlBrF,EAAQgyB,MAAsBhyB,EAAQgyB,MAAK,IAEnDq9B,OACyBhqD,IAA7BrF,EAAQqvD,iBACJrvD,EAAQqvD,iBAAgB,aAO9BhsD,EAAKoqD,OAAS,KAEE,iBAALz7B,GACT3uB,EAAKoqD,OAASzpD,SAASC,cAAa,QACpCZ,EAAKoqD,OAAOppD,UAAYgrD,EACxBhsD,EAAKoqD,OAAOD,YAAcx7B,IAE1B3uB,EAAKoqD,OAASz7B,EACd3uB,EAAKoqD,OAAOgB,UAAU/lC,IAAI2mC,QAGtBlC,EAAWntD,EAAQmtD,SAAWntD,EAAQmtD,SAAQ,iBAE9CloB,EAASjhC,SAASC,cAAa,UACrCghC,EAAO5gC,UAAYA,EAAS,SAC5B4gC,EAAO0oB,aAAY,OAAO,UAC1B1oB,EAAO2oB,MAAQT,EACfloB,EAAO5oB,YAAYhZ,EAAKoqD,QAExBxoB,EAAO5lB,iBAAgBzZ,EAAAxG,QACXkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,IACvB,OAGIyqD,EACJzpD,EAAS,IAAMC,EAAAC,mBAAA,IAA2BD,EAAAooB,cACtC9lB,EAAUvD,EAAKuD,eACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAY4oB,GAEpB5hC,EAAKisD,gBAAkBtvD,EAAQuvD,WAAavvD,EAAQuvD,gBAAalqD,EAMjEhC,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAMrE/oC,EAAKosD,eAAiCpqD,IAArBrF,EAAQ0vD,UAAyB1vD,EAAQ0vD,SAM1DrsD,EAAKssD,eAAYtqD,EAEbhC,EAAKosD,WACPpsD,EAAKuD,QAAQ6nD,UAAU/lC,IAAGpkB,EAAAioB,uBA/EXzpB,EAAAssD,EAAAltD,GAuFnBktD,EAAArsD,UAAA8qD,aAAY,SAACznC,GACXA,EAAM7B,sBACuBlf,SAApBiqD,gBAA6BzsD,KAC/BysD,uBAEAM,eAOTR,EAAArsD,UAAA6sD,YAAW,eAEHjuD,EADGkB,KAAQoC,SACAs2B,aACZ55B,OAKC4G,EAAW5G,EAAK+pC,mBACLrmC,IAAbkD,SACOinD,UAAY,GAAKjnD,GAAY,EAAIkK,KAAKiM,KAAQ,EACrD/c,EAAK28B,QAAO,CACV/1B,SAAU,EACV6jC,SAAQvpC,KAAO2sD,UACfnjB,OAAMC,EAAA+G,UAGR1xC,EAAKmpC,YAAY,MAUvBskB,EAAArsD,UAAA8D,OAAM,SAACioD,OACC9pD,EAAa8pD,EAAS9pD,cACvBA,OAGCuD,EAAWvD,EAAWkB,UAAUqC,YAClCA,GAAQ1F,KAAS8sD,UAAS,KACtBz+C,EAAS,UAAe3I,EAAQ,eAC7BknD,UAAS,KACVtyB,EAAQt6B,KAAQ+D,QAAQ6nD,UAAUtxB,SAAQ74B,EAAAioB,cAC3C4Q,GAAyB,IAAb50B,EAEN40B,GAAyB,IAAb50B,GAAc1F,KAC9B+D,QAAQ6nD,UAAUlgD,OAAMjK,EAAAioB,cAHA1pB,KACxB+D,QAAQ6nD,UAAU/lC,IAAGpkB,EAAAioB,mBAKzBkhC,OAAOvsD,MAAMgQ,UAAYA,OAE3By+C,UAAYpnD,IAErB6mD,EAlJA,sBAoJeD,4QCnLZ,MAAA5sD,EAAAzE,EAAA,ikBA+BH+xD,EAAA,SAAA3tD,GAGK,SACH4tD,EAAYz1B,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/BvC,OAAQ1B,EAAQ0B,mBAGZ2C,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,UAE/C+kB,OAA0B/jB,IAAlBrF,EAAQopB,MAAsBppB,EAAQopB,MAAQ,EAEtD2mC,OACwB1qD,IAA5BrF,EAAQ+vD,gBACJ/vD,EAAQ+vD,gBACR1rD,EAAS,MAET2rD,OACyB3qD,IAA7BrF,EAAQgwD,iBACJhwD,EAAQgwD,iBACR3rD,EAAS,OAET4rD,OACoB5qD,IAAxBrF,EAAQiwD,YAA4BjwD,EAAQiwD,YAAW,IACnDC,OACqB7qD,IAAzBrF,EAAQkwD,aAA6BlwD,EAAQkwD,aAAY,IAErDC,OACuB9qD,IAA3BrF,EAAQmwD,eAA+BnwD,EAAQmwD,eAAc,UACzDC,OACwB/qD,IAA5BrF,EAAQowD,gBACJpwD,EAAQowD,gBAAe,WAGvBC,EAAYrsD,SAASC,cAAa,UACxCosD,EAAUhsD,UAAY0rD,EACtBM,EAAU1C,aAAY,OAAO,UAC7B0C,EAAUzC,MAAQuC,EAClBE,EAAUh0C,YACU,iBAAX4zC,EACHjsD,SAASssD,eAAeL,GACxBA,GAGNI,EAAUhxC,iBAAgBzZ,EAAAxG,QACdkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,EAAM+lB,IAC7B,OAGImnC,EAAavsD,SAASC,cAAa,UACzCssD,EAAWlsD,UAAY2rD,EACvBO,EAAW5C,aAAY,OAAO,UAC9B4C,EAAW3C,MAAQwC,EACnBG,EAAWl0C,YACU,iBAAZ6zC,EACHlsD,SAASssD,eAAeJ,GACxBA,GAGNK,EAAWlxC,iBAAgBzZ,EAAAxG,QACfkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,GAAO+lB,IAC9B,OAGI0kC,EACJzpD,EAAS,IAAMC,EAAAC,mBAAA,IAA2BD,EAAAooB,cACtC9lB,EAAUvD,EAAKuD,eACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAYg0C,GACpBzpD,EAAQyV,YAAYk0C,GAMpBltD,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aAlFtDtpC,EAAAgtD,EAAA5tD,GA0FjB4tD,EAAA/sD,UAAA8qD,aAAY,SAACzkC,EAAOhD,GAClBA,EAAM7B,sBACDisC,aAAapnC,IAOpB0mC,EAAA/sD,UAAAytD,aAAY,SAACpnC,OAELznB,EADGkB,KAAQoC,SACAs2B,aACZ55B,OAKC8uD,EAAc9uD,EAAK6pC,kBACLnmC,IAAhBorD,EAAyB,KACrBC,EAAU/uD,EAAK+xC,mBAAmB+c,EAAcrnC,QAC7ComC,UAAY,GACf7tD,EAAK48B,gBACP58B,EAAKurC,mBAEPvrC,EAAK28B,QAAO,CACVv8B,KAAM2uD,EACNtkB,SAAQvpC,KAAO2sD,UACfnjB,OAAMC,EAAA+G,WAGR1xC,EAAKspC,QAAQylB,MAIrBZ,EA5HA,sBA8HeD,4QC7JZ,MAAAttD,EAAAzE,EAAA,klBAOG6yD,EAAM,mEASNC,EAMW,kBANXA,EAaW,kBAuCjBC,EAAA,SAAA3uD,GAGK,SACH4uD,EAAYz2B,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/BvC,OAAQ1B,EAAQ0B,gBAObqvD,mBACmB1rD,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,iBAMrDhB,EAAK2tD,sBACyB3rD,IAA5BrF,EAAQixD,gBACJjxD,EAAQixD,gBAAgBj9C,MAAK,KAAI,CAChC3Q,EAAK0tD,cAAa,SAMzB1tD,EAAK6tD,wBAC2B7rD,IAA9BrF,EAAQmxD,kBACJnxD,EAAQmxD,kBAAkBn9C,MAAK,KAAI,CAClC3Q,EAAK0tD,cAAa,cAEnB/+B,OAA0B3sB,IAAlBrF,EAAQgyB,MAAsBhyB,EAAQgyB,MAAK,IAMzD3uB,EAAK+tD,WACS,iBAALp/B,EAAqBhuB,SAASssD,eAAet+B,GAASA,MAEzDq/B,OACoBhsD,IAAxBrF,EAAQqxD,YAA4BrxD,EAAQqxD,YAAW,IAMzDhuD,EAAKiuD,iBACe,iBAAXD,EACHrtD,SAASssD,eAAee,GACxBA,EAMNhuD,EAAKkuD,QAAUvtD,SAASC,cAAa,cAE/BkpD,EAAWntD,EAAQmtD,SAAWntD,EAAQmtD,SAAQ,qBACpD9pD,EAAKmuD,cAAcnuD,EAAKkuD,QAASE,KACjCpuD,EAAKkuD,QAAQ5D,aAAY,OAAO,UAChCtqD,EAAKkuD,QAAQ3D,MAAQT,EACrB9pD,EAAKkuD,QAAQl1C,YAAYhZ,EAAK+tD,YAE9B/tD,EAAKkuD,QAAQlyC,iBAAgBzZ,EAAAxG,QACjBkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,IACvB,OAGIyqD,EACJzqD,EAAK0tD,cAAa,IACfzsD,EAAAC,mBAAA,IAEAD,EAAAooB,cAAA,KAGDglC,IAAqB,GAAAptD,EAAAmoB,mBACnB7lB,EAAUvD,EAAKuD,eACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAYhZ,EAAKkuD,SAMzBluD,EAAKsuD,WAAyBtsD,IAAjBrF,EAAQ1B,MAAqB0B,EAAQ1B,KAMlD+E,EAAKuuD,QAAU5xD,EAAQX,gBAlGFyD,EAAAguD,EAAA5uD,GAyGvB4uD,EAAA/tD,UAAA8qD,aAAY,SAACznC,GACXA,EAAM7B,sBACDstC,qBAMPf,EAAA/tD,UAAA8uD,kBAAiB,cACVH,SAGCtuD,EAAGP,KAAQoC,YACZ7B,KAGDquD,IA6HFztD,SAAS8tD,eACX9tD,SAAS8tD,iBACA9tD,SAA2B,iBACpCA,SAA2B,mBAClBA,SAA+B,sBACxCA,SAA+B,gCA/HzB4C,OAAO,EAETA,OADOgrD,QAEc,iBADd/uD,KACO+uD,QACR5tD,SAAS4xB,eAAc/yB,KAAM+uD,SAAO/uD,KAC/B+uD,QAEDxuD,EAAIk4B,wBAEPq2B,MAoGZ,SACgC/qD,GAC7BA,EAAiC,wBACnCA,EAAiC,0BAEjCmrD,EAAkBnrD,GAxGdorD,CAA0BprD,GAE1BmrD,EAAkBnrD,MAQxBkqD,EAAA/tD,UAAAkvD,wBAAuB,eACf7uD,EAAGP,KAAQoC,SACbwsD,UACGD,cAAa3uD,KAAM0uD,SAAS,sBAChBD,iBAAgBzuD,KAAOuuD,iBACnC9rD,cAAcsrD,UAEdY,cAAa3uD,KAAM0uD,SAAS,sBAChBH,WAAUvuD,KAAOyuD,uBAC7BhsD,cAAcsrD,IAEjBxtD,GACFA,EAAIu7B,cASRmyB,EAAA/tD,UAAAyuD,cAAa,SAAC5qD,EAASsrD,aACfjB,EAAepuD,KAAQmuD,iBACvBG,EAAiBtuD,KAAQquD,mBACzBiB,EAAgBD,EAAajB,EAAkBE,GACrDiB,EAAAxrD,EAAQ6nD,WAAUlgD,OAAM1B,MAAAulD,EAAInB,IAC5BoB,EAAAzrD,EAAQ6nD,WAAUlgD,OAAM1B,MAAAwlD,EAAIlB,IAC5BmB,EAAA1rD,EAAQ6nD,WAAU/lC,IAAG7b,MAAAylD,EAAIH,IAU3BrB,EAAA/tD,UAAAqc,OAAM,SAAChc,MACLlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GACTA,EAAG,IAAA,IACI5E,EAAI,EAAG6H,EAAKsqD,EAAOlyD,OAAQD,EAAI6H,IAAM7H,EAACqE,KACxCqsD,aAAapoD,KAAIvD,EAAAC,OACbQ,SAAU2sD,EAAOnyD,GAACqE,KAAQovD,wBAAuBpvD,QAKlEiuD,EA/LA,YAmMG,SACMY,QACDt1C,EAAOpY,SAASoY,cAEpBA,EAA8B,yBAC7BA,EAA0B,qBAAKpY,SAA8B,qBAC7DoY,EAAKm2C,mBAAqBvuD,SAASwuD,mBAMrC,SACMf,aAELztD,SAA6B,oBAC7BA,SAA8B,qBAC9BA,SAASyuD,mBAOV,SACMV,EAAkBnrD,GACrBA,EAAQ2rD,kBACV3rD,EAAQ2rD,oBACC3rD,EAA6B,oBACtCA,EAA6B,sBACpBA,EAAiC,yBAC1CA,EAAiC,oCA6BtBiqD,i4BCnTT6B,EAAU,aAKVC,EAAiB,mBA+BvBC,EAAA,SAAA1wD,GAGK,SACH2wD,EAAYx4B,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCzzB,EAAU5C,SAASC,cAAa,cACtC2C,EAAQvC,eACgBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,qBAErDhB,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAASA,EACTC,OAAQ7G,EAAQ6G,OAChBnF,OAAQ1B,EAAQ0B,gBAGb2d,iBAAgBC,EAAAC,mBACAmzC,GACnBrvD,EAAKyvD,0BAGH9yD,EAAQ+yD,kBACV1vD,EAAK2vD,oBAAoBhzD,EAAQ+yD,kBAE/B/yD,EAAQQ,YACV6C,EAAK4vD,cAAcjzD,EAAQQ,YAO7B6C,EAAK6vD,oBACuB7tD,IAA1BrF,EAAQmzD,cAA8BnzD,EAAQmzD,cAAa,SAM7D9vD,EAAK+vD,oBAAsB/vD,EAAK6vD,eAMhC7vD,EAAKgwD,cAAgBzsD,EAAQ4pB,UAM7BntB,EAAKiwD,eAAiB,KAMtBjwD,EAAKkwD,WAAa,cA1DMzwD,EAAA+vD,EAAA3wD,GAgE1B2wD,EAAA9vD,UAAA+vD,yBAAwB,gBACjBS,WAAa,MAWpBV,EAAA9vD,UAAAywD,oBAAmB,uBACiEx0D,IAChF2zD,IAWJE,EAAA9vD,UAAAy4B,cAAa,uBACmEx8B,IAC5E0zD,IAQJG,EAAA9vD,UAAA0wD,gBAAe,SAACrtC,OACRhjB,EAAGP,KAAQoC,cACZyuD,YAAYtwD,EAAIw3B,cAAcxU,KAOrCysC,EAAA9vD,UAAA4wD,eAAc,SAACvtC,QACRstC,YAAY,OAUnBb,EAAA9vD,UAAAqc,OAAM,SAAChc,MACLlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GACTA,EAAG,KACCwwD,EAAWxwD,EAAIqB,mBAChByqD,aAAapoD,KAAIvD,EAAAC,OACbowD,EAAQhuD,EAAAxG,QAAY8kC,YAAWrhC,KAAO4wD,gBAAe5wD,YAErDuwD,mBAAiBvwD,KACnBqsD,aAAapoD,KAAIvD,EAAAC,OACbowD,EAAQhuD,EAAAxG,QAAYsmC,WAAU7iC,KAAO8wD,eAAc9wD,SAalEgwD,EAAA9vD,UAAAiwD,oBAAmB,SAAChyD,QACboP,IAAIuiD,EAAmB3xD,IAU9B6xD,EAAA9vD,UAAAkwD,cAAa,SAACzyD,QACP4P,IAAIsiD,EAAU52B,EAAA98B,IAAgBwB,KAOrCqyD,EAAA9vD,UAAA2wD,YAAW,SAACtsD,OACNysD,EAAIhxD,KAAQqwD,kBACZ9rD,GAAKvE,KAASywD,eAAc,UACpBC,WAAU,KACZ/yD,EAAUqC,KAAQ24B,gBACV34B,KACP0wD,WADH/yD,EACas7B,EAAAwb,4BAAAz0C,KACRywD,eACL9yD,GAGas7B,EAAA6a,sBAIbluC,EADG5F,KAAQoC,SACMq1B,+BAA+BlzB,MAClDqB,EAAU,KACNioC,EAAc5U,EAAA6U,oBAChBD,IAAc7tC,KACX0wD,WAAUz3B,EAAAwb,4BAAAz0C,KACRywD,eACL5iB,SAGC6iB,WAAW9qD,EAAYA,OACtBsqD,EAAgBlwD,KAAQ2wD,sBAE5BK,EADEd,EACKA,EAAiBtqD,GAEjBA,EAAWsI,iBAIdsiD,eAAiBQ,IAAIhxD,KAAUwwD,qBAClCzsD,QAAQ4pB,UAAYqjC,OACpBR,cAAgBQ,IAUzBhB,EAAA9vD,UAAA8D,OAAM,SAACioD,OACC9pD,EAAa8pD,EAAS9pD,WACvBA,OAGMsuD,gBAAkBtuD,EAAWkB,UAAU1F,kBACzC8yD,eAAiBtuD,EAAWkB,UAAU1F,gBACtC+yD,WAAa,MALP1wD,KACRywD,eAAiB,MAQ5BT,EAxNA,sBA0NeD,qSC9QZ,MAAA5wD,EAAAlE,EAAA,qkCA8BGg2D,EAAY,IAOZC,EAAY,GAElBC,EAAA,SAAA9xD,YAAA+xD,0DAA4BnxD,EAAAmxD,EAAA/xD,GAC1B+xD,EAAAlxD,UAAAC,eAAc,uCAGhBixD,EAJA,YAiCAC,EAAA,SAAAhyD,GAGK,SACHiyD,EAAY95B,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/B4C,OAAQ7G,EAAQ6G,OAChBnF,OAAQ1B,EAAQ0B,gBAMb0yD,4BAA8B/wD,EAAKgxD,uBAAuBvwD,KAAKT,GAMpEA,EAAKwpD,gBACmBxnD,IAAtBrF,EAAQ8sD,WAA0B9sD,EAAQ8sD,UAM5CzpD,EAAK6pD,kBACqB7nD,IAAxBrF,EAAQitD,aAA4BjtD,EAAQitD,YAEzC5pD,EAAK6pD,eACR7pD,EAAKwpD,YAAa,GAOpBxpD,EAAKixD,qBACwBjvD,IAA3BrF,EAAQu0D,gBAA+Bv0D,EAAQu0D,eAMjDlxD,EAAKmxD,iBAAcnvD,MAEbhB,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,iBAE/C8oD,OACiB9nD,IAArBrF,EAAQmtD,SAAyBntD,EAAQmtD,SAAQ,eAE7CE,OACsBhoD,IAA1BrF,EAAQqtD,cAA8BrtD,EAAQqtD,cAAa,IAErC,iBAAbA,GAKThqD,EAAKkqD,eAAiBvpD,SAASC,cAAa,QAC5CZ,EAAKkqD,eAAeC,YAAcH,GAElChqD,EAAKkqD,eAAiBF,MAGlBr7B,OAA0B3sB,IAAlBrF,EAAQgyB,MAAsBhyB,EAAQgyB,MAAK,IAEzC,iBAALA,GAKT3uB,EAAKoqD,OAASzpD,SAASC,cAAa,QACpCZ,EAAKoqD,OAAOD,YAAcx7B,GAE1B3uB,EAAKoqD,OAASz7B,MAGV07B,EACJrqD,EAAK6pD,eAAiB7pD,EAAKwpD,WAAaxpD,EAAKkqD,eAAiBlqD,EAAKoqD,OAC/DxoB,EAASjhC,SAASC,cAAa,UACrCghC,EAAO0oB,aAAY,OAAO,UAC1B1oB,EAAO2oB,MAAQT,EACfloB,EAAO5oB,YAAYqxC,GAEnBzoB,EAAO5lB,iBAAgBzZ,EAAAxG,QACXkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,IACvB,GAOFA,EAAKoxD,UAAYzwD,SAASC,cAAa,OACvCZ,EAAKoxD,UAAUpwD,UAAS,qBAOxBhB,EAAKqxD,MAAQ10D,EAAQ2B,KAMrB0B,EAAKsxD,OAAM,IAAOX,EAAa,CAC7BryD,KAAM3B,EAAQ2B,WAEVizD,EAAQvxD,EAAKsxD,OAEf30D,EAAQd,QACVc,EAAQd,OAAOkL,SAAO,SAAWjK,GAC/By0D,EAAM96B,SAAS35B,UAIb00D,EAAM7wD,SAASC,cAAa,OAClC4wD,EAAIxwD,UAAS,qBACbwwD,EAAI3zD,MAAM4zD,UAAS,aAMnBzxD,EAAK0xD,YAAW,IAAAC,EAAA51D,QAAA,CACd8E,SAAQ,CAAG,EAAG,GACd+wD,YAAWC,EAAA91D,QAAqB+1D,cAChCvuD,QAASiuD,IAEXxxD,EAAKsxD,OAAO36B,WAAW32B,EAAK0xD,iBAEtBjH,EACJzpD,EAAS,IACNC,EAAAC,mBAAA,IAEAD,EAAAooB,eAEFrpB,EAAKwpD,YAAcxpD,EAAK6pD,aAAY,IAAM5oD,EAAAqoB,gBAAA,KAC1CtpB,EAAK6pD,aAAY,GAAA,qBACdtmD,EAAUvD,EAAKuD,QACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAYhZ,EAAKoxD,WACzB7tD,EAAQyV,YAAY4oB,GAEC,IAEfmwB,EAAQ/xD,EAER42B,EAAU52B,EAAK0xD,YACfM,EAAahyD,EAAK0xD,YAAYO,aAW9BC,EAAI,SAAanvC,OAPuBovC,EAQtCtxD,GANJg3B,SAF0Cs6B,EAQmBpvC,GANtC8U,QACvBC,QAASq6B,EAAcr6B,SAMnBnxB,EAAc4qD,EAAM/5B,2BACG32B,GAG7B+1B,EAAQw7B,YAAYzrD,IAGhB0rD,EAAS,SAAatvC,OACpBpc,EAAc4qD,EAAM/5B,2BAA2BzU,GAErDgvC,EAAMnwD,SAASs2B,UAAUwP,kBAAkB/gC,GAE3C0pB,OAAOjO,oBAAmB,YAAc8vC,GACxC7hC,OAAOjO,oBAAmB,UAAYiwC,WAKxCL,EAAWh2C,iBAAgB,aAAY,WACrCqU,OAAOrU,iBAAgB,YAAck2C,GACrC7hC,OAAOrU,iBAAgB,UAAYq2C,eA9Lf5yD,EAAAqxD,EAAAjyD,GAyMxBiyD,EAAApxD,UAAAqc,OAAM,SAAChc,OACCuyD,EAAM9yD,KAAQoC,YAChB7B,IAAQuyD,MAGRA,EAAM,KACFC,EAAUD,EAAOp6B,UACnBq6B,GAAO/yD,KACJgzD,YAAYD,QAEdjB,OAAOx6B,UAAU,SAExBj4B,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GAETA,EAAG,MACAuxD,OAAOx6B,UAASt3B,KAAM4xD,gBACtBvF,aAAapoD,KAAIvD,EAAAC,OAElBJ,EAAGO,EAAAvE,QACawE,eAAcf,KACzBizD,yBAAwBjzD,WAK3BlB,EAAOyB,EAAIm4B,UACb55B,SACGo0D,UAAUp0D,GACXA,EAAKg+B,eACFg1B,OAAOh2B,kBACPq3B,sBAICrB,OAAO31B,cAAUn8B,KACpBozD,oCAUX9B,EAAApxD,UAAA+yD,yBAAwB,SAAC1vC,MACnBA,EAAMza,MAAGsqB,EAAA72B,QAAiBg3B,KAAI,KAC1Bw/B,EAAuDxvC,EAAM7C,SAC/DqyC,GAAO/yD,KACJgzD,YAAYD,OAEbM,EAAOrzD,KAAQoC,SAASs2B,eACzBw6B,UAAUG,aAETvB,OAAO31B,cACZ5Y,EAAMza,MAAGsqB,EAAA72B,QAAiB+2B,QAAU/P,EAAMza,MAAGsqB,EAAA72B,QAAiB45B,MAAIn2B,KAE9D8xD,OAAOh2B,cAShBw1B,EAAApxD,UAAAgzD,UAAS,SAACp0D,YACE+yD,MAAK,KAEPwB,EAAO,IAAA7/B,EAAAj3B,QAAA,CACXoB,WAAYmB,EAAK65B,uBAEdm5B,OAAOr0B,QAAQ41B,GAGtBv0D,EAAK0d,iBAAgBC,EAAAC,mBAAA8uB,EAAAjvC,QACauwC,UAAQ9sC,KACnCuxD,kCAGFC,0BAQPF,EAAApxD,UAAA8yD,YAAW,SAACl0D,GACVA,EAAK8jB,oBAAmBnG,EAAAC,mBAAA8uB,EAAAjvC,QACUuwC,UAAQ9sC,KACnCuxD,8BAQTD,EAAApxD,UAAAsxD,uBAAsB,gBACXC,iBAAezxD,KACjB8xD,OAAOp5B,UAAUuP,YAAWjoC,KAAMoC,SAASs2B,UAAUmQ,gBAe9DyoB,EAAApxD,UAAAozD,gBAAe,eACP/yD,EAAGP,KAAQoC,SACX2vD,EAAK/xD,KAAQ8xD,UAEdvxD,EAAI47B,cAAiB41B,EAAM51B,kBAI1Bo3B,EAAoDhzD,EAAI+S,UAGxDU,EADOzT,EAAIm4B,UACGqT,wBAAwBwnB,YAEnC5B,cAAWhrD,EAAAoD,OAAiBiK,EAAMhU,KAAO2xD,mBAI7CA,YAAc39C,MAEbw/C,EAAsDzB,EAAMz+C,UAG5DmgD,EADS1B,EAAMr5B,UACGqT,wBAAwBynB,GAE1CE,EAAe3B,EAAM54B,+BAA8BxyB,EAAA4M,WAC5CS,IAEP2/C,EAAmB5B,EAAM54B,+BAA8BxyB,EAAAkM,eAC5CmB,IAGX4/C,EAAWhkD,KAAK0F,IAAIo+C,EAAa,GAAKC,EAAiB,IACvDE,EAAYjkD,KAAK0F,IAAIo+C,EAAa,GAAKC,EAAiB,IAExDG,EAAaN,EAAU,GACvBO,EAAcP,EAAU,GAG5BI,EAAWE,EAAa5C,GACxB2C,EAAYE,EAAc7C,GAC1B0C,EAAWE,EAAa7C,GACxB4C,EAAYE,EAAc9C,EAASjxD,KAE9BmzD,gCACoBM,EAAUz/C,IAAMhU,KACpCg0D,eAST1C,EAAApxD,UAAAizD,aAAY,eAKJ5yD,EAAGP,KAAQoC,SACX2vD,EAAK/xD,KAAQ8xD,OAEbyB,EAAoDhzD,EAAI+S,UAGxDU,EADOzT,EAAIm4B,UACGqT,wBAAwBwnB,GAEtCU,EAASlC,EAAMr5B,UAKfw7B,EAAQtkD,KAAKwL,IAAI61C,KAAyBrhD,KAAKukD,IAC/C1kB,EAAQ,GAAK7/B,KAAKuX,IAAI,EAAG+sC,EAAQ,GAAKhD,qBAC5Bl9C,EAAQy7B,GACxBwkB,EAAOlmB,YAAWP,EAAAC,WAAmBz5B,KAQvCs9C,EAAApxD,UAAA8zD,UAAS,eACDzzD,EAAGP,KAAQoC,SACX2vD,EAAK/xD,KAAQ8xD,OAEbhzD,EAAOyB,EAAIm4B,UAEFq5B,EAAMr5B,UAEdwP,kBAAkBppC,EAAK8pC,sBAOhC0oB,EAAApxD,UAAAk0D,WAAU,eACF7zD,EAAGP,KAAQoC,SACX2vD,EAAK/xD,KAAQ8xD,UAEdvxD,EAAI47B,cAAiB41B,EAAM51B,kBAI1Bo3B,EAAoDhzD,EAAI+S,UAExDxU,EAAOyB,EAAIm4B,UAEXu7B,EAASlC,EAAMr5B,UAEfhzB,EAAQ1F,KAAQyxD,gBAAkB,GAAK3yD,EAAK+pC,cAE5CzR,EAAOp3B,KAAQkyD,YACfF,EAAGhyD,KAAQkyD,YAAYO,aACvBzzD,EAASF,EAAK8pC,oBACdnjC,EAAa3G,EAAK0pC,gBAClB6rB,EAAeJ,EAAOzrB,gBACtB7pC,EAAS40D,EAAQ,GAAK9tD,EAAc4uD,EACpC/yD,EAAUiyD,EAAQ,GAAK9tD,EAAc4uD,KAG3Cj9B,EAAQw7B,YAAY5zD,GAGhBgzD,EAAG,CACLA,EAAI3zD,MAAMM,MAAQA,EAAK,KACvBqzD,EAAI3zD,MAAMiD,OAASA,EAAM,SACnB+M,EAAS,UAAe3I,EAAQ,OACtCssD,EAAI3zD,MAAMgQ,UAAYA,KAO1BijD,EAAApxD,UAAAkzD,+BAA8B,gBACnBkB,2BAGJA,oBAAmB5zD,EAAA+hB,WAAAziB,KACjB8xD,OAAM10B,EAAA7gC,QACEmpB,YAAU,SACbnC,eACI+wC,yBACPF,uBAUX9C,EAAApxD,UAAA8qD,aAAY,SAACznC,GACXA,EAAM7B,sBACDiqC,iBAMP2F,EAAApxD,UAAAyrD,cAAa,gBACN5nD,QAAQ6nD,UAAUC,OAAMpqD,EAAAqoB,sBACpBkgC,WAAU97B,EAAA+C,YAAAjxB,KACA0qD,eAAc1qD,KAAO4qD,2BAErBA,OAAM5qD,KAAO0qD,qBAE3BV,YAAUhqD,KAASgqD,eAIlB+H,EAAK/xD,KAAQ8xD,gBACT9H,WAAU,IACd+H,EAAM51B,yBACHw1B,iBAAcnvD,OACnBuvD,EAAM/tD,SAGR+tD,EAAMj2B,kBACDq3B,oBACAC,mCAST9B,EAAApxD,UAAA4rD,eAAc,uBACAzB,cAQdiH,EAAApxD,UAAAurD,eAAc,SAACrB,QACJC,eAAiBD,SAGrBC,aAAeD,OACfrmD,QAAQ6nD,UAAUC,OAAM,qBACxBzB,GAAWpqD,KAASgqD,YAAUhqD,KAC5B2rD,kBAWT2F,EAAApxD,UAAA6rD,aAAY,SAAC9B,QACDI,cAAYrqD,KAASgqD,aAAeC,QAGzC0B,iBAQP2F,EAAApxD,UAAA8rD,aAAY,uBACEhC,YAQdsH,EAAApxD,UAAAq0D,kBAAiB,uBACH9C,iBAQdH,EAAApxD,UAAAs0D,kBAAiB,SAAC9C,QACPD,kBAAoBC,SAGxBD,gBAAkBC,EACuB,SAArCtvD,SAASs2B,UAAUmQ,qBACjB4oB,gBAAezxD,KACjBwxD,8BAEAM,OAAOp5B,UAAUuP,YAAY,QAE/B0pB,iBAAcnvD,OACd8wD,uBACAc,gBAST9C,EAAApxD,UAAAu0D,eAAc,uBACA3C,QAQdR,EAAApxD,UAAA8D,OAAM,SAACioD,QACAqH,uBACAc,cAET9C,EA1lBA,sBA4lBeD,inBCpqBZ,MAAA50C,EAAAxhB,EAAA,ipBA2EG4iC,EACG,UADHA,EAED,MAFCA,EAGE,SAHFA,EAII,WAJJA,EAKO,cAuBb62B,EAAA,SAAAr1D,GAGK,SACHs1D,EAAYx3D,OAAZqD,EACEnB,EAAAU,KAAAC,OAAAA,KAMAQ,EAAKrD,QAAUA,EAMfqD,EAAK1E,GAAKqB,EAAQrB,GAMlB0E,EAAKo0D,iBACqBpyD,IAAxBrF,EAAQy3D,aAA4Bz3D,EAAQy3D,YAM9Cp0D,EAAKq0D,eAAkCryD,IAAtBrF,EAAQ03D,WAA0B13D,EAAQ03D,UAM3Dr0D,EAAKuD,QAAU5C,SAASC,cAAa,OACrCZ,EAAKuD,QAAQvC,eACWgB,IAAtBrF,EAAQqE,UACJrE,EAAQqE,UAAS,wBACMC,EAAAkoB,iBAC7BnpB,EAAKuD,QAAQ1F,MAAMgD,SAAQ,WAC3Bb,EAAKuD,QAAQ1F,MAAM62B,cAAa,WAE5B4/B,EAAU33D,EAAQ23D,eAClBA,GAAO,iBAAwBA,IACjCA,EAAO,CACLzrB,UAAWlsC,EAAQ43D,iBACnBC,OAAQ73D,EAAQ83D,gBAOpBz0D,EAAKs0D,QAA6CA,IAAY,EAO9Dt0D,EAAK00D,SAAQ,CACXxE,WAAU,GACV1yC,SAAS,GAOXxd,EAAK20D,yBAA2B,KAEhC30D,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAK40D,sBAEP50D,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAK60D,kBAEP70D,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAK80D,qBAEP90D,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAK+0D,uBAEP/0D,EAAKgc,iBAAgBC,EAAAC,mBACAmhB,GACnBr9B,EAAKg1D,+BAGiBhzD,IAApBrF,EAAQ4G,SACVvD,EAAKi1D,WAAWt4D,EAAQ4G,SAG1BvD,EAAKk1D,eAA6BlzD,IAAnBrF,EAAQ+X,OAAuB/X,EAAQ+X,OAAM,CAAI,EAAG,IAEnE1U,EAAKm1D,oBACqBnzD,IAAxBrF,EAAQi1D,YACsDj1D,EAAQi1D,YAAWC,EAAA91D,QAC1DwZ,eAGAvT,IAArBrF,EAAQkE,UACVb,EAAKoyD,YAAYz1D,EAAQkE,mBA3GTpB,EAAA00D,EAAAt1D,GAqHpBs1D,EAAAz0D,UAAAuyD,WAAU,uBAC0Ct2D,IAAI0hC,IAQxD82B,EAAAz0D,UAAA02B,MAAK,uBACS96B,IAUd64D,EAAAz0D,UAAAkC,OAAM,uBACsEjG,IACxE0hC,IAUJ82B,EAAAz0D,UAAA01D,UAAS,uBACmCz5D,IAAI0hC,IAUhD82B,EAAAz0D,UAAA21D,YAAW,uBACkE15D,IACzE0hC,IAWJ82B,EAAAz0D,UAAA41D,eAAc,uBAC0D35D,IACpE0hC,IAOJ82B,EAAAz0D,UAAAk1D,qBAAoB,iCACErxD,aACdA,EAAO/D,KAAQyyD,aACjB1uD,GAAO/D,KACJ+D,QAAQyV,YAAYzV,IAO7B4wD,EAAAz0D,UAAAm1D,iBAAgB,gBACLF,6CACSpxD,8BACGoxD,+BACdA,yBAA2B,UAE5B50D,EAAGP,KAAQoC,YACb7B,EAAG,MACA40D,yBAAwBz0D,EAAAC,OAC3BJ,EAAG68B,EAAA7gC,QACUmpB,WAAU1lB,KAClBgE,OAAMhE,WAGR+1D,0BACCp0D,EAAS3B,KAAQ60D,UACnBt0D,EAAI84B,+BACJ94B,EAAI64B,2BACCw7B,YACPjzD,EAAUE,aAAY7B,KAAM+D,QAASpC,EAAU6wB,WAAW,IAAM,MAEhE7wB,EAAU6X,YAAWxZ,KAAM+D,cAExBiyD,mBAOTrB,EAAAz0D,UAAA8D,OAAM,gBACC+xD,uBAMPpB,EAAAz0D,UAAAo1D,oBAAmB,gBACZS,uBAMPpB,EAAAz0D,UAAAq1D,sBAAqB,gBACdQ,2BACAC,kBAMPrB,EAAAz0D,UAAAs1D,yBAAwB,gBACjBO,uBASPpB,EAAAz0D,UAAAu1D,WAAU,SAAC1xD,QACJwJ,IAAIswB,EAAkB95B,IAU7B4wD,EAAAz0D,UAAAqc,OAAM,SAAChc,QACAgN,IAAIswB,EAAct9B,IASzBo0D,EAAAz0D,UAAAw1D,UAAS,SAACxgD,QACH3H,IAAIswB,EAAiB3oB,IAW5By/C,EAAAz0D,UAAA0yD,YAAW,SAACvxD,QACLkM,IAAIswB,EAAmBx8B,IAQ9BszD,EAAAz0D,UAAA81D,eAAc,gBACHlB,SAAO90D,KACTi2D,YAAWj2D,KAAM80D,UAU1BH,EAAAz0D,UAAA+1D,YAAW,SAACC,OACJ31D,EAAGP,KAAQoC,YAEZ7B,GAAQA,EAAIk4B,oBAAgBz4B,KAAY7D,IAAI0hC,QAI3Cs4B,EAAOn2D,KAAQo2D,QAAQ71D,EAAIk4B,mBAAoBl4B,EAAI+S,WACnDvP,EAAO/D,KAAQyyD,aACf4D,EAAWr2D,KAAQo2D,QAAQryD,EAAO,cAC3BA,iBACCA,KAGRuyD,EAAqBJ,GAAsB,GAE3CK,OAC0B/zD,IAA9B8zD,EAAmBtB,OAAuB,GAAKsB,EAAmBtB,4BAChDmB,EAASE,GAAW,KAEhCG,EAAaH,EAAY,GAAKF,EAAQ,GACtCM,EAAcN,EAAQ,GAAKE,EAAY,GACvCK,EAAYL,EAAY,GAAKF,EAAQ,GACrCQ,EAAeR,EAAQ,GAAKE,EAAY,GAExC9vC,EAAK,CAAI,EAAG,MACdiwC,EAAa,EAEfjwC,EAAM,GAAKiwC,EAAaD,EACfE,EAAc,IAEvBlwC,EAAM,GAAK3W,KAAK0F,IAAImhD,GAAeF,GAEjCG,EAAY,EAEdnwC,EAAM,GAAKmwC,EAAYH,EACdI,EAAe,IAExBpwC,EAAM,GAAK3W,KAAK0F,IAAIqhD,GAAgBJ,GAGrB,IAAbhwC,EAAM,IAAyB,IAAbA,EAAM,GAAQ,KAC5BvnB,EAA8DuB,EACjEm4B,UACAkQ,oBACGguB,EAAWr2D,EAAI44B,+BAA+Bn6B,OAC/C43D,EAAQ,WAGPC,EAAW,CAAID,EAAS,GAAKrwC,EAAM,GAAIqwC,EAAS,GAAKrwC,EAAM,IAE3DuwC,EAAaR,EAAmBjtB,WAAS,GAC/C9oC,EAAIm4B,UAAUuQ,gBAAe,CAC3BjqC,OAAQuB,EAAIk3B,+BAA+Bo/B,GAC3CttB,SAAUutB,EAAWvtB,SACrBC,OAAQstB,EAAWttB,aAa3BmrB,EAAAz0D,UAAAk2D,QAAO,SAACryD,EAASyB,OACTwsD,EAAMjuD,EAAQm0B,wBACd1J,EAAUwjC,EAAIhkC,KAAO6C,OAAOkmC,YAC5BtoC,EAAUujC,EAAIz5B,IAAM1H,OAAOmmC,mBACzBxoC,EAASC,EAASD,EAAUhpB,EAAK,GAAIipB,EAAUjpB,EAAK,KAU9DmvD,EAAAz0D,UAAAy1D,eAAc,SAACvD,QACR7kD,IAAIswB,EAAsBu0B,IAQjCuC,EAAAz0D,UAAAkgB,WAAU,SAACpC,QACAk3C,SAASl3C,UAAYA,SACvBja,QAAQ1F,MAAM+F,QAAU4Z,EAAO,GAAA,YAC/Bk3C,SAASl3C,QAAUA,IAQ5B22C,EAAAz0D,UAAA61D,oBAAmB,eACXx1D,EAAGP,KAAQoC,SACXf,EAAQrB,KAAQ61D,iBACjBt1D,GAAQA,EAAI47B,cAAiB96B,OAK5BkD,EAAQhE,EAAIw4B,uBAAuB13B,GACnCkyD,EAAUhzD,EAAI+S,eACf2jD,uBAAuB1yD,EAAOgvD,aAN5BnzC,YAAW,IAcpBu0C,EAAAz0D,UAAA+2D,uBAAsB,SAAC1yD,EAAOgvD,OACtBl1D,EAAK2B,KAAQ+D,QAAQ1F,MACrB6W,EAAMlV,KAAQ41D,YAEdxD,EAAWpyD,KAAQ81D,sBAEpB11C,YAAW,OAEV5Q,EAAII,KAAK2P,MAAMhb,EAAM,GAAK2Q,EAAO,IAAC,KAClCzF,EAAIG,KAAK2P,MAAMhb,EAAM,GAAK2Q,EAAO,IAAC,KACpCgiD,EAAI,KACJC,EAAI,KAEN/E,GAAWC,EAAA91D,QAAuBuZ,cAClCs8C,GAAWC,EAAA91D,QAAuB66D,cAClChF,GAAWC,EAAA91D,QAAuByZ,UAElCkhD,EAAI,QAEJ9E,GAAWC,EAAA91D,QAAuB86D,eAClCjF,GAAWC,EAAA91D,QAAuB+1D,eAClCF,GAAWC,EAAA91D,QAAuB+6D,aAElCJ,EAAI,QAGJ9E,GAAWC,EAAA91D,QAAuBsZ,aAClCu8C,GAAWC,EAAA91D,QAAuB86D,eAClCjF,GAAWC,EAAA91D,QAAuBuZ,aAElCqhD,EAAI,QAEJ/E,GAAWC,EAAA91D,QAAuBg7D,aAClCnF,GAAWC,EAAA91D,QAAuB+1D,eAClCF,GAAWC,EAAA91D,QAAuB66D,eAElCD,EAAI,YAEA9oD,EAAS,aAAgB6oD,EAAI,KAAKC,EAAI,eAAe3nD,EAAC,KAAKC,EAAC,SACzDylD,SAASxE,YAAcriD,SACzB6mD,SAASxE,WAAariD,EAC3BhQ,EAAMgQ,UAAYA,EAElBhQ,EAAMm5D,YAAcnpD,IAQxBsmD,EAAAz0D,UAAAu3D,WAAU,uBACIt6D,SAEhBw3D,EAneA,sBAqeeD,kVCnkBb7+C,YAAW,cACXwhD,cAAa,gBACbvhD,aAAY,eACZyhD,YAAW,cACXjF,cAAa,gBACb8E,aAAY,eACZrhD,SAAQ,WACRuhD,WAAU,aACVthD,UAAS,4MCCEq9B,IAlBV,MAAA3zC,EAAAzE,EAAA,kmBAWGy8D,EAAU,QAOHrkB,EAAK,CAChBrB,QAAO,UACP2lB,SAAQ,WACRC,SAAQ,WACRC,OAAM,SACNC,GAAE,MAOEC,EAAc,CAAI,EAAG,EAAG,GAMxBC,EAAc,KAAO,IAmC3BC,EAAA,SAAA54D,GAGK,SACH64D,EAAY1gC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCh2B,OACkBgB,IAAtBrF,EAAQqE,UACJrE,EAAQqE,UACRrE,EAAQg7D,IAAG,eACG,uBAGpB33D,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/B4C,OAAQ7G,EAAQ6G,OAChBnF,OAAQ1B,EAAQ0B,gBAObu5D,cAAgBj3D,SAASC,cAAa,OAC3CZ,EAAK43D,cAAc52D,UAAYA,EAAS,SAExChB,EAAKuD,QAAQvC,UAAYA,EAAS,IAAMC,EAAAC,mBACxClB,EAAKuD,QAAQyV,YAAYhZ,EAAK43D,eAM9B53D,EAAK63D,WAAa,KAMlB73D,EAAK83D,eAAiC91D,IAArBrF,EAAQo7D,SAAyBp7D,EAAQo7D,SAAW,GAMrE/3D,EAAKwB,kBAAmB,EAMxBxB,EAAKg4D,oBAAiBh2D,EAMtBhC,EAAKgwD,cAAa,GAElBhwD,EAAKgc,iBAAgBC,EAAAC,mBACAg7C,GACnBl3D,EAAKi4D,qBAGPj4D,EAAKk4D,SAASv7D,EAAQ+4C,OAAS7C,EAAMwkB,QAMrCr3D,EAAKm4D,UAAYx7D,EAAQg7D,MAAO,EAMhC33D,EAAKo4D,eAAiBz7D,EAAQ+2D,OAAS,EAMvC1zD,EAAKq4D,cAAgB17D,EAAQH,OAAQ,EAMrCwD,EAAKs4D,KAAO37D,EAAQ47D,UAAOv2D,WAzFPvC,EAAAi4D,EAAA74D,GAmGtB64D,EAAAh4D,UAAA81C,SAAQ,uBACM75C,IAAIu7D,IAMlBQ,EAAAh4D,UAAAu4D,oBAAmB,gBACZ/M,kBASPwM,EAAAh4D,UAAAw4D,SAAQ,SAACxiB,QACF3oC,IAAImqD,EAAYxhB,IAQvBgiB,EAAAh4D,UAAA84D,OAAM,SAACD,QACAD,KAAOC,GAMdb,EAAAh4D,UAAAwrD,eAAc,eACNroD,EAASrD,KAAQq4D,cAElBh1D,OAQCrE,EAASqE,EAAUrE,OACnBrB,EAAa0F,EAAU1F,WACvBu4C,EAAKl2C,KAAQg2C,WACbijB,EACJ/iB,GAAS7C,EAAMrB,QAAOD,EAAAx1C,QAAay1C,QAAOD,EAAAx1C,QAAag3C,OACrDsC,EAAe5c,EAAAgb,mBACjBt2C,EACA0F,EAAUoC,WACVzG,EACAi6D,GAGIV,EAAQv4D,KACNs4D,WAASt4D,KAAS84D,MAAQd,GAAgBA,EAE9CkB,EAAeX,EAAW1iB,EAC1BsjB,EAAM,MACNjjB,GAAS7C,EAAMrB,QAAO,KAClBonB,EAAengC,EAAA6Y,gBAAAC,EAAAx1C,QAA6By1C,UAClDknB,GAAgBE,GACGA,EAAkB,IACnCD,EAAM,IACNtjB,GAAmB,MACVqjB,EAAeE,GACxBD,EAAM,IACNtjB,GAAmB,IAEnBsjB,EAAM,SAECjjB,GAAS7C,EAAMskB,SACpBuB,EAAe,OACjBC,EAAM,KACNtjB,GAAmB,OACVqjB,EAAe,UACxBC,EAAM,KACNtjB,GAAmB,QAEnBsjB,EAAM,KACNtjB,GAAmB,UAEZK,GAAS7C,EAAMukB,UACxB/hB,GAAmB,KACnBsjB,EAAM,MACGjjB,GAAS7C,EAAMwkB,OACpBqB,EAAe,MACjBC,EAAM,KACNtjB,GAAmB,KACVqjB,EAAe,GACxBC,EAAM,KACNtjB,GAAmB,KACVqjB,EAAe,IACxBC,EAAM,KAENA,EAAM,KACNtjB,GAAmB,KAEZK,GAAS7C,EAAMykB,GACpBoB,EAAe,OACjBC,EAAM,KACNtjB,GAAmB,OACVqjB,EAAe,UACxBC,EAAM,KACNtjB,GAAmB,YAEnBsjB,EAAM,KACNtjB,GAAmB,qBAGd,EAAO,YAIZlQ,EAAOhnC,EAAO06D,EAedrI,EAhBAr1D,EAAI,EAAIiU,KAAKqI,MAAMrI,KAAKwL,IAAIm9C,EAAW1iB,GAAmBjmC,KAAKwL,IAAI,OAE5D,CACTi+C,EAAezpD,KAAKqI,MAAMtc,EAAI,OACxBgtB,EAAU/Y,KAAKuX,IAAI,GAAIkyC,MAC7B1zB,EAAQoyB,GAAiBp8D,EAAI,EAAK,GAAK,GAAKgtB,EAC5ChqB,EAAQiR,KAAK2P,MAAMomB,EAAQkQ,GACvBroB,MAAM7uB,eACHoF,QAAQ1F,MAAM+F,QAAO,iBACrBpC,kBAAmB,MAEfrD,GAAS45D,EAAQ,QAG1B58D,EAIFq1D,OADO2H,UACH34D,KAAQs5D,eAAe36D,EAAOgnC,EAAOwzB,GAElCxzB,EAAM/d,QAAQyxC,EAAe,GAAKA,EAAe,GAAC,IAAUF,OAG5D3I,eAAiBQ,SACnBoH,cAAczqC,UAAYqjC,OAC1BR,cAAgBQ,QAGdwH,gBAAkB75D,SACpBy5D,cAAc/5D,MAAMM,MAAQA,EAAK,UACjC65D,eAAiB75D,QAGdqD,wBACH+B,QAAQ1F,MAAM+F,QAAO,QACrBpC,kBAAmB,aAjHfA,wBACF+B,QAAQ1F,MAAM+F,QAAO,YACrBpC,kBAAmB,IA0H9Bk2D,EAAAh4D,UAAAo5D,eAAc,SAAC36D,EAAO+O,EAAOyrD,WACrBI,EAAQ,OACH3pD,KAAK2P,MAAKvf,KAAMw5D,yBAAyBC,iBAC9CC,EAAU,GACVC,EAAYh7D,EAAKqB,KAAQ44D,eAC3BgB,EAAe,UACVj+D,EAAI,EAAGA,EAACqE,KAAQ44D,eAAgBj9D,IAC7B,IAANA,GAEF+9D,EAAWz1D,KAAIjE,KAAM65D,aAAY,WAAal+D,IAEhD+9D,EAAWz1D,KAAI,sDAMX01D,EANW,wBASXC,EATW,YAYH55D,KACH65D,aAAY,WAAal+D,IAE7BA,EAAI,GAAM,GAA6B,IAA5BqE,KAAS44D,eAAoB54D,KAChC85D,eAAen+D,EAAGgD,GAAO,EAAO+O,EAAOyrD,GAAM,IAAA,UAItDx9D,IAACqE,KAAU44D,eAAiB,GAI9Bc,EAAWz1D,KAAIjE,KAAM85D,eAAen+D,EAAI,EAAGgD,GAAO,EAAM+O,EAAOyrD,IAI/DS,EADiB,YAAfA,EACa,UAEA,gBAiBJ,qCAZNf,cACK,4CAIVl6D,EAAK,QAEL46D,EAAQ,SAGE,IAMZG,EAAWlpD,KAAI,IAAA,UAWnB0nD,EAAAh4D,UAAA25D,aAAY,SAACx4D,EAAU1F,+DAMnB0F,YALkB,aAARA,EAA0B,GAAI,mBAuB5C62D,EAAAh4D,UAAA45D,eAAc,SAACn+D,EAAGgD,EAAOo7D,EAAQrsD,EAAOyrD,OAGhCa,GADE,IAANr+D,EAAU,EAAIiU,KAAK2P,MAAO7R,EAAK1N,KAAQ44D,eAAkBj9D,EAAI,KAAO,MACjC,IAANA,EAAO,GAAA,IAAcw9D,iEAC/B,IAANx9D,GAAU,EAAMgD,EAAKqB,KAAQ44D,gBAAkB,sBAUrD,IAANj9D,EAAO,OAAS,2BATI,IAANA,EAAU,EAAKgD,EAAKqB,KAAQ44D,eAAkB,gBAe5DmB,EAASp7D,EAAK,KAAO,eAGtBq7D,EAAY,UAShB9B,EAAAh4D,UAAAs5D,sBAAqB,eACb/zD,EAAUwzB,EAAAgb,mBAAAj0C,KACTq4D,WAAW16D,WAAUqC,KACrBq4D,WAAW5yD,WAAUzF,KACrBq4D,WAAWr5D,QAEZ+5D,EAAG/4D,KAAQ84D,MAAQd,EACnBiC,EAAGj6D,KAAQq4D,WAAW16D,WAAWs0C,0BAEhCtU,WAAWl4B,EAAWyI,YAAc+rD,GADpB,IAAO,MACoClB,GAQpEb,EAAAh4D,UAAA8D,OAAM,SAACioD,OACC9pD,EAAa8pD,EAAS9pD,gBAIrBk2D,WAHFl2D,EAGeA,EAAWkB,UAFX,UAIfqoD,kBAETwM,EA/ZA,sBAiaeD,m/BCxdTiC,EACM,EADNA,EAEQ,EAqBdC,EAAA,SAAA96D,GAGK,SACH+6D,EAAY5iC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/B4C,OAAQ7G,EAAQ6G,gBAOb68B,kBAAiB,GAQtBrgC,EAAK65D,wBAAqB73D,EAS1BhC,EAAK85D,WAAaJ,EAMlB15D,EAAKogC,UAMLpgC,EAAK+5D,aAAe,EAMpB/5D,EAAKg6D,YAAc,EAMnBh6D,EAAKi6D,QAMLj6D,EAAKk6D,QAQLl6D,EAAKm6D,WAAa,KAOlBn6D,EAAKo6D,oBAAqB,EAM1Bp6D,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,QAE/D/nC,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,gBAC/Cq5D,EAAe15D,SAASC,cAAa,UAC3Cy5D,EAAa/P,aAAY,OAAO,UAChC+P,EAAar5D,UAAYA,EAAS,UAAYC,EAAAC,uBACxCo5D,EAAmBt6D,EAAKuD,eAC9B+2D,EAAiBt5D,UACfA,EAAS,IAAMC,EAAAC,mBAAA,IAA2BD,EAAAooB,cAC5CixC,EAAiBthD,YAAYqhD,GAE7BC,EAAiBt+C,iBAAgBqB,EAAAthB,QACd29B,YACjB15B,EAAKu6D,oBAAoB95D,KAAKT,IAC9B,GAEFs6D,EAAiBt+C,iBAAgBqB,EAAAthB,QACd8kC,YACjB7gC,EAAKw6D,mBAAmB/5D,KAAKT,IAC7B,GAEFs6D,EAAiBt+C,iBAAgBqB,EAAAthB,QACdwlC,UACjBvhC,EAAKy6D,kBAAkBh6D,KAAKT,IAC5B,GAGFs6D,EAAiBt+C,iBAAgBzZ,EAAAxG,QACrBkoB,MACVjkB,EAAK06D,sBAAsBj6D,KAAKT,IAChC,GAEFq6D,EAAar+C,iBAAgBzZ,EAAAxG,QAAWkoB,MAAKlE,EAAAkB,iBAAmB,YArH3CxhB,EAAAm6D,EAAA/6D,GA+HvB+6D,EAAAl6D,UAAAqc,OAAM,SAAChc,GACLlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GACTA,GACFA,EAAIyD,UAYRo2D,EAAAl6D,UAAAi7D,YAAW,eACHx5D,EAAS3B,KAAQ+D,QACnBq3D,EAAiBz5D,EAAUgwB,YAC3B0pC,EAAkB15D,EAAUssB,gBACT,IAAnBmtC,GAA4C,IAApBC,EAAqB,OAAAr7D,KAClC46D,oBAAqB,MAG9BU,EAAiB5hD,iBAAiB/X,GACxCy5D,GACEz9B,WAAW29B,EAA6B,cACxC39B,WAAW29B,EAA4B,aACzCD,GACE19B,WAAW29B,EAA2B,YACtC39B,WAAW29B,EAA8B,mBACrCC,EAAoC55D,EAAU65D,kBAC9CC,EAAa/hD,iBAAiB6hD,GAC9BG,EACJH,EAAM5pC,YACNgM,WAAW89B,EAAwB,aACnC99B,WAAW89B,EAAuB,YAC9BE,EACJJ,EAAMttC,aACN0P,WAAW89B,EAAsB,WACjC99B,WAAW89B,EAAyB,0BACjCd,WAAU,CAAIe,EAAYC,GAE3BP,EAAiBC,QACdf,WAAaJ,OACbM,YAAcY,EAAiBM,SAE/BpB,WAAaJ,OACbK,aAAec,EAAkBM,QAE3Bf,oBAAqB,GAOpCR,EAAAl6D,UAAAg7D,sBAAqB,SAAC33C,OACdzkB,EAAIkB,KAAQoC,SAASs2B,UAErBkjC,EAAgB57D,KAAQ67D,qBAC5Bt4C,EAAMiL,QAAOxuB,KAAQ26D,WAAW,GAAK,EACrCp3C,EAAMkL,QAAOzuB,KAAQ26D,WAAW,GAAK,GAGjCl1D,EAAUzF,KAAQ87D,0BAA0BF,GAC5C18D,EAAOJ,EAAK+xC,mBAAmB/xC,EAAKmtC,qBAAqBxmC,IAE/D3G,EAAKmqC,gBAAe,CAClB/pC,KAAMA,EACNqqC,SAAQvpC,KAAO2sD,UACfnjB,OAAMC,EAAA+G,WASV4pB,EAAAl6D,UAAA66D,oBAAmB,SAACx3C,YACRqd,WAAard,EAAM1kB,SAAMmB,KAAU+D,QAAQy3D,kBAAiB,KAC9Dz3D,EAAO/D,KAAoC+D,QAC9Cy3D,0BACEp5D,SAASs2B,UAAU+X,wBACnBgqB,QAAUl3C,EAAM8U,QAAUsF,WAAW55B,EAAQ1F,MAAM2vB,WACnD0sC,QAAUn3C,EAAM+U,QAAUqF,WAAW55B,EAAQ1F,MAAMk6B,UACnDqI,WAAY,EAEqB,SAA7BC,kBAAkBjlC,OAAY,KAC/BmgE,EAAI/7D,KAAQg7D,mBACZ3vD,EAAGrL,KAAQi7D,kBACX9gC,EAAGn6B,KAAQoC,SAASk3B,wBACrBuH,kBAAkB58B,KAAIvD,EAAAC,OAClBw5B,EAAGtc,EAAAthB,QAAmB8kC,YAAa06B,EAAI/7D,MAAAU,EAAAC,OACvCw5B,EAAGtc,EAAAthB,QAAmBwlC,UAAW12B,EAAGrL,UAYnDo6D,EAAAl6D,UAAA86D,mBAAkB,SAACz3C,WACRqd,UAAS,KACV5pB,EAASuM,EAAM8U,QAAOr4B,KAAQy6D,QAC9BxjD,EAASsM,EAAM+U,QAAOt4B,KAAQ06D,QAC9BkB,EAAgB57D,KAAQ67D,qBAAqB7kD,EAAQC,QACtDojD,mBAAkBr6D,KAAQ87D,0BAC7BF,QAEGx5D,SAASs2B,UAAUyP,cAAanoC,KAAMq6D,sBAS/CD,EAAAl6D,UAAA+6D,kBAAiB,SAAC13C,QACPqd,YACG5gC,KAAQoC,SAASs2B,UACtBgY,sBAEA9P,WAAY,OACZ65B,aAAUj4D,OACVk4D,aAAUl4D,OACVq+B,kBAAkBt5B,QAAO7G,EAAAmiB,oBACzBge,kBAAkBjlC,OAAS,IAUpCw+D,EAAAl6D,UAAA87D,kBAAiB,SAACnvD,OACVxL,EAAQrB,KAAQi8D,0BAA0BpvD,GAC1C0uD,EAAKv7D,KAAoC+D,QAAQy3D,uBAE9ClB,YAAcJ,EACrBqB,EAAMl9D,MAAM2vB,KAAIhuB,KAAQw6D,YAAcn5D,EAAQ,KAE9Ck6D,EAAMl9D,MAAMk6B,IAAGv4B,KAAQu6D,aAAel5D,EAAQ,MAclD+4D,EAAAl6D,UAAA27D,qBAAoB,SAACrsD,EAAGC,OAClBysD,SAEFA,OADO5B,aAAeJ,EACb1qD,EAACxP,KAAQw6D,YAET/qD,EAACzP,KAAQu6D,qBAEP2B,EAAQ,EAAG,IAW1B9B,EAAAl6D,UAAA47D,0BAAyB,SAACz6D,UAChBrB,KAAQoC,SAASs2B,UAAUgU,+BAC5BnjC,CAAG,EAAIlI,IAYhB+4D,EAAAl6D,UAAA+7D,0BAAyB,SAACpvD,OAClBtD,EAAEvJ,KAAQoC,SAASs2B,UAAUqU,+CACtB,EAAIxjC,EAAGsD,GAAM,EAAG,IAQ/ButD,EAAAl6D,UAAA8D,OAAM,SAACioD,MACAA,EAAS9pD,kBAGJy4D,oBAAkB56D,KAAUm7D,oBAGhCtuD,EAAMo/C,EAAS9pD,WAAWkB,UAAUoC,gBACrC40D,mBAAqBxtD,OACrBmvD,kBAAkBnvD,KAE3ButD,EAvVA,sBAyVeD,uXChYZ,MAAAz6D,EAAAzE,EAAA,ukBAyBHkhE,EAAA,SAAA98D,GAGK,SACH+8D,EAAY5kC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE+D,QAAS5C,SAASC,cAAa,OAC/BvC,OAAQ1B,EAAQ0B,gBAObmV,OAAS7W,EAAQ6W,OAAS7W,EAAQ6W,OAAS,SAE1CxS,OACkBgB,IAAtBrF,EAAQqE,UAA0BrE,EAAQqE,UAAS,iBAE/C2tB,OAA0B3sB,IAAlBrF,EAAQgyB,MAAsBhyB,EAAQgyB,MAAK,IACnDm7B,OACiB9nD,IAArBrF,EAAQmtD,SAAyBntD,EAAQmtD,SAAQ,gBAC7CloB,EAASjhC,SAASC,cAAa,UACrCghC,EAAO0oB,aAAY,OAAO,UAC1B1oB,EAAO2oB,MAAQT,EACfloB,EAAO5oB,YACO,iBAAL2V,EAAqBhuB,SAASssD,eAAet+B,GAASA,GAG/DiT,EAAO5lB,iBAAgBzZ,EAAAxG,QACXkoB,MACVjkB,EAAKwqD,aAAa/pD,KAAKT,IACvB,OAGIyqD,EACJzpD,EAAS,IAAMC,EAAAC,mBAAA,IAA2BD,EAAAooB,cACtC9lB,EAAUvD,EAAKuD,eACrBA,EAAQvC,UAAYypD,EACpBlnD,EAAQyV,YAAY4oB,YAzCGniC,EAAAm8D,EAAA/8D,GAgDzB+8D,EAAAl8D,UAAA8qD,aAAY,SAACznC,GACXA,EAAM7B,sBACD26C,sBAMPD,EAAAl8D,UAAAm8D,mBAAkB,eAEVv9D,EADGkB,KAAQoC,SACAs2B,UACX1kB,EAAMhU,KAASgU,OACahU,KACzBgU,OADLlV,EAAK65B,gBAAgBlyB,YAEzB3H,EAAKivC,YAAWP,EAAAC,WAAmBz5B,KAEvCooD,EAhEA,sBAkEeD,ujCCXZjzD,EAAAF,OAAAzN,EAAA,YAAA,IACaoE,IAjFb,IAAA28D,EAAArhE,EAAA,isCAiFa0E,EAAS63B,OACjBr6B,EAAUq6B,GAAyB,GAEnC53B,EAAY,IAAA6zB,EAAAl3B,QAEZggE,EAAO,IAAAC,EAAAjgE,SAAe,KAAQ,IAAM,iBAGTiG,IAA/BrF,EAAQs/D,oBACJt/D,EAAQs/D,qBAGZ78D,EAAaqE,KAAI,IAAAy4D,EAAAngE,eAIWiG,IAA5BrF,EAAQw/D,iBAAgCx/D,EAAQw/D,kBAEhD/8D,EAAaqE,KAAI,IAAA24D,EAAArgE,QAAA,CAEbgqB,MAAOppB,EAAQ0/D,UACftzB,SAAUpsC,EAAQ2/D,sBAKYt6D,IAApBrF,EAAQ4/D,SAAwB5/D,EAAQ4/D,UAEtDn9D,EAAaqE,KAAI,IAAA+4D,EAAAzgE,QAAA,CAEbuD,YAAa3C,EAAQ2C,YACrBy8D,QAASA,WAMW/5D,IAAxBrF,EAAQ8/D,aAA4B9/D,EAAQ8/D,cAE5Cr9D,EAAaqE,KAAI,IAAAi5D,EAAA3gE,eAGqBiG,IAAtBrF,EAAQggE,WAA0BhgE,EAAQggE,YAE1Dv9D,EAAaqE,KAAI,IAAAm5D,EAAA7gE,QAAA,CAEbgtC,SAAUpsC,EAAQ2/D,sBAKct6D,IAArBrF,EAAQkgE,UAAyBlgE,EAAQkgE,YAExDz9D,EAAaqE,KAAI,IAAAq5D,EAAA/gE,SACjBqD,EAAaqE,KAAI,IAAAs5D,EAAAhhE,QAAA,CAEbgqB,MAAOppB,EAAQ0/D,UACftzB,SAAUpsC,EAAQ2/D,uBAMKt6D,IAA3BrF,EAAQqgE,gBAA+BrgE,EAAQqgE,iBAE/C59D,EAAaqE,KAAI,IAAAw5D,EAAAlhE,QAAA,CAEbuD,YAAa3C,EAAQ2C,YACrBypC,SAAUpsC,EAAQ2/D,sBAMIt6D,IAA1BrF,EAAQugE,eAA8BvgE,EAAQugE,gBAE9C99D,EAAaqE,KAAI,IAAA05D,EAAAphE,QAAA,CAEbgtC,SAAUpsC,EAAQ2/D,gBAKjBl9D,k8BCpKN,MAAAC,EAAA5E,EAAA,miBAeH2iE,EAAA,SAAAv+D,GAGK,SACHw+D,EAAYrmC,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAyB,UAMzCh3B,EAAKs9D,OAAS3gE,EAAQopB,MAAQppB,EAAQopB,MAAQ,EAM9C/lB,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aAnB3CtpC,EAAA49D,EAAAx+D,GA4B5Bw+D,EAAA39D,UAAAyjB,YAAW,SAACmW,OACN+6B,GAAY,KACZ/6B,EAAgB53B,MAAI25B,EAAAt/B,QAAwBmoB,SAAQ,KAChDmV,EAA0CC,EAAgBG,cAC1D15B,EAAMu5B,EAAgBv5B,IACtByoC,EAASlP,EAAgBl0B,WACzB2gB,EAAQsT,EAAakkC,UAAQ/9D,KAAS89D,OAAM99D,KAAQ89D,OACpDh/D,EAAOyB,EAAIm4B,wBACL55B,EAAMynB,EAAOyiB,EAAMhpC,KAAO2sD,WACtC9yB,EAAanY,iBACbmzC,GAAY,SAENA,GAEZgJ,EA1CA,sBA4CeD,wOC4CZ10D,EAAAF,OAAAzN,EAAA,OAAA,IACayiE,IAiBb90D,EAAAF,OAAAzN,EAAA,eAAA,IACa0iE,IA1Hb,MAAAxhD,EAAAxhB,EAAA,uiBA6BHijE,EAAA,SAAA7+D,GAGK,SACH8+D,EAAY3mC,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,YAEIw3B,GAAeA,EAAY7T,cAC7BnjB,EAAKmjB,YAAc6T,EAAY7T,aAOjCnjB,EAAK6E,KAAO,KAEZ7E,EAAK49D,WAAU,YAjBOn+D,EAAAk+D,EAAA9+D,GA0BxB8+D,EAAAj+D,UAAAu6B,UAAS,uBAC6Bt+B,IAAGwgB,EAAApgB,QAAqB8hE,SAQ9DF,EAAAj+D,UAAAkC,OAAM,uBACQiD,MASd84D,EAAAj+D,UAAAyjB,YAAW,SAACmW,UACH,GASTqkC,EAAAj+D,UAAAk+D,UAAS,SAACE,QACH/wD,IAAGoP,EAAApgB,QAAqB8hE,OAAQC,IASvCH,EAAAj+D,UAAAqc,OAAM,SAAChc,QACA8E,KAAO9E,GAEhB49D,EApEA,qBA2EgBH,EAAIl/D,EAAMynB,EAAO+pB,OACzBlF,EAAgBtsC,EAAK8pC,uBACvBwC,EAAa,KACTpsC,EAAM,CAAIosC,EAAc,GAAK7kB,EAAM,GAAI6kB,EAAc,GAAK7kB,EAAM,IACtEznB,EAAKmqC,gBAAe,CAClBM,cAA2B/mC,IAAjB8tC,EAA6BA,EAAe,IACtD9G,OAAMC,EAAAiU,OACN1+C,OAAQF,EAAK+vC,qBAAqB7vC,eAWxBi/D,EAAYn/D,EAAMynB,EAAOmpB,EAAYY,OAC7Csd,EAAc9uD,EAAK6pC,kBAELnmC,IAAhBorD,OAIEC,EAAU/uD,EAAK+xC,mBAAmB+c,EAAcrnC,GAChDspB,EAAgB/wC,EAAKirC,qBAAqB8jB,GAE5C/uD,EAAK48B,gBACP58B,EAAKurC,mBAEPvrC,EAAK28B,QAAO,CACVh2B,WAAYoqC,EACZ7G,OAAQ0G,EACRnG,cAA2B/mC,IAAjB8tC,EAA6BA,EAAe,IACtD9G,OAAMC,EAAA+G,qBAIK0tB,kPCzIbG,OAAM,iLCNL,MAAAE,EAAAtjE,EAAA,ykBAgCHujE,EAAA,SAAAn/D,GAGK,SACHo/D,EAAYjnC,OAAZh3B,EACEnB,EAAAU,KAAAC,KAAA,CACE0+D,SAAQ72D,EAAAsB,cAGJhM,EAAUq6B,GAAyB,GAMzCh3B,EAAKm+D,SAAWxhE,EAAQo/D,QAKxB/7D,EAAKo+D,aAAe,KAKpBp+D,EAAKq+D,mBAKLr+D,EAAKs+D,UAAW,MAEVC,EAAY5hE,EAAQ4hE,UACtB5hE,EAAQ4hE,UAASC,EAAAC,IAAAD,EAAAE,eAAAF,EAAAG,sBAOrB3+D,EAAK4+D,WAAajiE,EAAQ2C,YAAWk/D,EAAAC,IAAAD,EAAAK,kBACVN,GACvBA,EAMJv+D,EAAK8+D,YAAa,WAhDAr/D,EAAAw+D,EAAAp/D,GAuDpBo/D,EAAAv+D,UAAAq/D,gBAAe,SAACzlC,QACJglC,gBACHA,UAAW,OACX18D,SAASs2B,UAAU+X,wBAEpB+uB,EAAcx/D,KAAQw/D,eACtBC,EAAQlB,EAAAkB,SAAwBD,MAClCA,EAAe5jE,QAAMoE,KAAS6+D,4BACvBF,UAAQ3+D,KACV2+D,SAASe,OAAOD,EAAS,GAAIA,EAAS,SAEpCb,aAAY,KACbr4C,EAAK,MACJq4C,aAAa,GAAKa,EAAS,GAChCA,EAAS,GAACz/D,KAAS4+D,aAAa,IAG5B9/D,EADMg7B,EAAgBv5B,IACXm4B,kBACDnS,EAAOznB,EAAK0pC,0BACXjiB,EAAOznB,EAAK+pC,eAC7B/pC,EAAKywC,qBAAqBhpB,cAEdo4C,eAGTA,SAASvzD,aAEXwzD,aAAea,OACfZ,mBAAqBW,EAAe5jE,OACzCk+B,EAAgBG,cAAcvY,kBAQhC+8C,EAAAv+D,UAAAy/D,cAAa,SAAC7lC,OACNv5B,EAAMu5B,EAAgBv5B,IACtBzB,EAAOyB,EAAIm4B,aACkB,SAA1B8mC,eAAe5jE,OAAY,UACxB0jE,YAAUt/D,KAAS2+D,UAAQ3+D,KAAS2+D,SAAStzD,MAAG,KAClD6a,EAAQlmB,KAAQ2+D,SAASroB,cACzB5mC,EAAK1P,KAAQ2+D,SAASiB,WACtB5gE,EAASF,EAAK8pC,oBACdi3B,EAAWt/D,EAAI44B,+BAA+Bn6B,GAC9C6J,EAAOtI,EAAIk3B,+BAA8B,CAC7CooC,EAAS,GAAK35C,EAAWtW,KAAKD,IAAID,GAClCmwD,EAAS,GAAK35C,EAAWtW,KAAKC,IAAIH,KAEpC5Q,EAAKmqC,gBAAe,CAClBjqC,OAAQF,EAAK+vC,qBAAqBhmC,GAClC0gC,SAAU,IACVC,OAAMC,EAAA+G,sBAGDsuB,gBACFA,UAAW,EAChBhgE,EAAK4xC,mBAEA,cAEEiuB,eAGFA,SAASvzD,aAEXwzD,aAAe,MACb,GASXH,EAAAv+D,UAAA4/D,gBAAe,SAAChmC,WACL0lC,eAAe5jE,OAAS,GAACoE,KAASo/D,WAAWtlC,GAAe,KAE7Dh7B,EADMg7B,EAAgBv5B,IACXm4B,sBACZkmC,aAAe,KAEhB9/D,EAAK48B,gBACP58B,EAAKurC,wBAEEs0B,UAAQ3+D,KACV2+D,SAASvzD,aAIXk0D,WAAUt/D,KAAQw/D,eAAe5jE,OAAS,GACxC,SAEA,GAGb6iE,EAxJA,sBA0JeD,6SCuBZt1D,EAAAF,OAAAzN,EAAA,YAAA,IACakkE,IAlNb,MAAA5/D,EAAA5E,EAAA,ojBA2CH8kE,EAAA,SAAA1gE,GAGK,SACH2gE,EAAYxoC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KACgE7C,IAAO6C,KAGnE7C,EAAQ2iE,kBACVt/D,EAAKs/D,gBAAkB3iE,EAAQ2iE,iBAG7B3iE,EAAQoiE,kBACV/+D,EAAK++D,gBAAkBpiE,EAAQoiE,iBAG7BpiE,EAAQ8iE,kBACVz/D,EAAKy/D,gBAAkB9iE,EAAQ8iE,iBAG7B9iE,EAAQwiE,gBACVn/D,EAAKm/D,cAAgBxiE,EAAQwiE,eAG3BxiE,EAAQuhE,WACVl+D,EAAKk+D,SAAWvhE,EAAQuhE,UAO1Bl+D,EAAK0/D,wBAAyB,EAM9B1/D,EAAK2/D,iBAAgB,GAMrB3/D,EAAKg/D,eAAc,YA/CUv/D,EAAA+/D,EAAA3gE,GAwD/B2gE,EAAA9/D,UAAAkgE,gBAAe,uBACDZ,eAAe5jE,QAS7BokE,EAAA9/D,UAAA4/D,gBAAe,SAAChmC,UACP,GAQTkmC,EAAA9/D,UAAAq/D,gBAAe,SAACzlC,KAUhBkmC,EAAA9/D,UAAAyjB,YAAW,SAACmW,OACLA,EAAgBG,cAAa,OACzB,MAGL46B,GAAY,UACXwL,uBAAuBvmC,QACnBomC,2BACHpmC,EAAgB53B,MAAI25B,EAAAt/B,QAAwBkmC,iBACzC88B,gBAAgBzlC,GAErBA,EAAgBG,cAAcvY,yBACrBoY,EAAgB53B,MAAI25B,EAAAt/B,QAAwBwlC,UAAS,KACxDu+B,EAAStgE,KAAQ2/D,cAAc7lC,QAChComC,uBACHI,GAAStgE,KAASw/D,eAAe5jE,OAAS,WAG1Ck+B,EAAgB53B,MAAI25B,EAAAt/B,QAAwB29B,YAAW,KACnDqmC,EAAOvgE,KAAQ8/D,gBAAgBhmC,QAChComC,uBAAyBK,EAC9B1L,EAAS70D,KAAQ0+D,SAAS6B,QACjBzmC,EAAgB53B,MAAI25B,EAAAt/B,QAAwB8kC,aAAWrhC,KAC3DigE,gBAAgBnmC,UAGjB+6B,GAQVmL,EAAA9/D,UAAA+/D,gBAAe,SAACnmC,KAQhBkmC,EAAA9/D,UAAAy/D,cAAa,SAAC7lC,UACL,GASTkmC,EAAA9/D,UAAAw+D,SAAQ,SAAC6B,UACAA,GAOTP,EAAA9/D,UAAAmgE,uBAAsB,SAACvmC,MAqCtB,SAC6BA,OACxB53B,EAAO43B,EAAgB53B,YAE3BA,IAAI25B,EAAAt/B,QAAyB29B,aAC7Bh4B,IAAI25B,EAAAt/B,QAAyBkmC,aAC7BvgC,IAAI25B,EAAAt/B,QAAyBwlC,UA1CzBy+B,CAAuB1mC,GAAe,KAClCx3B,EAAQw3B,EAAgBG,cAExBn+B,EAAKwG,EAAM2/B,UAAU/zB,WACvB4rB,EAAgB53B,MAAI25B,EAAAt/B,QAAwBwlC,iBAAS/hC,KAC3CmgE,iBAAiBrkE,IACpBg+B,EAAgB53B,MAAI25B,EAAAt/B,QAAwB29B,aAE5Cp+B,KAAEkE,KAASmgE,oBAF4CngE,KAC3DmgE,iBAAiBrkE,GAAMwG,QAKzBk9D,eAAcjgE,EAAAwkB,UAAA/jB,KAAkBmgE,oBAG3CH,EAjKA,qBAuKgBP,EAASvqC,WACjBt5B,EAASs5B,EAAct5B,OACzBy8B,EAAU,EACVC,EAAU,EACL38B,EAAI,EAAGA,EAAIC,EAAQD,IAC1B08B,GAAWnD,EAAcv5B,GAAG08B,QAC5BC,GAAWpD,EAAcv5B,GAAG28B,eAEtBD,EAAUz8B,EAAQ08B,EAAU18B,aAiBvBmkE,4PC1NZ72D,EAAAF,OAAAzN,EAAA,OAAA,IACa0jE,iCA0BHwB,uCAiBAC,4BAiBAC,wCAUAtB,6BAaAuB,4BASAC,wCAaAC,4BAYAC,kCAUAC,kCAWAC,kCAWAC,qCAYAhC,8CAkBAiC,mCAiBAC,wCAiBAC,gCAaAC,gCAeAC,8BAeAC,oCAiBArC,IAnSV,IAAAsC,EAAAxmE,EAAA,yHAkBagkE,EAAIn2B,OACZ44B,EAAa53D,UAIhB,OAAA,SACcyZ,WACXo+C,GAAO,EACFhmE,EAAI,EAAG6H,EAAKk+D,EAAW9lE,OAAQD,EAAI6H,IAC1Cm+D,EAAOA,GAAQD,EAAW/lE,GAAG4nB,MADmB5nB,UAM3CgmE,OAYElB,EAAU,SAAa3mC,OAC5BG,EAAoEH,EAAgBG,qBAExFA,EAAc2nC,UACZ3nC,EAAc4nC,SAAW5nC,EAAc6nC,WACxC7nC,EAAc8jC,UAYN2C,EAAgB,SAAa5mC,OAClCG,EAAoEH,EAAgBG,qBAExFA,EAAc2nC,UACZ3nC,EAAc4nC,SAAW5nC,EAAc6nC,UACzC7nC,EAAc8jC,UAYL4C,EAAK,SAAap9C,UACtBA,EAAM1kB,OAAO45B,mBAAmB6B,SAASn5B,SAAS4gE,gBAS9C1C,EAAiB,SAAa97C,UAClCA,EAAMhjB,IAAIk4B,mBAAmBupC,aAAY,aAC5CrB,EAAMp9C,IAWCq9C,EAAM/4D,EAAAC,KASN+4D,EAAK,SAAa/mC,UACtBA,EAAgB53B,MAAI25B,EAAAt/B,QAAwBkoB,OAYxCq8C,EAAiB,SAAahnC,OACnCG,EAA2CH,EAAgBG,qBAClC,GAAxBA,EAAcmI,UAAW3Q,EAAA7B,QAAA6B,EAAA5B,KAAuBoK,EAAc6nC,UAU1Df,EAAKl5D,EAAAsB,MAUL63D,EAAW,SAAalnC,SACR,eAApBA,EAAgB53B,MAUZ++D,EAAW,SAAannC,UAC5BA,EAAgB53B,MAAI25B,EAAAt/B,QAAwBslC,aAUxCq/B,EAAW,SAAapnC,UAC5BA,EAAgB53B,MAAI25B,EAAAt/B,QAAwBmoB,UAWxCw6C,EAAc,SAAaplC,OAChCG,EAAoEH,EAAgBG,qBAEvFA,EAAc2nC,UACb3nC,EAAc4nC,SAAW5nC,EAAc6nC,WACxC7nC,EAAc8jC,UAaNoD,EAAuB,SAAarnC,OACzCG,EAAoEH,EAAgBG,qBAEvFA,EAAc2nC,SAAMnwC,EAAA5B,IACdoK,EAAc4nC,QAAU5nC,EAAc6nC,WAC5C7nC,EAAc8jC,UAYNqD,EAAY,SAAatnC,OAC9BG,EAAoEH,EAAgBG,qBAEvFA,EAAc2nC,UACb3nC,EAAc4nC,SAAW5nC,EAAc6nC,UACzC7nC,EAAc8jC,UAYLsD,EAAiB,SAAavnC,OAEnCmoC,EADoEnoC,EAAgBG,cACpCp7B,OAAQojE,cAChD,UAAPA,GAA8B,WAAPA,GAA+B,aAAPA,GAU3CX,EAAS,SAAaxnC,OAC3B4H,EAAoE5H,EACvEG,mCACqBz3B,IAAjBk/B,EAA4B,IAEJ,SAAxBA,EAAawgC,aAUTX,EAAS,SAAaznC,OAC3BqoC,EAAkEroC,EACrEG,mCACmBz3B,IAAf2/D,EAA0B,IAEJ,UAAtBA,EAAWD,aAUPV,EAAO,SAAa1nC,OACzBqoC,EAAkEroC,EACrEG,mCACmBz3B,IAAf2/D,EAA0B,IAEJ,QAAtBA,EAAWD,aAYP/C,EAAa,SAAarlC,OAC/B4H,EAAoE5H,EACvEG,mCACqBz3B,IAAjBk/B,EAA4B,IAC5BA,EAAa0gC,WAAqC,IAAxB1gC,EAAaU,yRCvS7C,MAAAm8B,EAAAtjE,EAAA,6jBA4BHonE,EAAA,SAAAhjE,GAGK,SACHijE,EAAY9qC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE0+D,SAAQ72D,EAAAsB,eAOLi2D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAA0B,iBAMvDlgE,EAAK+hE,gBAAa//D,EAMlBhC,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aA3BhDtpC,EAAAqiE,EAAAjjE,GAkCvBijE,EAAApiE,UAAAq/D,gBAAe,SAACzlC,kBACCA,QAITv5B,EAAMu5B,EAAgBv5B,IACtBzB,EAAOyB,EAAIm4B,aACb55B,EAAK4sC,iBAAiBhmC,WAAQ+sC,EAAA6K,aAG5B93C,EAAOjF,EAAI+S,UACX4B,EAAS4kB,EAAgBv1B,MACzBg5C,EAAQ3tC,KAAKyrC,MAAM71C,EAAK,GAAK,EAAI0P,EAAO,GAAIA,EAAO,GAAK1P,EAAK,GAAK,WAChDhD,SAAf+/D,WAAwB,KACzBh8C,EAAQg3B,EAAKv9C,KAAQuiE,WAC3BzjE,EAAKkxC,wBAAwBzpB,QAE1Bg8C,WAAahlB,KAQpB+kB,EAAApiE,UAAAy/D,cAAa,SAAC7lC,sBACGA,KAIHA,EAAgBv5B,IACXm4B,UACZgY,eAAc1wC,KAAM2sD,YAClB,IAQT2V,EAAApiE,UAAA4/D,gBAAe,SAAChmC,uBACCA,4BAKKA,KAAe95B,KAC5Bo/D,WAAWtlC,MAEJA,EAAgBv5B,IACxBm4B,UAAU+X,wBACT8xB,gBAAa//D,GACX,KAKb8/D,EA5FA,sBA8FeD,8RC1HZ,MAAAG,EAAAvnE,EAAA,8iBAoCHwnE,EAAA,SAAApjE,GAGK,SACHqjE,EAAYlrC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCunC,EAAY5hE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAoC,oBAEvD5gE,EAAAnB,EAAAU,KAAAC,KAAA,CACE++D,UAAWA,EACXv9D,UAAWrE,EAAQqE,WAAS,cAC5BmhE,QAASxlE,EAAQwlE,iBAOdhW,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAMrE/oC,EAAKoiE,UAAuBpgE,IAAhBrF,EAAQ0lE,KAAoB1lE,EAAQ0lE,aAzB7B5iE,EAAAyiE,EAAArjE,GAgCrBqjE,EAAAxiE,UAAA4iE,SAAQ,SAACv/C,OACDhjB,EAAGP,KAAQoC,SACXtD,EAAqDyB,EAAIm4B,UACzDlzB,EAAkDjF,EAAI+S,UACxDU,EAAMhU,KAAQ+iE,cAAct8D,oBAEvBm8D,KAAI,KACLI,EAAYlkE,EAAKitC,wBAAwBvmC,GACzCy9D,EAAct8D,EAAAsL,8BAAA,CAClB1R,EAAI44B,+BAA8BxyB,EAAAiM,cAAeoB,IACjDzT,EAAI44B,+BAA8BxyB,EAAA6M,YAAaQ,MAE3CkvD,EAASpkE,EAAKytC,+BAA+B02B,EAAgBz9D,qBAEnDw9D,EAAW,EAAIE,GAC/BlvD,EAASgvD,MAGLv9D,EAAa3G,EAAK+tC,yBACtB/tC,EAAKytC,+BAA+Bv4B,EAAQxO,IAExCxG,EAASF,EAAK+vC,qBAAoBloC,EAAAmM,UAAWkB,GAASvO,GAE5D3G,EAAKmqC,gBAAe,CAClBxjC,WAAYA,EACZzG,OAAQA,EACRuqC,SAAQvpC,KAAO2sD,UACfnjB,OAAMC,EAAA+G,WAGZkyB,EA9DA,sBAgEeD,85BCpETU,EAMI,WANJA,EAaG,UAbHA,EAoBE,SApBFA,EA2BK,YAQXC,EAAA,SAAA/jE,GAKK,SACHgkE,EAAYnhE,EAAM0D,EAAYk0B,OAA9Bt5B,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAQVQ,EAAKoF,WAAaA,EAOlBpF,EAAKs5B,gBAAkBA,WAtBO75B,EAAAojE,EAAAhkE,GAwBlCgkE,EAxBA,YAsCAC,EAAA,SAAAjkE,GAGK,SACHkkE,EAAY/rC,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAyB,UAMzCh3B,EAAKgjE,KAAI,IAAAC,EAAAlnE,QAAiBY,EAAQqE,WAAS,cAM3ChB,EAAKkjE,cAA+BlhE,IAApBrF,EAAQwlE,QAAwBxlE,EAAQwlE,QAAU,GAE9DxlE,EAAQ2lE,WACVtiE,EAAKsiE,SAAW3lE,EAAQ2lE,UAO1BtiE,EAAKmjE,YAAc,KAMnBnjE,EAAK4+D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAA8B,kBAMvDtgE,EAAKojE,iBAAmBzmE,EAAQ0mE,gBAC5B1mE,EAAQ0mE,gBACRrjE,EAAKsjE,gCA3CS7jE,EAAAsjE,EAAAlkE,GAuDpBkkE,EAAArjE,UAAA4jE,uBAAsB,SAAChqC,EAAiBiqC,EAAYC,OAC5CrlE,EAAQqlE,EAAS,GAAKD,EAAW,GACjCziE,EAAS0iE,EAAS,GAAKD,EAAW,UACjCplE,EAAQA,EAAQ2C,EAASA,GAAMtB,KAAS0jE,UAQjDH,EAAArjE,UAAA6iE,YAAW,uBACGS,KAAKT,eAOnBQ,EAAArjE,UAAAq/D,gBAAe,SAACzlC,QACT0pC,KAAKS,UAASjkE,KAAM2jE,YAAa7pC,EAAgBv1B,YAEjD9B,cAAa,IACZ2gE,EACFD,EACArpC,EAAgBl0B,WAChBk0B,KAUNypC,EAAArjE,UAAAy/D,cAAa,SAAC7lC,QACP0pC,KAAKjnD,OAAO,UAEX2nD,EAAWlkE,KAAQ4jE,iBACvB9pC,EAAe95B,KACV2jE,YACL7pC,EAAgBv1B,cAEd2/D,GAAWlkE,KACR8iE,SAAShpC,QAEXr3B,cAAa,IACZ2gE,EACFc,EAAcf,EAA0BA,EACxCrpC,EAAgBl0B,WAChBk0B,KAGG,GAQTypC,EAAArjE,UAAA4/D,gBAAe,SAAChmC,gBACLslC,WAAWtlC,UACb6pC,YAAc7pC,EAAgBv1B,WAC9Bi/D,KAAKjnD,OAAOud,EAAgBv5B,UAC5BijE,KAAKS,UAASjkE,KAAM2jE,YAAW3jE,KAAO2jE,kBACtClhE,cAAa,IACZ2gE,EACFD,EACArpC,EAAgBl0B,WAChBk0B,KAGG,IAUXypC,EAAArjE,UAAA4iE,SAAQ,SAACv/C,KACXggD,EA5IA,sBA8IeD,+zBClPfa,EAAA,SAAA9kE,GAGK,SACH+kE,EAAY5iE,OAAZhB,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK6jE,UAAY,KAMjB7jE,EAAKU,SAAWC,SAASC,cAAa,OACtCZ,EAAKU,SAAS7C,MAAMgD,SAAQ,WAC5Bb,EAAKU,SAAS7C,MAAM62B,cAAa,OACjC10B,EAAKU,SAASM,UAAS,UAAeA,EAMtChB,EAAK6E,KAAO,KAMZ7E,EAAKmjE,YAAc,KAMnBnjE,EAAK8jE,UAAY,cAtCGrkE,EAAAmkE,EAAA/kE,GA4CtB+kE,EAAAlkE,UAAAwC,gBAAe,gBACR6Z,OAAO,OAMd6nD,EAAAlkE,UAAAqkE,QAAO,eACCR,EAAU/jE,KAAQ2jE,YAClBK,EAAQhkE,KAAQskE,UAChBE,EAAE,KACFnmE,EAAK2B,KAAQkB,SAAS7C,MAC5BA,EAAM2vB,KAAOpe,KAAK2F,IAAIwuD,EAAW,GAAIC,EAAS,IAAMQ,EACpDnmE,EAAMk6B,IAAM3oB,KAAK2F,IAAIwuD,EAAW,GAAIC,EAAS,IAAMQ,EACnDnmE,EAAMM,MAAQiR,KAAK0F,IAAI0uD,EAAS,GAAKD,EAAW,IAAMS,EACtDnmE,EAAMiD,OAASsO,KAAK0F,IAAI0uD,EAAS,GAAKD,EAAW,IAAMS,GAMzDJ,EAAAlkE,UAAAqc,OAAM,SAAChc,WACI8E,KAAI,MACNA,KAAK+zB,sBAAsBx2B,YAAW5C,KAAMkB,cAC3C7C,EAAK2B,KAAQkB,SAAS7C,MAC5BA,EAAM2vB,KAAI,UACV3vB,EAAMk6B,IAAG,UACTl6B,EAAMM,MAAK,UACXN,EAAMiD,OAAM,eAET+D,KAAO9E,OACH8E,MAAIrF,KACNqF,KAAK+zB,sBAAsB5f,YAAWxZ,KAAMkB,WAQrDkjE,EAAAlkE,UAAA+jE,UAAS,SAACF,EAAYC,QACfL,YAAcI,OACdO,UAAYN,OACZS,8BACAF,WAMPH,EAAAlkE,UAAAukE,uBAAsB,eACdV,EAAU/jE,KAAQ2jE,YAClBK,EAAQhkE,KAAQskE,UAOhBn9D,EANM,CACV48D,GACCA,EAAW,GAAIC,EAAS,IACzBA,GACCA,EAAS,GAAID,EAAW,KAEAxjE,IAAGP,KACvBqF,KAAKoyB,+BAA8Bz3B,KACnCqF,MAGP8B,EAAY,GAAKA,EAAY,GAAGd,aACtBg+D,eAGHA,UAAUzlB,eAAc,CAAEz3C,IAHdnH,KACZqkE,UAAS,IAAAK,EAAAnoE,QAAA,CAAgB4K,KASlCi9D,EAAAlkE,UAAA6iE,YAAW,uBACGsB,WAEhBD,EA1HA,sBA4HeD,iOCjIZ,MAAAxhC,EAAA1nC,EAAA,woBAgCH0pE,EAAA,SAAAtlE,GAGK,SACHulE,EAAYptC,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAW,UAO3Bh3B,EAAKqkE,kBAAiB,SAAa/qC,2BAEhBA,IAAeklC,EAAAqC,kBAAuBvnC,IAQzDt5B,EAAK4+D,gBACmB58D,IAAtBrF,EAAQ4hE,UACJ5hE,EAAQ4hE,UACRv+D,EAAKqkE,kBAMXrkE,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAMrE/oC,EAAKskE,iBACoBtiE,IAAvBrF,EAAQ4nE,WAA2B5nE,EAAQ4nE,WAAa,aAxCpC9kE,EAAA2kE,EAAAvlE,GAmDxBulE,EAAA1kE,UAAAyjB,YAAW,SAACmW,OACN+6B,GAAY,KACZ/6B,EAAgB53B,MAAIa,EAAAxG,QAAcwoB,QAAO,KACrCigD,EAAyClrC,EAAgBG,cACzDgrC,EAAUD,EAASC,gBAElB7F,WAAWtlC,KACfmrC,GAAOC,EAAA3oE,QAAY4oE,MAClBF,GAAOC,EAAA3oE,QAAYoY,MACnBswD,GAAOC,EAAA3oE,QAAYqY,OACnBqwD,GAAOC,EAAA3oE,QAAY6oE,IAAE,KAGjBtmE,EADMg7B,EAAgBv5B,IACXm4B,UACX2sC,EAAgBvmE,EAAK0pC,gBAAaxoC,KAAU8kE,YAC9C9tD,EAAS,EACXC,EAAS,EACPguD,GAAOC,EAAA3oE,QAAY4oE,KACrBluD,GAAUouD,EACDJ,GAAOC,EAAA3oE,QAAYoY,KAC5BqC,GAAUquD,EACDJ,GAAOC,EAAA3oE,QAAYqY,MAC5BoC,EAASquD,EAETpuD,EAASouD,MAEL9+C,EAAK,CAAIvP,EAAQC,YACNsP,EAAOznB,EAAK+pC,qBACzB/pC,EAAMynB,EAAKvmB,KAAO2sD,WACtBqY,EAAStjD,iBACTmzC,GAAY,UAGRA,GAEZ+P,EAtFA,sBAwFeD,mUCjHbhwD,KAAM,GACNywD,GAAI,GACJxwD,MAAO,GACPuwD,KAAM,yKCVL,MAAAxiC,EAAA1nC,EAAA,8jBA4BHqqE,EAAA,SAAAjmE,GAGK,SACHkmE,EAAY/tC,OAAZh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAyB,UAMzCh3B,EAAK4+D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAqC,kBAMvD7gE,EAAKs9D,OAAS3gE,EAAQopB,MAAQppB,EAAQopB,MAAQ,EAM9C/lB,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aAzB9CtpC,EAAAslE,EAAAlmE,GAoCzBkmE,EAAArlE,UAAAyjB,YAAW,SAACmW,OACN+6B,GAAY,KAEd/6B,EAAgB53B,MAAIa,EAAAxG,QAAcwoB,SAClC+U,EAAgB53B,MAAIa,EAAAxG,QAAcyoB,SAAQ,KAEpCggD,EAAyClrC,EAAgBG,cACzDurC,EAAWR,EAASQ,iBAEnBpG,WAAWtlC,KACf0rC,GAAQ,IAAQC,WAAW,IAAMD,GAAQ,IAAQC,WAAW,IAAC,KAExDllE,EAAMu5B,EAAgBv5B,IACtBgmB,EACJi/C,GAAQ,IAAQC,WAAW,GAACzlE,KAAS89D,QAAM99D,KAAS89D,OAChDh/D,EAAOyB,EAAIm4B,wBACL55B,EAAMynB,OAAO/jB,EAASxC,KAAO2sD,WACzCqY,EAAStjD,iBACTmzC,GAAY,UAGRA,GAEZ0Q,EA3DA,sBA6DeD,4PClFZ,IACHI,EAAA,WAMK,SACHC,EAAYC,EAAOC,EAAaC,GAI3B9lE,KACE+lE,OAASH,EAKX5lE,KACEgmE,aAAeH,EAKjB7lE,KACEimE,OAASH,EAKX9lE,KACEkmE,QAAO,GAKTlmE,KACEmmE,OAAS,EAKXnmE,KACEomE,iBAAmB,SAM1BT,EAAAzlE,UAAAkL,MAAK,gBACE86D,QAAQtqE,OAAS,OACjBuqE,OAAS,OACTC,iBAAmB,GAO1BT,EAAAzlE,UAAAw/D,OAAM,SAAClwD,EAAGC,QACHy2D,QAAQjiE,KAAKuL,EAAGC,EAAGjS,KAAK82B,QAM/BqxC,EAAAzlE,UAAAmL,IAAG,mBACQ66D,QAAQtqE,OAAS,SAGjB,MAEHkqE,EAAQtoE,KAAK82B,MAAGt0B,KAAUimE,OAC1BI,EAASrmE,KAAQkmE,QAAQtqE,OAAS,UAC/BsqE,QAAQG,EAAY,GAAKP,SAGzB,UAILQ,EAAaD,EAAY,EACtBC,EAAa,GAACtmE,KAASkmE,QAAQI,EAAa,GAAKR,GACtDQ,GAAc,MAGV/8B,EAAQvpC,KAAQkmE,QAAQG,EAAY,GAACrmE,KAASkmE,QAAQI,EAAa,MAIrE/8B,EAAW,IAAO,GAAE,OACf,MAGHz5B,EAAE9P,KAAQkmE,QAAQG,GAASrmE,KAASkmE,QAAQI,GAC5Cv2D,EAAE/P,KAAQkmE,QAAQG,EAAY,GAACrmE,KAASkmE,QAAQI,EAAa,eAC9DH,OAASv2D,KAAKyrC,MAAMtrC,EAAID,QACxBs2D,iBAAmBx2D,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,GAAMw5B,OAC3C68B,iBAAgBpmE,KAAQgmE,cAMtCL,EAAAzlE,UAAAo2C,YAAW,uBACI0vB,aAAYhmE,KAAQomE,kBAAgBpmE,KAAS+lE,QAM5DJ,EAAAzlE,UAAA0/D,SAAQ,uBACMuG,QAEhBR,EAjHA,aAmHeD,gMCjHFa,IAVV,MAAA5jC,EAAA1nC,EAAA,imBAUUsrE,EAAI,CACfC,SAAQ,WACRphD,MAAK,SA2BPqhD,EAAA,SAAApnE,GAGK,SACHqnE,EAAYlvC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KACgE7C,IAAO6C,MAOlE2mE,YAAc,EAMnBnmE,EAAKomE,WAAa,EAMlBpmE,EAAK+9C,eAAiC/7C,IAArBrF,EAAQ4nD,SAAyB5nD,EAAQ4nD,SAAW,EAMrEvkD,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAMrE/oC,EAAKqmE,cAA+BrkE,IAApBrF,EAAQ2pE,QAAwB3pE,EAAQ2pE,QAAU,GAMlEtmE,EAAKumE,gBACmBvkE,IAAtBrF,EAAQ6pE,WAA0B7pE,EAAQ6pE,UAM5CxmE,EAAKymE,0BAC6BzkE,IAAhCrF,EAAQyuC,qBACJzuC,EAAQyuC,wBAGRmzB,EAAY5hE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAA4B,cAMvDpgE,EAAK4+D,WAAajiE,EAAQ2C,YAAWk/D,EAAAC,IAAAD,EAAAK,kBACVN,GACvBA,EAMJv+D,EAAK0mE,YAAc,KAMnB1mE,EAAK2mE,gBAAa3kE,EAMlBhC,EAAK4mE,WAML5mE,EAAK6mE,WAAQ7kE,EAObhC,EAAK8mE,kBAAoB,IAKzB9mE,EAAK+mE,mBAOL/mE,EAAKgnE,cAAgB,aA5GIvnE,EAAAymE,EAAArnE,GAkH3BqnE,EAAAxmE,UAAAunE,gBAAe,gBACRF,wBAAqB/kE,EAChBxC,KAAQoC,SAASs2B,UACtBgY,oBACHluC,EAASxC,KACJ4mE,WAAU5mE,KAAS4mE,WAAa,EAAI,GAAI,EAAM,EAAC5mE,KAC/CknE,cAUTR,EAAAxmE,UAAAyjB,YAAW,SAACmW,YACAslC,WAAWtlC,GAAe,OAC3B,KAEIA,EAAgB53B,OACrBa,EAAAxG,QAAe6oB,MAAK,OACnB,MAaLmB,EAVEhmB,EAAMu5B,EAAgBv5B,IACtBmnE,EAAwC5tC,EAAgBG,iBAC9DytC,EAAWhmD,sBAEFqlD,aAAU/mE,KACZknE,YAAcptC,EAAgBl0B,YAMjCk0B,EAAgB53B,MAAIa,EAAAxG,QAAc6oB,QACpCmB,EAAQmhD,EAAWzwD,kBACJywD,EAAWC,YAAcC,WAAWC,kBACjDthD,GAAKkL,EAAA3B,oBAEH43C,EAAWC,YAAcC,WAAWE,iBACtCvhD,GAAS,KAIC,IAAVA,EAAW,OACN,OAEFqgD,WAAargD,MAGd+N,EAAM92B,KAAK82B,WAEO9xB,SAAf2kE,aAAwBnnE,KAC1BmnE,WAAa7yC,UAGV+yC,OAAS/yC,EAAGt0B,KAAQmnE,WAAUnnE,KAAQsnE,qBAAiBtnE,KAC1DqnE,MAAQz3D,KAAK0F,IAAIiR,GAAS,EAAIggD,EAAKC,SAAWD,EAAKnhD,WAGpDtmB,EAAOyB,EAAIm4B,kBAEV2uC,QAAUd,EAAKC,WAClB1nE,EAAK6sC,2BAAsB3rC,KAAWinE,iCAE/BM,mBACPxrC,aAAY/7B,KAAMunE,qBAEdzoE,EAAK48B,gBACP58B,EAAKurC,mBAEPvrC,EAAK2xC,yBAEF82B,mBAAqBhqC,WAAUv9B,KAC7BynE,gBAAgBxmE,KAAIjB,MAAAA,KACpB6mE,UAEP/nE,EAAKgxC,YAAYvpB,EAAKvmB,KAAQwnE,cAAaxnE,KAAOknE,kBAC7CC,WAAa7yC,GACX,OAGJqyC,aAAepgD,MAEdwhD,EAAWn4D,KAAK4F,IAAGxV,KAAM6mE,UAAYvyC,EAAGt0B,KAAQmnE,YAAa,UAEnEprC,aAAY/7B,KAAMonE,iBACbA,WAAa7pC,WAAUv9B,KACrBgoE,iBAAiB/mE,KAAIjB,KAAOO,GACjCwnE,IAGK,GAOTrB,EAAAxmE,UAAA8nE,iBAAgB,SAACznE,OACTzB,EAAOyB,EAAIm4B,UACb55B,EAAK48B,gBACP58B,EAAKurC,uBAEH9jB,GAAKhM,EAAAC,MAAAxa,KAEA2mE,aAAW3mE,KACVu+C,UAASv+C,KAAQwnE,cAAaxnE,KAC/Bu+C,UAASv+C,KAAQwnE,eAAaxnE,KAC5BwnE,eACP1oE,EAAK6sC,0BAAsB3rC,KAAWinE,wBAExC1gD,EAAQA,EAASA,EAAQ,EAAI,GAAI,EAAM,iBAE7BznB,EAAMynB,EAAKvmB,KAAOknE,YAAWlnE,KAAO2sD,gBAE3C0a,WAAQ7kE,OACRmkE,YAAc,OACdO,YAAc,UACdC,gBAAa3kE,OACb4kE,gBAAa5kE,GASpBkkE,EAAAxmE,UAAA+nE,eAAc,SAACjB,QACRD,WAAaC,EACbA,IAAShnE,KACPknE,YAAc,OAGzBR,EA3PA,sBA6PeD,+SCpSZ,MAAAlI,EAAAtjE,EAAA,+hBAoBHitE,EAAA,SAAA7oE,GAGK,SACH8oE,EAAY3wC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnC4wC,EAAgEjrE,SAEjEirE,EAAe1J,WAClB0J,EAAe1J,SAAQ72D,EAAAsB,QAGzB3I,EAAAnB,EAAAU,KAAAC,KAAMooE,IAAcpoE,MAMfqoE,QAAU,KAMf7nE,EAAK+hE,gBAAa//D,EAMlBhC,EAAK8nE,WAAY,EAMjB9nE,EAAK+nE,eAAiB,EAMtB/nE,EAAKgoE,gBAAmChmE,IAAtBrF,EAAQsrE,UAA0BtrE,EAAQsrE,UAAY,GAMxEjoE,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aAjD/CtpC,EAAAkoE,EAAA9oE,GAwDxB8oE,EAAAjoE,UAAAq/D,gBAAe,SAACzlC,OACV4uC,EAAgB,EAEdC,EAAM3oE,KAAQw/D,eAAe,GAC7BoJ,EAAM5oE,KAAQw/D,eAAe,GAG7B9vD,EAAQE,KAAKyrC,MACjButB,EAAOtwC,QAAUqwC,EAAOrwC,QACxBswC,EAAOvwC,QAAUswC,EAAOtwC,iBAGF71B,SAAf+/D,WAAwB,KACzBh8C,EAAQ7W,EAAK1P,KAAQuiE,gBACtBgG,gBAAkBhiD,QACb+hD,WAAa14D,KAAK0F,IAAGtV,KAAMuoE,gBAAcvoE,KAASwoE,aAAUxoE,KAC/DsoE,WAAY,GAEnBI,EAAgBniD,OAEbg8C,WAAa7yD,MAEZnP,EAAMu5B,EAAgBv5B,IACtBzB,EAAOyB,EAAIm4B,aACb55B,EAAK4sC,iBAAiBhmC,WAAQ+sC,EAAA6K,aAO5BrlB,EAAmB13B,EAAIqB,cAAcs2B,wBACrCunC,EAAQlB,EAAAkB,SAAAz/D,KAA6Bw/D,gBAC3CC,EAAS,IAAMxnC,EAAiBjK,KAChCyxC,EAAS,IAAMxnC,EAAiBM,SAC3B8vC,QAAU9nE,EAAIk3B,+BAA+BgoC,QAGzC6I,YACP/nE,EAAIyD,SACJlF,EAAKkxC,uBAAuB04B,EAAa1oE,KAAOqoE,YASpDF,EAAAjoE,UAAAy/D,cAAa,SAAC7lC,gBACH0lC,eAAe5jE,OAAS,KACnBk+B,EAAgBv5B,IACXm4B,UACZgY,eAAc1wC,KAAM2sD,YAClB,IAWXwb,EAAAjoE,UAAA4/D,gBAAe,SAAChmC,WACL0lC,eAAe5jE,QAAU,EAAC,KAC3B2E,EAAMu5B,EAAgBv5B,gBACvB8nE,QAAU,UACV9F,gBAAa//D,OACb8lE,WAAY,OACZC,eAAiB,OACZrI,wBACR3/D,EAAIm4B,UAAU+X,oBAET,SAEA,GAGb03B,EAxIA,sBA0IeD,6PC9JZ,MAAA3J,EAAAtjE,EAAA,+fAiBH4tE,EAAA,SAAAxpE,GAGK,SACHypE,EAAYtxC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnC4wC,EAAgEjrE,SAEjEirE,EAAe1J,WAClB0J,EAAe1J,SAAQ72D,EAAAsB,QAGzB3I,EAAAnB,EAAAU,KAAAC,KAAMooE,IAAcpoE,MAMfqoE,QAAU,KAMf7nE,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,IAMrE/oC,EAAKuoE,mBAAgBvmE,EAMrBhC,EAAKwoE,gBAAkB,WArCH/oE,EAAA6oE,EAAAzpE,GA4CtBypE,EAAA5oE,UAAAq/D,gBAAe,SAACzlC,OACVmvC,EAAa,EAEXN,EAAM3oE,KAAQw/D,eAAe,GAC7BoJ,EAAM5oE,KAAQw/D,eAAe,GAC7B1vD,EAAK64D,EAAOtwC,QAAUuwC,EAAOvwC,QAC7BtoB,EAAK44D,EAAOrwC,QAAUswC,EAAOtwC,QAG7BpS,EAAWtW,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,QAEfvN,SAAlBumE,gBACPE,EAAUjpE,KAAQ+oE,cAAgB7iD,QAE/B6iD,cAAgB7iD,MAEf3lB,EAAMu5B,EAAgBv5B,IACtBzB,EAAOyB,EAAIm4B,UAEC,GAAduwC,IAAiBjpE,KACdgpE,gBAAkBC,OAInBhxC,EAAmB13B,EAAIqB,cAAcs2B,wBACrCunC,EAAQlB,EAAAkB,SAAAz/D,KAA6Bw/D,gBAC3CC,EAAS,IAAMxnC,EAAiBjK,KAChCyxC,EAAS,IAAMxnC,EAAiBM,SAC3B8vC,QAAU9nE,EAAIk3B,+BAA+BgoC,GAGlDl/D,EAAIyD,SACJlF,EAAK6wC,yBAAyBs5B,EAAUjpE,KAAOqoE,UAQjDS,EAAA5oE,UAAAy/D,cAAa,SAAC7lC,WACH0lC,eAAe5jE,OAAS,EAAC,KAE1BkD,EADMg7B,EAAgBv5B,IACXm4B,UACXztB,EAASjL,KAAQgpE,gBAAkB,EAAI,GAAI,SACjDlqE,EAAK4xC,eAAc1wC,KAAM2sD,UAAW1hD,IAC7B,SAEA,GASX69D,EAAA5oE,UAAA4/D,gBAAe,SAAChmC,WACL0lC,eAAe5jE,QAAU,EAAC,KAC3B2E,EAAMu5B,EAAgBv5B,gBACvB8nE,QAAU,UACVU,mBAAgBvmE,OAChBwmE,gBAAkB,OACb9I,wBACR3/D,EAAIm4B,UAAU+X,oBAET,SAEA,GAGbq4B,EAnHA,sBAqHeD,68BC3GTK,EAMQ,cAQdC,EAAA,SAAA9pE,GAMK,SACH+pE,EAAYlnE,EAAMmnE,EAAMC,EAAchyB,OAAtC92C,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKm3B,SAAW2xC,EAOhB9oE,EAAK6oE,KAAOA,EAOZ7oE,EAAK7C,WAAa25C,WA7BgBr3C,EAAAmpE,EAAA/pE,GA+BtC+pE,EA/BA,YA6CAG,EAAA,SAAAlqE,GAGK,SACHmqE,EAAYhyC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,IAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACE2jB,YAAW9b,EAAAC,cAOR2hE,eAAgB,EAMrBjpE,EAAKkpE,SAAQ,WACPC,EAAqBxsE,EAAQwsE,mBAC/BxsE,EAAQwsE,mBAAkB,GAErBhuE,EAAI,EAAG6H,EAAKmmE,EAAmB/tE,OAAQD,EAAI6H,IAAM7H,EAAC,KACrDwC,EAASwrE,EAAmBhuE,GACf,mBAANwC,IACTA,EAAM,IAAOA,GAEfqC,EAAKkpE,SAASzlE,KAAK9F,GACnBqC,EAAKipE,cACHjpE,EAAKipE,eAAiBtrE,EAAOuvC,YAAOk8B,EAAArtE,QAAkBstE,oBAO1DrpE,EAAKkmC,YAAcvpC,EAAQQ,WAAUs7B,EAAA98B,IACnBgB,EAAQQ,YACtB,KAMJ6C,EAAKspE,gBAAkB,KAMvBtpE,EAAKuuD,QAAU5xD,EAAQX,QAAU,KAMjCgE,EAAK3B,OAAS1B,EAAQ0B,OAAS1B,EAAQ0B,OAAS,cA3D1BoB,EAAAupE,EAAAnqE,GAmExBmqE,EAAAtpE,UAAA6pE,cAAa,SAACV,EAAM9lD,OASdvmB,EAREC,EAASsmB,EAAM1kB,OAAO5B,OACtBsD,EAAGP,KAAQoC,SACbzE,EAAUqC,KAAQ0mC,YACjB/oC,IAEHA,EADa4C,EAAIm4B,UACCC,yBAIdqxC,EAAOhqE,KAAQ0pE,SACZ/tE,EAAI,EAAG6H,EAAKwmE,EAAQpuE,OAAQD,EAAI6H,IAAM7H,EAAC,KACxCwC,EAAS6rE,EAAQruE,GACnBy5C,EAAQn4C,OACHwsE,eAAiBtrE,EAAOuvC,YAAOk8B,EAAArtE,QAAkBstE,oBAC3CrnE,IAATxF,IACFA,GAAI,IAAOitE,aAAct5C,OAAO1zB,IAElCm4C,EAAQp4C,OAEJ26B,EAAQ33B,KAAQkqE,iBAAiB/rE,EAAQi3C,EAAK,CAClD+0B,kBAAmBxsE,OAEjBg6B,GAAYA,EAAS/7B,OAAS,EAAC,MACxBmzD,eACFA,QAAQt2C,aACRs2C,QAAQqb,YAAYzyC,SAEtBl1B,cAAa,IACZ0mE,EACFD,EACAG,EACA1xC,EACAh6B,aAWV6rE,EAAAtpE,UAAAmqE,mBAAkB,eACV9pE,EAAGP,KAAQoC,YACb7B,EAAG,KACC+pE,EAAQtqE,KAAQnB,OAAMmB,KAAQnB,OAAS0B,EAAIqB,mBAC5CkoE,gBAAe,UACXQ,EAAQvnE,EAAAxG,QAAYsoB,KAAI7kB,KAAOuqE,WAAUvqE,eACzCsqE,EAAQvnE,EAAAxG,QAAYooB,UAAS3kB,KAAOwqE,WAAUxqE,eAC9CsqE,EAAQvnE,EAAAxG,QAAYqoB,SAAQ5kB,KAAOwqE,WAAUxqE,eAC7CsqE,EAAQvnE,EAAAxG,QAAYsoB,KAAI7kB,KAAOwqE,WAAUxqE,SAWtDwpE,EAAAtpE,UAAAk+D,UAAS,SAACE,SACE7jC,aAAe6jC,GAAMt+D,KACxBqqE,0BAEE5vC,cAAgB6jC,GAAMt+D,KACxByqE,uBAEPprE,EAAAa,UAAMk+D,UAASr+D,KAAAC,KAACs+D,IASlBkL,EAAAtpE,UAAAqc,OAAM,SAAChc,QACAkqE,uBACLprE,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,QACJk6B,aAASz6B,KACXqqE,sBAWTb,EAAAtpE,UAAAgqE,iBAAgB,SAAC/rE,EAAQnB,EAAMG,cAIxBgB,EAAOusE,aAAa1tE,EAAMG,SAEtBmS,UACA,OAOXk6D,EAAAtpE,UAAAuqE,qBAAoB,gBACTX,uBACFA,gBAAgBviE,QAAO7G,EAAAmiB,oBACvBinD,gBAAkB,OAO3BN,EAAAtpE,UAAAqqE,WAAU,SAAChnD,WACHonD,EAAQpnD,EAAMqnD,aAAaD,MACxBhvE,EAAI,EAAG6H,EAAKmnE,EAAM/uE,OAAQD,EAAI6H,IAAM7H,EAAC,KACtC0tE,EAAOsB,EAAMhsC,KAAKhjC,GAClBkvE,EAAM,IAAOC,WACnBD,EAAOruD,iBAAgBzZ,EAAAxG,QACX0oB,KAAIjlB,KACT+pE,cAAc9oE,KAAIjB,KAAOqpE,SAEvBI,cACPoB,EAAOE,kBAAkB1B,GAEzBwB,EAAOG,WAAW3B,KAQxBG,EAAAtpE,UAAAsqE,WAAU,SAACjnD,GACTA,EAAM9B,kBACN8B,EAAM7B,iBACN6B,EAAMqnD,aAAaK,WAAU,QAEjCzB,EAlNA,sBAoNeD,6WCpSbM,aAAY,cACZ1uE,KAAI,OACJ+vE,KAAI,OACJC,IAAG,4KCTF,MAAA5M,EAAAtjE,EAAA,sgBAwBHmwE,EAAA,SAAA/rE,GAGK,SACHgsE,EAAY7zC,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAqD7C,IAAO6C,MAMvDo/D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAoC,aAMvD5gE,EAAK+hE,gBAAa//D,EAMlBhC,EAAK8qE,oBAAiB9oE,EAMtBhC,EAAKwoE,gBAAkB,EAMvBxoE,EAAKmsD,eAAiCnqD,IAArBrF,EAAQosC,SAAyBpsC,EAAQosC,SAAW,aArCzCtpC,EAAAorE,EAAAhsE,GA4C9BgsE,EAAAnrE,UAAAq/D,gBAAe,SAACzlC,kBACCA,QAITv5B,EAAMu5B,EAAgBv5B,IACtBiF,EAAOjF,EAAI+S,UACX4B,EAAS4kB,EAAgBv1B,MACzByS,EAAS9B,EAAO,GAAK1P,EAAK,GAAK,EAC/ByR,EAASzR,EAAK,GAAK,EAAI0P,EAAO,GAC9BqoC,EAAQ3tC,KAAKyrC,MAAMpkC,EAAQD,GAC3Bu0D,EAAY37D,KAAK8W,KAAK1P,EAASA,EAASC,EAASA,GACjDnY,EAAOyB,EAAIm4B,kBACOl2B,SAAf+/D,WAAwB,KACzBiJ,EAAUxrE,KAAQuiE,WAAahlB,EACrCz+C,EAAKkxC,uBAAuBw7B,QAEzBjJ,WAAahlB,OACU/6C,SAAnB8oE,gBACPxsE,EAAK6wC,yBAAwB3vC,KAAMsrE,eAAiBC,QAE1B/oE,SAAnB8oE,iBAA4BtrE,KAC9BgpE,gBAAehpE,KAAQsrE,eAAiBC,QAE1CD,eAAiBC,IAQxBF,EAAAnrE,UAAAy/D,cAAa,SAAC7lC,mBACGA,GAAe,OACrB,MAIHh7B,EADMg7B,EAAgBv5B,IACXm4B,UACXztB,EAASjL,KAAQgpE,gBAAkB,EAAI,GAAI,SACjDlqE,EAAK4xC,eAAc1wC,KAAM2sD,UAAW1hD,QAC/B+9D,gBAAkB,GAChB,GAQTqC,EAAAnrE,UAAA4/D,gBAAe,SAAChmC,uBACCA,YAINslC,WAAWtlC,KAClBA,EAAgBv5B,IAAIm4B,UAAU+X,wBACzB8xB,gBAAa//D,OACb8oE,oBAAiB9oE,GACf,KAKb6oE,EA5GA,sBA8GeD,kQCu/BZliE,EAAAF,OAAAzN,EAAA,wBAAA,IACakwE,KAqCbviE,EAAAF,OAAAzN,EAAA,aAAA,IACamwE,KApqCb,MAAAC,EAAA1wE,EAAA,k6CAwHGsrE,EACC,QADDA,EAEO,aAFPA,EAGG,UAHHA,EAIE,SAMFqF,EAMK,YANLA,EAYG,UAZHA,EAkBK,YAQXC,GAAA,SAAAxsE,GAIK,SACHysE,EAAY5pE,EAAM+D,OAAlBzF,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKyF,QAAUA,WAbYhG,EAAA6rE,EAAAzsE,GAe/BysE,EAfA,YAwBAC,GAAA,SAAA1sE,GAGK,SACH2sE,EAAY7uE,OAAZqD,EAAAR,KACQooE,EAAgEjrE,EACjEirE,EAAe1J,WAClB0J,EAAe1J,SAAQ72D,EAAAsB,QAGzB3I,EAAAnB,EAAAU,KAAAC,KAAMooE,IAAcpoE,MAMfisE,eAAgB,EAMrBzrE,EAAK0rE,QAAU,KAMf1rE,EAAK2rE,aAML3rE,EAAK4rE,cAOL5rE,EAAK6rE,aAML7rE,EAAK8rE,WAAY,EAOjB9rE,EAAKuuD,QAAU5xD,EAAQX,OAASW,EAAQX,OAAS,KAOjDgE,EAAK+rE,UAAYpvE,EAAQw6B,SAAWx6B,EAAQw6B,SAAW,KAOvDn3B,EAAKgsE,eAAiBrvE,EAAQsvE,cAAgBtvE,EAAQsvE,cAAgB,GAOtEjsE,EAAKksE,MAAkEvvE,EAAQ+E,KAO/E1B,EAAK6mE,MAo8BN,SACcnlE,UACPA,kBACY2wC,qBACAI,mBACTszB,iBACSzzB,2BACAI,yBACTqzB,iBACSvzB,uBACAG,qBACTozB,iBACS34B,cACT24B,oBAEGvqE,MAAK,iBAAoBkG,IAn9BxByqE,CAAQnsE,EAAKksE,OAQ1BlsE,EAAKosE,aAAezvE,EAAQ0vE,UAS5BrsE,EAAKssE,WAAa3vE,EAAQ4vE,UACtB5vE,EAAQ4vE,UACRvsE,EAAK6mE,QAAUd,EACf,EACA,EAQJ/lE,EAAKwsE,WACHxsE,EAAK6mE,QAAUd,EACX,EACAppE,EAAQ8vE,UACR9vE,EAAQ8vE,UACRj4D,EAAAA,EAONxU,EAAK0sE,iBAAmB/vE,EAAQgwE,gBAC5BhwE,EAAQgwE,gBAAetlE,EAAAC,SA2zBvBslE,EAxzBAC,EAAmBlwE,EAAQkwE,qBAC1BA,EAAgB,KA0BbC,EAzBAC,EAAO/sE,EAAK6mE,SACdkG,IAAShH,EAOX8G,EAAgB,SAAalmE,EAAajB,EAAUvI,OAC5C6oB,EAAStgB,GACoB,IAAAsnE,EAAAjxE,QAAA,CACnBqnD,IAAKA,MACf5kD,EAAMi6B,EAAAC,mBAAsB/xB,EAAY,GAAIxJ,GAC5C8vE,EAAarnE,EAAAyU,gBACjB7b,EAAMi6B,EAAAC,mBACa/xB,EAAYA,EAAYvL,OAAS,GAAI+B,IAE1D6oB,EAAOknD,mBAAmB1uE,EAAQ4Q,KAAK8W,KAAK+mD,QACtC5/B,EAAc5U,EAAA6U,2BAChBD,GACFrnB,EAAOnY,UAAU1Q,EAAYkwC,GAExBrnB,QAIL+mD,IAAShH,EACX+G,EAAWK,EAAApxE,QACFgxE,IAAShH,EAClB+G,EAAWM,EAAArxE,QACFgxE,IAAShH,IAClB+G,EAAW5I,EAAAnoE,SAQb8wE,EAAgB,SAAalmE,EAAajB,EAAUvI,UAC9CuI,EACEqnE,IAAShH,EACPp/D,EAAY,GAAGvL,OAEjBsK,EAAS04C,eAAc,CACrBz3C,EAAY,GAAG0mE,OAAM,CAAE1mE,EAAY,GAAG,OAGxCjB,EAAS04C,eAAc,IAGzB14C,EAAS04C,eAAez3C,GAG1BjB,EAAQ,IAAOonE,EAAYnmE,GAEtBjB,UASb1F,EAAKstE,kBAAoBT,EAMzB7sE,EAAKutE,sBACyBvrE,IAA5BrF,EAAQ6wE,gBAAgC7wE,EAAQ6wE,gBAAkB,IAQpExtE,EAAKytE,kBAAoB,KAOzBztE,EAAK0tE,eAAiB,KAOtB1tE,EAAK2tE,aAAe,KAOpB3tE,EAAK4tE,cAAgB,KAOrB5tE,EAAK6tE,YAAc,KAOnB7tE,EAAK8tE,kBAAoB,KASzB9tE,EAAK+tE,uBAAyBpxE,EAAQqxE,eAClCrxE,EAAQqxE,eAAiBrxE,EAAQqxE,eACjC,GAOJhuE,EAAKiuE,SAAQ,IAAAC,EAAAnyE,QAAA,CACXC,OAAM,IAAAmyE,EAAApyE,QAAA,CACJqyE,iBAAiB,EACjBhxE,QAAOT,EAAQS,OAAQT,EAAQS,QAEjCS,MAAOlB,EAAQkB,MAAQlB,EAAQkB,OA4qB7B+uE,EAAMyB,EAAAC,8BACK7oE,EAASR,UACjB2nE,EAAOnnE,EAAQ88D,cAAcr1B,aA7qBlCqhC,wBAAwB,IAQ1BvuE,EAAKwuE,cAAgB7xE,EAAQ8xE,aAM7BzuE,EAAK4+D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAE,eAMvD1+D,EAAK0uE,mBACD/xE,EAAQgyE,SACV3uE,EAAK0uE,mBAAkBlQ,EAAA4B,OAEvBpgE,EAAK0uE,mBAAqB/xE,EAAQiyE,kBAC9BjyE,EAAQiyE,kBAAiBpQ,EAAAoC,aAI/B5gE,EAAKgc,iBAAgBC,EAAAC,mBAAAC,EAAApgB,QACoB8hE,QACvC79D,EAAK6uE,uBA3SQpvE,EAAA+rE,EAAA3sE,GAqTjB2sE,EAAA9rE,UAAAqc,OAAM,SAAChc,GACLlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,QACR8uE,gBAQPrD,EAAA9rE,UAAAovE,WAAU,uBACIb,UASdzC,EAAA9rE,UAAAyjB,YAAW,SAACJ,GACNA,EAAM0W,cAAc/3B,OAAIa,EAAAxG,QAAeioB,aAEzCjB,EAAM0W,cAAcvY,sBAEjB4qD,UAAStsE,KACPqnE,QAAUd,GAAUvmE,KAASkvE,mBAAmB3rD,OACnDmvC,EAAOnvC,EAAMrhB,OAAI25B,EAAAt/B,QAAyB8kC,YAC1CsgC,GAAO,QAEH2K,WAAStsE,KACVosE,eACL7oD,EAAMrhB,OAAI25B,EAAAt/B,QAAyBkmC,cAEvBjlC,KAAK82B,MACVt0B,KAAQosE,eAAapsE,KAAS+tE,uBAC9B7B,QAAU3oD,EAAMhf,WAChB0nE,eAAajsE,KAASssE,UAC3B5Z,GAAO,QAEF0Z,mBAAgB5pE,OAEdypE,oBAAuCzpE,IAA1BxC,KAASmsE,eAC7BpwC,aAAY/7B,KAAMmsE,mBACbA,kBAAe3pE,gBAIjB8pE,WACL/oD,EAAMrhB,OAAI25B,EAAAt/B,QAAyBkmC,aACX,OADsBziC,KACzCkuE,qBAEAqB,cAAchsD,EAAM3d,YACzB+7D,GAAO,QAEF2K,WACL/oD,EAAMrhB,OAAI25B,EAAAt/B,QAAyB29B,YAEnCynC,GAAO,EACEjP,GAAI1yD,KAASogE,kBAAoB,GAC1CuB,EAAOp+C,EAAMrhB,OAAI25B,EAAAt/B,QAAyB8kC,cAClCrhC,KAASssE,gBACV/pC,mBAAmBhf,QACf0oD,eAEP1oD,EAAM0W,cAAcvY,mBAGS,UAA/B6B,EAAM0W,cAAcioC,aACnB3+C,EAAMrhB,OAAI25B,EAAAt/B,QAAyBkmC,kBACZjgC,IADuBxC,KACxCmsE,eAA0BnsE,KAE5BuiC,mBAAmBhf,GAEjBA,EAAMrhB,OAAI25B,EAAAt/B,QAAyBmoB,WAC5Ci9C,GAAO,GAGFtiE,EAAAa,UAAMyjB,YAAW5jB,KAAAC,KAACujB,IAAUo+C,GAQrCqK,EAAA9rE,UAAA4/D,gBAAe,SAACv8C,eACT0oD,eAAajsE,KAASssE,eAElBA,gBACFJ,QAAU3oD,EAAMhf,WACX0pE,mBAAiBjuE,KACpBwvE,cAAcjsD,EAAM3d,aAEpB,QACOw5D,WAAW77C,SACpB6oD,cAAgB5uE,KAAK82B,WACrB63C,aAAe5uC,WAAU,gBAErBgF,mBAAkB,IAAAxI,EAAAx9B,QAAAs/B,EAAAt/B,QAEC8kC,YACpB9d,EAAMhjB,IACNgjB,EAAM0W,eACN,EACA1W,EAAMphB,cAGVlB,KAAIjB,MAAAA,KACD+tE,uBAEF7B,QAAU3oD,EAAMhf,OACd,SAEF6nE,mBAAgB5pE,GACd,IASXwpE,EAAA9rE,UAAAy/D,cAAa,SAACp8C,OACRo+C,GAAO,KAEoB,SAAtBvB,0BACE+L,eACPpwC,aAAY/7B,KAAMmsE,mBACbA,kBAAe3pE,QAGjB+/B,mBAAmBhf,QAEf0oD,cAAa,KACdwD,GAAczvE,KAASiuE,kBACzBwB,GAAczvE,KACXwvE,cAAcjsD,EAAM3d,aAEtB6pE,GAAczvE,KAASssE,UAAStsE,KAC9B0vE,qBAECpD,WACJmD,GAAczvE,KAASqnE,QAAUd,SAE1BoJ,UAAUpsD,EAAMhf,YACd2oE,iBAAiB3pD,IAAKvjB,KACxB0vE,qBAGFH,cAAchsD,EAAM3d,aAG7B+7D,GAAO,YACO2K,WAAStsE,KAClB4vE,sBAIJjO,GAAI3hE,KAAS4sE,YAChBrpD,EAAM7B,iBAEDigD,GAQTqK,EAAA9rE,UAAAqiC,mBAAkB,SAAChf,WACZ8oD,aAAe9oD,EAAM0W,cAAcioC,iBAEjCgK,WAAOlsE,KACJssE,WAAStsE,KAASisE,eAAajsE,KAC/BssE,YAAStsE,KAAUisE,eAAa,KAElC4D,EAAM7vE,KAAQksE,QACd4D,EAAUvsD,EAAMhf,MAChBuL,EAAK+/D,EAAO,GAAKC,EAAQ,GACzB//D,EAAK8/D,EAAO,GAAKC,EAAQ,GACzBj1D,EAAkB/K,EAAKA,EAAKC,EAAKA,UAClCk8D,cAAajsE,KAAQssE,UACtBzxD,EAAe7a,KAAQuuE,uBACvB1zD,GAAe7a,KAASuuE,6BAClBtC,cAAa,YAKhBgC,kBAAiBjuE,KACnB+vE,eAAexsD,EAAM3d,iBAErBoqE,2BAA2BzsD,IAUpCyoD,EAAA9rE,UAAAyvE,UAAS,SAACprE,OACJ0rE,GAAK,UACA/B,eAAc,KACjBgC,GAAkB,EAClBC,EAA4B,MAASlC,mBACnCmC,EAAIpwE,KAAQqnE,SACd+I,IAAS7J,EACX0J,GAAK,UACIG,IAAS7J,EAClB0J,EAAmC,IAAjCjwE,KAAQouE,cAAcxyE,eACfw0E,IAAS7J,EAClB2J,EAAelwE,KAAQouE,cAAcxyE,OAAMoE,KAAQ8sE,mBAC1CsD,IAAS7J,EAAY,KACxB8J,EAAYrwE,KAAsCouE,cACxD8B,EAAkBG,EAAa,GAAGz0E,OAAMoE,KAAQ8sE,WAChDqD,EAA4B,CAC1BE,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAGz0E,OAAS,OAGzCs0E,UACI3vE,EAAGP,KAAQoC,SACRzG,EAAI,EAAG6H,EAAK2sE,EAA6Bv0E,OAAQD,EAAI6H,EAAI7H,IAAC,KAC3D20E,EAAmBH,EAA6Bx0E,GAChD40E,EAAchwE,EAAIw4B,uBAAuBu3C,GACzCxgE,EAAKvL,EAAM,GAAKgsE,EAAY,GAC5BxgE,EAAKxL,EAAM,GAAKgsE,EAAY,GAC5B9D,EAAazsE,KAAQssE,UAAY,EAACtsE,KAAQwsE,kBAChDyD,EAAKrgE,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,IAAO08D,EAC/B,MACCwB,kBAAoBqC,iBAM1BL,GAOTjE,EAAA9rE,UAAA8vE,2BAA0B,SAACzsD,OACnBpc,EAAcoc,EAAM3d,WAAWS,aAC3B8nE,aAIanuE,KAAQmuE,aAAapL,cAC1BnkB,eAAez3C,SAJ1BgnE,aAAY,IAAAqC,EAAAj0E,QAAA,IAAAoxE,EAAApxE,QAAyB4K,SACrCspE,0BAWTzE,EAAA9rE,UAAAwwE,gCAA+B,SAACxqE,QACpBmoE,cAAWruE,KACdquE,YAAW,IAAAmC,EAAAj0E,aAEZo0E,EAAOzqE,EAAS+5C,cAAc,GAChC2wB,EAAc5wE,KAAQquE,YAAYtL,cACjC6N,GAOHA,EAAejyB,mBACbgyB,EAAKnvB,YACLmvB,EAAK1iC,sBAEP2iC,EAAepzD,YAVfozD,EAAc,IAAAhD,EAAArxE,QACZo0E,EAAK1iC,qBACL0iC,EAAKnvB,kBAEF6sB,YAAYwC,YAAYD,KAejC5E,EAAA9rE,UAAAsvE,cAAa,SAACt4D,OACNvZ,EAAUqC,KAAQoC,SAASs2B,UAAUC,qBACtCs1C,kBAAoB/2D,OAChBmwD,QAAUd,EAAUvmE,KACtBouE,cAAgBl3D,EAAM7Q,aACbghE,QAAUd,QACnB6H,cAAa,EAAKl3D,EAAM7Q,QAAS6Q,EAAM7Q,eACvCioE,kBAAiBtuE,KAAQouE,cAAc,SAEvCA,cAAa,CAAIl3D,EAAM7Q,QAAS6Q,EAAM7Q,cAEpCioE,oBAAiBtuE,KACnBquE,YAAW,IAAAmC,EAAAj0E,QAAA,IAAAqxE,EAAArxE,QAAAyD,KAAmCsuE,yBAE/CpoE,EAAQlG,KAAQ8tE,kBAAiB9tE,KAChCouE,mBACL5rE,EACA7E,QAEGuwE,eAAc,IAAAsC,EAAAj0E,aACVyyE,eAAahvE,KACfkuE,eAAe4C,gBAAe9wE,KAAMgvE,oBAEtCd,eAAe2C,YAAY3qE,QAC3BuqE,6BACAhuE,cAAa,IACZopE,GAAUD,EAAuB5rE,KAAOkuE,kBAShDlC,EAAA9rE,UAAA6vE,eAAc,SAACnqE,OAITuB,EAAai/C,EAHX7lD,EAAGP,KAAQoC,SACX8D,EAAQlG,KAAQkuE,eAAenL,cAC/BplE,EAAa4C,EAAIm4B,UAAUC,sBAExB0uC,QAAUd,EACjBngB,EAAIpmD,KAAQouE,mBACE/G,QAAUd,GAExBngB,GADAj/C,EAA0CnH,KAAOouE,cAAe,IAC7CjnE,EAAYvL,OAAS,QAC/B+zE,UAAUpvE,EAAIw4B,uBAAuBnzB,MAE5CA,EAAU5F,KAAQiuE,kBAAkB5nE,UAItC+/C,GADAj/C,EAAWnH,KAAQouE,eACAjnE,EAAYvL,OAAS,GAE1CwqD,EAAK,GAAKxgD,EAAW,GACrBwgD,EAAK,GAAKxgD,EAAW,QAChBkoE,kBAAiB9tE,KACgBouE,cACpCloE,EACAvI,QAEOwwE,eACcnuE,KAAQmuE,aAAapL,cAC1BnkB,eAAeh5C,MAG/BM,EAASwnC,YAAOC,EAAApxC,QAAoBy2C,SAAOhzC,KACtCqnE,QAAUd,EAAYvmE,KAEtB0wE,gCAAwDxqE,gBAC/CooE,kBAAiB,CACXtuE,KAAQquE,YAAYtL,cACzBnkB,eAAc5+C,KAAMsuE,wBAEhCmC,yBAQPzE,EAAA9rE,UAAAqvE,cAAa,SAAC3pE,OAGRqnB,EACA9lB,EAHEjB,EAAQlG,KAAQkuE,eAAenL,cAC/BplE,EAAUqC,KAAQoC,SAASs2B,UAAUC,gBAGrCy3C,EAAIpwE,KAAQqnE,MACd+I,IAAS7J,GAAoB6J,IAAS7J,QACnC0H,kBAAoBroE,EAAWS,SACpCc,EAAWnH,KAAsCouE,eACjCxyE,QAAMoE,KAASgtE,kBACpBV,UACPnlE,EAAYu3B,MAEZzR,GAAO,GAGX9lB,EAAYlD,KAAK2B,EAAWS,cACvBynE,kBAAkB3mE,EAAajB,EAAUvI,IACrCyyE,IAAS7J,KAClBp/D,EAA0CnH,KAAOouE,cAAe,IAChDxyE,QAAMoE,KAASgtE,kBACpBV,UACPnlE,EAAYu3B,MAEZzR,GAAO,GAGX9lB,EAAYlD,KAAK2B,EAAWS,SACxB4mB,IAAIjtB,KACDiuE,kBAAoB9mE,EAAY,SAElC2mE,kBAAiB9tE,KAAMouE,cAAeloE,EAAUvI,SAElD8yE,wBACDxjD,GAAIjtB,KACD0vE,iBAST1D,EAAA9rE,UAAA6wE,gBAAe,mBACH7C,oBAKN/mE,EAFEjB,EAAQlG,KAAQkuE,eAAenL,cAC/BplE,EAAUqC,KAAQoC,SAASs2B,UAAUC,gBAErCy3C,EAAIpwE,KAAQqnE,SACd+I,IAAS7J,GAAoB6J,IAAS7J,EAAW,KACnDp/D,EAAWnH,KAAsCouE,eACrCziE,QAAO,EAAI,GACnBxE,EAAYvL,QAAU,EAAC,MACpBqyE,kBAAoB9mE,EAAYA,EAAYvL,OAAS,GAAGyK,YACvDiqE,EAAgBtwE,KAAQiuE,kBAAkB5nE,QAChDc,EAAYA,EAAYvL,OAAS,GAAK00E,OACjCnC,aAAa0C,YAAW,IAAAlD,EAAApxE,QAAW+zE,SAErCxC,kBAAkB3mE,EAAajB,EAAUvI,GAC1CuI,EAASwnC,YAAOC,EAAApxC,QAAoBy2C,SAAOhzC,KAASquE,aAAWruE,KAC5D0wE,gCAAwDxqE,WAEtDkqE,IAAS7J,EAAY,EAC9Bp/D,EAA0CnH,KAAOouE,cAAe,IACpDziE,QAAO,EAAI,OACjBilE,EAAc5wE,KAAQquE,YAAYtL,iBACpC57D,EAAYvL,QAAU,EAAC,CACnB00E,EAAmBnpE,EAAYA,EAAYvL,OAAS,GAAGyK,QAC7Dc,EAAYA,EAAYvL,OAAS,GAAK00E,OACjCnC,aAAa0C,YAAW,IAAAlD,EAAApxE,QAAW+zE,IAE1CM,EAAehyB,eAAez3C,QACzB2mE,kBAAiB9tE,KAAMouE,cAAeloE,EAAUvI,GAG5B,IAAvBwJ,EAAYvL,QAAYoE,KACrB4vE,oBAGFa,0BASPzE,EAAA9rE,UAAAwvE,cAAa,eACLsB,EAAahxE,KAAQixE,mBACtBD,OAGD7pE,EAAWnH,KAAQouE,cACjBloE,EAAW8qE,EAAcjO,cACzBplE,EAAUqC,KAAQoC,SAASs2B,UAAUC,qBAClC0uC,QAAUd,GAEjBp/D,EAAYu3B,WACPovC,kBAAkB3mE,EAAajB,EAAUvI,SAChC0pE,QAAUd,IAEMp/D,EAAa,GAAGu3B,WACzCovC,kBAAkB3mE,EAAajB,EAAUvI,GAC9CwJ,EAAcjB,EAASq1C,uBAIhBmxB,QAAK/+B,EAAApxC,QAAkB02C,YAC9B+9B,EAAcH,YAAW,IAAAK,EAAA30E,QAAA,CACwB4K,UAEnCulE,QAAK/+B,EAAApxC,QAAkB22C,kBACrC89B,EAAcH,YAAW,IAAAM,EAAA50E,QAAA,CAC4B4K,UAEvCulE,QAAK/+B,EAAApxC,QAAkB42C,eACrC69B,EAAcH,YAAW,IAAAO,EAAA70E,QAAA,CACyB4K,UAK/C1E,cAAa,IAAKopE,GAAUD,EAAuBoF,SAG/CzE,WAASvsE,KACXusE,UAAUtoE,KAAK+sE,QAEbjiB,SAAO/uD,KACT+uD,QAAQsiB,WAAWL,KAS5BhF,EAAA9rE,UAAA+wE,cAAa,gBACNhD,kBAAoB,SACnB+C,EAAahxE,KAAQkuE,2BACtBA,eAAiB,UACjBC,aAAe,UACfE,YAAc,UACdI,SAASvnE,YAAYuR,OAAM,GACzBu4D,GAOThF,EAAA9rE,UAAA0vE,aAAY,eACJoB,EAAahxE,KAAQixE,gBACvBD,GAAahxE,KACVyC,cAAa,IAAKopE,GAAUD,EAAyBoF,KAa9DhF,EAAA9rE,UAAAoxE,kBAAiB,SAACnqE,OAOZkpE,EANED,EAAIpwE,KAAQqnE,MACZkK,GAAUvxE,KAASkuE,kBACrBqD,GAAUvxE,KACPwvE,cAAcroE,EAAY,IAI7BipE,IAAS7J,GAAoB6J,IAAS7J,EACxC8J,EAAYrwE,KAAsCouE,sBACzCgC,IAAS7J,SAClB8J,EAAYrwE,KACLouE,eAAapuE,KAASouE,cAAcxyE,OACToE,KAAOouE,cAAe,GAAC,GAMvDmD,GACFlB,EAAa7+C,QAIf6+C,EAAa3xC,cAGJ/iC,EAAI,EAAGA,EAAIwL,EAAYvL,OAAQD,IAACqE,KAClCuvE,cAAcpoE,EAAYxL,QAG3B61E,EAASrqE,EAAYA,EAAYvL,OAAS,QAE3C2zE,cAAciC,QACdzB,eAAeyB,IAetBxF,EAAA9rE,UAAAqL,OAAM,SAACtF,OAECwrE,EADWxrE,EAAQ88D,mBAEpBmL,eAAiBjoE,OACjBmoE,cAAgBqD,EAAWl2B,qBAC1B6K,EAAIpmD,KAAQouE,cAAapuE,KAAMouE,cAAcxyE,OAAS,QACvDqyE,kBAAoB7nB,EAAK//C,aACzB+nE,cAAcnqE,KAAKmiD,EAAK//C,cACxB8nE,aAAY,IAAAqC,EAAAj0E,QAAA,IAAAoxE,EAAApxE,QAAyB6pD,SACrCqqB,6BACAhuE,cAAa,IACZopE,GAAUD,EAAuB5rE,KAAOkuE,kBAQhDlC,EAAA9rE,UAAAuwE,sBAAqB,eACbiB,EAAc,QACXxD,gBACPwD,EAAeztE,KAAIjE,KAAMkuE,qBAElBG,aACPqD,EAAeztE,KAAIjE,KAAMquE,kBAElBF,cACPuD,EAAeztE,KAAIjE,KAAMmuE,kBAErBwD,EAAa3xE,KAAQyuE,SAASvnE,YACpCyqE,EAAcl5D,OAAM,GACpBk5D,EAAcvH,YAAYsH,IAM5B1F,EAAA9rE,UAAAmvE,aAAY,eACJ9uE,EAAGP,KAAQoC,SACXk8D,EAAMt+D,KAAQy6B,YACfl6B,GAAQ+9D,GAAMt+D,KACZ4vE,oBAEFnB,SAASlyD,OAAO+hD,EAAS/9D,EAAM,OAExCyrE,EAj7BA,qBA08BgBP,GAAqBpqB,EAAWC,mBAC7Bn6C,EAAayqE,EAAcj0E,OACpCqB,EAAMi6B,EAAAC,mBACoB/xB,EAAa,GAC3CxJ,GAEI0N,EAAG4tB,EAAAC,mBACuB/xB,EAAaA,EAAYvL,OAAS,GAChE+B,GAEIq9C,EAASprC,KAAK8W,KAAItgB,EAAAyU,gBAA2B7b,EAAQqM,IACrDnF,EAAW0rE,GACuBpkC,EAAAqQ,WAAA,IAAA2vB,EAAAjxE,QACdyC,GAASqiD,GAE/B3xC,EAAQ4xC,MACPA,GAA2B,IAAdA,EAAe,KACzB9xC,EAAInE,EAAI,GAAKrM,EAAO,GACpByQ,EAAIpE,EAAI,GAAKrM,EAAO,GAC1B0Q,EAAQE,KAAKyrC,MAAM5rC,EAAGD,iBAEZtJ,EAAUlH,EAAQg8C,EAAQtrC,OAEhCm+B,EAAc5U,EAAA6U,2BAChBD,GACF3nC,EAASmI,UAAU1Q,EAAYkwC,GAE1B3nC,YAWKwlE,qBACGvkE,EAAayqE,EAAcj0E,OACpCqW,EAAMrN,EAAA0K,eACkB,CAC1BlK,EAAY,GACZA,EAAYA,EAAYvL,OAAS,IAChC2E,KAAG,SAAWqF,+BACWA,EAAYjI,OAGpCk0E,EAAc,kBAEF79D,oBACCA,iBACHA,gBACDA,mBACGA,KAGd9N,EAAW0rE,EACX1rE,EACFA,EAAS04C,eAAeizB,GAExB3rE,EAAQ,IAAAw+D,EAAAnoE,QAAes1E,OAEnBhkC,EAAc5U,EAAA6U,2BAChBD,GACF3nC,EAASmI,UAAU1Q,EAAYkwC,GAE1B3nC,aA4BI6lE,g2BC7tCZ,MAAAjxB,EAAA7/C,EAAA,smBAaH62E,EAAA,SAAAzyE,GAOK,SACH0yE,EAAY/yE,EAAQ+7C,EAAYmD,OAAhC19C,EACEnB,EAAAU,KAAAC,OAAAA,aACmBwC,IAAf07C,QAA2C17C,IAAfu4C,EAC9Bv6C,EAAKm+C,mBAAmBT,EAAYl/C,YAE9Bg8C,EAASD,GAA0B,EACzCv6C,EAAKktE,mBAAmB1uE,EAAQg8C,EAAQkD,mBAdzBj+C,EAAA8xE,EAAA1yE,GAuBnB0yE,EAAA7xE,UAAAqR,MAAK,eACGiV,EAAM,IAAOurD,EAAM/xE,KAClBiV,gBAAgB5O,aACrB7D,EAASxC,KACJg/C,eAEPx4B,EAAOlF,gBAAethB,MACfwmB,GAUTurD,EAAA7xE,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,OAC3BlqC,EAAejV,KAAQiV,gBACvBnF,EAAKN,EAAIyF,EAAgB,GACzBlF,EAAKN,EAAIwF,EAAgB,GACzB4F,EAAkB/K,EAAKA,EAAKC,EAAKA,KACnC8K,EAAkBskC,EAAkB,IACd,IAApBtkC,EAAqB,IAAA,IACdlf,EAAI,EAAGA,EAACqE,KAAQmV,SAAUxZ,EACjCujD,EAAavjD,GAAKsZ,EAAgBtZ,YAG9B4qB,EAAKvmB,KAAQymB,YAAc7W,KAAK8W,KAAK7L,GAC3CqkC,EAAa,GAAKjqC,EAAgB,GAAKsR,EAAQzW,EAC/CovC,EAAa,GAAKjqC,EAAgB,GAAKsR,EAAQxW,MACtCpU,EAAI,EAAGA,EAACqE,KAAQmV,SAAUxZ,EACjCujD,EAAavjD,GAAKsZ,EAAgBtZ,UAGtCujD,EAAatjD,OAAMoE,KAAQmV,OACpB0F,SAEAskC,GASX4yB,EAAA7xE,UAAAyR,WAAU,SAACnC,EAAGC,OACNwF,EAAejV,KAAQiV,gBACvBnF,EAAKN,EAAIyF,EAAgB,GACzBlF,EAAKN,EAAIwF,EAAgB,UACxBnF,EAAKA,EAAKC,EAAKA,GAAE/P,KAASgyE,qBAQnCD,EAAA7xE,UAAA4S,UAAS,uBACKmC,gBAAgB5O,MAAM,EAACrG,KAAOmV,SAQ5C48D,EAAA7xE,UAAAqiD,cAAa,SAACvuC,OACNiB,EAAejV,KAAQiV,gBACvB+lC,EAAS/lC,EAAejV,KAAMmV,QAAUF,EAAgB,2BAE5DA,EAAgB,GAAK+lC,EACrB/lC,EAAgB,GAAK+lC,EACrB/lC,EAAgB,GAAK+lC,EACrB/lC,EAAgB,GAAK+lC,EACrBhnC,IASJ+9D,EAAA7xE,UAAAumB,UAAS,kBACA7W,KAAK8W,KAAI1mB,KAAMgyE,sBAOxBD,EAAA7xE,UAAA8xE,kBAAiB,eACTliE,EAAE9P,KAAQiV,gBAAejV,KAAMmV,QAAMnV,KAASiV,gBAAgB,GAC9DlF,EAAE/P,KAAQiV,gBAAejV,KAAMmV,OAAS,GAACnV,KAASiV,gBAAgB,UACjEnF,EAAKA,EAAKC,EAAKA,GAQxBgiE,EAAA7xE,UAAAwtC,QAAO,4BACeE,QAStBmkC,EAAA7xE,UAAA6gD,iBAAgB,SAAC/sC,OACTi+D,EAAYjyE,KAAQyG,4BACXuN,EAAQi+D,GAAY,KAC3BjzE,EAAMgB,KAAQ8S,mBAEhBkB,EAAO,IAAMhV,EAAO,IAAMgV,EAAO,IAAMhV,EAAO,KAG9CgV,EAAO,IAAMhV,EAAO,IAAMgV,EAAO,IAAMhV,EAAO,oBAI7BgV,EAAMhU,KAAO6jD,qBAAqB5iD,KAAIjB,eAEtD,GAQT+xE,EAAA7xE,UAAAovC,UAAS,SAACtwC,OACFmW,EAAMnV,KAAQmV,OACd6lC,EAAMh7C,KAAQiV,gBAAgBE,GAAMnV,KAASiV,gBAAgB,GAC7DA,EAAkBjW,EAAOqH,QAC/B4O,EAAgBE,GAAUF,EAAgB,GAAK+lC,UACtCr/C,EAAI,EAAGA,EAAIwZ,IAAUxZ,EAC5BsZ,EAAgBE,EAASxZ,GAAKqD,EAAOrD,QAElCgjD,mBAAkB3+C,KAAMg/C,OAAQ/pC,QAChCuI,WAWPu0D,EAAA7xE,UAAAwtE,mBAAkB,SAAC1uE,EAAQg8C,EAAQkD,QAC5B8C,UAAU9C,EAAYl/C,EAAQ,QACzBiW,kBAAejV,KAClBiV,gBAAe,IAEM,IACtBA,EAAejV,KAAQiV,gBACzBC,EAAM+rC,EAAAkE,kBAAqBlwC,EAAiB,EAAGjW,EAAMgB,KAAOmV,QAChEF,EAAgBC,KAAYD,EAAgB,GAAK+lC,UACxCr/C,EAAI,EAAG6H,EAAExD,KAAQmV,OAAQxZ,EAAI6H,IAAM7H,EAC1CsZ,EAAgBC,KAAYD,EAAgBtZ,GAE9CsZ,EAAgBrZ,OAASsZ,OACpBsI,WAGPu0D,EAAA7xE,UAAAq7C,eAAc,kBACL,MAGTw2B,EAAA7xE,UAAA0+C,eAAc,SAACz3C,EAAa+2C,KAO5B6zB,EAAA7xE,UAAAgyE,UAAS,SAACl3B,QACH/lC,gBAAejV,KAAMmV,QAAMnV,KAASiV,gBAAgB,GAAK+lC,OACzDx9B,WAUPu0D,EAAA7xE,UAAAuN,OAAM,SAACiC,EAAOs5B,OACNhqC,EAAMgB,KAAQ8S,YACdqC,EAAMnV,KAAQsuC,iBACfgB,UAAS7f,EAAAhiB,OACLzO,EAAQ,EAAGA,EAAOpD,OAAQuZ,EAAQzF,EAAOs5B,EAAQhqC,SAErDwe,WAUPu0D,EAAA7xE,UAAA0N,UAAS,SAACoJ,EAAQC,OACVjY,EAAMgB,KAAQ8S,YACdqC,EAAMnV,KAAQsuC,iBACfgB,UAAS7f,EAAA7hB,UACF5O,EAAQ,EAAGA,EAAOpD,OAAQuZ,EAAQ6B,EAAQC,EAAQjY,SAEzDwe,WAETu0D,EAlPA,YA0QAD,EAAO5xE,UAAUmO,oBACFyjE,oTCcZ5oE,EAAAF,OAAAzN,EAAA,uBAAA,IACa42E,IAvSb,MAAA11D,EAAAxhB,EAAA,ikBA2DHm3E,EAAA,SAAA/yE,GAMK,SACHgzE,EAAYC,OAAZ9xE,EACEnB,EAAAU,KAAAC,OAAAA,QAMAQ,EAAK+xE,SAAM/vE,EAMXhC,EAAKwuE,cAAa,WAOlBxuE,EAAKgyE,OAAS,KAMdhyE,EAAKiyE,oBAAiBjwE,EAMtBhC,EAAKkyE,mBAAqB,KAE1BlyE,EAAKgc,iBAAgBC,EAAAC,mBACAlc,EAAKwuE,eACxBxuE,EAAKmyE,wBAGHL,KAGmE,mBAA/CA,EAA0B/kC,sBAC9B,KAEVrnC,EAAoCosE,EAC1C9xE,EAAKqwE,YAAY3qE,QAEe,IAC1BqY,EAAa+zD,EACnB9xE,EAAKye,cAAcV,mBAzDLte,EAAAoyE,EAAAhzE,GAoEpBgzE,EAAAnyE,UAAAqR,MAAK,eACGA,EAAK,IAAO8gE,EAAOryE,KAClBihB,gBAAajhB,KAAUghB,gBAAkB,MAEhDzP,EAAMu/D,gBAAe9wE,KAAM4yE,uBACrB1sE,EAAQlG,KAAQ+iE,cAClB78D,GACFqL,EAAMs/D,YAAY3qE,EAASqL,aAEvBlT,EAAK2B,KAAQ6yE,kBACfx0E,GACFkT,EAAMuhE,SAASz0E,GAEVkT,GAWT8gE,EAAAnyE,UAAA6iE,YAAW,uBACsC5mE,IAAG6D,KAAMgvE,gBAU1DqD,EAAAnyE,UAAA02B,MAAK,uBACS27C,KAUdF,EAAAnyE,UAAA0yE,gBAAe,uBACD5D,eASdqD,EAAAnyE,UAAA2yE,SAAQ,uBACML,QASdH,EAAAnyE,UAAA6yE,iBAAgB,uBACFN,gBAMdJ,EAAAnyE,UAAA8yE,sBAAqB,gBACdx1D,WAMP60D,EAAAnyE,UAAAyyE,uBAAsB,gBACXD,0CACYA,yBACdA,mBAAqB,UAEtBxsE,EAAQlG,KAAQ+iE,cAClB78D,IAAQlG,KACL0yE,mBAAkBhyE,EAAAC,OACrBuF,EAAQnD,EAAAxG,QACEkhB,OAAMzd,KACXgzE,sBAAqBhzE,YAIzBwd,WAUP60D,EAAAnyE,UAAA2wE,YAAW,SAAC3qE,QACLqH,IAAGvN,KAAMgvE,cAAe9oE,IAY/BmsE,EAAAnyE,UAAA4yE,SAAQ,SAACG,QACFT,OAASS,OACTR,eAAkBQ,EAEnBd,EAAoBc,QADpBzwE,OAECgb,WAYP60D,EAAAnyE,UAAAgzE,MAAK,SAACp3E,QACCy2E,IAAMz2E,OACN0hB,WAUP60D,EAAAnyE,UAAA4wE,gBAAe,SAAC1/D,QACTwR,oBAAmBnG,EAAAC,mBAAA1c,KACEgvE,eAAahvE,KAChC2yE,6BAEF3D,cAAgB59D,OAChBoL,iBAAgBC,EAAAC,mBAAA1c,KACKgvE,eAAahvE,KAChC2yE,6BAEFA,0BAETN,EAlOA,qBA4OgBF,EAAoBrnE,SACpB,mBAAHA,EACFA,GAMHjB,MAAM4B,QAAQX,GAChBqoE,EAASroE,YAEsC,mBAAdA,EAAKwU,UAA2B,IAEjE6zD,EAAM,CAD2DroE,sBAI1DqoE,IAVN,IACCA,YAaOf,4QC3TZ,MAAAr0B,EAAA9iD,EAAA,40BAqBHm4E,EAAA,SAAA/zE,GAKK,SACHg0E,EAAYlsE,EAAa+2C,OAAzB19C,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK8yE,cAAgB,KAMrB9yE,EAAK+yE,uBAAwB,EAM7B/yE,EAAK+9C,WAAY,EAMjB/9C,EAAKg+C,mBAAoB,OAENh8C,IAAf07C,GAA6Br0C,MAAM4B,QAAQtE,EAAY,IAMzD3G,EAAKo+C,eAC0Dz3C,EAC7D+2C,GAPF19C,EAAKm+C,mBACHT,EAC8B/2C,YApCblH,EAAAozE,EAAAh0E,GAmDvBg0E,EAAAnzE,UAAAszE,iBAAgB,SAAC5tE,QACLqP,8BAGIA,gBAAiBrP,GAHN5F,KAClBiV,gBAAkBrP,EAAWS,aAI/BmX,WAQP61D,EAAAnzE,UAAAqR,MAAK,eACGkgE,EAAU,IAAO4B,EAAUrzE,KAC1BiV,gBAAgB5O,QAAKrG,KACrBg/C,eAEPyyB,EAAWnwD,gBAAethB,MACnByxE,GAUT4B,EAAAnzE,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,UAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAC9D0vC,QAEAX,mBAAiBx+C,KAASoiB,qBAC5Bm8B,UAAY3uC,KAAK8W,KAAI04B,EAAA2C,gBAAA/hD,KAEjBiV,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACL,SAGCqpC,kBAAiBx+C,KAAQoiB,yCAGzBnN,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OAAMnV,KACNu+C,WACL,EACA/uC,EACAC,EACAyvC,EACAC,KAeJk0B,EAAAnzE,UAAAuzE,eAAc,SAAChvE,yBAENwQ,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACL1Q,IAkBJ4uE,EAAAnzE,UAAAwzE,iBAAgB,SAAClsE,EAAGmsE,WAEX30B,QAAMc,EAAAvjD,QAAmBwjD,KAAG//C,KAC5Bg/C,QAAMc,EAAAvjD,QAAmBqlD,KAAI,OAE3B,SAEHgyB,OAAkCpxE,IAApBmxE,GAAgCA,wCAE7C1+D,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACL3N,EACAosE,IASJP,EAAAnzE,UAAAq7C,eAAc,4CAELtmC,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,SAcTk+D,EAAAnzE,UAAA2zE,gBAAe,SAACnpC,EAAUuY,kCAEjBhuC,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACLu1B,EACAuY,EAAQjjD,KACHmV,SASTk+D,EAAAnzE,UAAAu+B,UAAS,0CAEAxpB,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,SAOTk+D,EAAAnzE,UAAA4zE,gBAAe,uBACJP,uBAAqBvzE,KAASoiB,qBAChCkxD,cAAatzE,KAAQ6zE,gBAAgB,GAAG7zE,KAAOszE,oBAC/CC,sBAAqBvzE,KAAQoiB,oBAExBkxD,eAQdD,EAAAnzE,UAAAsgD,8BAA6B,SAACC,OACtBC,EAAyB,UAC/BA,EAA0B9kD,OAAMglD,EAAAoB,eAAAhiD,KACzBiV,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACLsrC,EACAC,EACA,OAES2yB,EAAW3yB,EAAyBZ,EAAAvjD,QAAiBukD,KAQlEuyB,EAAAnzE,UAAAwtC,QAAO,4BACeoF,aAStBugC,EAAAnzE,UAAA6gD,iBAAgB,SAAC/sC,sCAERiB,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,OACLnB,IAUJq/D,EAAAnzE,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,SAEjBA,gBAAgBrZ,OAAMqlD,EAAAgB,mBAAAjiD,KACpBiV,gBACL,EACA9N,EAAWnH,KACNmV,aAEFqI,WAET61D,EAhSA,sBAkSeD,4hBC1SZlqE,EAAAF,OAAAzN,EAAA,oBAAA,IACaw4E,IA6Db7qE,EAAAF,OAAAzN,EAAA,2BAAA,IACay4E,IAwEb9qE,EAAAF,OAAAzN,EAAA,4BAAA,IACa04E,IArJb,IAAA3qE,EAAArO,EAAA,gDAca84E,EACd9+D,EACAC,EACA7J,EACA8J,EACAu1B,EACAuY,EACA3N,OAEI4+B,EAAG54D,EACDpQ,GAAKG,EAAM6J,GAAUC,KACjB,IAANjK,EACFgpE,EAAIh/D,UACW,IAANhK,EACTgpE,EAAIh/D,EACJoG,EAAIovB,UACW,IAANx/B,EAAO,SACZsL,EAAKvB,EAAgBC,GACrB0B,EAAK3B,EAAgBC,EAAS,GAC9Bi/D,EAAS,EACPC,EAAiB,CAAI,GAClBz4E,EAAIuZ,EAASC,EAAQxZ,EAAI0P,EAAK1P,GAAKwZ,EAAM,KAC1CsB,EAAKxB,EAAgBtZ,GACrBkb,EAAK5B,EAAgBtZ,EAAI,GAC/Bw4E,GAAUvkE,KAAK8W,MAAMjQ,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9Dw9D,EAAkBnwE,KAAKkwE,GACvB39D,EAAKC,EACLG,EAAKC,MAEDhY,EAAS6rC,EAAWypC,EACpBhoE,EAAK7C,EAAAW,aAAgBmqE,EAAmBv1E,GAC1CsN,EAAQ,GACVmP,GACGzc,EAASu1E,GAAmBjoE,EAAQ,KACpCioE,GAAmBjoE,EAAQ,GAAKioE,GAAmBjoE,EAAQ,IAC9D+nE,EAAIh/D,IAAW/I,EAAQ,GAAKgJ,GAE5B++D,EAAIh/D,EAAS/I,EAAQgJ,MAGnB8hC,EAAY3B,EAAgB,EAAIA,EAAgB,EAChDzsC,EAAOo6C,GAAmB,IAAOp5C,MAAMotC,OACpCt7C,EAAI,EAAGA,EAAIs7C,IAAat7C,EAC/BkN,EAAKlN,QACG6G,IAAN0xE,EACItwB,SACMphD,IAAN8Y,EACArG,EAAgBi/D,EAAIv4E,GAAC4e,EAAAW,KAChBjG,EAAgBi/D,EAAIv4E,GAAIsZ,EAAgBi/D,EAAI/+D,EAASxZ,GAAI2f,UAE/DzS,WAYOmrE,EACd/+D,EACAC,EACA7J,EACA8J,EACA3N,EACAosE,MAEIvoE,GAAO6J,EAAM,OACR,SAELtP,KACA4B,EAAIyN,EAAgBC,EAASC,EAAS,UACpCy+D,IACFhuE,EAAaqP,EAAgB5O,MAAM6O,EAAQA,EAASC,IACzCA,EAAS,GAAK3N,EAClB5B,GAEA,QAEAqP,EAAgB5J,EAAM,GAAK7D,SAChCosE,IACFhuE,EAAaqP,EAAgB5O,MAAMgF,EAAM8J,EAAQ9J,IACtC8J,EAAS,GAAK3N,EAClB5B,GAEA,QAIP4B,GAAKyN,EAAgBC,EAASC,EAAS,GAAC,OACnCF,EAAgB5O,MAAM6O,EAAQA,EAASC,WAE5Ck/D,EAAKn/D,EAASC,EACdm/D,EAAKjpE,EAAM8J,EACRk/D,EAAKC,GAAE,KACNjqE,EAAOgqE,EAAKC,GAAO,EACrB9sE,EAAIyN,GAAiB5K,EAAM,GAAK8K,EAAS,GAC3Cm/D,EAAKjqE,EAELgqE,EAAKhqE,EAAM,MAGTkqE,EAAKt/D,EAAgBo/D,EAAKl/D,EAAS,MACrC3N,GAAK+sE,EAAE,OACFt/D,EAAgB5O,OAAOguE,EAAK,GAAKl/D,GAASk/D,EAAK,GAAKl/D,EAASA,OAGhEmG,GAAK9T,EAAI+sE,IADJt/D,GAAiBo/D,EAAK,GAAKl/D,EAAS,GACpBo/D,GAC3B3uE,EAAU,WACDjK,EAAI,EAAGA,EAAIwZ,EAAS,IAAKxZ,EAChCiK,EAAW3B,KAAIsW,EAAAW,KAEXjG,GAAiBo/D,EAAK,GAAKl/D,EAASxZ,GACpCsZ,EAAgBo/D,EAAKl/D,EAASxZ,GAC9B2f,WAIN1V,EAAW3B,KAAKuD,GACT5B,WAaOquE,EACdh/D,EACAC,EACAirC,EACAhrC,EACA3N,EACAosE,EACAY,MAEIA,EAAW,OACNR,EACL/+D,EACAC,EACAirC,EAAKA,EAAKvkD,OAAS,GACnBuZ,EACA3N,EACAosE,OAGAhuE,KACA4B,EAAIyN,EAAgBE,EAAS,UAC3By+D,IACFhuE,EAAaqP,EAAgB5O,MAAM,EAAG8O,IAC3BA,EAAS,GAAK3N,EAClB5B,GAEA,QAGPqP,EAAgBA,EAAgBrZ,OAAS,GAAK4L,SAC5CosE,IACFhuE,EAAaqP,EAAgB5O,MAAM4O,EAAgBrZ,OAASuZ,IACjDA,EAAS,GAAK3N,EAClB5B,GAEA,aAGFjK,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,MACbuZ,GAAU7J,MAGV7D,EAAIyN,EAAgBC,EAASC,EAAS,GAAC,OAClC,QACE3N,GAAKyN,EAAgB5J,EAAM,GAAC,OAC9B2oE,EACL/+D,EACAC,EACA7J,EACA8J,EACA3N,GACA,GAGJ0N,EAAS7J,UAEJ,gNCrMOopE,EAAiBx/D,EAAiBC,EAAQ7J,EAAK8J,WACzDqB,EAAKvB,EAAgBC,GACrB0B,EAAK3B,EAAgBC,EAAS,GAC9BtZ,EAAS,EACJD,EAAIuZ,EAASC,EAAQxZ,EAAI0P,EAAK1P,GAAKwZ,EAAM,KAC1CsB,EAAKxB,EAAgBtZ,GACrBkb,EAAK5B,EAAgBtZ,EAAI,GAC/BC,GAAUgU,KAAK8W,MAAMjQ,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DJ,EAAKC,EACLG,EAAKC,SAEAjb,WAUO84E,EAAiBz/D,EAAiBC,EAAQ7J,EAAK8J,OACzDw/D,EAAYF,EAAiBx/D,EAAiBC,EAAQ7J,EAAK8J,GACzDrF,EAAKmF,EAAgB5J,EAAM8J,GAAUF,EAAgBC,GACrDnF,EAAKkF,EAAgB5J,EAAM8J,EAAS,GAAKF,EAAgBC,EAAS,UACxEy/D,GAAa/kE,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,0BA1BrC7G,EAAAF,OAAAzN,EAAA,oBAAA,IACak5E,IAoBbvrE,EAAAF,OAAAzN,EAAA,oBAAA,IACam5E,2KC9Bb,MAAA32B,EAAA9iD,EAAA,u0BAuBH25E,EAAA,SAAAv1E,GAOK,SACHw1E,EAAY1tE,EAAa+2C,EAAYC,OAArC39C,EACEnB,EAAAU,KAAAC,OAAAA,QAMAQ,EAAK49C,MAAK,GAMV59C,EAAK+9C,WAAY,EAMjB/9C,EAAKg+C,mBAAoB,EAErB30C,MAAM4B,QAAQtE,EAAY,IAC5B3G,EAAKo+C,eACiEz3C,EACpE+2C,gBAEsB17C,IAAf07C,GAA4BC,EACrC39C,EAAKm+C,mBACHT,EAC8B/2C,GAEhC3G,EAAK49C,MAAQD,eAETa,EAASx+C,EAAKghD,YACZszB,EAAgD3tE,EAChD8N,EAAe,GACfkrC,EAAI,GACDxkD,EAAI,EAAG6H,EAAKsxE,EAAYl5E,OAAQD,EAAI6H,IAAM7H,EAAC,KAC5C81E,EAAaqD,EAAYn5E,GACrB,IAANA,IACFqjD,EAASyyB,EAAWjwB,sBAEfvsC,EAAiBw8D,EAAWxjC,sBACnCkS,EAAKl8C,KAAKgR,EAAgBrZ,QAE5B4E,EAAKm+C,mBAAmBK,EAAQ/pC,GAChCzU,EAAK49C,MAAQ+B,kBAtDWlgD,EAAA40E,EAAAx1E,GA+D5Bw1E,EAAA30E,UAAA60E,iBAAgB,SAACtD,QACLx8D,8BAGIA,gBAAiBw8D,EAAWxjC,qBAAqB5nC,SAHtCrG,KAClBiV,gBAAkBw8D,EAAWxjC,qBAAqB5nC,aAIpD+3C,MAAMn6C,KAAIjE,KAAMiV,gBAAgBrZ,aAChC4hB,WAQPq3D,EAAA30E,UAAAqR,MAAK,eACGyjE,EAAe,IAAOH,EAAe70E,KACpCiV,gBAAgB5O,QAAKrG,KACrBg/C,OAAMh/C,KACNo+C,MAAM/3C,gBAEb2uE,EAAgB1zD,gBAAethB,MACxBg1E,GAUTH,EAAA30E,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,UAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAC9D0vC,QAEAX,mBAAiBx+C,KAASoiB,qBAC5Bm8B,UAAY3uC,KAAK8W,KAAI04B,EAAAC,qBAAAr/C,KAEjBiV,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACL,SAGCqpC,kBAAiBx+C,KAAQoiB,8CAGzBnN,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OAAMnV,KACNu+C,WACL,EACA/uC,EACAC,EACAyvC,EACAC,KA0BJ01B,EAAA30E,UAAAwzE,iBAAgB,SAAClsE,EAAGmsE,EAAiBsB,WAE3Bj2B,QAAMc,EAAAvjD,QAAmBwjD,KAAG//C,KAC3Bg/C,QAAMc,EAAAvjD,QAAmBqlD,MACA,IADI5hD,KAC/BiV,gBAAgBrZ,OAAY,OAE1B,SAEHg4E,OAAkCpxE,IAApBmxE,GAAgCA,EAC9Ca,OAAkChyE,IAApByyE,GAAgCA,yCAE7ChgE,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACL3N,EACAosE,EACAY,IASJK,EAAA30E,UAAAq7C,eAAc,iDAELtmC,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,SAOT0/D,EAAA30E,UAAAs/C,QAAO,uBACOpB,OASdy2B,EAAA30E,UAAAg1E,cAAa,SAAC/oE,UACRA,EAAQ,GAACnM,KAASo+C,MAAMxiD,QAAUuQ,EAC7B,wBAGF8I,gBAAgB5O,MACT,IAAV8F,EAAc,EAACnM,KAAQo+C,MAAMjyC,EAAQ,GAACnM,KACjCo+C,MAAMjyC,IAAKnM,KAEbg/C,SAST61B,EAAA30E,UAAAi1E,eAAc,mBACNlgE,EAAejV,KAAQiV,gBACvBkrC,EAAIngD,KAAQo+C,MACZY,EAAMh/C,KAAQg/C,OAEd81B,EAAW,GACb5/D,EAAS,EACJvZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACX81E,EAAU,IAAA7D,EAAArxE,QACd0Y,EAAgB5O,MAAM6O,EAAQ7J,GAC9B2zC,GAEF81B,EAAY7wE,KAAKwtE,GACjBv8D,EAAS7J,SAEJypE,GAMTD,EAAA30E,UAAAk1E,iBAAgB,mBACRC,EAAS,GACTpgE,EAAejV,KAAQiV,gBACzBC,EAAS,EACPirC,EAAIngD,KAAQo+C,MACZjpC,EAAMnV,KAAQmV,OACXxZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACX25E,EAAQC,EAAAxB,iBACZ9+D,EACAC,EACA7J,EACA8J,EACA,aAEKkgE,EAAWC,GAClBpgE,EAAS7J,SAEJgqE,GAQTR,EAAA30E,UAAAsgD,8BAA6B,SAACC,OACtBC,EAAyB,GACzBC,EAAc,UACpBD,EAA0B9kD,OAAMglD,EAAA6E,oBAAAzlD,KACzBiV,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACLsrC,EACAC,EACA,EACAC,OAESk0B,EACTn0B,EAAyBZ,EAAAvjD,QACVukD,GACfH,IASJk0B,EAAA30E,UAAAwtC,QAAO,4BACewF,mBAStB2hC,EAAA30E,UAAA6gD,iBAAgB,SAAC/sC,2CAERiB,gBACL,EAACjV,KACIo+C,MAAKp+C,KACLmV,OACLnB,IAUJ6gE,EAAA30E,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,QAEhBkrC,EAAIc,EAAAC,wBAAAlhD,KACHiV,gBACL,EACA9N,EAAWnH,KACNmV,OAAMnV,KACNo+C,YAEFnpC,gBAAgBrZ,OAAyB,IAAhBukD,EAAKvkD,OAAe,EAAIukD,EAAKA,EAAKvkD,OAAS,QACpE4hB,WAETq3D,EAvUA,sBAyUeD,8fChWZ,MAAA95B,EAAA7/C,EAAA,irBAgBHu6E,EAAA,SAAAn2E,GAKK,SACHo2E,EAAYtuE,EAAa+2C,OAAzB19C,EACEnB,EAAAU,KAAAC,OAAAA,YACIk+C,IAAer0C,MAAM4B,QAAQtE,EAAY,IAC3C3G,EAAKm+C,mBACHT,EAC8B/2C,GAGhC3G,EAAKo+C,eAC0Dz3C,EAC7D+2C,YAhBiBj+C,EAAAw1E,EAAAp2E,GA0BvBo2E,EAAAv1E,UAAAw1E,YAAW,SAAC//B,QACA1gC,8BAGIA,gBAAiB0gC,EAAM1H,sBAHZjuC,KAClBiV,gBAAkB0gC,EAAM1H,qBAAqB5nC,aAI/CmX,WAQPi4D,EAAAv1E,UAAAqR,MAAK,eACGokE,EAAU,IAAOF,EAAUz1E,KAC1BiV,gBAAgB5O,QAAKrG,KACrBg/C,eAEP22B,EAAWr0D,gBAAethB,MACnB21E,GAUTF,EAAAv1E,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,MAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAAC,OAC/D0vC,UAEHlqC,EAAejV,KAAQiV,gBACvBE,EAAMnV,KAAQmV,OACXxZ,EAAI,EAAG6H,EAAKyR,EAAgBrZ,OAAQD,EAAI6H,EAAI7H,GAAKwZ,EAAM,KACxD0F,EAAeN,EAAAM,gBACnBrL,EACAC,EACAwF,EAAgBtZ,GAChBsZ,EAAgBtZ,EAAI,OAElBkf,EAAkBskC,EAAkB,CACtCA,EAAqBtkC,UACZ7T,EAAI,EAAGA,EAAImO,IAAUnO,EAC5Bk4C,EAAal4C,GAAKiO,EAAgBtZ,EAAIqL,GAExCk4C,EAAatjD,OAASuZ,UAGnBgqC,GAQTs2B,EAAAv1E,UAAAq7C,eAAc,4CAELtmC,gBACL,EAACjV,KACIiV,gBAAgBrZ,OAAMoE,KACtBmV,SAUTsgE,EAAAv1E,UAAA01E,SAAQ,SAACzpE,OACDjB,EAAClL,KAASiV,gBACXjV,KACIiV,gBAAgBrZ,OAAMoE,KAAQmV,OADnC,SAEAhJ,EAAQ,GAAKjB,GAAKiB,EACb,wBAGF8I,gBAAgB5O,MACnB8F,EAAKnM,KAAQmV,QACZhJ,EAAQ,GAACnM,KAASmV,QAAMnV,KAEtBg/C,SASTy2B,EAAAv1E,UAAA21E,UAAS,mBACD5gE,EAAejV,KAAQiV,gBACvB+pC,EAAMh/C,KAAQg/C,OACd7pC,EAAMnV,KAAQmV,OAEd2gE,EAAM,GACHn6E,EAAI,EAAG6H,EAAKyR,EAAgBrZ,OAAQD,EAAI6H,EAAI7H,GAAKwZ,EAAM,KACxDwgC,EAAK,IAAAg4B,EAAApxE,QAAa0Y,EAAgB5O,MAAM1K,EAAGA,EAAIwZ,GAAS6pC,GAC9D82B,EAAO7xE,KAAK0xC,UAEPmgC,GAQTL,EAAAv1E,UAAAwtC,QAAO,4BACeuF,aAStBwiC,EAAAv1E,UAAA6gD,iBAAgB,SAAC/sC,WACTiB,EAAejV,KAAQiV,gBACvBE,EAAMnV,KAAQmV,OACXxZ,EAAI,EAAG6H,EAAKyR,EAAgBrZ,OAAQD,EAAI6H,EAAI7H,GAAKwZ,EAAM,KACxD3F,EAAIyF,EAAgBtZ,GACpB8T,EAAIwF,EAAgBtZ,EAAI,mBACfqY,EAAQxE,EAAGC,GAAC,OAClB,SAGJ,GASTgmE,EAAAv1E,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,SAEjBA,gBAAgBrZ,OAAMqlD,EAAAgB,mBAAAjiD,KACpBiV,gBACL,EACA9N,EAAWnH,KACNmV,aAEFqI,WAETi4D,EArLA,sBAuLeD,gXCvMZ,MAAAz3B,EAAA9iD,EAAA,m9BA+BH86E,EAAA,SAAA12E,GAMK,SACH22E,EAAY7uE,EAAa+2C,EAAYqH,OAArC/kD,EACEnB,EAAAU,KAAAC,OAAAA,QAMAQ,EAAKy1E,OAAM,GAMXz1E,EAAK01E,6BAA8B,EAMnC11E,EAAK21E,oBAAsB,KAM3B31E,EAAK+9C,WAAY,EAMjB/9C,EAAKg+C,mBAAoB,EAMzBh+C,EAAKi+C,mBAAoB,EAMzBj+C,EAAKk+C,yBAA2B,MAE3B6G,IAAc17C,MAAM4B,QAAQtE,EAAY,IAAC,SACxC63C,EAASx+C,EAAKghD,YACZ40B,EAA0CjvE,EAC1C8N,EAAe,GACf6vC,EAAK,GACFnpD,EAAI,EAAG6H,EAAK4yE,EAASx6E,OAAQD,EAAI6H,IAAM7H,EAAC,KACzCojD,EAAUq3B,EAASz6E,GACf,IAANA,IACFqjD,EAASD,EAAQyC,qBAEbtsC,EAASD,EAAgBrZ,OACzBukD,EAAOpB,EAAQS,UACZx4C,EAAI,EAAGsjC,EAAK6V,EAAKvkD,OAAQoL,EAAIsjC,IAAMtjC,EAC1Cm5C,EAAKn5C,IAAMkO,WAEND,EAAiB8pC,EAAQ9Q,sBAChC6W,EAAM7gD,KAAKk8C,GAEbjC,EAAac,EACb73C,EAAc8N,EACdswC,EAAYT,cAEKtiD,IAAf07C,GAA4BqH,GAC9B/kD,EAAKm+C,mBACHT,EAC8B/2C,GAEhC3G,EAAKy1E,OAAS1wB,GAEd/kD,EAAKo+C,eACwEz3C,EAC3E+2C,YAnFmBj+C,EAAA+1E,EAAA32E,GA6FzB22E,EAAA91E,UAAAm2E,cAAa,SAACt3B,GACgB,IACxBoB,UACMlrC,qBAKFC,EAAMlV,KAAQiV,gBAAgBrZ,qBACxBqZ,gBAAiB8pC,EAAQ9Q,8BAE5BtyC,EAAI,EAAG6H,GADhB28C,EAAOpB,EAAQS,UAAUn5C,SACCzK,OAAQD,EAAI6H,IAAM7H,EAC1CwkD,EAAKxkD,IAAMuZ,YARRD,gBAAkB8pC,EAAQ9Q,qBAAqB5nC,QACpD85C,EAAOpB,EAAQS,UAAUn5C,aACpB4vE,OAAOhyE,YASTgyE,OAAOhyE,KAAKk8C,QACZ3iC,WAQPw4D,EAAA91E,UAAAqR,MAAK,mBACGgR,EAAGviB,KAAQi2E,OAAOr6E,OAClB06E,EAAQ,IAAOzsE,MAAM0Y,GAClB5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EACzB26E,EAAS36E,GAACqE,KAASi2E,OAAOt6E,GAAG0K,YAGzBkwE,EAAY,IAAOP,EAAYh2E,KAC9BiV,gBAAgB5O,QAAKrG,KACrBg/C,OACLs3B,UAEFC,EAAaj1D,gBAAethB,MAErBu2E,GAUTP,EAAA91E,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,UAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAC9D0vC,QAEAX,mBAAiBx+C,KAASoiB,qBAC5Bm8B,UAAY3uC,KAAK8W,KAAI04B,EAAAkF,0BAAAtkD,KAEjBiV,gBACL,EAACjV,KACIi2E,OAAMj2E,KACNmV,OACL,SAGCqpC,kBAAiBx+C,KAAQoiB,mDAGzBk9B,6BACL,EAACt/C,KACIi2E,OAAMj2E,KACNmV,OAAMnV,KACNu+C,WACL,EACA/uC,EACAC,EACAyvC,EACAC,KASJ62B,EAAA91E,UAAAyR,WAAU,SAACnC,EAAGC,wCAEL6vC,6BACL,EAACt/C,KACIi2E,OAAMj2E,KACNmV,OACL3F,EACAC,IASJumE,EAAA91E,UAAAyS,QAAO,sCAEE2sC,6BACL,EAACt/C,KACIi2E,OAAMj2E,KACNmV,SAiBT6gE,EAAA91E,UAAAq7C,eAAc,SAACgE,OACTtqC,cACczS,IAAd+8C,GACFtqC,EAAejV,KAAQs/C,6BAA6Bj5C,iCAElD4O,EACA,EAACjV,KACIi2E,OAAMj2E,KACNmV,OACLoqC,IAGFtqC,EAAejV,KAAQiV,+CAIvBA,EACA,EAACjV,KACIi2E,OAAMj2E,KACNmV,SAOT6gE,EAAA91E,UAAAs2E,SAAQ,uBACMP,QAMdD,EAAA91E,UAAAu2E,sBAAqB,mBACVP,6BAA2Bl2E,KAASoiB,cAAW,KAChDilC,EAAWqvB,EAAA1vB,aAAAhnD,KACViV,gBACL,EAACjV,KACIi2E,OAAMj2E,KACNmV,aAEFghE,oBAAmBx2B,EAAAwH,8BAAAnnD,KACjBs/C,6BACL,EAACt/C,KACIi2E,OAAMj2E,KACNmV,OACLkyC,QAEG6uB,4BAA2Bl2E,KAAQoiB,0BAE9B+zD,qBASdH,EAAA91E,UAAAy2E,kBAAiB,qCAERF,wBAAwBpwE,QAAKy5C,EAAAvjD,QACnBwjD,MAOnBi2B,EAAA91E,UAAAo/C,2BAA0B,mBACfb,mBAAiBz+C,KAASoiB,cAAW,KACtCnN,EAAejV,KAAQiV,0CAEHA,EAAiB,EAACjV,KAAOi2E,OAAMj2E,KAAOmV,QAAMnV,KAE/D0+C,yBAA2BzpC,QAE3BypC,yBAA2BzpC,EAAgB5O,aAC3Cq4C,yBAAyB9iD,OAAM0kD,EAAAwI,uBAAA9oD,KAC7B0+C,yBACL,EAAC1+C,KACIi2E,OAAMj2E,KACNmV,cAGJspC,kBAAiBz+C,KAAQoiB,0BAEpBs8B,0BAQds3B,EAAA91E,UAAAsgD,8BAA6B,SAACC,OACtBC,EAAyB,GACzB8F,EAAe,UACrB9F,EAA0B9kD,OAAMglD,EAAAkF,mBAAA9lD,KACzBiV,gBACL,EAACjV,KACIi2E,OAAMj2E,KACNmV,OACLvF,KAAK8W,KAAK+5B,GACVC,EACA,EACA8F,OAESwvB,EACTt1B,EAAyBZ,EAAAvjD,QACVukD,GACf0F,IAUJwvB,EAAA91E,UAAA02E,WAAU,SAACzqE,MACLA,EAAQ,GAACnM,KAASi2E,OAAOr6E,QAAUuQ,EAAK,OACnC,SAEL+I,KACU,IAAV/I,EACF+I,EAAS,WAEH2hE,EAAQ72E,KAAQi2E,OAAO9pE,EAAQ,GACrC+I,EAAS2hE,EAASA,EAASj7E,OAAS,OAEhCukD,EAAIngD,KAAQi2E,OAAO9pE,GAAO9F,QAC1BgF,EAAM80C,EAAKA,EAAKvkD,OAAS,MAChB,IAAXsZ,EAAY,IAAA,IACLvZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAC1CwkD,EAAKxkD,IAAMuZ,4BAIRD,gBAAgB5O,MAAM6O,EAAQ7J,GAAGrL,KACjCg/C,OACLmB,IASJ61B,EAAA91E,UAAA42E,YAAW,mBACH93B,EAAMh/C,KAAQg/C,OACd/pC,EAAejV,KAAQiV,gBACvB6vC,EAAK9kD,KAAQi2E,OACbG,EAAQ,GACVlhE,EAAS,EACJvZ,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GAAG0K,QAChBgF,EAAM80C,EAAKA,EAAKvkD,OAAS,MAChB,IAAXsZ,EAAY,IAAA,IACLlO,EAAI,EAAGsjC,EAAK6V,EAAKvkD,OAAQoL,EAAIsjC,IAAMtjC,EAC1Cm5C,EAAKn5C,IAAMkO,MAGT6pC,EAAO,IAAA2lB,EAAAnoE,QACX0Y,EAAgB5O,MAAM6O,EAAQ7J,GAC9B2zC,EACAmB,GAEFi2B,EAASnyE,KAAK86C,GACd7pC,EAAS7J,SAEJ+qE,GAQTJ,EAAA91E,UAAAwtC,QAAO,4BACeyF,eAStB6iC,EAAA91E,UAAA6gD,iBAAgB,SAAC/sC,gDAERsrC,6BACL,EAACt/C,KACIi2E,OAAMj2E,KACNmV,OACLnB,IAUJgiE,EAAA91E,UAAA0+C,eAAc,SAACz3C,EAAa+2C,QACrB8C,UAAU9C,EAAY/2C,EAAa,QAC9B8N,kBAAejV,KAClBiV,gBAAe,QAEhB6vC,EAAK7D,EAAAoE,6BAAArlD,KACJiV,gBACL,EACA9N,EAAWnH,KACNmV,OAAMnV,KACNi2E,WAEc,IAAjBnxB,EAAMlpD,OAAYoE,KACfiV,gBAAgBrZ,OAAS,WAExBm7E,EAAWjyB,EAAMA,EAAMlpD,OAAS,QACjCqZ,gBAAgBrZ,OACC,IAApBm7E,EAASn7E,OAAe,EAAIm7E,EAASA,EAASn7E,OAAS,QAEtD4hB,WAETw4D,EA1bA,sBA4beD,moBCldZ7sE,EAAAF,OAAAzN,EAAA,gBAAA,IACayrD,IAVb,IAAArgD,EAAA1L,EAAA,4BAUa+rD,EAAa/xC,EAAiBC,EAAQ4vC,EAAO3vC,WACrDkyC,EAAW,GACbrzC,EAAMrN,EAAAkL,cACDlW,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnBqY,EAAMrN,EAAAuL,kCACJ+C,EACAC,EACAirC,EAAK,GACLhrC,GAEFkyC,EAAYpjD,MAAM+P,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxEkB,EAASirC,EAAKA,EAAKvkD,OAAS,UAEvByrD,oMCxBN,MAAA2vB,EAAA/7E,EAAA,0iBAeHg8E,EAAA,SAAA53E,GAGK,SACH63E,EAAY1/C,UACVn4B,EAAAU,KAAAC,KAAMw3B,IAAWx3B,YALKC,EAAAi3E,EAAA73E,GAYxB63E,EAAAh3E,UAAAC,eAAc,uCAGhB+2E,EAfA,sBAiBeD,+OChCZ,MAAApyE,EAAA5J,EAAA,mjBA2DG4iC,EACQ,cAcds5C,EAAA,SAAA93E,GAGK,SACH+3E,EAAY5/C,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCtb,EAAW3c,EAAAC,OAAA,GAAcrC,iBAExB+e,EAAY7d,aACZ6d,EAAYm7D,oBACZn7D,EAAYo7D,4BACZp7D,EAAY6yD,wBACnBvuE,EAAAnB,EAAAU,KAAAC,KAAMkc,IAAWlc,MAMZu3E,gBACmB/0E,IAAtBrF,EAAQq6E,WAA0Br6E,EAAQq6E,UAM5Ch3E,EAAKi3E,mBACsBj1E,IAAzBrF,EAAQk6E,aAA6Bl6E,EAAQk6E,aAAe,IAO9D72E,EAAKgyE,OAAS,KAOdhyE,EAAKiyE,oBAAiBjwE,EAEtBhC,EAAKsyE,SAAS31E,EAAQkB,OAMtBmC,EAAKk3E,2BAC8Bl1E,IAAjCrF,EAAQm6E,sBACJn6E,EAAQm6E,qBAOd92E,EAAKm3E,6BACgCn1E,IAAnCrF,EAAQ4xE,wBACJ5xE,EAAQ4xE,gCA5DY9uE,EAAAm3E,EAAA/3E,GAmE5B+3E,EAAAl3E,UAAA03E,aAAY,uBACEL,YAiBdH,EAAAl3E,UAAAwd,YAAW,SAACnZ,UACHlF,EAAAa,UAAMwd,YAAW3d,KAAAC,KAACuE,IAM3B6yE,EAAAl3E,UAAA23E,gBAAe,uBACDJ,eAOdL,EAAAl3E,UAAA43E,eAAc,uBACoE37E,IAC9E0hC,IAUJu5C,EAAAl3E,UAAA2yE,SAAQ,uBACML,QAQd4E,EAAAl3E,UAAA6yE,iBAAgB,uBACFN,gBAOd2E,EAAAl3E,UAAA63E,wBAAuB,uBACTL,uBAOdN,EAAAl3E,UAAA83E,0BAAyB,uBACXL,yBAOdP,EAAAl3E,UAAAgE,gBAAe,SAAC/B,GACTA,EAAW66B,gBACd76B,EAAW66B,cAAa,IAAAi7C,EAAA17E,QAAa,IAEvByD,KAAOgF,cAAed,gBAAgB/B,IAOxDi1E,EAAAl3E,UAAAg4E,eAAc,SAACC,QACR5qE,IAAIswB,EAAuBs6C,IAalCf,EAAAl3E,UAAA4yE,SAAQ,SAACG,QACFT,YAAuBhwE,IAAdywE,EAA0BA,EAASpE,EAAAuJ,wBAC5C3F,eACW,OAAdQ,OAAqBzwE,EAASqsE,EAAAwJ,WAAAr4E,KAAwBwyE,aACnDh1D,WAET45D,EAhLA,sBAkLeD,+KC9PL77D,EAAE3f,EAAF2f,OAAE3f,mCAAwL2f,EAAEg9D,EAAEv+D,EAAEzK,EAAEnM,EAAE2rB,aAAaypD,EAAErtE,EAAEstE,EAAE5pE,EAAEJ,EAAEiqE,QAAQjqE,EAAEI,GAAC,IAAMJ,EAAEI,EAAE,IAAG,KAAMslE,EAAE1lE,EAAEI,EAAE,EAAEiL,EAAE2+D,EAAE5pE,EAAE,EAAEmJ,EAAEnI,KAAKwL,IAAI84D,GAAG3kE,EAAE,GAAGK,KAAKuL,IAAI,EAAEpD,EAAE,GAAG2gE,EAAE,GAAG9oE,KAAK8W,KAAK3O,EAAExI,GAAG2kE,EAAE3kE,GAAG2kE,IAAIr6D,EAAEq6D,EAAE,EAAE,GAAE,EAAG,GAA+EqE,EAAErtE,EAAEstE,EAA9E5oE,KAAK4F,IAAI5G,EAAEgB,KAAKqI,MAAMugE,EAAE3+D,EAAEtK,EAAE2kE,EAAEwE,IAAM9oE,KAAK2F,IAAI/G,EAAEoB,KAAKqI,MAAMugE,GAAGtE,EAAEr6D,GAAGtK,EAAE2kE,EAAEwE,IAAcD,OAAOE,EAAEztE,EAAEstE,GAAGnpE,EAAET,EAAEY,EAAEhB,MAAM7S,EAAEuP,EAAE0D,EAAE4pE,GAAGC,EAAEvtE,EAAEsD,GAAGmqE,GAAG,GAAGh9E,EAAEuP,EAAE0D,EAAEJ,GAAGa,EAAEG,GAAC,KAAO7T,EAAEuP,EAAEmE,EAAEG,GAAGH,IAAIG,IAAIipE,EAAEvtE,EAAEmE,GAAGspE,GAAG,GAAGtpE,SAASopE,EAAEvtE,EAAEsE,GAAGmpE,GAAG,GAAGnpE,IAAI,IAAIipE,EAAEvtE,EAAE0D,GAAG+pE,GAAGh9E,EAAEuP,EAAE0D,EAAEY,GAAG7T,EAAEuP,IAAIsE,EAAEhB,GAAGgB,GAAGgpE,IAAI5pE,EAAEY,EAAE,GAAGgpE,GAAGhpE,IAAIhB,EAAEgB,EAAE,KAAK8oE,EAAEv+D,EAAEzK,GAAG,EAAEnM,GAAGm1E,EAAE18E,OAAO,EAAEkzB,GAAG5jB,YAAYvP,EAAE28E,EAAE7wE,EAAEyD,OAAO6O,EAAEu+D,EAAE7wE,GAAG6wE,EAAE7wE,GAAG6wE,EAAEptE,GAAGotE,EAAEptE,GAAG6O,WAAW7O,EAAEotE,EAAE7wE,UAAU6wE,EAAE7wE,GAAE,EAAG6wE,EAAE7wE,EAAE,EAAE,MAAMsS,EAAC,SAAUu+D,YAAYA,IAAIA,EAAE,GAACt4E,KAAO44E,YAAYhpE,KAAK4F,IAAI,EAAE8iE,GAACt4E,KAAO64E,YAAYjpE,KAAK4F,IAAI,EAAE5F,KAAK0X,KAAK,GAAEtnB,KAAM44E,cAAW54E,KAAQyY,kBAAkBnJ,EAAEgpE,EAAE7wE,EAAEwhB,OAAOA,EAAC,OAAQxhB,EAAEsD,QAAQutE,WAAWE,EAAE,EAAEA,EAAE/wE,EAAE7L,OAAO48E,IAAC,GAAMvvD,EAAEqvD,EAAE7wE,EAAE+wE,IAAC,OAAUA,SAAQ,WAAYr1E,EAAEm1E,EAAE7wE,GAAGqnB,EAAEwpD,EAAE,EAAEA,EAAEhmD,SAAS12B,OAAO6L,EAAE6wE,YAAYxpD,EAAEwpD,EAAE7wE,EAAEwhB,EAAEuvD,EAAE5pE,GAAGA,IAAIA,EAAE+pE,EAAE,OAAO/pE,EAAEwF,KAAK,EAAA,EAAIxF,EAAEyF,KAAK,EAAA,EAAIzF,EAAE0F,MAAK,EAAA,EAAK1F,EAAE2F,MAAK,EAAA,UAAa/F,EAAE/G,EAAE+G,EAAEya,EAAEza,IAAC,KAAQiqE,EAAEH,EAAEhmD,SAAS9jB,GAAG0lE,EAAEtlE,EAAE0pE,EAAEQ,KAAKN,EAAEC,GAAGA,UAAU7pE,WAAWslE,EAAEoE,EAAE7wE,UAAU6wE,EAAElkE,KAAKxE,KAAK2F,IAAI+iE,EAAElkE,KAAK3M,EAAE2M,MAAMkkE,EAAEjkE,KAAKzE,KAAK2F,IAAI+iE,EAAEjkE,KAAK5M,EAAE4M,MAAMikE,EAAEhkE,KAAK1E,KAAK4F,IAAI8iE,EAAEhkE,KAAK7M,EAAE6M,MAAMgkE,EAAE/jE,KAAK3E,KAAK4F,IAAI8iE,EAAE/jE,KAAK9M,EAAE8M,MAAM+jE,WAAWz+D,EAAEy+D,EAAE7wE,UAAU6wE,EAAElkE,KAAK3M,EAAE2M,cAAc2D,EAAEugE,EAAE7wE,UAAU6wE,EAAEjkE,KAAK5M,EAAE4M,cAAc9E,EAAE+oE,UAAUA,EAAEhkE,KAAKgkE,EAAElkE,OAAOkkE,EAAE/jE,KAAK+jE,EAAEjkE,eAAeqkE,EAAEJ,UAAUA,EAAEhkE,KAAKgkE,EAAElkE,MAAMkkE,EAAE/jE,KAAK+jE,EAAEjkE,eAAe0kE,EAAET,EAAE7wE,UAAU6wE,EAAElkE,MAAM3M,EAAE2M,MAAMkkE,EAAEjkE,MAAM5M,EAAE4M,MAAM5M,EAAE6M,MAAMgkE,EAAEhkE,MAAM7M,EAAE8M,MAAM+jE,EAAE/jE,cAAcvF,EAAEspE,EAAE7wE,UAAUA,EAAE2M,MAAMkkE,EAAEhkE,MAAM7M,EAAE4M,MAAMikE,EAAE/jE,MAAM9M,EAAE6M,MAAMgkE,EAAElkE,MAAM3M,EAAE8M,MAAM+jE,EAAEjkE,cAAcskE,EAAEL,UAAUhmD,SAASgmD,EAAEh3E,OAAO,EAAEw3E,MAAI,EAAI1kE,KAAK,EAAA,EAAIC,KAAK,EAAA,EAAIC,MAAK,EAAA,EAAKC,MAAK,EAAA,YAAelF,EAAE5H,EAAEwhB,EAAEuvD,EAAE5pE,EAAEJ,WAAWwqE,EAAC,CAAE/vD,EAAEuvD,GAAGQ,EAAEp9E,QAAM,MAAQ48E,EAAEQ,EAAEt6C,QAAQzV,EAAE+vD,EAAEt6C,QAAQ9vB,GAAC,KAAOqqE,EAAEhwD,EAAErZ,KAAK0X,MAAMkxD,EAAEvvD,GAAGra,EAAE,GAAGA,EAAE0M,EAAE7T,EAAEwxE,EAAEhwD,EAAEuvD,EAAEhqE,GAAGwqE,EAAE/0E,KAAKglB,EAAEgwD,EAAEA,EAAET,WAAWz+D,EAAE7Z,UAAU++D,IAAG,uBAAwBia,KAAIl5E,KAAM+E,KAAI,KAAMgV,EAAE7Z,UAAUi5E,OAAM,SAAUb,OAAO7wE,EAACzH,KAAM+E,KAAKkkB,EAAC,OAAQja,EAAEspE,EAAE7wE,GAAC,OAASwhB,UAAUuvD,EAACx4E,KAAMo5E,OAAOxqE,EAAC,GAAInH,GAAC,SAAW+G,EAAE,EAAEA,EAAE/G,EAAE6qB,SAAS12B,OAAO4S,IAAC,KAAQwqE,EAAEvxE,EAAE6qB,SAAS9jB,GAAG6qE,EAAE5xE,EAAEqxE,KAAKN,EAAEQ,GAAGA,EAAEhqE,EAAEspE,EAAEe,KAAK5xE,EAAEqxE,KAAK7vD,EAAEhlB,KAAK+0E,GAAGD,EAAET,EAAEe,GAACr5E,KAAOk5E,KAAKF,EAAE/vD,GAAGra,EAAE3K,KAAK+0E,IAAIvxE,EAAEmH,EAAE8vB,aAAazV,GAAGlP,EAAE7Z,UAAUo5E,SAAQ,SAAUhB,OAAO7wE,EAACzH,KAAM+E,SAASiK,EAAEspE,EAAE7wE,GAAC,OAAA,UAAmBwhB,EAAC,GAAIxhB,GAAC,SAAW+wE,EAAE,EAAEA,EAAE/wE,EAAE6qB,SAAS12B,OAAO48E,IAAC,KAAQ5pE,EAAEnH,EAAE6qB,SAASkmD,GAAG1pE,EAAErH,EAAEqxE,KAAI94E,KAAMo5E,OAAOxqE,GAAGA,KAAKI,EAAEspE,EAAExpE,GAAC,IAAMrH,EAAEqxE,MAAMC,EAAET,EAAExpE,GAAC,OAAA,EAAWma,EAAEhlB,KAAK2K,IAAInH,EAAEwhB,EAAEyV,gBAAgB3kB,EAAE7Z,UAAUkkC,KAAI,SAAUk0C,OAAOA,IAAIA,EAAE18E,OAAM,OAAAoE,QAAgBs4E,EAAE18E,OAAMoE,KAAM64E,YAAW,SAAUpxE,EAAE,EAAEA,EAAE6wE,EAAE18E,OAAO6L,IAACzH,KAAQu5E,OAAOjB,EAAE7wE,oBAAoBwhB,EAACjpB,KAAMw5E,OAAOlB,EAAEjyE,QAAQ,EAAEiyE,EAAE18E,OAAO,EAAE,WAAWmJ,KAAKutB,SAAS12B,eAAemJ,KAAKzD,SAAS2nB,EAAE3nB,OAAMtB,KAAMy5E,WAAUz5E,KAAM+E,KAAKkkB,gBAAgBlkB,KAAKzD,OAAO2nB,EAAE3nB,OAAM,KAAMo4E,EAAC15E,KAAM+E,UAAUA,KAAKkkB,EAAEA,EAAEywD,OAAOC,QAAQ1wD,EAACjpB,KAAM+E,KAAKzD,OAAO2nB,EAAE3nB,OAAO,GAAC,aAAeyD,KAAKkkB,eAAelP,EAAE7Z,UAAUq5E,OAAM,SAAUjB,UAAUA,GAACt4E,KAAO25E,QAAQrB,EAACt4E,KAAM+E,KAAKzD,OAAO,GAACtB,MAAQ+Z,EAAE7Z,UAAUuY,MAAK,uBAAwB1T,KAAK4zE,EAAC,IAAA34E,MAAW+Z,EAAE7Z,UAAUwL,OAAM,SAAU4sE,EAAEsB,OAAOtB,EAAC,OAAAt4E,aAAqBipB,EAAE4wD,EAAEC,EAAEC,EAAC/5E,KAAM+E,KAAKi1E,EAACh6E,KAAMo5E,OAAOd,GAAGvvD,EAAC,GAAIkxD,EAAC,GAAIF,GAAGhxD,EAAEntB,QAAM,IAAMm+E,IAAIA,EAAEhxD,EAAE2V,MAAMm7C,EAAE9wD,EAAEA,EAAEntB,OAAO,GAAGqtB,EAAEgxD,EAAEv7C,MAAMo7C,GAAC,GAAKC,EAAEjB,KAAI,KAAMjqE,EAAES,EAAEgpE,EAAEyB,EAAEznD,SAASsnD,OAAM,IAAK/qE,EAAC,OAAQkrE,EAAEznD,SAAS3mB,OAAOkD,EAAE,GAAGka,EAAE9kB,KAAK81E,GAAC/5E,KAAOk6E,UAAUnxD,GAAC/oB,KAAO85E,GAAGC,EAAEjB,OAAOC,EAAEgB,EAAEC,GAAGH,GAAG5wD,IAAI8wD,EAAEF,EAAEvnD,SAASrJ,GAAG6wD,GAAC,GAAKC,EAAE,MAAMhxD,EAAE9kB,KAAK81E,GAAGE,EAAEh2E,KAAKglB,GAAGA,EAAE,EAAE4wD,EAAEE,EAAEA,EAAEA,EAAEznD,SAAS,iBAAiBvY,EAAE7Z,UAAUk5E,OAAM,SAAUd,UAAUA,GAAGv+D,EAAE7Z,UAAUi6E,YAAW,SAAU7B,EAAEsB,UAAUtB,EAAElkE,KAAKwlE,EAAExlE,MAAM2F,EAAE7Z,UAAUk6E,YAAW,SAAU9B,EAAEsB,UAAUtB,EAAEjkE,KAAKulE,EAAEvlE,MAAM0F,EAAE7Z,UAAUm6E,OAAM,uBAAwBt1E,MAAMgV,EAAE7Z,UAAUo6E,SAAQ,SAAUhC,eAAevzE,KAAKuzE,EAACt4E,MAAO+Z,EAAE7Z,UAAUg5E,KAAI,SAAUZ,EAAEsB,WAAW3wD,EAAC,GAAIqvD,GAAGA,EAAEQ,KAAKc,EAAE31E,KAAK+F,MAAM4vE,EAAEtB,EAAEhmD,UAAUrJ,EAAEhlB,KAAK+F,MAAMif,EAAEqvD,EAAEhmD,UAAUgmD,EAAErvD,EAAEyV,aAAak7C,GAAG7/D,EAAE7Z,UAAUs5E,OAAM,SAAUlB,EAAEsB,EAAE3wD,EAAE4wD,OAAO3qE,EAAE6qE,EAAE9wD,EAAE2wD,EAAE,EAAEI,EAACh6E,KAAM44E,eAAemB,GAAGC,EAAC,OAAQ72E,EAAE+L,EAAEypE,EAAEL,EAAEjyE,MAAMuzE,EAAE3wD,EAAE,IAACjpB,KAAQo5E,QAAQlqE,EAAE2qE,IAAIA,EAAEjqE,KAAK0X,KAAK1X,KAAKwL,IAAI2+D,GAAGnqE,KAAKwL,IAAI4+D,IAAIA,EAAEpqE,KAAK0X,KAAKyyD,EAAEnqE,KAAKuX,IAAI6yD,EAAEH,EAAE,MAAM3qE,EAAEypE,EAAC,KAAMG,MAAI,EAAI5pE,EAAE5N,OAAOu4E,MAAM9wD,EAAEnZ,KAAK0X,KAAKyyD,EAAEC,GAAGC,EAAElxD,EAAEnZ,KAAK0X,KAAK1X,KAAK8W,KAAKszD,IAAI3qE,EAAEipE,EAAEsB,EAAE3wD,EAAEgxD,EAACj6E,KAAMm6E,qBAAqBhrE,EAAEyqE,EAAEzqE,GAAG8Z,EAAE9Z,GAAG8qE,EAAC,KAAMM,EAAE3qE,KAAK2F,IAAIpG,EAAE8qE,EAAE,EAAEhxD,GAAG5Z,EAAEipE,EAAEnpE,EAAEorE,EAAExxD,EAAC/oB,KAAMo6E,qBAAqBI,EAAErrE,EAAEqrE,GAAGD,EAAEC,GAAGzxD,EAAC,KAAMra,EAAEkB,KAAK2F,IAAIilE,EAAEzxD,EAAE,EAAEwxD,GAAGrrE,EAAEojB,SAASruB,KAAIjE,KAAMw5E,OAAOlB,EAAEkC,EAAE9rE,EAAEmrE,EAAE,YAAY12E,EAAE+L,EAAClP,KAAMo5E,QAAQlqE,GAAG6K,EAAE7Z,UAAUu6E,eAAc,SAAUnC,EAAEsB,EAAE3wD,EAAE4wD,QAAQA,EAAE51E,KAAK21E,IAAIA,EAAEd,MAAMe,EAAEj+E,OAAO,IAAIqtB,GAAC,SAAW/Z,EAAE,EAAA,EAAI4qE,EAAE,EAAA,EAAIC,OAAC,EAAQC,EAAE,EAAEA,EAAEJ,EAAEtnD,SAAS12B,OAAOo+E,IAAC,KAAQjxD,EAAE6wD,EAAEtnD,SAAS0nD,GAAGC,EAAE1qE,EAAEwZ,GAAG2xD,GAAGC,EAAErC,EAAEsC,EAAE7xD,GAAGnZ,KAAK4F,IAAIolE,EAAEtmE,KAAKqmE,EAAErmE,MAAM1E,KAAK2F,IAAIqlE,EAAExmE,KAAKumE,EAAEvmE,QAAQxE,KAAK4F,IAAIolE,EAAErmE,KAAKomE,EAAEpmE,MAAM3E,KAAK2F,IAAIqlE,EAAEvmE,KAAKsmE,EAAEtmE,OAAO4lE,GAAGS,EAAEZ,GAAGA,EAAEY,EAAExrE,EAAE+qE,EAAE/qE,EAAE+qE,EAAE/qE,EAAE6qE,EAAEhxD,GAAG2xD,IAAIZ,GAAGG,EAAE/qE,IAAIA,EAAE+qE,EAAEF,EAAEhxD,GAAG6wD,EAAEG,GAAGH,EAAEtnD,SAAS,OAAOqoD,EAAEC,SAAShB,GAAG7/D,EAAE7Z,UAAUy5E,QAAO,SAAUrB,EAAEsB,EAAE3wD,OAAO4wD,EAAE5wD,EAAEqvD,EAACt4E,KAAMo5E,OAAOd,GAAGuC,EAAC,GAAIC,EAAC96E,KAAMy6E,eAAeZ,EAAC75E,KAAM+E,KAAK60E,EAAEiB,OAAOC,EAAExoD,SAASruB,KAAKq0E,GAAGpE,EAAE4G,EAAEjB,GAAGD,GAAG,GAAGiB,EAAEjB,GAAGtnD,SAAS12B,OAAMoE,KAAM44E,aAAW54E,KAAO+6E,OAAOF,EAAEjB,GAAGA,SAASoB,oBAAoBnB,EAAEgB,EAAEjB,IAAI7/D,EAAE7Z,UAAU66E,OAAM,SAAUzC,EAAEsB,OAAO3wD,EAAEqvD,EAAEsB,GAAGC,EAAE5wD,EAAEqJ,SAAS12B,OAAOi/E,EAAC76E,KAAM64E,iBAAiBoC,iBAAiBhyD,EAAE4xD,EAAEhB,OAAOqB,EAACl7E,KAAMm7E,kBAAkBlyD,EAAE4xD,EAAEhB,GAAGuB,EAAEzC,EAAE1vD,EAAEqJ,SAAS3mB,OAAOuvE,EAAEjyD,EAAEqJ,SAAS12B,OAAOs/E,IAAIE,EAAE95E,OAAO2nB,EAAE3nB,OAAO85E,EAAEtC,KAAK7vD,EAAE6vD,KAAK31E,EAAE8lB,EAACjpB,KAAMo5E,QAAQj2E,EAAEi4E,EAACp7E,KAAMo5E,QAAQQ,EAAEtB,EAAEsB,EAAE,GAAGtnD,SAASruB,KAAKm3E,GAACp7E,KAAOy5E,WAAWxwD,EAAEmyD,IAAIrhE,EAAE7Z,UAAUu5E,WAAU,SAAUnB,EAAEsB,QAAQ70E,KAAK4zE,EAAC,CAAEL,EAAEsB,SAAS70E,KAAKzD,OAAOg3E,EAAEh3E,OAAO,EAACtB,KAAM+E,KAAK+zE,MAAI,EAAI31E,EAACnD,KAAM+E,KAAI/E,KAAMo5E,SAASr/D,EAAE7Z,UAAUi7E,kBAAiB,SAAU7C,EAAEsB,EAAE3wD,WAAW4wD,EAAEgB,EAAEC,EAAEM,EAAEpyD,EAAEqyD,EAAEC,EAAEX,EAAE,EAAA,EAAIC,EAAE,EAAA,EAAIW,EAAE3B,EAAE2B,GAAGtyD,EAAE2wD,EAAE2B,IAAC,KAAQ5sE,EAAEmgB,EAAEwpD,EAAE,EAAEiD,EAACv7E,KAAMo5E,QAAQ5pE,EAAEsf,EAAEwpD,EAAEiD,EAAEtyD,EAACjpB,KAAMo5E,QAAQoC,GAAGX,EAAElsE,EAAEmsE,EAAEtrE,EAAsC4rE,EAAExrE,KAAK4F,IAAIqlE,EAAEzmE,KAAK0mE,EAAE1mE,MAAM4U,EAAEpZ,KAAK4F,IAAIqlE,EAAExmE,KAAKymE,EAAEzmE,MAAMgnE,EAAEzrE,KAAK2F,IAAIslE,EAAEvmE,KAAKwmE,EAAExmE,MAAMgnE,EAAE1rE,KAAK2F,IAAIslE,EAAEtmE,KAAKumE,EAAEvmE,MAAM3E,KAAK4F,IAAI,EAAE6lE,EAAED,GAAGxrE,KAAK4F,IAAI,EAAE8lE,EAAEtyD,IAAIyyD,EAAElsE,EAAEZ,GAAGY,EAAEC,GAAGgsE,EAAEb,GAAGA,EAAEa,EAAE3B,EAAE0B,EAAEX,EAAEa,EAAEb,EAAEa,EAAEb,GAAGY,IAAIb,GAAGc,EAAEb,IAAIA,EAAEa,EAAE5B,EAAE0B,UAAU1B,GAAG5wD,EAAE2wD,GAAG7/D,EAAE7Z,UAAU+6E,iBAAgB,SAAU3C,EAAEsB,EAAE3wD,OAAO4wD,EAAEvB,EAAEQ,KAAI94E,KAAMm6E,YAAYtgE,EAAEghE,EAAEvC,EAAEQ,KAAI94E,KAAMo6E,YAAYriE,OAAO2jE,eAAepD,EAAEsB,EAAE3wD,EAAE4wD,GAAC75E,KAAO07E,eAAepD,EAAEsB,EAAE3wD,EAAE4xD,IAAIvC,EAAEhmD,SAASpvB,KAAK22E,IAAI9/D,EAAE7Z,UAAUw7E,eAAc,SAAUpD,EAAEsB,EAAE3wD,EAAE4wD,GAAGvB,EAAEhmD,SAASpvB,KAAK22E,WAAWgB,EAAC76E,KAAMo5E,OAAO0B,EAAEhsD,EAAEwpD,EAAE,EAAEsB,EAAEiB,GAAG7xD,EAAE8F,EAAEwpD,EAAErvD,EAAE2wD,EAAE3wD,EAAE4xD,GAAGQ,EAAE3C,EAAEoC,GAAGpC,EAAE1vD,GAAG7Z,EAAEyqE,EAAEzqE,EAAE8Z,EAAE2wD,EAAEzqE,IAAC,KAAQwrE,EAAErC,EAAEhmD,SAASnjB,GAAG+kE,EAAE4G,EAAExC,EAAEQ,KAAK+B,EAAEF,GAAGA,GAAGU,GAAG3C,EAAEoC,WAAWF,EAAE3xD,EAAE2wD,EAAE,EAAEgB,GAAGhB,EAAEgB,IAAC,KAAQW,EAAEjD,EAAEhmD,SAASsoD,GAAG1G,EAAElrD,EAAEsvD,EAAEQ,KAAK+B,EAAEU,GAAGA,GAAGF,GAAG3C,EAAE1vD,UAAUqyD,GAAGthE,EAAE7Z,UAAU86E,oBAAmB,SAAU1C,EAAEsB,EAAE3wD,WAAW4wD,EAAE5wD,EAAE4wD,GAAG,EAAEA,IAAI3F,EAAE0F,EAAEC,GAAGvB,IAAIv+D,EAAE7Z,UAAUg6E,UAAS,SAAU5B,WAAWsB,EAAEtB,EAAE18E,OAAO,EAAEqtB,OAAC,EAAQ2wD,GAAG,EAAEA,IAAI,IAAItB,EAAEsB,GAAGtnD,SAAS12B,OAAOg+E,EAAE,GAAG3wD,EAAEqvD,EAAEsB,EAAE,GAAGtnD,UAAU3mB,OAAOsd,EAAEle,QAAQutE,EAAEsB,IAAI,GAAC55E,KAAOyY,QAAQtV,EAAEm1E,EAAEsB,GAAC55E,KAAOo5E,SAASr/D,oBAA3xMxe,QAAO,IAAsBD,EAAOA,EAAOC,QAAQI,IAAC,mBAAsBggF,QAAQA,OAAOC,IAAID,OAAOhgF,IAAI2f,EAAEA,GAAGmV,MAAMorD,MAAMlgF,mHC2YtJuN,EAAAF,OAAAzN,EAAA,cAAA,IACa88E,IAiCbnvE,EAAAF,OAAAzN,EAAA,sBAAA,IACa68E,IAgCblvE,EAAAF,OAAAzN,EAAA,sBAAA,IACauzE,IA7cb,IAAAnD,EAAA1wE,EAAA,+LAiJHsD,EAAA,WAGK,SACHu9E,EAAYtkD,OACJr6B,EAAUq6B,GAAW,GAKxBx3B,KACEqkE,UAAY,KAKdrkE,KACE8tE,kBAAoBiO,OAEAv5E,IAArBrF,EAAQ+I,UAAsBlG,KAC3B6wE,YAAY1zE,EAAQ+I,UAMxBlG,KACEg8E,WAAyBx5E,IAAjBrF,EAAQ8+E,KAAqB9+E,EAAQ8+E,KAAO,KAKtDj8E,KACEk8E,YAA2B15E,IAAlBrF,EAAQg/E,MAAsBh/E,EAAQg/E,MAAQ,KAKzDn8E,KACEsc,eAAiC9Z,IAArBrF,EAAQi/E,SAAyBj/E,EAAQi/E,SAAW,KAKlEp8E,KACEq8E,aAA6B75E,IAAnBrF,EAAQqB,OAAuBrB,EAAQqB,OAAS,KAK5DwB,KACEs8E,WAAyB95E,IAAjBrF,EAAQH,KAAqBG,EAAQH,KAAO,KAKtDgD,KACEu8E,QAAUp/E,EAAQoE,cAQzBu6E,EAAA57E,UAAAqR,MAAK,eACCrL,EAAQlG,KAAQ+iE,qBAChB78D,GAA2B,iBAARA,IACrBA,EAAiEA,EAAUqL,aAElEuqE,EAAK,CACd51E,SAAUA,EACV+1E,KAAIj8E,KAAOw8E,UAAOx8E,KAAUw8E,UAAUjrE,aAAU/O,EAChD25E,MAAKn8E,KAAOy8E,WAAQz8E,KAAUy8E,WAAWlrE,aAAU/O,EACnD45E,SAAQp8E,KAAOgF,cACfxG,OAAMwB,KAAO08E,YAAS18E,KAAU08E,YAAYnrE,aAAU/O,EACtDxF,KAAIgD,KAAO28E,UAAO38E,KAAU28E,UAAUprE,aAAU/O,EAChDjB,OAAMvB,KAAOsf,eAUjBw8D,EAAA57E,UAAA8E,YAAW,uBACGsX,WASdw/D,EAAA57E,UAAA08E,YAAW,SAACR,QACL9/D,UAAY8/D,GAUnBN,EAAA57E,UAAA6iE,YAAW,uBACGsB,WASdyX,EAAA57E,UAAA28E,oBAAmB,uBACL/O,mBAQdgO,EAAA57E,UAAAs8E,QAAO,uBACOR,OAQdF,EAAA57E,UAAA48E,QAAO,SAACb,QACDD,MAAQC,GAQfH,EAAA57E,UAAAu8E,SAAQ,uBACMP,QAQdJ,EAAA57E,UAAA68E,SAAQ,SAACZ,QACFD,OAASC,GAQhBL,EAAA57E,UAAAw8E,UAAS,uBACKL,SAQdP,EAAA57E,UAAA88E,UAAS,SAACx+E,QACH69E,QAAU79E,GAQjBs9E,EAAA57E,UAAAy8E,QAAO,uBACOL,OAQdR,EAAA57E,UAAA+8E,QAAO,SAACjgF,QACDs/E,MAAQt/E,GAQf8+E,EAAA57E,UAAAof,UAAS,uBACKi9D,SAWdT,EAAA57E,UAAA2wE,YAAW,SAAC3qE,GACS,mBAARA,EAAuBlG,KAC3B8tE,kBAAoB5nE,EACD,iBAARA,EAAqBlG,KAChC8tE,kBAAiB,SAAa7nE,UAC4BA,EAAQ9J,IACnE+J,IAGMA,OAEY1D,IAAb0D,IAAsBlG,KAC1B8tE,kBAAiB,kBACyC5nE,IAJ7ClG,KACb8tE,kBAAoBiO,OAMtB1X,UAAYn+D,GASnB41E,EAAA57E,UAAAmgB,UAAS,SAAC9e,QACHg7E,QAAUh7E,GAEnBu6E,EA/OA,YAyPgBzD,EAAWvtE,OACrBoyE,KAEU,mBAAHpyE,EACToyE,EAAgBpyE,OAIb,IACCqoE,KACAtpE,MAAM4B,QAAQX,GAChBqoE,EAASroE,gBAEsC,mBAAdA,EAAKwU,UAA2B,IAEjE6zD,EAAM,CAD8BroE,GAGtCoyE,EAAa,kBACJ/J,UAGJ+J,EAKN,IACCC,EAAgB,cAOJ/E,EAAmBnyE,EAASR,OAMrC03E,EAAa,KACVlB,EAAI,IAAAmB,EAAA7gF,QAAA,CACRmC,MAAK,0BAEDF,EAAM,IAAA6+E,EAAA9gF,QAAA,CACVmC,MAAK,UACLC,MAAO,OAETw+E,EAAa,KACP5+E,EAAK,CACP49E,MAAK,IAAA3O,EAAAjxE,QAAA,CACH0/E,KAAMA,EACNz9E,OAAQA,EACRw8C,OAAQ,IAEVihC,KAAMA,EACNz9E,OAAQA,YAIP2+E,WAOOrO,IACgE,IACxE1B,EAAM,GACNkQ,EAAK,CAAI,IAAK,IAAK,IAAK,GACxBC,EAAI,CAAI,EAAG,IAAK,IAAK,UAE3BnQ,EAAMz/B,EAAApxC,QAAcy2C,SAAO,KACrBz0C,EAAK,CACP09E,KAAI,IAAAmB,EAAA7gF,QAAA,CACFmC,MAAK,CAAG,IAAK,IAAK,IAAK,SAI7B0uE,EAAMz/B,EAAApxC,QAAc42C,eAAiBi6B,EAAMz/B,EAAApxC,QAAcy2C,SAEzDo6B,EAAMz/B,EAAApxC,QAAcu2C,aAAW,KACzBv0C,EAAK,CACPC,OAAM,IAAA6+E,EAAA9gF,QAAA,CACJmC,MAAO4+E,EACP3+E,MAAOA,UAGPJ,EAAK,CACPC,OAAM,IAAA6+E,EAAA9gF,QAAA,CACJmC,MAAO6+E,EACP5+E,MApBQ,OAwBdyuE,EAAMz/B,EAAApxC,QAAc22C,mBAAqBk6B,EAAMz/B,EAAApxC,QAAcu2C,aAE7Ds6B,EAAMz/B,EAAApxC,QAAcqxC,QAAUw/B,EAAMz/B,EAAApxC,QAAcy2C,SAAS66B,OACzDT,EAAMz/B,EAAApxC,QAAcu2C,cAGtBs6B,EAAMz/B,EAAApxC,QAAcs2C,OAAK,KACnBt0C,EAAK,CACP49E,MAAK,IAAA3O,EAAAjxE,QAAA,CACHy+C,OAAQr8C,EACRs9E,KAAI,IAAAmB,EAAA7gF,QAAA,CACFmC,MAAO6+E,IAET/+E,OAAM,IAAA6+E,EAAA9gF,QAAA,CACJmC,MAAO4+E,EACP3+E,MAAOA,QAGX4C,OAAQyT,EAAAA,KAGZo4D,EAAMz/B,EAAApxC,QAAc02C,aAAem6B,EAAMz/B,EAAApxC,QAAcs2C,OAEvDu6B,EAAMz/B,EAAApxC,QAAc62C,qBAAuBg6B,EAAMz/B,EAAApxC,QAClCy2C,SACb66B,OAAOT,EAAMz/B,EAAApxC,QAAcu2C,aAAcs6B,EAAMz/B,EAAApxC,QAAcs2C,QAExDu6B,EAON,SACM2O,EAAwB91E,UACxBA,EAAQ88D,wBAGFxkE,0xBC1ffi/E,EAAA,SAAAn+E,GAGK,SACHo+E,EAAYjmD,OACJr6B,EAAUq6B,GAAyB,UAEzCn4B,EAAAU,KAAAC,KAAA,CACE81E,OAAQ9gE,EAAAA,EACRinE,KAAM9+E,EAAQ8+E,KACdjhC,OAAQ79C,EAAQ69C,OAChBx8C,OAAQrB,EAAQqB,OAChBkP,WAAyBlL,IAAlBrF,EAAQuQ,MAAsBvQ,EAAQuQ,MAAQ,EACrDhI,cAA+BlD,IAArBrF,EAAQuI,SAAyBvI,EAAQuI,SAAW,EAC9DgsD,oBAC6BlvD,IAA3BrF,EAAQu0D,gBAA+Bv0D,EAAQu0D,eACjDgsB,kBAC2Bl7E,IAAzBrF,EAAQugF,aAA6BvgF,EAAQugF,aAAY,CAAI,EAAG,kBAjB9Cz9E,EAAAw9E,EAAAp+E,GA0BxBo+E,EAAAv9E,UAAAqR,MAAK,eACG7D,EAAK1N,KAAQ29E,WACbt/E,EAAK,IAAOo/E,EAAW,CAC3BxB,KAAIj8E,KAAOw8E,UAAOx8E,KAAUw8E,UAAUjrE,aAAU/O,EAChDhE,OAAMwB,KAAO08E,YAAS18E,KAAU08E,YAAYnrE,aAAU/O,EACtDw4C,OAAMh7C,KAAOymB,YACb/Y,MAAO7D,MAAM4B,QAAQiC,GAASA,EAAMrH,QAAUqH,EAC9ChI,SAAQ1F,KAAO6oC,cACf6oB,eAAc1xD,KAAOu0D,oBACrBmpB,aAAY19E,KAAO49E,kBAAkBv3E,iBAEvChI,EAAM8hB,WAAUngB,KAAMwf,cACfnhB,GASTo/E,EAAAv9E,UAAAgyE,UAAS,SAACl3B,QACH6iC,QAAU7iC,OACVh3C,UAETy5E,EAnDA,sBAqDeD,yzBCvBfM,EAAA,SAAAz+E,GAGK,SACH0+E,EAAY5gF,OAAZqD,EAAAR,KAIQ0xD,OACuBlvD,IAA3BrF,EAAQu0D,gBAA+Bv0D,EAAQu0D,sBAEjDlxD,EAAAnB,EAAAU,KAAAC,KAAA,CACEye,QAAS,EACTizC,eAAgBA,EAChBhsD,cAA+BlD,IAArBrF,EAAQuI,SAAyBvI,EAAQuI,SAAW,EAC9DgI,WAAyBlL,IAAlBrF,EAAQuQ,MAAsBvQ,EAAQuQ,MAAQ,EACrDgwE,kBAC2Bl7E,IAAzBrF,EAAQugF,aAA6BvgF,EAAQugF,aAAY,CAAI,EAAG,YAO/DM,QAAO,GAMZx9E,EAAKy9E,oBAAsB,KAM3Bz9E,EAAKw7E,WAAyBx5E,IAAjBrF,EAAQ8+E,KAAqB9+E,EAAQ8+E,KAAO,KAMzDz7E,EAAK09E,QAAO,CAAI,EAAG,GAMnB19E,EAAK0lE,QAAU/oE,EAAQ24E,OAMvBt1E,EAAKq9E,aACgBr7E,IAAnBrF,EAAQ69C,OAAuB79C,EAAQ69C,OAAS79C,EAAQghF,QAM1D39E,EAAK49E,SAAWjhF,EAAQkhF,QAMxB79E,EAAK2lE,YAA2B3jE,IAAlBrF,EAAQuS,MAAsBvS,EAAQuS,MAAQ,EAM5DlP,EAAK67E,aAA6B75E,IAAnBrF,EAAQqB,OAAuBrB,EAAQqB,OAAS,KAM/DgC,EAAK6nE,QAAU,KAMf7nE,EAAK89E,MAAQ,KAMb99E,EAAK+9E,WAAa,KAMlB/9E,EAAKg+E,uBAAyB,KAE9Bh+E,EAAKwD,kBAnGkB/D,EAAA89E,EAAA1+E,GA2GzB0+E,EAAA79E,UAAAqR,MAAK,eACG7D,EAAK1N,KAAQ29E,WACbt/E,EAAK,IAAO0/E,EAAY,CAC5B9B,KAAIj8E,KAAOw8E,UAAOx8E,KAAUw8E,UAAUjrE,aAAU/O,EAChDszE,OAAM91E,KAAO61E,YACb76B,OAAMh7C,KAAOymB,YACb43D,QAAOr+E,KAAOy+E,aACd/uE,MAAK1P,KAAO4/D,WACZphE,OAAMwB,KAAO08E,YAAS18E,KAAU08E,YAAYnrE,aAAU/O,EACtDkD,SAAQ1F,KAAO6oC,cACf6oB,eAAc1xD,KAAOu0D,oBACrB7mD,MAAO7D,MAAM4B,QAAQiC,GAASA,EAAMrH,QAAUqH,EAC9CgwE,aAAY19E,KAAO49E,kBAAkBv3E,iBAEvChI,EAAM8hB,WAAUngB,KAAMwf,cACfnhB,GAST0/E,EAAA79E,UAAAw+E,UAAS,uBACKrW,SAQd0V,EAAA79E,UAAA0/D,SAAQ,uBACMuG,QAQd4X,EAAA79E,UAAAs8E,QAAO,uBACOR,OAMd+B,EAAA79E,UAAAy+E,qBAAoB,oBACRV,oBAAmB,KACrBW,EAAa5+E,KAAQ6+E,2BAEtBC,0BAA0BF,eAErBX,qBASdF,EAAA79E,UAAAu8E,SAAQ,SAACxoD,YACG+pD,QAAQ/pD,GAAc,GAAC,KACzB2qD,EAAa5+E,KAAQ6+E,sBAErBp1D,EAAOyE,EAAAC,sBACXywD,EAAcp5E,KAAOyuB,GAAc,EACnC2qD,EAAcp5E,KAAOyuB,GAAc,QAGhC8qD,MAAMH,EAAen1D,EAAS,EAAG,EAAGwK,GAAc,QAElD+pD,QAAQ/pD,GAAc,GAAKxK,EAAQ+F,mBAE9BwuD,QAAQ/pD,GAAc,IAQpC8pD,EAAA79E,UAAA8+E,cAAa,SAAC/qD,UACLA,GAMT8pD,EAAA79E,UAAA++E,aAAY,uBACEV,YAMdR,EAAA79E,UAAAg/E,yBAAwB,uBACVV,wBAMdT,EAAA79E,UAAAi/E,cAAa,4BACOt7C,QAQpBk6C,EAAA79E,UAAAk/E,UAAS,uBACKlB,SAQdH,EAAA79E,UAAA21E,UAAS,uBACK3P,SAQd6X,EAAA79E,UAAAumB,UAAS,uBACKo3D,SAQdE,EAAA79E,UAAAu+E,WAAU,uBACIL,UAQdL,EAAA79E,UAAAoT,QAAO,uBACOgrE,OAQdP,EAAA79E,UAAAw8E,UAAS,uBACKL,SAMd0B,EAAA79E,UAAAm/E,kBAAiB,SAAC/8D,KAKlBy7D,EAAA79E,UAAAkkC,KAAI,aAKJ25C,EAAA79E,UAAAo/E,oBAAmB,SAACh9D,KAMpBy7D,EAAA79E,UAAA2+E,oBAAmB,eAMbU,EALAC,EAAO5+E,EAAAgqB,eACP60D,EAAQ7+E,EAAAmqB,gBACR20D,EAAa,EACbC,EAAW,KACXC,EAAiB,EAEjBC,EAAc,cAETxD,UAEa,QADpBkD,EAAWv/E,KAAQq8E,QAAQyD,cAEzBP,EAAW3+E,EAAAqqB,oBAEbs0D,EAAWQ,EAAAC,YAAeT,QAEN/8E,KADpBq9E,EAAW7/E,KAAQq8E,QAAQz1E,cAEzBi5E,EAAWj/E,EAAAyqB,kBAEbs0D,EAAQ3/E,KAAQq8E,QAAQ4D,cACxBL,EAAc5/E,KAAQq8E,QAAQ6D,yBAEb19E,KADjBi9E,EAAQz/E,KAAQq8E,QAAQ8D,iBAEtBV,EAAQ7+E,EAAAmqB,sBAGMvoB,KADhBg9E,EAAOx/E,KAAQq8E,QAAQ+D,gBAErBZ,EAAO5+E,EAAAgqB,qBAGUpoB,KADnBk9E,EAAU1/E,KAAQq8E,QAAQgE,mBAExBX,EAAU9+E,EAAAoqB,qBAOZu0D,YAAaA,EACbM,YAAaA,EACbr6E,KALW,GAACxF,KAAS69E,QAAUgC,GAAe,EAM9CL,QAASA,EACTG,SAAUA,EACVC,eAAgBA,EAChBH,SAAUA,EACVC,WAAYA,IAOhB3B,EAAA79E,UAAA8D,OAAM,eACE46E,EAAa5+E,KAAQ6+E,sBAErBp1D,EAAOyE,EAAAC,sBACXywD,EAAcp5E,KACdo5E,EAAcp5E,WAGXu5E,MAAMH,EAAen1D,EAAS,EAAG,EAAG,QAEpCu0D,QAAO,QACPA,QAAQ,GAAKv0D,EAAQ+F,WAGpBhqB,EAAOikB,EAAQ+F,OAAO7wB,MACtB2hF,EAAY96E,EACZk4E,EAAY19E,KAAQ49E,uBAErBY,uBAAsB,CAAII,EAAcp5E,KAAMo5E,EAAcp5E,WAC5Ds5E,0BAA0BF,QAE1BvW,QAAO,CAAI7iE,EAAO,EAAIk4E,EAAa,GAAIl4E,EAAO,EAAIk4E,EAAa,SAC/DY,MAAK,CAAI94E,EAAMA,QACf+4E,WAAU,CAAI+B,EAAWA,IAWhCvC,EAAA79E,UAAA6+E,MAAK,SAACH,EAAen1D,EAASja,EAAGC,EAAGwkB,OAC9Bt4B,EAAG4kF,EAAQC,EAGf/2D,EAAQwF,aAAagF,EAAY,EAAG,EAAGA,EAAY,EAAG,GAGtDxK,EAAQ7b,UAAU4B,EAAGC,GAErBga,EAAQg3D,gBAEJ3K,EAAM91E,KAAQkmE,WACd4P,IAAW9gE,EAAAA,EACbyU,EAAQi3D,IACN9B,EAAcp5E,KAAO,EACrBo5E,EAAcp5E,KAAO,EAACxF,KACjB69E,QACL,EACA,EAAIjuE,KAAKiM,IACT,YAGIwiE,OACc77E,IADPxC,KACNo+E,SAAsBp+E,KAAQo+E,SAAQp+E,KAAQ69E,YACjDQ,IAAOr+E,KAAU69E,UACnB/H,GAAS,GAENn6E,EAAI,EAAGA,GAAKm6E,EAAQn6E,IACvB4kF,EAAc,EAAJ5kF,EAAQiU,KAAKiM,GAAMi6D,EAASlmE,KAAKiM,GAAK,EAAC7b,KAAQmmE,OACzDqa,EAAU7kF,EAAI,GAAM,EAACqE,KAAQ69E,QAAUQ,EACvC50D,EAAQk3D,OACN/B,EAAcp5E,KAAO,EAAIg7E,EAAU5wE,KAAKD,IAAI4wE,GAC5C3B,EAAcp5E,KAAO,EAAIg7E,EAAU5wE,KAAKC,IAAI0wE,YAKzCvE,MAAK,KACRt9E,EAAKsB,KAAQg8E,MAAM8D,WACT,OAAVphF,IACFA,EAAKkC,EAAA+pB,kBAEPlB,EAAQm3D,UAASb,EAAAC,YAAethF,GAChC+qB,EAAQwyD,YAEDI,UACP5yD,EAAQ81D,YAAcX,EAAcW,YACpC91D,EAAQo3D,UAAYjC,EAAciB,YAC9Bp2D,EAAQq3D,aAAelC,EAAce,WACvCl2D,EAAQq3D,YAAYlC,EAAce,UAClCl2D,EAAQm2D,eAAiBhB,EAAcgB,gBAEzCn2D,EAAQ+1D,QAAUZ,EAAcY,QAChC/1D,EAAQg2D,SAAWb,EAAca,SACjCh2D,EAAQi2D,WAAad,EAAcc,WACnCj2D,EAAQjrB,UAEVirB,EAAQs3D,aAOVhD,EAAA79E,UAAA4+E,0BAAyB,SAACF,WACnBX,oBAAmBj+E,KAAQy8E,SAAS,QAChCT,MAAK,KACRt9E,EAAKsB,KAAQg8E,MAAM8D,WAGnBrhE,EAAU,KACE,iBAAL/f,IACTA,EAAKyZ,EAAAc,QAAWva,IAEJ,OAAVA,EACF+f,EAAU,EACD5U,MAAM4B,QAAQ/M,KACvB+f,EAA2B,IAAjB/f,EAAM9C,OAAe8C,EAAM,GAAK,GAE5B,IAAZ+f,EAAa,KAGTgL,EAAOyE,EAAAC,sBACXywD,EAAcp5E,KACdo5E,EAAcp5E,WAEXy4E,oBAAsBx0D,EAAQ+F,YAE9BwxD,wBAAwBpC,EAAen1D,EAAS,EAAG,MAY9Ds0D,EAAA79E,UAAA8gF,wBAAuB,SAACpC,EAAen1D,EAASja,EAAGC,GAEjDga,EAAQ7b,UAAU4B,EAAGC,GAErBga,EAAQg3D,gBAEJ3K,EAAM91E,KAAQkmE,WACd4P,IAAW9gE,EAAAA,EACbyU,EAAQi3D,IACN9B,EAAcp5E,KAAO,EACrBo5E,EAAcp5E,KAAO,EAACxF,KACjB69E,QACL,EACA,EAAIjuE,KAAKiM,IACT,YAGIwiE,OACc77E,IADPxC,KACNo+E,SAAsBp+E,KAAQo+E,SAAQp+E,KAAQ69E,QACjDQ,IAAOr+E,KAAU69E,UACnB/H,GAAS,OAEPn6E,OAAC,EAAE6kF,OAAO,EAAED,OAAM,MACjB5kF,EAAI,EAAGA,GAAKm6E,EAAQn6E,IACvB4kF,EAAc,EAAJ5kF,EAAQiU,KAAKiM,GAAMi6D,EAASlmE,KAAKiM,GAAK,EAAC7b,KAAQmmE,OACzDqa,EAAU7kF,EAAI,GAAM,EAACqE,KAAQ69E,QAAUQ,EACvC50D,EAAQk3D,OACN/B,EAAcp5E,KAAO,EAAIg7E,EAAU5wE,KAAKD,IAAI4wE,GAC5C3B,EAAcp5E,KAAO,EAAIg7E,EAAU5wE,KAAKC,IAAI0wE,IAKlD92D,EAAQm3D,UAAShgF,EAAA+pB,iBACjBlB,EAAQwyD,YACCI,UACP5yD,EAAQ81D,YAAcX,EAAcW,YACpC91D,EAAQo3D,UAAYjC,EAAciB,YAC9BjB,EAAce,WAChBl2D,EAAQq3D,YAAYlC,EAAce,UAClCl2D,EAAQm2D,eAAiBhB,EAAcgB,gBAEzCn2D,EAAQjrB,UAEVirB,EAAQs3D,aAEZhD,EA1gBA,sBA4gBeD,8TC3jBb35C,KAAM,EACNve,QAAS,EACTie,OAAQ,EACRxf,MAAO,EACPyf,MAAO,kKCVN,IAAAhzB,EAAA7V,EAAA,gCAqBHgmF,EAAA,WAGK,SACHC,EAAY/jF,GAIP6C,KACEmhF,SAAWhkF,EAAQshB,QAKrBze,KACEyxD,gBAAkBt0D,EAAQu0D,eAK5B1xD,KACE8sD,UAAY3vD,EAAQuI,SAKtB1F,KACEohF,OAASjkF,EAAQuQ,MAKnB1N,KACEqhF,YAAWzkD,EAAAwsB,OAAUjsD,EAAQuQ,OAK/B1N,KACEshF,cAAgBnkF,EAAQugF,oBAQ/BwD,EAAAhhF,UAAAqR,MAAK,eACG7D,EAAK1N,KAAQ29E,sBACRuD,EAAU,CACnBziE,QAAOze,KAAOwf,aACd9R,MAAO7D,MAAM4B,QAAQiC,GAASA,EAAMrH,QAAUqH,EAC9ChI,SAAQ1F,KAAO6oC,cACf6oB,eAAc1xD,KAAOu0D,oBACrBmpB,aAAY19E,KAAO49E,kBAAkBv3E,WASzC66E,EAAAhhF,UAAAsf,WAAU,uBACI2hE,UAQdD,EAAAhhF,UAAAq0D,kBAAiB,uBACH9C,iBAQdyvB,EAAAhhF,UAAA2oC,YAAW,uBACGikB,WAQdo0B,EAAAhhF,UAAAy9E,SAAQ,uBACMyD,QAOdF,EAAAhhF,UAAAqhF,cAAa,uBACCF,aAQdH,EAAAhhF,UAAA09E,gBAAe,uBACD0D,eASdJ,EAAAhhF,UAAAw+E,UAAS,gCAUTwC,EAAAhhF,UAAAu8E,SAAQ,SAACxoD,wBAQTitD,EAAAhhF,UAAAy+E,qBAAoB,gCASpBuC,EAAAhhF,UAAA8+E,cAAa,SAAC/qD,UACL,GAOTitD,EAAAhhF,UAAAi/E,cAAa,gCAQb+B,EAAAhhF,UAAA++E,aAAY,gCAQZiC,EAAAhhF,UAAAg/E,yBAAwB,gCASxBgC,EAAAhhF,UAAAk/E,UAAS,gCAST8B,EAAAhhF,UAAAoT,QAAO,gCAUP4tE,EAAAhhF,UAAAigB,WAAU,SAAC1B,QACJ0iE,SAAW1iE,GASlByiE,EAAAhhF,UAAAs0D,kBAAiB,SAAC9C,QACXD,gBAAkBC,GASzBwvB,EAAAhhF,UAAA+nC,YAAW,SAACviC,QACLonD,UAAYpnD,GAQnBw7E,EAAAhhF,UAAAshF,SAAQ,SAAC9zE,QACF0zE,OAAS1zE,OACT2zE,YAAWzkD,EAAAwsB,OAAU17C,IAO5BwzE,EAAAhhF,UAAAm/E,kBAAiB,SAAC/8D,iBAQlB4+D,EAAAhhF,UAAAkkC,KAAI,yBAQJ88C,EAAAhhF,UAAAo/E,oBAAmB,SAACh9D,iBAGtB4+D,EA7PA,aA+PeD,mNCjQZ/3E,EAAAF,OAAAzN,EAAA,eAAA,IACaykF,IApBb,IAAA7nE,EAAAld,EAAA,uBAoBa+kF,EAAYthF,UACtBmL,MAAM4B,QAAQ/M,GAAKyZ,EAAAjK,SACLxP,GAETA,uLCXR,IACH+iF,EAAA,WAGK,SACHC,EAAYlqD,OACJr6B,EAAUq6B,GAAW,GAKxBx3B,KACE2hF,YAA2Bn/E,IAAlBrF,EAAQuB,MAAsBvB,EAAQuB,MAAQ,YAQ9DgjF,EAAAxhF,UAAAqR,MAAK,eACG7S,EAAKsB,KAAQ8/E,sBACR4B,EAAI,CACbhjF,MAAOmL,MAAM4B,QAAQ/M,GAASA,EAAM2H,QAAU3H,QAAS8D,KAS3Dk/E,EAAAxhF,UAAA4/E,SAAQ,uBACM6B,QASdD,EAAAxhF,UAAA0hF,SAAQ,SAACljF,QACFijF,OAASjjF,GAElBgjF,EA5CA,aA8CeD,iKCpCZ,IACHhjF,EAAA,WAGK,SACHojF,EAAYrqD,OACJr6B,EAAUq6B,GAAW,GAKxBx3B,KACE2hF,YAA2Bn/E,IAAlBrF,EAAQuB,MAAsBvB,EAAQuB,MAAQ,KAKzDsB,KACE8hF,SAAW3kF,EAAQqiF,QAKrBx/E,KACE+hF,eAAiCv/E,IAArBrF,EAAQwiF,SAAyBxiF,EAAQwiF,SAAW,KAKlE3/E,KACEgiF,gBAAkB7kF,EAAQyiF,eAK5B5/E,KACEiiF,UAAY9kF,EAAQsiF,SAKtBz/E,KACEkiF,YAAc/kF,EAAQuiF,WAKxB1/E,KACEmiF,OAAShlF,EAAQwB,aAQxBkjF,EAAA3hF,UAAAqR,MAAK,eACG7S,EAAKsB,KAAQ8/E,sBACR+B,EAAM,CACfnjF,MAAOmL,MAAM4B,QAAQ/M,GAASA,EAAM2H,QAAU3H,QAAS8D,EACvDg9E,QAAOx/E,KAAOogF,aACdT,SAAQ3/E,KAAOigF,cAAWjgF,KAAUigF,cAAc55E,aAAU7D,EAC5Do9E,eAAc5/E,KAAOkgF,oBACrBT,SAAQz/E,KAAOmgF,cACfT,WAAU1/E,KAAOqgF,gBACjB1hF,MAAKqB,KAAO4G,cAShBi7E,EAAA3hF,UAAA4/E,SAAQ,uBACM6B,QAQdE,EAAA3hF,UAAAkgF,WAAU,uBACI0B,UAQdD,EAAA3hF,UAAA+/E,YAAW,uBACG8B,WAQdF,EAAA3hF,UAAAggF,kBAAiB,uBACH8B,iBAQdH,EAAA3hF,UAAAigF,YAAW,uBACG8B,WAQdJ,EAAA3hF,UAAAmgF,cAAa,uBACC6B,aAQdL,EAAA3hF,UAAA0G,SAAQ,uBACMu7E,QASdN,EAAA3hF,UAAA0hF,SAAQ,SAACljF,QACFijF,OAASjjF,GAShBmjF,EAAA3hF,UAAAkiF,WAAU,SAAC5C,QACJsC,SAAWtC,GAelBqC,EAAA3hF,UAAA4gF,YAAW,SAACnB,QACLoC,UAAYpC,GASnBkC,EAAA3hF,UAAAmiF,kBAAiB,SAACzC,QACXoC,gBAAkBpC,GASzBiC,EAAA3hF,UAAAoiF,YAAW,SAAC7C,QACLwC,UAAYxC,GASnBoC,EAAA3hF,UAAAqiF,cAAa,SAAC7C,QACPwC,YAAcxC,GASrBmC,EAAA3hF,UAAAsiF,SAAQ,SAAC7jF,QACFwjF,OAASxjF,GAElBkjF,EA9MA,aAgNepjF,yKCzOZ,MAAAgkF,EAAAxnF,EAAA,00BA4CHynF,EAAA,SAAArjF,GAGK,SACHsjF,EAAYC,OAAZpiF,EACEnB,EAAAU,KAAAC,KAAM4iF,IAAW5iF,YAGjBQ,EAAKqiF,6BAA+BriF,EAAKsiF,wBAAwB7hF,KAAKT,GAKtEA,EAAKuiF,wBAMLviF,EAAKwiF,QAAS,EAKdxiF,EAAKyiF,uBAAyB,KAK9BziF,EAAK0iF,kBAAoB,KAMzB1iF,EAAK2iF,mBAAoB,EAMzB3iF,EAAK4iF,oBAAsBx/B,IAM3BpjD,EAAK6iF,gBAAe18E,EAAAkL,cAMpBrR,EAAK8iF,kBAML9iF,EAAK+iF,gBAAkB,KAMvB/iF,EAAKgjF,oBAAsB,KAM3BhjF,EAAKijF,qBAAuB,KAM5BjjF,EAAKkjF,aAAe,KAMpBljF,EAAKmjF,oBAAqB,EAK1BnjF,EAAKojF,uBAAyB,KAM9BpjF,EAAKqjF,UAAW,WA9FoB5jF,EAAA0iF,EAAAtjF,GAuGtCsjF,EAAAziF,UAAA4jF,aAAY,SAACjlF,EAAQwP,EAAWoQ,GAC1BA,EAAU,IACZ5f,EAAS,MAEXQ,EAAAa,UAAM4jF,aAAY/jF,KAAAC,KAACnB,EAAQwP,EAAWoQ,IAQxCkkE,EAAAziF,UAAA6jF,aAAY,SAACC,EAAe7hF,EAAY8hF,OAChCjwE,EAAS7R,EAAW6R,OACpB3Q,EAAYlB,EAAWkB,UACvBrE,EAASqE,EAAUrE,OACnByG,EAAapC,EAAUoC,WACvB9H,EAAa0F,EAAU1F,WACvB+H,EAAWrC,EAAUqC,SACrBc,EAAmB7I,EAAW8I,YAC9By9E,EAAYlkF,KAAQmkF,WAAWj9E,YAC/B+sB,EAAa9xB,EAAW8xB,WACxB8G,EAAY54B,EAAW44B,UACvBqpD,IACJrpD,EAASC,EAAAz+B,QAAU0+B,YAAcF,EAASC,EAAAz+B,QAAU2+B,cAEhDzR,EAAOzpB,KAAQypB,QACf9qB,EAAQiR,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKyuB,GACxC3yB,EAASsO,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKyuB,GAEzCod,EAAa6yC,EAAa98E,YAAczJ,EAAW4I,WACnDG,EAAa2qC,EAAU1qC,EAAAC,SAAYJ,GAAoB,KACvD69E,EAAWhzC,EACbzhC,KAAK0X,MAAMtT,EAAO,GAAKxN,EAAiB,IAAME,GAAc,EAC5D,EACA49E,EAAQjzC,EACRzhC,KAAKqI,OAAOjE,EAAO,GAAKxN,EAAiB,IAAME,GAC/C,SAEI2H,EAASrO,KAAQukF,mBACrBvlF,EACAyG,EACAC,EACAuuB,EACAt1B,EACA2C,EACAgjF,EAAQ59E,GAEVs9E,EAAcQ,QACZ/6D,EACA,EACApb,EACA3I,EACA0+E,OACA5hF,EACAyhF,WAEOK,EAAQD,IAOrB1B,EAAAziF,UAAAgE,gBAAe,SAAC/B,QACLyhF,wBAAsB5jF,KACxB+jF,aAAY/jF,KACV4jF,uBACLzhF,EACAA,EAAW66B,gBAWjB2lD,EAAAziF,UAAA2C,YAAW,SAACV,EAAYtD,OAChBo1B,EAAa9xB,EAAW8xB,WACxBxwB,EAAatB,EAAWc,iBAAiBd,EAAWuB,6BAG3C+gF,eAAgB,EAAIxwD,EAAY,EAAIA,sBAClCzK,sBAAqBxpB,KAAOykF,oBAEvCC,EAAej1D,EAAAvhB,SAAAlO,KAA0BykF,qBAE1CX,aAAajlF,EAAQ6lF,EAAiBjhF,EAAWgb,aAChDgL,EAAOzpB,KAAQypB,QACf+F,EAAS/F,EAAQ+F,OAEjBm1D,EAAW3kF,KAAQ0jF,aACnBE,EAAsB5jF,KAAQ4jF,4BAEhCe,GAAeA,EAAYjxE,cAC3BkwE,GAA0BA,EAAuBlwE,uBAEzCkxE,iBAAmBp1D,EAAO7wB,MAAQ,IAC1C6wB,EAAO7wB,MAAQ,QAELgD,cAIRhD,EAAQiR,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKyuB,GACxC3yB,EAASsO,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKyuB,GAC3CzE,EAAO7wB,OAASA,GAAS6wB,EAAOluB,QAAUA,GAC5CkuB,EAAO7wB,MAAQA,EACf6wB,EAAOluB,OAASA,EACZkuB,EAAOnxB,MAAMgQ,YAAcq2E,IAC7Bl1D,EAAOnxB,MAAMgQ,UAAYq2E,SAEZE,iBACfn7D,EAAQo7D,UAAU,EAAG,EAAGlmF,EAAO2C,QAG5BwjF,UAAUr7D,EAAStnB,OAElBkB,EAAYlB,EAAWkB,UACvB1F,EAAa0F,EAAU1F,WAGzBonF,GAAU,KACVthF,EAAWuQ,QAAMhU,KAAS6jF,SAAQ,KAC9BmB,EAAW/rD,EAAAgO,eAAkBxjC,EAAWuQ,OAAQrW,IACtDonF,GAAOp+E,EAAA+K,eACWszE,EAAa7iF,EAAW6R,SAAMrN,EAAA8M,WAC7BuxE,EAAa7iF,EAAW6R,UAChChU,KACJilF,cAAcx7D,EAAStnB,EAAY6iF,QAIvCjB,aAAaY,EAAaxiF,GAE3B4iF,GACFt7D,EAAQ6F,eAGL41D,WAAWz7D,EAAStnB,OAEnBsc,EAAUhb,EAAWgb,QACrB9c,EAAS3B,KAAQ2B,iBACnB8c,IAAYkf,WAAWh8B,EAAUtD,MAAMogB,WACzC9c,EAAUtD,MAAMogB,QAAsB,IAAZA,EAAa,GAAQtR,OAAOsR,SAG/C6kE,oBAAsBjgF,EAAUqC,gBAClC49E,kBAAoBjgF,EAAUqC,cAC9Bu9E,uBAAyB,WAEpBthF,WAQdghF,EAAAziF,UAAAwd,YAAW,SAACnZ,cACCoZ,QAIN,SACO9hB,YACEonF,yBAAsBjjF,KAAU+iF,wBAAuB,KACzDv9E,EAAI,MAASikB,QAAQ+F,OAAO7wB,WAAY8qB,QAAQ+F,OAAOluB,qBAClDmjF,eAAgBj/E,OACrBxG,EAAMgB,KAAQujF,gBACd99E,EAAUzF,KAAQojF,oBAClB19E,EAAQ1F,KAAQsjF,kBAChB3lF,EAAUqC,KAAQwjF,oBAClBxvE,EAAMhU,KAAQqjF,gBACd/lF,EAAK0C,KAAQmkF,WACbvpC,EAAU,GACVj8C,EAAQ6G,EAAK,GAAC2/E,EAAAC,sBACd9jF,EAASkE,EAAK,GAAC2/E,EAAAC,sBACrBxqC,EAAW32C,KAAIjE,KACRukF,mBACHvlF,EACAyG,EACAC,EAAQy/E,EAAAC,sBAERzmF,EACA2C,EACA,GACA+E,aAEE7J,EAASc,EAAM4J,YACfV,EAAmB7I,EAAW8I,eAElCjK,EAAO4K,YACPzJ,EAAW4I,aAAQI,EAAA+K,eACHlL,EAAkBwN,GAAM,SAEpCsD,EAAStD,EAAO,GACdtN,EAAUC,EAAAC,SAAYJ,GACxB89E,EAAQ,EACR91D,OAAO,EACJlX,EAAS9Q,EAAiB,IAE/BgoB,EAAU9nB,IADR49E,EAEF1pC,EAAW32C,KAAIjE,KACRukF,mBACHvlF,EACAyG,EACAC,EAAQy/E,EAAAC,sBAERzmF,EACA2C,EACAktB,GACAnoB,SAEJiR,GAAU5Q,MAEZ49E,EAAQ,EACRhtE,EAAStD,EAAO,GACTsD,EAAS9Q,EAAiB,IAE/BgoB,EAAU9nB,IADR49E,EAEF1pC,EAAW32C,KAAIjE,KACRukF,mBACHvlF,EACAyG,EACAC,EAAQy/E,EAAAC,sBAERzmF,EACA2C,EACAktB,GACAnoB,SAEJiR,GAAU5Q,OAITu8E,uBAAsBkC,EAAAE,4BACzB7/E,EACAo1C,EAAU56C,KACLkjF,kBACL5lF,EAAMy1E,mBACN/+D,EACAvO,EACAC,GAGJ7J,EAAOspF,EAAAG,UACK/gF,EAAKvE,KAAOkjF,kBAAiBljF,KAAOijF,0BAEhDhiF,KAAIjB,QAaV2iF,EAAAziF,UAAAyF,2BAA0B,SACxBC,EACAzD,EACAqC,EACAC,EACAqC,OALFtG,EAAAR,aAOY0jF,kBA6CNzmF,EA1CEwI,EAAatD,EAAWkB,UAAUoC,WAClCC,EAAWvD,EAAWkB,UAAUqC,SAChCpI,EAAK0C,KAAQmkF,WAGbxsD,EAAQ,GAQR4tD,EAAe,SAAat/E,EAASC,EAAUwB,OAC7CoB,EAAGgI,EAAA/D,OAAU9G,GACbmkB,EAAQuN,EAAS7uB,MAClBshB,OAcgB,IAAVA,GAAkB1iB,EAAa0iB,EAAM1iB,WAAU,IACrC,IAAfA,SACFiwB,EAAS7uB,IAAO,EAChBhC,EAAQ6E,OAAO7E,EAAQ0+E,YAAYp7D,GAAQ,GACpC3lB,EAASwB,EAAS3I,EAAO4I,GAElCkkB,EAAMlkB,SAAWA,EACjBkkB,EAAM1iB,WAAaA,OArBX,IACW,IAAfA,SACFiwB,EAAS7uB,IAAO,EACTrE,EAASwB,EAAS3I,EAAO4I,GAElCY,EAAQ7C,KACL0zB,EAAS7uB,GAAG,CACX7C,QAASA,EACT3I,MAAOA,EACP4I,SAAUA,EACVwB,WAAYA,EACZjD,SAAUA,MAgBZghF,EAAc,MAAS/B,0BACpBE,wBACP6B,EAAexhF,KAAIjE,KAAM4jF,wBAE3B6B,EAAe99E,MAAI,SAAEq8E,UACX/mF,EAAS+mF,EAAcr+E,2BAC7BC,EACAH,EACAC,EACAlB,EACA+gF,EACAvB,IAAkBxjF,EAAKojF,uBACnBzhF,EAAW66B,cAAciiC,MAAM1+D,KAAG,SAAEo+B,UAASA,EAAKh2B,SAClD,SAID1L,IAMT0lF,EAAAziF,UAAAm8B,mBAAkB,eACV/+B,EAAK0C,KAAQmkF,WACf7mF,EAAMmiB,cAAUzf,KAAW0jF,cAC7BpmF,EAAMkgB,WASVmlE,EAAAziF,UAAA4iF,wBAAuB,SAACv/D,QACjBmiE,2BAQP/C,EAAAziF,UAAA0d,aAAY,SAACzb,OACLygF,EAAW5iF,KAAQmkF,WACnBD,EAAetB,EAAY17E,gBAC5Bg9E,EAAY,OACR,MAGHyB,EAAYxjF,EAAW44B,UAASC,EAAAz+B,QAAU0+B,WAC1C2qD,EAAczjF,EAAW44B,UAASC,EAAAz+B,QAAU2+B,aAC5Co8C,EAAuBsL,EAAY7K,0BACnChJ,EAAyB6T,EAAY5K,qCAGlCgL,SAAW1L,GAAwBqO,IACxC5W,GAA0B6W,cAEvB7C,yBAA0B,GACxB,OAEJA,yBAA0B,MAEzB8C,EAAmB1jF,EAAW6R,OAC9B3Q,EAAYlB,EAAWkB,UACvB1F,EAAa0F,EAAU1F,WACvB8H,EAAapC,EAAUoC,WACvBwuB,EAAa9xB,EAAW8xB,WACxB6xD,EAAsBlD,EAAYxgE,cAClC2jE,EAA0BnD,EAAY/K,kBACxCmO,EAAyBpD,EAAY9K,sBAEVt1E,IAA3BwjF,IACFA,EAAsBC,EAAAC,kBAGlBlnF,EAASqE,EAAUrE,OAAOqH,QAC1B2N,EAAMrN,EAAA2K,OACVu0E,EACAE,EAA0BtgF,GAEtB0gF,EAAW,CAAInyE,EAAO3N,SACtBG,EAAmB7I,EAAW8I,eAGlCy9E,EAAa98E,YACbzJ,EAAW4I,aAAQI,EAAA+K,eACHlL,EAAkBrE,EAAW6R,QAAM,KAO7CtN,EAAUC,EAAAC,SAAYJ,GACtB4/E,EAASx2E,KAAK4F,IAAG7O,EAAAC,SAAUoN,GAAU,EAAGtN,GAC9CsN,EAAO,GAAKxN,EAAiB,GAAK4/E,EAClCpyE,EAAO,GAAKxN,EAAiB,GAAK4/E,UAClBpnF,EAAQrB,OAClB0oF,EAAU1/E,EAAA/I,MAAeuoF,EAAY,GAAIxoF,GAG7C0oF,EAAW,GAAK7/E,EAAiB,IACjC6/E,EAAW,GAAK7/E,EAAiB,GAEjC2/E,EAAYliF,KAAI,CACdoiF,EAAW,GAAK3/E,EAChB2/E,EAAW,GACXA,EAAW,GAAK3/E,EAChB2/E,EAAW,KAGbA,EAAW,GAAK7/E,EAAiB,IACjC6/E,EAAW,GAAK7/E,EAAiB,IAEjC2/E,EAAYliF,KAAI,CACdoiF,EAAW,GAAK3/E,EAChB2/E,EAAW,GACXA,EAAW,GAAK3/E,EAChB2/E,EAAW,cAMTrD,QAAMhjF,KACPojF,qBAAuB39E,GAAUzF,KACjCmjF,mBAAqB2C,GAAmB9lF,KACxCyjF,sBAAwBuC,GAAsBr/E,EAAA+K,eAAA1R,KAC/BqjF,gBAAiBrvE,eAEhC2vE,oBAAqB,GACnB,OAGJD,aAAe,UAEfV,QAAS,MASVsD,EAPE3B,EAAW,IAAA4B,EAAAhqF,QAAA0pF,EAAAO,aACI/gF,EAAYwuB,GAC/BjgB,EACAvO,EACAwuB,QAIOkwD,WAAWvM,iBAClB0O,EAAqB,IAAAC,EAAAhqF,QAAA0pF,EAAAO,aACA/gF,EAAYwuB,GAC/BjgB,EACAvO,EACAwuB,QAKAwyD,EADE54C,EAAc5U,EAAA6U,uBAEhBD,EAAc,SACPlyC,EAAI,EAAG6H,EAAK2iF,EAAYvqF,OAAQD,EAAI6H,IAAM7H,EACjDuoF,EAAawC,aAAYztD,EAAA+b,aACVmxC,EAAYxqF,GAAIgC,GAC7B8H,EACAooC,GAGJ44C,EAAaxtD,EAAAwb,4BAA+B5G,EAAgBlwC,YAEnDhC,EAAI,EAAG6H,EAAK2iF,EAAYvqF,OAAQD,EAAI6H,IAAM7H,EACjDuoF,EAAawC,aAAaP,EAAYxqF,GAAI8J,EAAY9H,OAIpD8iD,EAAgBwlC,EAAAU,oBAA6BlhF,EAAYwuB,GAEzDjwB,EAID,SACOiC,OACJmnE,EACE8P,EACJj3E,EAAQ8sE,oBAAsB6P,EAAY7P,sBACxCmK,IACF9P,EAAS8P,EAAcj3E,EAASR,IAE9B2nE,EAAM,KACFwZ,EAAK5mF,KAAQ6mF,cACjB5gF,EACAw6C,EACA2sB,EACAuX,EACA8B,EACAH,QAEGtD,OAAMhjF,KAAQgjF,QAAU4D,IAE/B3lF,KAAIjB,MAEF8mF,EAAU7tD,EAAA+b,aAAgBhhC,EAAQrW,GAElCg6B,EAAWusD,EAAa6C,oBAAoBD,GAC9Cd,GACFruD,EAASz0B,KAAK8iF,OAEPrqF,EAAI,EAAG6H,EAAKm0B,EAAS/7B,OAAQD,EAAI6H,IAAM7H,EAC9CqI,EAAO2zB,EAASh8B,SAEbunF,kBAAoBvrD,MAEnBqvD,EAA0BrC,EAAYsC,SACtCjD,EAAa,IAAAkD,EAAA3qF,QACjByX,EACAvO,EACAwuB,EACAiwD,EAAaiD,cACbH,EACApE,EAAY/K,0BAGVyO,IAAqBtmF,KAClB4jF,uBAAsB,IAAAsD,EAAA3qF,QACzByX,EACAvO,EACAwuB,EACAiwD,EAAaiD,cACbb,EAAsBW,SACtBrE,EAAY/K,yBAIXuL,oBAAsB39E,OACtB09E,kBAAoB2C,OACpBrC,qBAAuBuC,OACvB3C,gBAAkBrvE,OAClBuvE,gBAAkBvkF,OAClBwkF,oBAAsB7lF,OACtB+lF,aAAeM,OACff,uBAAyB,UAEzBU,oBAAqB,GACnB,GAYThB,EAAAziF,UAAA2mF,cAAa,SACX5gF,EACAw6C,EACA2sB,EACAga,EACA5jC,EACA6jC,OAEKja,EAAM,OACF,MAELt0C,GAAU,KACVjvB,MAAM4B,QAAQ2hE,GAAM,IAAA,IACbzxE,EAAI,EAAG6H,EAAK4pE,EAAOxxE,OAAQD,EAAI6H,IAAM7H,EAC5Cm9B,EAAOmtD,EAAAY,cAEHO,EACAnhF,EACAmnE,EAAOzxE,GACP8kD,EAAgBzgD,KACX6iF,6BACLr/B,EACA6jC,IACGvuD,OAGTA,EAAOmtD,EAAAY,cACLO,EACAnhF,EACAmnE,EACA3sB,EAAgBzgD,KACX6iF,6BACLr/B,EACA6jC,UAGGvuD,GAEX6pD,EA3sBA,sBA6sBeD,8fCzvBZ,IAAA4E,EAAArsF,EAAA,wOAWGssF,EAAkB,QACdC,EAAAjrF,gBACCkrF,EAAAlrF,cACFmrF,EAAAnrF,mBACKorF,EAAAprF,gBACHirF,EAAAjrF,aACHqrF,EAAArrF,SAGRsrF,EAAA,WAMK,SACHC,EAAYzyE,EAAWonC,EAAWh3C,EAAYwuB,GAIzCj0B,KACE+nF,WAAa1yE,EAKfrV,KACEgoF,WAAavrC,EAKfz8C,KACEg0B,YAAcC,EAKhBj0B,KACEioF,YAAcxiF,EAKhBzF,KACEkoF,kBAAiB,UAMxBJ,EAAA5nF,UAAA+mF,OAAM,eACEkB,EAAmB,WACdC,KAAIpoF,KAASkoF,kBAAiB,CACvCC,EAAoBC,GAAQD,EAAoBC,IAAI,OAC9CC,EAAQroF,KAAQkoF,kBAAkBE,WAC7BE,KAAcD,EAAQ,KACzBE,EAAqBF,EAASC,GAAYrB,SAChDkB,EAAoBC,GAAME,GAAcC,UAGrCJ,GAQTL,EAAA5nF,UAAAsoF,WAAU,SAACjnF,EAAQknF,OACXC,OAAuBlmF,IAAXjB,EAAuBA,EAAO2M,WAAQ,IACpDy6E,EAAO3oF,KAAQkoF,kBAAkBQ,QACrBlmF,IAAZmmF,IACFA,EAAO,QACFT,kBAAkBQ,GAAaC,OAElCC,EAASD,EAAQF,QACNjmF,IAAXomF,IAEFA,EAAM,IAAOC,EADOtB,EAAmBkB,IACfzoF,KACjB+nF,WAAU/nF,KACVgoF,WAAUhoF,KACVioF,YAAWjoF,KACXg0B,aAEP20D,EAAQF,GAAeG,UAElBA,GAEXd,EAhFA,aAkFeD,sTCtGZ,MAAAiB,EAAA7tF,EAAA,4wBA6BH8tF,EAAA,SAAA1pF,GAMK,SACH2pF,EAAY3zE,EAAWonC,EAAWh3C,EAAYwuB,OAA9CzzB,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK6U,UAAYA,EAOjB7U,EAAKi8C,UAAYA,EAMjBj8C,EAAKyzB,WAAaA,EAMlBzzB,EAAKyoF,aAAe,EAOpBzoF,EAAKiF,WAAaA,EAMlBjF,EAAK0oF,2BAA6B,KAMlC1oF,EAAK2oF,2BAA6B,KAMlC3oF,EAAK4oF,mBAAqB,KAM1B5oF,EAAK6oF,aAAY,GAMjB7oF,EAAK2G,YAAW,GAMhB3G,EAAK8oF,eAAc,GAMnB9oF,EAAK+oF,yBAAwB,GAM7B/oF,EAAK6e,MAAK,YAxFcpf,EAAA+oF,EAAA3pF,GAgG1B2pF,EAAA9oF,UAAAspF,gBAAe,SAACC,OACRx1D,EAAUj0B,KAAQi0B,kBACH,GAAdA,EACHw1D,EACAA,EAAUlpF,KAAG,SAAWmpF,UACfA,EAAOz1D,MAUtB+0D,EAAA9oF,UAAAypF,2BAA0B,SAAC10E,EAAiBE,WACpCnB,EAAMhU,KAAQ4pF,uBACd7iF,EAAQ/G,KAAQspF,eAChBniF,EAAWnH,KAAQmH,YACrB0iF,EAAQ1iF,EAAYvL,OACfD,EAAI,EAAG6H,EAAKyR,EAAgBrZ,OAAQD,EAAI6H,EAAI7H,GAAKwZ,EACxDpO,EAAS,GAAKkO,EAAgBtZ,GAC9BoL,EAAS,GAAKkO,EAAgBtZ,EAAI,wBACXqY,EAAQjN,KAC7BI,EAAY0iF,KAAW9iF,EAAS,GAChCI,EAAY0iF,KAAW9iF,EAAS,WAG7B8iF,GAaTb,EAAA9oF,UAAA4pF,0BAAyB,SACvB70E,EACAC,EACA7J,EACA8J,EACA40E,EACAC,OAEM7iF,EAAWnH,KAAQmH,YACrB0iF,EAAQ1iF,EAAYvL,OAClBoY,EAAMhU,KAAQ4pF,uBAChBI,IACF90E,GAAUC,OAORxZ,EAAGsuF,EAASC,EALZC,EAAal1E,EAAgBC,GAC7Bk1E,EAAan1E,EAAgBC,EAAS,GACpCm1E,EAASrqF,KAAQspF,eACnBgB,GAAU,MAGT3uF,EAAIuZ,EAASC,EAAQxZ,EAAI0P,EAAK1P,GAAKwZ,EACtCk1E,EAAU,GAAKp1E,EAAgBtZ,GAC/B0uF,EAAU,GAAKp1E,EAAgBtZ,EAAI,IACnCuuF,EAAOvjF,EAAAiL,uBAA0BoC,EAAQq2E,MACzBJ,GACVK,IACFnjF,EAAY0iF,KAAWM,EACvBhjF,EAAY0iF,KAAWO,EACvBE,GAAU,GAEZnjF,EAAY0iF,KAAWQ,EAAU,GACjCljF,EAAY0iF,KAAWQ,EAAU,IACxBH,IAAOz1E,EAAAlY,QAAkBwY,cAClC5N,EAAY0iF,KAAWQ,EAAU,GACjCljF,EAAY0iF,KAAWQ,EAAU,GACjCC,GAAU,GAEVA,GAAU,EAEZH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,SAIPH,GAAUO,GAAY3uF,IAAMuZ,EAASC,KACxChO,EAAY0iF,KAAWM,EACvBhjF,EAAY0iF,KAAWO,GAElBP,GAWTb,EAAA9oF,UAAAqqF,uBAAsB,SAACt1E,EAAiBC,EAAQirC,EAAMhrC,EAAQq1E,WACnD7uF,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAAC,KACrC0P,EAAM80C,EAAKxkD,GACX8uF,EAAUzqF,KAAQ8pF,0BACtB70E,EACAC,EACA7J,EACA8J,GACA,GACA,GAEFq1E,EAAYvmF,KAAKwmF,GACjBv1E,EAAS7J,SAEJ6J,GAQT8zE,EAAA9oF,UAAAwqF,WAAU,SAACxkF,EAAUD,EAASm2E,QACvBuO,cAAczkF,EAAUD,OAIzBgP,EAAiBw1E,EAAYD,EAAaI,EAC1C11E,EAJEhT,EAAOgE,EAASwnC,UAChBv4B,EAASjP,EAASooC,YAClBu8C,EAAY7qF,KAAQmH,YAAYvL,UAGlCsG,GAAIyrC,EAAApxC,QAAiB42C,cAAa,CACpCl+B,EAA+E/O,EAAUo5C,6BACzFsrC,EAAY,OACN9lC,EAAqE5+C,EAAUswE,WACrFthE,EAAS,UACAvZ,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCmvF,EAAM,GACZ51E,EAAMlV,KAAQuqF,uBACZt1E,EACAC,EACA4vC,EAAMnpD,GACNwZ,EACA21E,GAEFF,EAAa3mF,KAAK6mF,QAEfzB,aAAaplF,KAAI,WACF8mF,OAClBF,EACAD,EACA1kF,EACAk2E,EAAQ4O,EAAAnkC,oCAIV3kD,GAAIyrC,EAAApxC,QAAiBy2C,SACrB9wC,GAAIyrC,EAAApxC,QAAiB22C,mBAErBs3C,EAAW,GACXv1E,EACE/S,GAAIyrC,EAAApxC,QAAiBy2C,QACuC9sC,EAAUo5C,6BAClEp5C,EAAS+nC,qBACf/4B,EAAMlV,KAAQuqF,uBACZt1E,EACA,EACwG/O,EAAUs5C,UAClHrqC,EACAq1E,QAEGnB,aAAaplF,KAAI,WACF8mF,OAClBF,EACAL,EACAtkF,EACAk2E,EAAQ4O,EAAArkC,2BAIVzkD,GAAIyrC,EAAApxC,QAAiBu2C,aACrB5wC,GAAIyrC,EAAApxC,QAAiBqxC,QAErB34B,EAAkB/O,EAAS+nC,qBAC3Bw8C,EAAUzqF,KAAQ8pF,0BAChB70E,EACA,EACAA,EAAgBrZ,OAChBuZ,GACA,GACA,QAEGk0E,aAAaplF,KAAI,WACF8mF,OAClBF,EACAJ,EACAvkF,EACAk2E,EAAQ4O,EAAAvkC,sBAGDvkD,GAAIyrC,EAAApxC,QAAiB02C,aAC9Bh+B,EAAkB/O,EAAS+nC,sBAC3Bw8C,EAAUzqF,KAAQ2pF,2BAA2B10E,EAAiBE,IAC7C01E,GAAY7qF,KACtBqpF,aAAaplF,KAAI,WACF8mF,OAClBF,EACAJ,EACAvkF,EACAk2E,EAAQ4O,EAAAvkC,sBAIHvkD,GAAIyrC,EAAApxC,QAAiBs2C,QAC9B59B,EAAkB/O,EAAS+nC,0BACtB9mC,YAAYlD,KAAKgR,EAAgB,GAAIA,EAAgB,IAC1Dw1E,EAAUzqF,KAAQmH,YAAYvL,YACzBytF,aAAaplF,KAAI,WACF8mF,OAClBF,EACAJ,EACAvkF,EACAk2E,UAGC6O,YAAYhlF,IAQnB+iF,EAAA9oF,UAAAyqF,cAAa,SAACzkF,EAAUD,QACjBijF,2BAA0B,WACXgC,eAClBjlF,EACA,EACAC,QAEGmjF,aAAaplF,KAAIjE,KAAMkpF,iCACvBC,2BAA0B,WACX+B,eAClBjlF,EACA,EACAC,QAEGqjF,yBAAyBtlF,KAAIjE,KAAMmpF,6BAM1CH,EAAA9oF,UAAA+mF,OAAM,kBAEFoC,aAAYrpF,KAAOqpF,aACnBE,yBAAwBvpF,KAAOupF,yBAC/BpiF,YAAWnH,KAAOmH,cAOtB6hF,EAAA9oF,UAAAirF,gCAA+B,eAKzBxvF,EAJE4tF,EAAwBvpF,KAAQupF,yBAEtCA,EAAyB6B,cAIrBC,EACAnpF,EAFEgJ,EAAIq+E,EAAyB3tF,OAG/BwP,GAAQ,MACPzP,EAAI,EAAGA,EAAIuP,IAAKvP,GAEnBuG,GADAmpF,EAAc9B,EAAyB5tF,IAC+B,KAC9D2vF,EAAA/uF,QAAsBgvF,aAC5BngF,EAAQzP,EACCuG,GAAIopF,EAAA/uF,QAAsB2uF,iBACnCG,EAAY,GAAK1vF,yBACI4tF,yBAA0Bn+E,EAAOzP,GACtDyP,GAAQ,IASd49E,EAAA9oF,UAAAsrF,mBAAkB,SAAC5K,EAAWrB,OACtBlgE,EAAKrf,KAAQqf,SACfuhE,EAAS,KACL6K,EAAiB7K,EAAUd,WACjCzgE,EAAMuhE,UAASb,EAAAC,YACbyL,GAA+B7qF,EAAA+pB,uBAGjCtL,EAAMuhE,eAAYp+E,KAEhB+8E,EAAW,KACPmM,EAAmBnM,EAAYO,WACrCzgE,EAAMkgE,YAAWQ,EAAAC,YACf0L,GAAmC9qF,EAAAqqB,wBAE/B0gE,EAAqBpM,EAAYa,aACvC/gE,EAAMmgE,aACmBh9E,IAAvBmpF,EAAmCA,EAAkB/qF,EAAAgqB,mBACjDghE,EAAsBrM,EAAYU,cACxC5gE,EAAMsgE,SAAWiM,EACbA,EAAoBvlF,QAAKzF,EAAAiqB,oBAEvBghE,EAA4BtM,EAAYW,oBAC9C7gE,EAAMugE,eAAiBiM,GACMjrF,EAAAkqB,0BAEvBghE,EAAsBvM,EAAYY,cACxC9gE,EAAMogE,cACoBj9E,IAAxBspF,EACIA,EAAmBlrF,EAAAmqB,oBAEnBghE,EAAmBxM,EAAY34E,WACrCyY,EAAMwhE,eACiBr+E,IAArBupF,EAAiCA,EAAgBnrF,EAAAyqB,qBAC7C2gE,EAAwBzM,EAAYc,gBAC1ChhE,EAAMqgE,gBACsBl9E,IAA1BwpF,EACIA,EAAqBprF,EAAAoqB,kBAGvB3L,EAAMwhE,UAAS7gF,KAAQipF,oBACpBA,aAAe5pE,EAAMwhE,eAErBuI,mBAAqB,WAG5B/pE,EAAMkgE,iBAAc/8E,EACpB6c,EAAMmgE,aAAUh9E,EAChB6c,EAAMsgE,SAAW,KACjBtgE,EAAMugE,oBAAiBp9E,EACvB6c,EAAMogE,cAAWj9E,EACjB6c,EAAMwhE,eAAYr+E,EAClB6c,EAAMqgE,gBAAal9E,GAQvBwmF,EAAA9oF,UAAA+rF,WAAU,SAAC5sE,OACHuhE,EAAYvhE,EAAMuhE,UAElBsL,EAAe,WAAsBC,eAAgBvL,SACvC,iBAATA,GAETsL,EAAgBjoF,MAAK,GAEhBioF,GAMTlD,EAAA9oF,UAAAksF,YAAW,SAAC/sE,QACLgqE,aAAaplF,KAAIjE,KAAMqsF,aAAahtE,KAO3C2pE,EAAA9oF,UAAAmsF,aAAY,SAAChtE,oBAESitE,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UAAS7gF,KAAQi0B,WACvB5U,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,gBACD8J,gBAAgBnqE,EAAMsgE,UAC3BtgE,EAAMugE,eAAc5/E,KAAQi0B,aAQhC+0D,EAAA9oF,UAAAqsF,gBAAe,SAACltE,EAAO4sE,OACfrL,EAAYvhE,EAAMuhE,UACJ,iBAATA,GAA0BvhE,EAAMmtE,kBAAoB5L,SAC3Cp+E,IAAdo+E,GAAuB5gF,KACpBqpF,aAAaplF,KAAKgoF,EAAWlsF,KAAIC,KAAOqf,IAE/CA,EAAMmtE,iBAAmB5L,IAQ7BoI,EAAA9oF,UAAAusF,kBAAiB,SAACptE,EAAO+sE,OACjB7M,EAAclgE,EAAMkgE,YACpBC,EAAUngE,EAAMmgE,QAChBG,EAAWtgE,EAAMsgE,SACjBC,EAAiBvgE,EAAMugE,eACvBH,EAAWpgE,EAAMogE,SACjBoB,EAAYxhE,EAAMwhE,UAClBnB,EAAargE,EAAMqgE,YAEvBrgE,EAAMqtE,oBAAsBnN,GAC5BlgE,EAAMstE,gBAAkBnN,GACvBG,GAAYtgE,EAAMutE,kBAAetjF,EAAAS,OACxBsV,EAAMutE,gBAAiBjN,IACjCtgE,EAAMwtE,uBAAyBjN,GAC/BvgE,EAAMytE,iBAAmBrN,GACzBpgE,EAAM0tE,kBAAoBlM,GAC1BxhE,EAAM2tE,mBAAqBtN,UAEPl9E,IAAhB+8E,GACF6M,EAAYrsF,KAAIC,KAAOqf,GAEzBA,EAAMqtE,mBAAqBnN,EAC3BlgE,EAAMstE,eAAiBnN,EACvBngE,EAAMutE,gBAAkBjN,EACxBtgE,EAAMwtE,sBAAwBjN,EAC9BvgE,EAAMytE,gBAAkBrN,EACxBpgE,EAAM0tE,iBAAmBlM,EACzBxhE,EAAM2tE,kBAAoBtN,IAO9BsJ,EAAA9oF,UAAA+qF,YAAW,SAAChlF,QACLijF,2BAA2B,GAAClpF,KAASqpF,aAAaztF,YAClDstF,2BAA6B,UAC7BC,2BAA2B,GAACnpF,KAASupF,yBAAyB3tF,YAC9DutF,2BAA6B,SAC5B8D,EAAsB,WAAsB1B,aAActlF,QAC3DojF,aAAaplF,KAAKgpF,QAClB1D,yBAAyBtlF,KAAKgpF,IAUrCjE,EAAA9oF,UAAA0pF,qBAAoB,oBACRR,0BACHA,mBAAkBziF,EAAA4K,MAAAvR,KAAcy8C,gBAC5BwsC,aAAe,GAAC,KACjBtqF,EAAKqB,KAASyF,YAAUzF,KAASipF,aAAe,GAAM,gBAChDG,mBAAoBzqF,EAAKqB,KAAOopF,gCAGpCA,oBAEhBJ,EAhjBA,sBAkjBeD,0dCvjBFmD,wCAKAgB,2CAKAC,2CAKAC,IAnCV,IACGC,EAAW,CACfnC,eAAgB,EAChBoC,WAAY,EACZ1/C,OAAQ,EACR2/C,WAAY,EACZxC,OAAQ,EACRyC,WAAY,EACZC,WAAY,EACZlC,aAAc,EACdmC,KAAM,EACNC,gBAAiB,EACjBxB,eAAgB,GAChBG,iBAAkB,GAClBsB,OAAQ,IAMG1B,EAAe,CAAImB,EAAYK,MAK/BR,EAAiB,CAAIG,EAAYO,QAKjCT,EAAoB,CAAIE,EAAYC,YAKpCF,EAAoB,CAAIC,EAAYE,sBAElCF,+JClCZ,IACHQ,EAAA,oBAAAC,YAQEA,EAAA5tF,UAAAwqF,WAAU,SAACxkF,EAAUD,EAASm2E,KAO9B0R,EAAA5tF,UAAA6tF,aAAY,SAAC7nF,KAOb4nF,EAAA5tF,UAAA4yE,SAAQ,SAACz0E,KAMTyvF,EAAA5tF,UAAA8tF,WAAU,SAACC,EAAgBhoF,KAM3B6nF,EAAA5tF,UAAAguF,YAAW,SAACjoF,EAAS5H,KAMrByvF,EAAA5tF,UAAAiuF,uBAAsB,SAACC,EAA4BnoF,KAMnD6nF,EAAA5tF,UAAAmuF,eAAc,SAACC,EAAoBroF,KAMnC6nF,EAAA5tF,UAAAquF,oBAAmB,SAACC,EAAyBvoF,KAM7C6nF,EAAA5tF,UAAAuuF,eAAc,SAACC,EAAoBzoF,KAMnC6nF,EAAA5tF,UAAAyuF,iBAAgB,SAACC,EAAsB3oF,KAMvC6nF,EAAA5tF,UAAA2uF,UAAS,SAACC,EAAe7oF,KAMzB6nF,EAAA5tF,UAAA6uF,YAAW,SAACC,EAAiB/oF,KAM7B6nF,EAAA5tF,UAAA+uF,SAAQ,SAAC/oF,EAAUD,KAMnB6nF,EAAA5tF,UAAAsrF,mBAAkB,SAAC5K,EAAWrB,KAM9BuO,EAAA5tF,UAAAgvF,cAAa,SAACC,EAAYC,KAM1BtB,EAAA5tF,UAAAmvF,aAAY,SAACC,EAAWF,KAC1BtB,EArGA,aAuGeD,yKC/GZ,MAAAvG,EAAArsF,EAAA,shBAIHs0F,EAAA,SAAAlwF,GAMK,SACHmwF,EAAYn6E,EAAWonC,EAAWh3C,EAAYwuB,OAA9CzzB,EACEnB,EAAAU,KAAAC,KAAMqV,EAAWonC,EAAWh3C,EAAYwuB,IAAUj0B,YAMlDQ,EAAKivF,mBAAqB,KAM1BjvF,EAAK07E,OAAS,KAMd17E,EAAKkvF,sBAAmBltF,EAMxBhC,EAAKmvF,cAAWntF,EAMhBhC,EAAKovF,cAAWptF,EAMhBhC,EAAKqvF,aAAUrtF,EAMfhC,EAAK2gF,cAAW3+E,EAMhBhC,EAAKsvF,cAAWttF,EAMhBhC,EAAKuvF,cAAWvtF,EAMhBhC,EAAKixD,qBAAkBjvD,EAMvBhC,EAAKssD,eAAYtqD,EAMjBhC,EAAK4gF,YAAS5+E,EAMdhC,EAAK2hF,YAAS3/E,EAOdhC,EAAKwvF,6BAA0BxtF,WA7FFvC,EAAAuvF,EAAAnwF,GAoG/BmwF,EAAAtvF,UAAA2uF,UAAS,SAACC,EAAe7oF,WACbi2E,aAGLyO,cAAcmE,EAAe7oF,OAC5BgP,EAAkB65E,EAAc7gD,qBAChC94B,EAAS25E,EAAcxgD,YACvB2hD,EAAOjwF,KAAQmH,YAAYvL,OAC3BiuF,EAAK7pF,KAAQ2pF,2BAA2B10E,EAAiBE,QAC1Dk0E,aAAaplF,KAAI,WACFwpF,WAClBwC,EACApG,OACK3N,YAEAyT,SAAQ3vF,KAAQ0vF,sBAChBE,SAAQ5vF,KAAQ0vF,iBACrB9/E,KAAK0X,KAAItnB,KAAM6vF,QAAO7vF,KAAQ0vF,uBACzBvO,cACA2O,cACAC,cACAt+B,qBACA3E,gBAEGs0B,OAAO,GAACphF,KAASi0B,WAAUj0B,KAAS0vF,sBACpCtO,OAAO,GAACphF,KAASi0B,WAAUj0B,KAAS0vF,kBAE5C9/E,KAAK0X,KAAItnB,KAAMmiF,OAAMniF,KAAQ0vF,uBACxBM,+BAEFzG,yBAAyBtlF,KAAI,WACdwpF,WAClBwC,EACApG,OACK4F,wBAEAE,cACAC,cACAC,aACA1O,cACA2O,cACAC,cACAt+B,qBACA3E,eACAs0B,YACAe,YACA6N,+BAEF/E,YAAYhlF,KAOnBupF,EAAAtvF,UAAAuuF,eAAc,SAACC,EAAoBzoF,WACvBi2E,aAGLyO,cAAc+D,EAAoBzoF,OACjCgP,EAAkBy5E,EAAmBzgD,qBACrC94B,EAASu5E,EAAmBpgD,YAC5B2hD,EAAOjwF,KAAQmH,YAAYvL,OAC3BiuF,EAAK7pF,KAAQ2pF,2BAA2B10E,EAAiBE,QAC1Dk0E,aAAaplF,KAAI,WACFwpF,WAClBwC,EACApG,OACK3N,YAEAyT,SAAQ3vF,KAAQ0vF,sBAChBE,SAAQ5vF,KAAQ0vF,iBACrB9/E,KAAK0X,KAAItnB,KAAM6vF,QAAO7vF,KAAQ0vF,uBACzBvO,cACA2O,cACAC,cACAt+B,qBACA3E,gBAEGs0B,OAAO,GAACphF,KAASi0B,WAAUj0B,KAAS0vF,sBACpCtO,OAAO,GAACphF,KAASi0B,WAAUj0B,KAAS0vF,kBAE5C9/E,KAAK0X,KAAItnB,KAAMmiF,OAAMniF,KAAQ0vF,uBACxBM,+BAEFzG,yBAAyBtlF,KAAI,WACdwpF,WAClBwC,EACApG,OACK4F,wBAEAE,cACAC,cACAC,aACA1O,cACA2O,cACAC,cACAt+B,qBACA3E,eACAs0B,YACAe,YACA6N,+BAEF/E,YAAYhlF,KAMnBupF,EAAAtvF,UAAA+mF,OAAM,uBACCkE,uCAEAwE,cAAWntF,OACXotF,cAAWptF,OACXitF,mBAAqB,UACrBvT,OAAS,UACTwT,sBAAmBltF,OACnBqtF,aAAUrtF,OACV4+E,YAAS5+E,OACT2+E,cAAW3+E,OACXstF,cAAWttF,OACXutF,cAAWvtF,OACXivD,qBAAkBjvD,OAClBsqD,eAAYtqD,OACZ2/E,YAAS3/E,EACPnD,EAAAa,UAAM+mF,OAAMlnF,KAAAC,OAOrBwvF,EAAAtvF,UAAAgvF,cAAa,SAACC,EAAYe,OAClBlnD,EAASmmD,EAAWzQ,YACpBl5E,EAAO2pF,EAAW77E,UAClB68E,EAAoBhB,EAAWxQ,uBAC/BxC,EAAQgT,EAAW1S,SAAQz8E,KAAMi0B,YACjCm8D,EAASjB,EAAW/P,iBACrBsQ,iBAAmBP,EAAWnQ,cAAah/E,KAAMi0B,iBACjD07D,SAAW3mD,EAAO,QAClB4mD,SAAW5mD,EAAO,QAClBymD,mBAAqBU,OACrBjU,OAASC,OACT0T,QAAUrqF,EAAK,QACf27E,SAAWgO,EAAW3vE,kBACtBswE,SAAWM,EAAO,QAClBL,SAAWK,EAAO,QAClB3+B,gBAAkB09B,EAAW56B,yBAC7BzH,UAAYqiC,EAAWtmD,mBACvBu4C,OAAS+N,EAAW5N,qBACpBY,OAAS38E,EAAK,QACdwqF,wBAA0BE,GAEnCV,EA7PA,sBA+PeD,2NCnQZ,MAAAjI,EAAArsF,EAAA,0iBAQHo1F,EAAA,SAAAhxF,GAMK,SACHixF,EAAYj7E,EAAWonC,EAAWh3C,EAAYwuB,UAC5C50B,EAAAU,KAAAC,KAAMqV,EAAWonC,EAAWh3C,EAAYwuB,IAAUj0B,YARhBC,EAAAqwF,EAAAjxF,GAmBpCixF,EAAApwF,UAAAqwF,qBAAoB,SAACt7E,EAAiBC,EAAQ7J,EAAK8J,OAC3C86E,EAAOjwF,KAAQmH,YAAYvL,OAC3BiuF,EAAK7pF,KAAQ8pF,0BACjB70E,EACAC,EACA7J,EACA8J,GACA,GACA,GAEIq7E,EAAuB,WACT7C,gBAClBsC,EACApG,eAEGR,aAAaplF,KAAKusF,QAClBjH,yBAAyBtlF,KAAKusF,GAC5BnlF,GAOTilF,EAAApwF,UAAAmuF,eAAc,SAACC,EAAoBroF,OAC3BoZ,EAAKrf,KAAQqf,MACbkgE,EAAclgE,EAAMkgE,YACpBsB,EAAYxhE,EAAMwhE,kBACJr+E,IAAhB+8E,QAA2C/8E,IAAdq+E,QAG5B4L,kBAAkBptE,EAAKrf,KAAOosF,kBAC9BzB,cAAc2D,EAAoBroF,QAClCsjF,yBAAyBtlF,KAAI,WAEZqoF,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UACNxhE,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,WAAU9+E,EAAAiqB,gBAAAjqB,EAAAkqB,uBAAAg+D,EAAAqE,0BAMdl4E,EAAkBq5E,EAAmBrgD,qBACrC94B,EAASm5E,EAAmBhgD,iBAC7BiiD,qBACHt7E,EACA,EACAA,EAAgBrZ,OAChBuZ,QAEGo0E,yBAAyBtlF,KAAI6kF,EAAAoE,wBAC7BjC,YAAYhlF,KAOnBqqF,EAAApwF,UAAAquF,oBAAmB,SAACC,EAAyBvoF,OACrCoZ,EAAKrf,KAAQqf,MACbkgE,EAAclgE,EAAMkgE,YACpBsB,EAAYxhE,EAAMwhE,kBACJr+E,IAAhB+8E,QAA2C/8E,IAAdq+E,QAG5B4L,kBAAkBptE,EAAKrf,KAAOosF,kBAC9BzB,cAAc6D,EAAyBvoF,QACvCsjF,yBAAyBtlF,KAAI,WAEZqoF,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UACNxhE,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,WACNrgE,EAAMsgE,SACNtgE,EAAMugE,gDAIJz/B,EAAOquC,EAAwBhvC,UAC/BvqC,EAAkBu5E,EAAwBvgD,qBAC1C94B,EAASq5E,EAAwBlgD,YACnCp5B,EAAS,EACJvZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAC1CuZ,EAAMlV,KAAQuwF,qBACZt7E,EACAC,EACuBirC,EAAKxkD,GAC5BwZ,QAGCo0E,yBAAyBtlF,KAAI6kF,EAAAoE,wBAC7BjC,YAAYhlF,KAMnBqqF,EAAApwF,UAAA+mF,OAAM,eACE5nE,EAAKrf,KAAQqf,aAEG7c,MAApB6c,EAAMoxE,YACNpxE,EAAMoxE,YAAUzwF,KAASmH,YAAYvL,QAAMoE,KAEtCqpF,aAAaplF,KAAI6kF,EAAAoE,wBAEnB/B,uCACA9rE,MAAQ,KACNhgB,EAAAa,UAAM+mF,OAAMlnF,KAAAC,OAMrBswF,EAAApwF,UAAAksF,YAAW,SAAC/sE,GAEY7c,MAApB6c,EAAMoxE,YACNpxE,EAAMoxE,YAAUzwF,KAASmH,YAAYvL,cAEhCytF,aAAaplF,KAAI6kF,EAAAoE,mBACtB7tE,EAAMoxE,WAAUzwF,KAAQmH,YAAYvL,QAEtCyjB,EAAMoxE,WAAa,EACnBpxF,EAAAa,UAAMksF,YAAWrsF,KAAAC,KAACqf,QACbgqE,aAAaplF,KAAI6kF,EAAAqE,uBAE1BmD,EAtJA,sBAwJeD,kPChKZ,MAAA/I,EAAArsF,EAAA,6kBAWHy1F,EAAA,SAAArxF,GAMK,SACHsxF,EAAYt7E,EAAWonC,EAAWh3C,EAAYwuB,UAC5C50B,EAAAU,KAAAC,KAAMqV,EAAWonC,EAAWh3C,EAAYwuB,IAAUj0B,YARnBC,EAAA0wF,EAAAtxF,GAmBjCsxF,EAAAzwF,UAAA0wF,sBAAqB,SAAC37E,EAAiBC,EAAQirC,EAAMhrC,OAC7CkK,EAAKrf,KAAQqf,MACb48D,OAA2Bz5E,IAApB6c,EAAMuhE,UACbpiF,OAA+BgE,IAAtB6c,EAAMkgE,YACfsR,EAAU1wC,EAAKvkD,YAChBytF,aAAaplF,KAAI6kF,EAAAqE,2BACjB5D,yBAAyBtlF,KAAI6kF,EAAAqE,8BACzBxxF,EAAI,EAAGA,EAAIk1F,IAAWl1F,EAAC,KACxB0P,EAAM80C,EAAKxkD,GACXs0F,EAAOjwF,KAAQmH,YAAYvL,OAC3BiuF,EAAK7pF,KAAQ8pF,0BACjB70E,EACAC,EACA7J,EACA8J,GACA,GACC3W,GAEGgyF,EAAuB,WACT7C,gBAClBsC,EACApG,QAEGR,aAAaplF,KAAKusF,QAClBjH,yBAAyBtlF,KAAKusF,GAC/BhyF,SAGG6qF,aAAaplF,KAAI6kF,EAAAsE,2BACjB7D,yBAAyBtlF,KAAI6kF,EAAAsE,uBAEpCl4E,EAAS7J,SAEP4wE,SACGoN,aAAaplF,KAAI6kF,EAAAoD,sBACjB3C,yBAAyBtlF,KAAI6kF,EAAAoD,kBAEhC1tF,SACG6qF,aAAaplF,KAAI6kF,EAAAoE,wBACjB3D,yBAAyBtlF,KAAI6kF,EAAAoE,oBAE7Bh4E,GAOTy7E,EAAAzwF,UAAA8tF,WAAU,SAACC,EAAgBhoF,OACnBoZ,EAAKrf,KAAQqf,MACbuhE,EAAYvhE,EAAMuhE,UAClBrB,EAAclgE,EAAMkgE,oBACR/8E,IAAdo+E,QAA2Cp+E,IAAhB+8E,QAG1BuR,4BACAnG,cAAcsD,EAAgBhoF,QACXzD,IAApB6c,EAAMuhE,WAAuB5gF,KAC1BupF,yBAAyBtlF,KAAI,WACdkoF,eAAcvrF,EAAA+pB,wBAIVnoB,IAAtB6c,EAAMkgE,aAAyBv/E,KAC5BupF,yBAAyBtlF,KAAI,WACdqoF,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UACNxhE,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,WACNrgE,EAAMsgE,SACNtgE,EAAMugE,qBAGJ3qE,EAAkBg5E,EAAehgD,qBACjC94B,EAAS84E,EAAe3/C,YACxB2hD,EAAOjwF,KAAQmH,YAAYvL,YAC5BkuF,0BACH70E,EACA,EACAA,EAAgBrZ,OAChBuZ,GACA,GACA,OAEI47E,EAAiB,WAAsBnjD,OAAQqiD,QAChD5G,aAAaplF,KAAI6kF,EAAAqE,qBAAuB4D,QACxCxH,yBAAyBtlF,KAAI6kF,EAAAqE,qBAAuB4D,QACjCvuF,IAApB6c,EAAMuhE,iBACHyI,aAAaplF,KAAI6kF,EAAAoD,sBACjB3C,yBAAyBtlF,KAAI6kF,EAAAoD,uBAEV1pF,IAAtB6c,EAAMkgE,mBACH8J,aAAaplF,KAAI6kF,EAAAoE,wBACjB3D,yBAAyBtlF,KAAI6kF,EAAAoE,yBAE/BjC,YAAYhlF,KAOnB0qF,EAAAzwF,UAAA6uF,YAAW,SAACC,EAAiB/oF,OACrBoZ,EAAKrf,KAAQqf,MACbuhE,EAAYvhE,EAAMuhE,UAClBrB,EAAclgE,EAAMkgE,oBACR/8E,IAAdo+E,QAA2Cp+E,IAAhB+8E,QAG1BuR,4BACAnG,cAAcqE,EAAiB/oF,QACZzD,IAApB6c,EAAMuhE,WAAuB5gF,KAC1BupF,yBAAyBtlF,KAAI,WACdkoF,eAAcvrF,EAAA+pB,wBAIVnoB,IAAtB6c,EAAMkgE,aAAyBv/E,KAC5BupF,yBAAyBtlF,KAAI,WACdqoF,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UACNxhE,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,WACNrgE,EAAMsgE,SACNtgE,EAAMugE,qBAGJz/B,EAAO6uC,EAAgBxvC,UACvBvqC,EAAkB+5E,EAAgB1vC,6BAClCnqC,EAAS65E,EAAgB1gD,iBAC1BsiD,sBACH37E,EACA,EAC8BkrC,EAC9BhrC,QAEG81E,YAAYhlF,KAOnB0qF,EAAAzwF,UAAAyuF,iBAAgB,SAACC,EAAsB3oF,OAC/BoZ,EAAKrf,KAAQqf,MACbuhE,EAAYvhE,EAAMuhE,UAClBrB,EAAclgE,EAAMkgE,oBACR/8E,IAAdo+E,QAA2Cp+E,IAAhB+8E,QAG1BuR,4BACAnG,cAAciE,EAAsB3oF,QACjBzD,IAApB6c,EAAMuhE,WAAuB5gF,KAC1BupF,yBAAyBtlF,KAAI,WACdkoF,eAAcvrF,EAAA+pB,wBAIVnoB,IAAtB6c,EAAMkgE,aAAyBv/E,KAC5BupF,yBAAyBtlF,KAAI,WACdqoF,iBAClBjtE,EAAMkgE,YACNlgE,EAAMwhE,UACNxhE,EAAMmgE,QACNngE,EAAMogE,SACNpgE,EAAMqgE,WACNrgE,EAAMsgE,SACNtgE,EAAMugE,yBAGJ96B,EAAQ8pC,EAAqBpY,WAC7BvhE,EAAkB25E,EAAqBtvC,6BACvCnqC,EAASy5E,EAAqBtgD,YAChCp5B,EAAS,EACJvZ,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAC3CuZ,EAAMlV,KAAQ4wF,sBACZ37E,EACAC,EACA4vC,EAAMnpD,GACNwZ,QAGC81E,YAAYhlF,KAMnB0qF,EAAAzwF,UAAA+mF,OAAM,gBACCkE,uCACA9rE,MAAQ,SAKPhK,EAASrV,KAAQqV,aACL,IAAdA,UACIlO,EAAWnH,KAAQmH,YAChBxL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,EACjDwL,EAAYxL,GAACilD,EAAAgF,KAASz+C,EAAYxL,GAAI0Z,UAGnChW,EAAAa,UAAM+mF,OAAMlnF,KAAAC,OAMrB2wF,EAAAzwF,UAAA4wF,qBAAoB,eACZzxE,EAAKrf,KAAQqf,WAED7c,IADA6c,EAAMuhE,WACG5gF,KACpBusF,gBAAgBltE,EAAKrf,KAAOisF,iBAETzpF,IAAtB6c,EAAMkgE,aAAyBv/E,KAC5BysF,kBAAkBptE,EAAKrf,KAAOosF,cAGzCuE,EAjPA,sBAmPeD,qTClOFM,IA5BV,MAAA1J,EAAArsF,EAAA,0wBA4BU+1F,EAAU,MACb,MACD,SACG,SACD,QACA,MACF,SACG,WACC,cACG,eACC,UACL,GAGZC,EAAA,SAAA5xF,GAMK,SACH6xF,EAAY77E,EAAWonC,EAAWh3C,EAAYwuB,OAA9CzzB,EACEnB,EAAAU,KAAAC,KAAMqV,EAAWonC,EAAWh3C,EAAYwuB,IAAUj0B,YAMlDQ,EAAK2wF,QAAU,KAMf3wF,EAAK87E,MAAK,GAMV97E,EAAK4wF,aAAe,EAMpB5wF,EAAK6wF,aAAe,EAMpB7wF,EAAK8wF,yBAAsB9uF,EAM3BhC,EAAK+wF,cAAgB,EAMrB/wF,EAAKgxF,eAAiB,KAKtBhxF,EAAKixF,WAAU,GAMfjxF,EAAKkxF,iBAAmB,KAKxBlxF,EAAKmxF,aAAY,GAMjBnxF,EAAKoxF,WAAU,GAKfpxF,EAAKqxF,WAAU,GAMfrxF,EAAKsxF,SAAQ,GAMbtxF,EAAKuxF,SAAQ,GAMbvxF,EAAKwxF,WAAU,GAOfxxF,EAAKwvF,6BAA0BxtF,WAtGHvC,EAAAixF,EAAA7xF,GA4G9B6xF,EAAAhxF,UAAA+mF,OAAM,eACEoC,EAAehqF,EAAAa,UAAM+mF,OAAMlnF,KAAAC,aACjCqpF,EAAawI,WAAU7xF,KAAQ6xF,WAC/BxI,EAAaoI,WAAUzxF,KAAQyxF,WAC/BpI,EAAasI,aAAY3xF,KAAQ2xF,aAC1BtI,GAOT6H,EAAAhxF,UAAA+uF,SAAQ,SAAC/oF,EAAUD,OACXgsF,EAASjyF,KAAQwxF,eACjBU,EAAWlyF,KAAQ0xF,iBACnBS,EAASnyF,KAAQ4xF,cACT,UAALtV,OAAiB6V,IAAeF,GAAcC,QAIjD/qF,EAAWnH,KAAQmH,YACrBiE,EAAQjE,EAAYvL,OAElBw2F,EAAelsF,EAASwnC,UAC1Bz4B,EAAkB,KAClBE,EAASjP,EAASooC,eAGpB6jD,EAAUE,YAASC,EAAA/1F,QAAmBg2F,MACrCH,GAAYzkD,EAAApxC,QAAiBu2C,aAC5Bs/C,GAAYzkD,EAAApxC,QAAiB22C,mBAC7Bk/C,GAAYzkD,EAAApxC,QAAiBy2C,SAC7Bo/C,GAAYzkD,EAAApxC,QAAiB42C,mBAkD3Bq/C,EAAiBL,EAAUn9D,SAAW,KAAI,UACtCo9D,kBACYv/C,qBACAI,YAChBh+B,EAA6E/O,EAAU+nC,0CAEvE6E,YAChB79B,EAA6E/O,EAAU4tE,uCAEvElmC,OAChB34B,EAAyE/O,EAAU4M,iCAEnEogC,kBAChBj+B,EAAkF/O,EAAUkvE,mBAC5FjgE,EAAS,uBAEO69B,QAChB/9B,EAA0E/O,EAAUu5C,uBAC/E0yC,EAAUn9D,UACbw9D,EAAevuF,KAAKgR,EAAgB,GAACjV,KAASyF,YAEhD0P,EAAS,uBAEOg+B,kBACVyU,EAA8E1hD,EAAUuwE,wBAC9FxhE,EAAe,OACNtZ,EAAI,EAAG6H,EAAKokD,EAAehsD,OAAQD,EAAI6H,EAAI7H,GAAK,EAClDw2F,EAAUn9D,UACbw9D,EAAevuF,KAAK2jD,EAAejsD,EAAI,GAACqE,KAASyF,YAEnDwP,EAAgBhR,KAAK2jD,EAAejsD,GAAIisD,EAAejsD,EAAI,OAE9B,IAA3BsZ,EAAgBrZ,OAAY,OAGhCuZ,EAAS,MAIP9J,EAAGrL,KAAQ2pF,2BAA2B10E,EAAiBE,MACjD/J,EAAK,UAIfonF,IACCnnF,EAAMD,GAAS,GAAM6J,EAAgBrZ,OAASuZ,EAAM,KAEjDs9E,EAAMrnF,EAAQ,EAClBonF,EAAiBA,EAAetnD,QAAM,SAAErc,EAAGpnB,OACnCirF,EACJvrF,EAAwB,GAAXsrF,EAAMhrF,MAAYwN,EAAgBxN,EAAI0N,IACnDhO,EAAwB,GAAXsrF,EAAMhrF,GAAS,KAAOwN,EAAgBxN,EAAI0N,EAAS,UAC7Du9E,KACDD,EAEGC,UAINC,mBAEDR,EAAUS,gBAAkBT,EAAUU,yBACnCrH,mBACH2G,EAAUS,eACVT,EAAUU,kBAERV,EAAUS,sBACPrG,gBAAevsF,KAAMqf,MAAKrf,KAAOisF,iBACjC1C,yBAAyBtlF,KAAIjE,KAAMisF,WAAUjsF,KAAMqf,SAEtD8yE,EAAUU,wBACPpG,kBAAiBzsF,KAAMqf,MAAKrf,KAAOosF,kBACnC7C,yBAAyBtlF,KAAIjE,KAAMqsF,aAAYrsF,KAAMqf,eAIzDsrE,cAAczkF,EAAUD,OAGzB6nB,EAAUqkE,EAAUrkE,WAEtBA,GAAOltB,EAAAwqB,iBACN+mE,EAAUzkF,MAAM,GAAK,GAAKykF,EAAUzkF,MAAM,GAAK,GAAC,KAE7ColF,EAAKX,EAAUrkE,QAAQ,GACvBytD,EAAK4W,EAAUrkE,QAAQ,GACvBilE,EAAKZ,EAAUrkE,QAAQ,GACvBklE,EAAKb,EAAUrkE,QAAQ,GACvBqkE,EAAUzkF,MAAM,GAAK,IACvB6tE,GAAMA,EACNyX,GAAMA,GAEJb,EAAUzkF,MAAM,GAAK,IACvBolF,GAAMA,EACNC,GAAMA,GAERjlE,EAAO,CAAIglE,EAAIvX,EAAIwX,EAAIC,OAMnBC,EAAUjzF,KAAQi0B,gBACnBo1D,aAAaplF,KAAI,WACFwpF,WAClBriF,EACAC,EACA,KACAu4C,IACAA,IACAA,IACA,EACA,EACA,OACK0tC,yBACAC,eACJ,EAAG,GACJ3tC,SACKosC,wBACLliE,GAAOltB,EAAAwqB,eAAAxqB,EAAAwqB,eAEH0C,EAAQvtB,KAAG,SAAWo4E,UACbA,EAAIsa,OAEfd,EAAUS,iBACVT,EAAUU,sBACPvW,WACAwV,cACAE,gBACAD,cACAX,kBACAC,aACLmB,QAEI9kF,EAAQ,EAAIulF,OACb1J,yBAAyBtlF,KAAI,WACdwpF,WAClBriF,EACAC,EACA,KACAu4C,IACAA,IACAA,IACA,EACA,EACA,OACK0tC,yBACAC,eACJ7jF,EAAOA,GACRk2C,SACKosC,wBACLliE,IACEqkE,EAAUS,iBACVT,EAAUU,sBACPvW,WACAwV,cACAE,gBACAD,cACAX,kBACAC,aACLmB,SAGGvH,YAAYhlF,OArN2B,uBAEvB2jF,uBAAwB1jF,EAASO,aAAS,WAG3D05C,OAAI,KACRlrC,EAAkB/O,EAAS+nC,qBACvBmkD,GAAYzkD,EAAApxC,QAAiBu2C,YAC/BqN,EAAI,CAAIlrC,EAAgBrZ,gBACfw2F,GAAYzkD,EAAApxC,QAAiB22C,kBACtCiN,EAAuEj6C,EAAUs5C,kBACxE4yC,GAAYzkD,EAAApxC,QAAiBy2C,QACtCmN,EAA+Dj6C,EAC5Ds5C,UACAn5C,MAAM,EAAG,WACH+rF,GAAYzkD,EAAApxC,QAAiB42C,cAAa,KAC7C2R,EAAqE5+C,EAAUswE,WACrFr2B,EAAI,WACKxkD,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAC3CwkD,EAAKl8C,KAAK6gD,EAAMnpD,GAAG,SAGlBgvF,cAAczkF,EAAUD,WACvBitF,EAAYf,EAAUe,UACxBC,EAAa,EACbC,OAAO,EACFlf,EAAI,EAAGmf,EAAKlzC,EAAKvkD,OAAQs4E,EAAImf,IAAMnf,EAAC,IAC1B1xE,MAAb0wF,EAAsB,KAClBI,EAAKC,EAAAC,cACTrB,EAAUsB,SACVx+E,EACAk+E,EACAhzC,EAAK+zB,GACL/+D,GAEFg+E,EAAaG,EAAM,GACnBF,EAAUE,EAAM,QAEhBF,EAAUjzC,EAAK+zB,WAERv4E,EAAIw3F,EAAYx3F,EAAIy3F,EAASz3F,GAAKwZ,EACzChO,EAAYlD,KAAKgR,EAAgBtZ,GAAIsZ,EAAgBtZ,EAAI,QAErD0P,EAAMlE,EAAYvL,OACxBu3F,EAAahzC,EAAK+zB,QACbwf,WAAWtoF,EAAOC,GACvBD,EAAQC,OAEL4/E,YAAYhlF,MA4KrBirF,EAAAhxF,UAAAyyF,gBAAe,eACPT,EAAWlyF,KAAQ0xF,iBACnBS,EAASnyF,KAAQ4xF,WACjBK,EAASjyF,KAAQwxF,eAEjBmC,EAAS3zF,KAAQgyF,WACnBE,IACIyB,KAAS3zF,KAAS2xF,eAAY3xF,KAC7B2xF,aAAagC,GAAS,CACzBpU,YAAa2S,EAAY3S,YACzBC,QAAS0S,EAAY1S,QACrBI,eAAgBsS,EAAYtS,eAC5BiB,UAAWqR,EAAYrR,UACvBpB,SAAUyS,EAAYzS,SACtBC,WAAYwS,EAAYxS,WACxBC,SAAUuS,EAAYvS,gBAItBiU,EAAO5zF,KAAQ8xF,SACf8B,KAAO5zF,KAAS6xF,aAAU7xF,KACzB6xF,WAAW+B,GAAO,CACrBzmE,KAAMglE,EAAUhlE,KAChB+lE,UAAWf,EAAUe,WAAStyF,EAAAsqB,iBAC9B2oE,aAAc1B,EAAU0B,cAAYjzF,EAAAuqB,oBACpCzd,MAAOykF,EAAUzkF,YAGfomF,EAAO9zF,KAAQ+xF,SACjBE,IACI6B,KAAO9zF,KAASyxF,aAAUzxF,KACzByxF,WAAWqC,GAAO,CACrBlT,UAAWqR,EAAUrR,cAW7BsQ,EAAAhxF,UAAAwzF,WAAU,SAACtoF,EAAOC,OACV6mF,EAAWlyF,KAAQ0xF,iBACnBS,EAASnyF,KAAQ4xF,WAEjB+B,EAAS3zF,KAAQgyF,WACjB4B,EAAO5zF,KAAQ8xF,SACfgC,EAAO9zF,KAAQ+xF,cAChBY,sBAEC1+D,EAAUj0B,KAAQi0B,WAClB8/D,EAAW/C,EAAWmB,EAAU0B,cAEhCplE,EAAOzuB,KAAQqxF,aAAep9D,EAC9Bj3B,EAAIgD,KAAQs8E,MACZuD,EAAcqS,EACfA,EAAYrR,UAAYjxE,KAAK0F,IAAI68E,EAAUzkF,MAAM,IAAO,EACzD,OAEC27E,aAAaplF,KAAI,WACFupF,WAClBpiF,EACAC,EACA0oF,EACA5B,EAAUn9D,SACV8+D,EACA3B,EAAUsB,SACVx/D,EACAxF,EACAklE,EACA9T,EAAc5rD,EACdj3B,EACA42F,EACA,SAEGrK,yBAAyBtlF,KAAI,WACdupF,WAClBpiF,EACAC,EACA0oF,EACA5B,EAAUn9D,SACV8+D,EACA3B,EAAUsB,SACV,EACAhlE,EACAklE,EACA9T,EACA7iF,EACA42F,EACA,EAAI3/D,KAQRi9D,EAAAhxF,UAAAmvF,aAAY,SAACC,EAAWY,OAClBiC,EAAWF,EAAWC,KACrB5C,OAGG0E,EAAgB1E,EAAU9S,UAC3BwX,IAIH/B,EAASjyF,KAAQwxF,kBAEfS,EAAS,QACJT,eAAiBS,GAExBA,EAAUrR,UAASb,EAAAC,YACjBgU,EAAclU,YAAQl/E,EAAA+pB,oBATxBsnE,EAAY,UACPT,eAAiBS,OAYlBgC,EAAkB3E,EAAU5S,eAC7BuX,IAIH/B,EAAWlyF,KAAQ0xF,oBAEjBQ,EAAW,QACNR,iBAAmBQ,OAEpBvS,EAAWsU,EAAgBhU,cAC3BL,EAAiBqU,EAAgB/T,oBACjCW,EAAYoT,EAAgBrtF,WAC5B84E,EAAauU,EAAgB5T,gBACnC6R,EAAY1S,QAAUyU,EAAgB7T,cAAUx/E,EAAAgqB,eAChDsnE,EAAYvS,SAAWA,EAAWA,EAASt5E,QAAKzF,EAAAiqB,gBAChDqnE,EAAYtS,oBACSp9E,IAAnBo9E,EAA4Bh/E,EAAAkqB,sBAA2B80D,EACzDsS,EAAYzS,SAAWwU,EAAgB9T,eAAWv/E,EAAAmqB,gBAClDmnE,EAAYrR,eACIr+E,IAAdq+E,EAAuBjgF,EAAAyqB,iBAAsBw1D,EAC/CqR,EAAYxS,gBACKl9E,IAAfk9E,EAAwB9+E,EAAAoqB,kBAAuB00D,EACjDwS,EAAY3S,YAAWQ,EAAAC,YACrBiU,EAAgBnU,YAAQl/E,EAAAqqB,yBAtB1BinE,EAAc,UACTR,iBAAmBQ,EAyB1BC,EAASnyF,KAAQ4xF,eACXzkE,EAAOmiE,EAAU4E,WAAOtzF,EAAA8pB,2BACjByC,OACPgnE,EAAY7E,EAAU/N,gBAC5B4Q,EAAUn9D,SAAWs6D,EAAU8E,cAC/BjC,EAAUhlE,KAAOA,EACjBglE,EAAUsB,SAAWnE,EAAU+E,cAC/BlC,EAAUE,UAAY/C,EAAUgF,eAChCnC,EAAUe,UAAY5D,EAAUiF,eAChCpC,EAAU0B,aACRvE,EAAUkF,mBAAe5zF,EAAAuqB,oBAC3BgnE,EAAUS,eAAiBtD,EAAUmF,oBACrCtC,EAAUU,iBAAmBvD,EAAUoF,sBACvCvC,EAAUrkE,QAAUwhE,EAAUqF,cAAU/zF,EAAAwqB,eACxC+mE,EAAUzkF,WAAsBlL,IAAd2xF,EAAuB,CAAI,EAAG,GAAKA,MAE/CS,EAActF,EAAUuF,aACxBC,EAAcxF,EAAUyF,aACxBC,EAAqB1F,EAAU/6B,oBAC/B0gC,EAAe3F,EAAUzmD,mBAC1ByzC,MAAQgT,EAAU3S,WAAO,QACzByU,kBAA+B5uF,IAAhBoyF,EAA4B,EAAIA,OAC/CvD,kBAA+B7uF,IAAhBsyF,EAA4B,EAAIA,OAC/CxD,yBACoB9uF,IAAvBwyF,GAA2CA,OACxCzD,mBAAiC/uF,IAAjByyF,EAA6B,EAAIA,OAEjDjD,WAAaE,GACiB,iBAAvBA,EAAY3S,YAChB2S,EAAY3S,YAAWzuE,EAAA/D,OAChBmlF,EAAY3S,cACvB2S,EAAY1S,QACZ0S,EAAYtS,eAAc,IAE1BsS,EAAYrR,UACZqR,EAAYzS,SACZyS,EAAYxS,WAAU,IAEtBwS,EAAYvS,SAASnvE,OAAI,IACtB,QAEFshF,SACHK,EAAUhlE,KACVglE,EAAUzkF,OACTykF,EAAUe,WAAS,MACnBf,EAAU0B,cAAY,UACpB9B,SAAWE,EACc,iBAAnBA,EAAUrR,UACfqR,EAAUrR,UAAS,IAChB9vE,EAAA/D,OAAUklF,EAAUrR,WAAS,QA/F1B5gF,KACPs8E,MAAK,QAiGP0T,wBAA0BE,GAEnCgB,EAjjBA,sBAmjBeD,2bCnlBbp+C,MAAK,QACL0/C,KAAI,iKCAUiB,EAAcC,EAAUx+E,EAAiBC,EAAQ7J,EAAK8J,OAM1DxZ,EAAGu5F,EAAKC,EAAK3+E,EAAII,EAAIw+E,EAAKC,EAAKC,EAAKC,EAL1CC,EAAatgF,EACbugF,EAAWvgF,EACXwgF,EAAS,EACTluF,EAAI,EACJ0P,EAAQhC,MAEPvZ,EAAIuZ,EAAQvZ,EAAI0P,EAAK1P,GAAKwZ,EAAM,KAC7BsB,EAAKxB,EAAgBtZ,GACrBkb,EAAK5B,EAAgBtZ,EAAI,QACpB6G,IAAPgU,IACF8+E,EAAM7+E,EAAKD,EACX++E,EAAM1+E,EAAKD,EACXu+E,EAAMvlF,KAAK8W,KAAK4uE,EAAMA,EAAMC,EAAMA,QACtB/yF,IAAR4yF,IACF5tF,GAAK0tF,EACEtlF,KAAK+lF,MAAMP,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IACvC1B,IACLjsF,EAAIkuF,IACNA,EAASluF,EACTguF,EAAat+E,EACbu+E,EAAW95F,GAEb6L,EAAI,EACJ0P,EAAQvb,EAAIwZ,IAGhB+/E,EAAMC,EACNC,EAAME,EACND,EAAME,GAER/+E,EAAKC,EACLG,EAAKC,SAEPrP,GAAK2tF,GACMO,EAAM,CAAIx+E,EAAOvb,IAAM65F,EAAYC,0BApC7CvsF,EAAAF,OAAAzN,EAAA,iBAAA,IACai4F,2KCXb,MAAA3uF,EAAA5J,EAAA,orBAuBH26F,EAAA,SAAAv2F,GAGK,SACHw2F,EAAYv4F,OAAZkD,EACEnB,EAAAU,KAAAC,KAAM1C,IAAK0C,YAMXQ,EAAKmB,UAAY,KAMjBnB,EAAKs1F,mBAQLt1F,EAAKu1F,cAAatmE,EAAAriB,SAQlB5M,EAAKikF,eAAch1D,EAAAriB,SAQnB5M,EAAKgpB,sBAAqBiG,EAAAriB,SAK1B5M,EAAKipB,QAAU,KAKfjpB,EAAKokF,iBAAkB,WAnDO3kF,EAAA41F,EAAAx2F,GA4DhCw2F,EAAA31F,UAAA4jF,aAAY,SAACjlF,EAAQwP,EAAWoQ,OAE1B9c,EAAW8nB,EADTusE,EAAch2F,KAAQmkF,WAAWhlE,eAGrCtgB,GACoB,KAApBA,EAAOR,MAAMogB,SACb5f,EAAO2C,YAAcw0F,KAEfxmE,EAAS3wB,EAAO28D,6BACAy6B,oBACpBxsE,EAAU+F,EAAOkC,WAAU,YAI7BjI,GAC0B,IAAzBA,EAAQ+F,OAAO7wB,OACd8qB,EAAQ+F,OAAOnxB,MAAMgQ,YAAcA,OAMvBu2E,uBAETjjF,UAAY,UACZ8nB,QAAU,UACVm7D,iBAAkB,SAPlBjjF,UAAY9C,OACZ4qB,QAAUA,OACVm7D,iBAAkB,SAOfjjF,UAAS,EACjBA,EAAYR,SAASC,cAAa,QACxBI,UAAYw0F,MAClB33F,EAAQsD,EAAUtD,MACtBA,EAAMgD,SAAQ,WACdhD,EAAMM,MAAK,OACXN,EAAMiD,OAAM,WAENkuB,GADN/F,EAAOyE,EAAAC,yBACgBqB,OACvB7tB,EAAU6X,YAAYgW,IACtBnxB,EAAQmxB,EAAOnxB,OACTgD,SAAQ,WACdhD,EAAM2vB,KAAI,IACV3vB,EAAM63F,gBAAe,gBAChBv0F,UAAYA,OACZ8nB,QAAUA,IAUnBosE,EAAA31F,UAAAi2F,KAAI,SAAC1sE,EAAStnB,EAAY6R,OAClBigB,EAAa9xB,EAAW8xB,WACxBmiE,EAAaj0F,EAAWqD,KAAK,GAAKyuB,EAAc,EAChDoiE,EAAcl0F,EAAWqD,KAAK,GAAKyuB,EAAc,EACjDvuB,EAAWvD,EAAWkB,UAAUqC,SAChC4wF,EAAO3vF,EAAA4M,WAAcS,GACrBuiF,EAAQ5vF,EAAA6M,YAAeQ,GACvBwiF,EAAW7vF,EAAAkM,eAAkBmB,GAC7ByiF,EAAU9vF,EAAAiM,cAAiBoB,WAElB7R,EAAWmD,2BAA4BgxF,WACvCn0F,EAAWmD,2BAA4BixF,WACvCp0F,EAAWmD,2BAA4BkxF,WACvCr0F,EAAWmD,2BAA4BmxF,GAEtDhtE,EAAQsF,wBACOtF,GAAU/jB,EAAU0wF,EAAWC,GAC9C5sE,EAAQg3D,YACRh3D,EAAQitE,OAAOJ,EAAQ,GAAKriE,EAAYqiE,EAAQ,GAAKriE,GACrDxK,EAAQk3D,OAAO4V,EAAS,GAAKtiE,EAAYsiE,EAAS,GAAKtiE,GACvDxK,EAAQk3D,OAAO6V,EAAY,GAAKviE,EAAYuiE,EAAY,GAAKviE,GAC7DxK,EAAQk3D,OAAO8V,EAAW,GAAKxiE,EAAYwiE,EAAW,GAAKxiE,GAC3DxK,EAAQ0sE,wBACO1sE,EAAS/jB,EAAU0wF,EAAWC,IAS/CR,EAAA31F,UAAA+kF,cAAa,SAACx7D,EAAStnB,EAAY6R,OAC3BsiF,EAAO3vF,EAAA4M,WAAcS,GACrBuiF,EAAQ5vF,EAAA6M,YAAeQ,GACvBwiF,EAAW7vF,EAAAkM,eAAkBmB,GAC7ByiF,EAAU9vF,EAAAiM,cAAiBoB,WAElB7R,EAAWmD,2BAA4BgxF,WACvCn0F,EAAWmD,2BAA4BixF,WACvCp0F,EAAWmD,2BAA4BkxF,WACvCr0F,EAAWmD,2BAA4BmxF,OAEhDE,EAAQ32F,KAAQwpB,8BACPmtE,EAAUL,WACVK,EAAUJ,WACVI,EAAUH,WACVG,EAAUF,GAEzBhtE,EAAQsF,OACRtF,EAAQg3D,YACRh3D,EAAQitE,OAAO9mF,KAAK2P,MAAM+2E,EAAQ,IAAK1mF,KAAK2P,MAAM+2E,EAAQ,KAC1D7sE,EAAQk3D,OAAO/wE,KAAK2P,MAAMg3E,EAAS,IAAK3mF,KAAK2P,MAAMg3E,EAAS,KAC5D9sE,EAAQk3D,OAAO/wE,KAAK2P,MAAMi3E,EAAY,IAAK5mF,KAAK2P,MAAMi3E,EAAY,KAClE/sE,EAAQk3D,OAAO/wE,KAAK2P,MAAMk3E,EAAW,IAAK7mF,KAAK2P,MAAMk3E,EAAW,KAChEhtE,EAAQ0sE,QASVN,EAAA31F,UAAA02F,qBAAoB,SAAC10F,EAAMunB,EAAStnB,OAC5B7E,EAAK0C,KAAQmkF,cACf7mF,EAAM+E,YAAYH,GAAI,KAClBI,EAAK,IAAAC,EAAAhG,QACT2F,EAAIlC,KACCwpB,sBACLrnB,EACAsnB,GAEFnsB,EAAMmF,cAAcH,KASxBuzF,EAAA31F,UAAA4kF,UAAS,SAACr7D,EAAStnB,QACZy0F,qBAAoB7zF,EAAAxG,QAAiBkpB,UAAWgE,EAAStnB,IAQhE0zF,EAAA31F,UAAAglF,WAAU,SAACz7D,EAAStnB,QACby0F,qBAAoB7zF,EAAAxG,QAAiBmpB,WAAY+D,EAAStnB,IAejE0zF,EAAA31F,UAAAqkF,mBAAkB,SAChBvlF,EACAyG,EACAC,EACAuuB,EACAt1B,EACA2C,EACAktB,OAEMxe,EAAMrR,EAAQ,EACdsR,EAAM3O,EAAS,EACf4O,EAAK+jB,EAAaxuB,EAClB0K,GAAMD,EACNE,GAAOpR,EAAO,GAAKwvB,EACnBne,GAAOrR,EAAO,yBAEb+2F,cACL/lF,EACAC,EACAC,EACAC,GACCzK,EACD0K,EACAC,IAYJwlF,EAAA31F,UAAA+E,eAAc,SAACV,EAAOpC,EAAYqC,OAqB5BO,EApBE8xF,EAAWpnE,EAAAzlB,MAAAhK,KACVwpB,sBACLjlB,EAAM8B,SAEFojB,EAAOzpB,KAAQypB,QAGfu7D,EADKhlF,KAAQmkF,WACO19E,eACtBu+E,EAAW,KACP8R,EAAgBrnE,EAAAzlB,MACpB7H,EAAWoD,2BACXhB,EAAM8B,SAGuC,IAAAM,EAAA8K,mBACvBuzE,EAAa8R,GAAgB,OAC5C,aAMHtnF,EAAII,KAAK2P,MAAMs3E,EAAY,IAC3BpnF,EAAIG,KAAK2P,MAAMs3E,EAAY,IAC3BE,EAAY51F,SAASC,cAAa,UAClC41F,EAAaD,EAAUrlE,WAAU,MACvCqlE,EAAUp4F,MAAQ,EAClBo4F,EAAUz1F,OAAS,EACnB01F,EAAWnS,UAAU,EAAG,EAAG,EAAG,GAC9BmS,EAAW3nE,UAAU5F,EAAQ+F,OAAQhgB,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D1K,EAAOiyF,EAAWC,aAAa,EAAG,EAAG,EAAG,GAAGlyF,WACpCmyF,SACK,kBAARA,EAAI9lF,SAEK+lF,WAENpyF,SAGO,IAAZA,EAAK,GACA,KAEFA,GAEX8wF,EA5SA,sBA8SeD,gXCrUZ,MAAAjzD,EAAA1nC,EAAA,gpBAUHm8F,EAAA,SAAA/3F,GAGK,SACHg4F,EAAY/5F,OAAZkD,EACEnB,EAAAU,KAAAC,OAAAA,YAGAQ,EAAK82F,wBAA0B92F,EAAK+2F,mBAAmBt2F,KAAKT,GAM5DA,EAAKg3F,OAASl6F,EAKdkD,EAAKojF,uBAAyB,cAnBN3jF,EAAAo3F,EAAAh4F,GA4B1Bg4F,EAAAn3F,UAAAwd,YAAW,SAACnZ,wBAUZ8yF,EAAAn3F,UAAA0d,aAAY,SAACzb,wBAWbk1F,EAAAn3F,UAAA2C,YAAW,SAACV,EAAYtD,wBAUxBw4F,EAAAn3F,UAAAu3F,mBAAkB,SAACC,EAAOx4F,EAAMu6B,GACzBi+D,EAAMx4F,KACTw4F,EAAMx4F,GAAI,IAEZw4F,EAAMx4F,GAAMu6B,EAAKk+D,UAAUzpF,YAAcurB,GAa3C49D,EAAAn3F,UAAA03F,uBAAsB,SAACp7F,EAAQmB,EAAY+5F,UAOpC,SACOx4F,EAAM24F,OACRpzF,EAAQzE,KAAQy3F,mBAAmBx2F,KAAIjB,KAAO03F,EAAOx4F,UACpD1C,EAAOs7F,kBAAkBn6F,EAAYuB,EAAM24F,EAAWpzF,IAC7DxD,KAAIjB,OAaVq3F,EAAAn3F,UAAAyF,2BAA0B,SACxBC,EACAzD,EACAqC,EACAC,EACAqC,KAcFuwF,EAAAn3F,UAAA+E,eAAc,SAACV,EAAOpC,EAAYqC,wBAOlC6yF,EAAAn3F,UAAAikF,SAAQ,uBACMqT,QAOdH,EAAAn3F,UAAAm8B,mBAAkB,aAOlBg7D,EAAAn3F,UAAAq3F,mBAAkB,SAACh0E,GAC2CA,EAAM1kB,OACxDye,aAAQy6E,EAAAx7F,QAAkBsnC,QAAM7jC,KACnC0lF,2BAWT2R,EAAAn3F,UAAA83F,UAAS,SAAC7b,OACJ8b,EAAa9b,EAAM7+D,kBACnB26E,GAAUF,EAAAx7F,QAAesnC,QAAUo0D,GAAUF,EAAAx7F,QAAe8nB,OAC9D83D,EAAM3/D,iBAAgBzZ,EAAAxG,QAAWkhB,OAAMzd,KAAOs3F,yBAE5CW,GAAUF,EAAAx7F,QAAe4nC,OAC3Bg4C,EAAM/3C,OACN6zD,EAAa9b,EAAM7+D,YAEd26E,GAAUF,EAAAx7F,QAAesnC,QAMlCwzD,EAAAn3F,UAAAwlF,wBAAuB,eACfpoF,EAAK0C,KAAQmkF,WACf7mF,EAAMmiB,cAAgBniB,EAAM+f,kBAAczZ,EAAArH,QAAkBsH,OAC9DvG,EAAMkgB,WAGZ65E,EAhLA,sBAkLeD,kTCgMZluF,EAAAF,OAAAzN,EAAA,sBAAA,IACa28F,IA7Xb,IAAAC,EAAAl9F,EAAA,wOAkBGm9F,EAAK,WACGplD,kBACApF,iBACAkF,sBACAulD,gBACAntB,eACAotB,SAGdC,EAAA,WAYK,SACHC,EACE/7C,EACAh3C,EACAwuB,EACAwkE,EACAC,EACAC,GAKG34F,KACEgoF,WAAavrC,EAKfz8C,KACE44F,UAAYH,EAKdz4F,KACEg0B,YAAcC,EAKhBj0B,KACEioF,YAAcxiF,EAKhBzF,KACEy3E,cAAgBkhB,EAKlB34F,KACE64F,mBAAkB,GAKpB74F,KACE84F,qBAAuB,KAKzB94F,KACE+4F,uBAAsBtpE,EAAAriB,cAEtB4rF,iBAAiBN,UAOxBF,EAAAt4F,UAAAi2F,KAAI,SAAC1sE,EAASpb,OACN4qF,EAAcj5F,KAAQk5F,cAAc7qF,GAC1Cob,EAAQg3D,YACRh3D,EAAQitE,OAAOuC,EAAe,GAAIA,EAAe,IACjDxvE,EAAQk3D,OAAOsY,EAAe,GAAIA,EAAe,IACjDxvE,EAAQk3D,OAAOsY,EAAe,GAAIA,EAAe,IACjDxvE,EAAQk3D,OAAOsY,EAAe,GAAIA,EAAe,IACjDxvE,EAAQ0sE,QAQVqC,EAAAt4F,UAAA84F,iBAAgB,SAACN,WACJn3F,KAAUm3F,EAAe,KAC9BS,EAASn5F,KAAQ64F,mBAAmBt3F,QACtBiB,IAAd22F,IACFA,EAAS,QACJN,mBAAmBt3F,GAAU43F,OAE9BC,EAAsBV,EAAgBn3F,WACjCknF,KAAe2Q,EAAmB,KACrC/P,EAAe+P,EAAoB3Q,GACzC0Q,EAAU1Q,GAAW,IAAA4Q,EAAA98F,QAAAyD,KACdioF,YAAWjoF,KACXg0B,YAAWh0B,KACX44F,UACLvP,MAURmP,EAAAt4F,UAAAo5F,aAAY,SAACH,WACA53F,KAAMvB,KAAS64F,2BAClBU,EAAUv5F,KAAQ64F,mBAAmBt3F,GAClC5F,EAAI,EAAG6H,EAAK21F,EAAUv9F,OAAQD,EAAI6H,IAAM7H,KAC3Cw9F,EAAUx9F,KAAM49F,EAAU,OACrB,SAIN,GAaTf,EAAAt4F,UAAAyF,2BAA0B,SACxBC,EACAH,EACAC,EACAlB,EACAC,EACA+0F,OAGMC,EAA6B,GADnCj1F,EAAeoL,KAAK2P,MAAM/a,IACa,EACjC6J,EAASohB,EAAA5hB,QAAA7N,KACR+4F,uBACLv0F,EAAe,GACfA,EAAe,GACf,EAAIiB,GACJ,EAAKA,GACJC,GACAE,EAAW,IACXA,EAAW,IAGRoxF,GAAUh3F,KAAS84F,qBACrB9B,IAAUh3F,KACP84F,qBAAoB5qE,EAAAC,sBACvBsrE,EACAA,QAkBAC,EAfEjwE,EAAOzpB,KAAQ84F,qBAGnBrvE,EAAQ+F,OAAO7wB,QAAU86F,GACzBhwE,EAAQ+F,OAAOluB,SAAWm4F,GAE1BhwE,EAAQ+F,OAAO7wB,MAAQ86F,EACvBhwE,EAAQ+F,OAAOluB,OAASm4F,GACdzC,GACVvtE,EAAQo7D,UAAU,EAAG,EAAG4U,EAAaA,QAOZj3F,SAAlBi1E,gBACPiiB,EAAS/yF,EAAAkL,iCACQ6nF,EAAW9zF,YAE1B8zF,EACAj0F,GAAUzF,KAASy3E,cAAgBjzE,GACnCk1F,QAMAjR,EAFEkR,EAAUzB,EAAmB1zF,GAQhC,SACM+gF,EAAgBt/E,EAASC,WAC1B0zF,EAAYnwE,EAAQwtE,aAAa,EAAG,EAAGwC,EAAaA,GACvD10F,KACM80F,EAAI,EAAGr2F,EAAKm2F,EAAQ/9F,OAAQi+F,EAAIr2F,EAAIq2F,IAAC,GACxCD,EAAUD,EAAQE,IAAM,EAAC,KAExBL,GACA/Q,IAAWqR,EAAAv9F,QAAiB87F,OAC3B5P,IAAWqR,EAAAv9F,QAAiB2uE,OACW,IAAzCsuB,EAAoBzuF,QAAQ9E,GAAe,KAErCsG,GAAOotF,EAAQE,GAAK,GAAK,EACzBrqF,EAAIhL,EAAgB+H,EAAMktF,EAC1BhqF,EAAIjL,GAAiB+H,EAAMktF,EAAe,GAC1CM,EAASt1F,EAASwB,EAASC,EAAUsJ,EAAIA,EAAIC,EAAIA,MACnDsqF,EAAM,OACDA,EAGXtwE,EAAQo7D,UAAU,EAAG,EAAG4U,EAAaA,UAOf,IAIxB99F,EAAGqL,EAAGmyF,EAAWa,EAAU/8F,EAHzBg9F,EAAKv+F,OAAOD,KAAIuE,KAAM64F,oBAAoBt4F,IAAI8Z,YACpD4/E,EAAG/2F,KAAIoG,EAAAkB,2BAGF7O,EAAIs+F,EAAGr+F,OAAS,EAAGD,GAAK,IAAKA,EAAC,KAC3B+sF,EAAYuR,EAAGt+F,GAAGuS,eACxBirF,EAASn5F,KAAQ64F,mBAAmBnQ,GAC/B1hF,EAAIoxF,EAAMx8F,OAAS,EAAGoL,GAAK,IAAKA,UAGlBxE,KADjBw3F,EAAWb,EADX1Q,EAAc2P,EAAMpxF,OAGlB/J,EAAS+8F,EAASE,oBAChBzwE,EACApb,EACA3I,EACA6/E,EACAmU,IAEQ,OACDz8F,IAYjBu7F,EAAAt4F,UAAAg5F,cAAa,SAAC7qF,OACNouC,EAASz8C,KAAQgoF,eAClBvrC,EAAS,OACL,SAEHroC,EAAOqoC,EAAU,GACjBpoC,EAAOooC,EAAU,GACjBnoC,EAAOmoC,EAAU,GACjBloC,EAAOkoC,EAAU,GACjBw8C,EAAc,CAAI7kF,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,wBACtD4kF,EAAgB,EAAG,EAAG,EAAG5qF,EAAW4qF,GACzCA,GAMTT,EAAAt4F,UAAAwT,QAAO,iCACemlF,qBAatBL,EAAAt4F,UAAAskF,QAAO,SACL/6D,EACA0wE,EACA9rF,EACA+rF,EACAhW,EACAiW,EACApW,GAE4B,IACtBgW,EAAKv+F,OAAOD,KAAIuE,KAAM64F,oBAAoBt4F,IAAI8Z,QACpD4/E,EAAG/2F,KAAIoG,EAAAkB,gCAIEw9E,aACPv+D,EAAQsF,YACHonE,KAAK1sE,EAASpb,QAIjB1S,EAAG6H,EAAIwD,EAAGsjC,EAAIq+C,EAASC,EADrB0R,EAAeD,GAAsCjC,MAEvDnU,GACFgW,EAAG7O,UAEAzvF,EAAI,EAAG6H,EAAKy2F,EAAGr+F,OAAQD,EAAI6H,IAAM7H,EAAC,KAC/B+sF,EAAYuR,EAAGt+F,GAAGuS,eACxBy6E,EAAO3oF,KAAQ64F,mBAAmBnQ,GAC7B1hF,EAAI,EAAGsjC,EAAKgwD,EAAa1+F,OAAQoL,EAAIsjC,IAAMtjC,EAAC,MAGhCxE,KADfomF,EAASD,EADW2R,EAAatzF,MAG/B4hF,EAAOpE,QACL/6D,EACA0wE,EACA9rF,EACA+rF,EACAhW,EACAH,SAMC+D,YACPv+D,EAAQ6F,WAGdkpE,EAjVA,GAyVM+B,EAA0B,YAShBrC,EAAmBl9C,WACUx4C,IAAvC+3F,EAA2Bv/C,GAAqB,OAC3Cu/C,EAA2Bv/C,WAG9Bx1C,EAAgB,EAATw1C,EAAa,EACpBw/C,EAAgBx/C,EAASA,EACzBy/C,EAAS,IAAO5wF,MAAM2wF,EAAgB,GACnC7+F,EAAI,EAAGA,GAAKq/C,IAAUr/C,EAAC,IAAA,IACrBqL,EAAI,EAAGA,GAAKg0C,IAAUh0C,EAAC,KACxBU,EAAa/L,EAAIA,EAAIqL,EAAIA,KAC3BU,EAAa8yF,EAAa,UAG1Bt0E,EAAWu0E,EAAU/yF,GACpBwe,IACHA,EAAQ,GACRu0E,EAAU/yF,GAAcwe,GAE1BA,EAASjiB,KAA4C,IAArC+2C,EAASr/C,GAAK6J,GAAQw1C,EAASh0C,IAAU,GACrDrL,EAAI,GACNuqB,EAASjiB,KAA4C,IAArC+2C,EAASr/C,GAAK6J,GAAQw1C,EAASh0C,IAAU,GAEvDA,EAAI,IACNkf,EAASjiB,KAA4C,IAArC+2C,EAASr/C,GAAK6J,GAAQw1C,EAASh0C,IAAU,GACrDrL,EAAI,GACNuqB,EAASjiB,KAA4C,IAArC+2C,EAASr/C,GAAK6J,GAAQw1C,EAASh0C,IAAU,YAM3D0zF,EAAU,GACAl3F,GAAP7H,EAAI,EAAQ8+F,EAAU7+F,QAAQD,EAAI6H,IAAM7H,EAC3C8+F,EAAU9+F,IACZ++F,EAAWz2F,KAAI+F,MAAf0wF,EAAmBD,EAAU9+F,WAIjC4+F,EAA2Bv/C,GAAU0/C,EAC9BA,YAGMnC,oYClab3qD,OAAM,SACN0qD,QAAO,UACPD,MAAK,QACLvlD,YAAW,aACXE,QAAO,UACPk4B,KAAI,+KCXH,IAAA4d,EAAA7tF,EAAA,yRA6DG0/F,EAASh0F,EAAAkL,cAGT0pE,EAAE,GAEFwX,EAAE,GAEFC,EAAE,GAEF4H,EAAE,GAKL,SACMC,EAAgBC,UAChBA,EAAuB,GAAGC,iBAG7BC,EAAQ,IAAO/wE,OACmB,IAEpC9c,OAAO8tF,aAAa,MAAO,IAAU9tF,OAAO8tF,aAAa,MACzD9tF,OAAO8tF,aAAa,OAAO,IAAU9tF,OAAO8tF,aAAa,OACzD9tF,OAAO8tF,aAAa,OAAO,IAAU9tF,OAAO8tF,aAAa,OACzD9tF,OAAO8tF,aAAa,OAAO,IAAU9tF,OAAO8tF,aAAa,OACzD9tF,OAAO8tF,aAAa,QAAO,IAAU9tF,OAAO8tF,aAAa,QAAO,KASjE,SACMC,EAAoBl+F,EAAMm+F,SACvB,UAALA,GAA0B,QAALA,GAAqBH,EAASvgF,KAAKzd,KAC3Dm+F,EAAa,UAALA,EAAiB,OAAS,sBAElBA,OAGpBC,EAAA,WAMK,SACHC,EAAY51F,EAAYwuB,EAAYwkE,EAAUpP,GAIzCrpF,KACEy4F,SAAWA,EAKbz4F,KACEi0B,WAAaA,EAMfj0B,KACEyF,WAAaA,EAKfzF,KACEs7F,WAKFt7F,KACEqpF,aAAeA,EAAaA,aAK9BrpF,KACEmH,YAAckiF,EAAaliF,YAK7BnH,KACEu7F,iBAAgB,GAKlBv7F,KACEw7F,mBAAkB/rE,EAAAriB,SAKpBpN,KACEupF,yBAA2BF,EAAaE,yBAK1CvpF,KACEy7F,kBAAoB,KAKtBz7F,KACE07F,cAAgB,EAIlB17F,KACEyxF,WAAapI,EAAaoI,YAAU,GAItCzxF,KACE2xF,aAAetI,EAAasI,cAAY,GAI1C3xF,KACE6xF,WAAaxI,EAAawI,YAAU,GAKtC7xF,KACE27F,QAAO,GAKT37F,KACEmxF,QAAO,UAUdkK,EAAAn7F,UAAA07F,YAAW,SAAC5+F,EAAM42F,EAASE,EAASH,OAC5B7qF,EAAM9L,EAAO42F,EAAUE,EAAUH,UAC9BxC,QAAQroF,GAAG,OAAA9I,KACNmxF,QAAQroF,OAEhBopF,EAAcyB,EAAS3zF,KAAQ2xF,aAAagC,GAAa,KACzD1B,EAAY6B,EAAO9zF,KAAQyxF,WAAWqC,GAAW,KACjD3B,EAASnyF,KAAQ6xF,WAAW+B,GAC5B3/D,EAAUj0B,KAAQi0B,WAClBvmB,EAAK,CACTykF,EAAUzkF,MAAM,GAAKumB,EACrBk+D,EAAUzkF,MAAM,GAAKumB,GAEjBknE,EAAQD,EACZl+F,EACAm1F,EAAUe,WAAStyF,EAAAsqB,kBAEf20D,EACJ8T,GAAazB,EAAYrR,UAAYqR,EAAYrR,UAAY,EAEzDzyD,EAAQpxB,EAAKmU,MAAK,MAClBmd,EAAWF,EAAMxyB,OACjByyB,EAAM,GACN1vB,EAAKiC,EAAAgrB,kBAAqBumE,EAAUhlE,KAAMiB,EAAOC,GACjDhE,EAAUzpB,EAAA6qB,kBAAqB0mE,EAAUhlE,MAEzC0uE,EAAcl9F,EAAQkhF,EACtB3wD,EAAmB,GAEnBL,GAAKgtE,EAAc,GAAKnuF,EAAM,GAC9BohB,GALSzE,EAAaiE,EAKRuxD,GAAenyE,EAAM,GAEnCyhB,EAAK,CACTxwB,MAAOkwB,EAAI,EAAIjf,KAAKqI,MAAM4W,GAAKjf,KAAK0X,KAAKuH,GACzCvtB,OAAQwtB,EAAI,EAAIlf,KAAKqI,MAAM6W,GAAKlf,KAAK0X,KAAKwH,GAC1CI,oBAAqBA,IAEP,GAAZxhB,EAAM,IAAuB,GAAZA,EAAM,IACzBwhB,EAAoBjrB,KAAI,QAAUyJ,GAEpCwhB,EAAoBjrB,KAAI,OAASkuF,EAAUhlE,MACvCwmE,KACFzkE,EAAoBjrB,KAAI,cAAgBiuF,EAAY3S,aACpDrwD,EAAoBjrB,KAAI,YAAc47E,GACtC3wD,EAAoBjrB,KAAI,UAAYiuF,EAAY1S,SAChDtwD,EAAoBjrB,KAAI,WAAaiuF,EAAYzS,UACjDvwD,EAAoBjrB,KAAI,aAAeiuF,EAAYxS,aAEtCjuD,EAAA1B,wBAA6B+rE,kCAAoCC,0BAClE77F,UAAU4gF,cACpB5xD,EAAoBjrB,KAAI,cAAc,CAAGiuF,EAAYvS,WACrDzwD,EAAoBjrB,KAAI,iBAAmBiuF,EAAYtS,kBAGvDkU,GACF5kE,EAAoBjrB,KAAI,YAAcguF,EAAUrR,WAElD1xD,EAAoBjrB,KAAI,eAAe,UACvCirB,EAAoBjrB,KAAI,YAAY,cAGhCtI,EAFEqgG,EAAY,GAAMb,EAClB3rF,EAAI2rF,EAAQU,EAAcG,EAAYnc,KAExC8T,EAAS,IACNh4F,EAAI,EAAGA,EAAI2yB,IAAY3yB,EAC1BuzB,EAAoBjrB,KAAI,aAAa,CACnCmqB,EAAMzyB,GACN6T,EAAIwsF,EAAY3tE,EAAO1yB,GACvB,IAAOkkF,EAAcx1D,GAAc1uB,EAAI0uB,OAIzCypE,EAAO,IACJn4F,EAAI,EAAGA,EAAI2yB,IAAY3yB,EAC1BuzB,EAAoBjrB,KAAI,WAAW,CACjCmqB,EAAMzyB,GACN6T,EAAIwsF,EAAY3tE,EAAO1yB,GACvB,IAAOkkF,EAAcx1D,GAAc1uB,EAAI0uB,gBAIxC8mE,QAAQroF,GAAOqmB,EACbA,GAYTksE,EAAAn7F,UAAA+7F,sBAAqB,SACnBxyE,EACAyyE,EACAC,EACAC,EACAC,EACAnQ,EACAgB,GAEAzjE,EAAQg3D,YACRh3D,EAAQitE,OAAO1sF,MAAMyf,EAASyyE,GAC9BzyE,EAAQk3D,OAAO32E,MAAMyf,EAAS0yE,GAC9B1yE,EAAQk3D,OAAO32E,MAAMyf,EAAS2yE,GAC9B3yE,EAAQk3D,OAAO32E,MAAMyf,EAAS4yE,GAC9B5yE,EAAQk3D,OAAO32E,MAAMyf,EAASyyE,GAC1BhQ,SACGoP,WAAqCpP,EAAgB,QACrDlQ,MAAMvyD,IAETyjE,SACGoP,gBACH7yE,EACyByjE,GAE3BzjE,EAAQjrB,WAwBZ68F,EAAAn7F,UAAAq8F,iCAAgC,SAC9BC,EACAC,EACA9tD,EACAC,EACAjwC,EACA2C,EACA8iD,EACAC,EACA11B,EACAC,EACAlpB,EACAgI,EACA02E,EACAt2D,EACA4uE,EACAz2F,OAyBIoI,EArBAmB,EAAIm/B,GAFRyV,GAAW12C,EAAM,IAGb+B,EAAIm/B,GAFRyV,GAAW32C,EAAM,IAIXmhB,EAAIlwB,EAAQgwB,EAAU6tE,EAAaA,EAAa7tE,EAAUhwB,EAC1DmwB,EAAIxtB,EAASstB,EAAU6tE,EAAcA,EAAc7tE,EAAUttB,EAC7Dq7F,EAAO7uE,EAAQ,GAAKe,EAAInhB,EAAM,GAAKogB,EAAQ,GAC3C8uE,EAAO9uE,EAAQ,GAAKgB,EAAIphB,EAAM,GAAKogB,EAAQ,GAC3C+uE,EAAOrtF,EAAIse,EAAQ,GACnBgvE,EAAOrtF,EAAIqe,EAAQ,UAErB4uE,GAA2B,IAAbh3F,KAChB61E,EAAG,GAAKshB,EACRjC,EAAG,GAAKiC,EACRthB,EAAG,GAAKuhB,EACR/J,EAAG,GAAK+J,EACR/J,EAAG,GAAK8J,EAAOF,EACf3J,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAK8J,EAAOF,EACfhC,EAAG,GAAK5H,EAAG,IAII,IAAbttF,GACF2I,EAASohB,EAAA5hB,QAAA4hB,EAAAriB,SAEPuhC,EACAC,EACA,EACA,EACAlpC,GACCipC,GACAC,WAGYvgC,EAAWktE,WACXltE,EAAW0kF,WACX1kF,EAAW2kF,WACX3kF,EAAWusF,oBAExBhrF,KAAK2F,IAAIgmE,EAAG,GAAIwX,EAAG,GAAIC,EAAG,GAAI4H,EAAG,IACjChrF,KAAK2F,IAAIgmE,EAAG,GAAIwX,EAAG,GAAIC,EAAG,GAAI4H,EAAG,IACjChrF,KAAK4F,IAAI+lE,EAAG,GAAIwX,EAAG,GAAIC,EAAG,GAAI4H,EAAG,IACjChrF,KAAK4F,IAAI+lE,EAAG,GAAIwX,EAAG,GAAIC,EAAG,GAAI4H,EAAG,IACjCD,qBAIA/qF,KAAK2F,IAAIsnF,EAAMA,EAAOF,GACtB/sF,KAAK2F,IAAIunF,EAAMA,EAAOF,GACtBhtF,KAAK4F,IAAIqnF,EAAMA,EAAOF,GACtB/sF,KAAK4F,IAAIsnF,EAAMA,EAAOF,GACtBjC,GAGAvW,IACF50E,EAAII,KAAK2P,MAAM/P,GACfC,EAAIG,KAAK2P,MAAM9P,KAGfstF,WAAYvtF,EACZwtF,WAAYvtF,EACZwtF,WAAYpuE,EACZquE,WAAYpuE,EACZH,QAASA,EACTC,QAASA,EACTmsE,aAAY,CACV3mF,KAAMumF,EAAU,GAChBtmF,KAAMsmF,EAAU,GAChBrmF,KAAMqmF,EAAU,GAChBpmF,KAAMomF,EAAU,GAChBhyF,MAAO1C,GAETy+E,gBAAiBr2E,EACjBX,MAAOA,IAeX2tF,EAAAn7F,UAAAi9F,oBAAmB,SACjB1zE,EACA0wE,EACAiD,EACAC,EACA5+E,EACAytE,EACAgB,OAEMwP,KAAgBxQ,IAAmBgB,GAEnCl7B,EAAMqrC,EAAWtC,aACjBvrE,EAAS/F,EAAQ+F,OACjB8tE,EAAgBpQ,EACjBA,EAAkB,GAAKmQ,EAAW3vF,MAAM,GAAM,EAC/C,SAEFskD,EAAI59C,KAAOkpF,GAAiB9tE,EAAO7wB,MAAQw7F,GAC3CnoC,EAAI19C,KAAOgpF,GAAiB,GAC5BtrC,EAAI39C,KAAOipF,GAAiB9tE,EAAOluB,OAAS64F,GAC5CnoC,EAAIz9C,KAAO+oF,GAAiB,IAGxBZ,GAAU18F,KACPi8F,sBACHxyE,EACA8xD,EACAwX,EACAC,EACA4H,EACyB1O,EACAgB,sBAI3BzjE,EACA4zE,EAAW3Y,gBACXjmE,EACA2+E,EACAC,EAAW1uE,QACX0uE,EAAWzuE,QACXyuE,EAAWJ,WACXI,EAAWH,WACXG,EAAWN,WACXM,EAAWL,WACXK,EAAW3vF,SAGR,GAOT2tF,EAAAn7F,UAAA87E,MAAK,SAACvyD,WACK6xE,WAAU,KACXiC,EAAM9tE,EAAAzlB,MAAAhK,KAAuBw7F,mBAAkB,CAAG,EAAG,IACrDgC,EAAa,IAAGx9F,KAAQi0B,WAC9BxK,EAAQsF,OACRtF,EAAQ7b,UAAU2vF,EAAO,GAAKC,EAAYD,EAAO,GAAKC,GACtD/zE,EAAQhc,OAAMzN,KAAM07F,eAEtBjyE,EAAQwyD,YACCqf,YACP7xE,EAAQ6F,WASZ+rE,EAAAn7F,UAAAo8F,gBAAe,SAAC7yE,EAAS4hE,GACvB5hE,EACe,YAC4C4hE,EAAY,GACvE5hE,EAAQo3D,UAAmCwK,EAAY,GACvD5hE,EAAQ+1D,QAAwC6L,EAAY,GAC5D5hE,EAAQg2D,SAA0C4L,EAAY,GAC9D5hE,EAAQi2D,WAAoC2L,EAAY,GACpD5hE,EAAQq3D,cACVr3D,EAAQm2D,eAAwCyL,EAAY,GAC5D5hE,EAAQq3D,YAA0CuK,EAAY,MAYlEgQ,EAAAn7F,UAAAu9F,6BAA4B,SAACzgG,EAAM42F,EAASD,EAAWG,OAC/C3B,EAASnyF,KAAQ6xF,WAAW+B,GAE5BzkE,EAAKnvB,KAAQ47F,YAAY5+F,EAAM42F,EAASE,EAASH,GAEjDzB,EAAWlyF,KAAQ2xF,aAAagC,GAChC1/D,EAAUj0B,KAAQi0B,WAClBknE,EAAQD,EACZl+F,EACAm1F,EAAUe,WAAStyF,EAAAsqB,kBAEf6oE,EAAQ2J,EAAA1M,WAAcmB,EAAU0B,cAAYjzF,EAAAuqB,qBAC5C00D,EACJqS,GAAeA,EAAYrR,UAAYqR,EAAYrR,UAAY,SAU/D1xD,MAAOA,EACPi1B,QAPc+2C,GADFhsE,EAAMxwB,MAAQs1B,EAAa,EAAIk+D,EAAUzkF,MAAM,IAC7B,GAAK,GAAMytF,GAAStb,EAQlDx7B,QANC0vC,EAAW5kE,EAAM7tB,OAAU2yB,EAC5B,GAAK,GAAM8/D,GAAYlU,IAuB3Bwb,EAAAn7F,UAAAy9F,SAAQ,SACNl0E,EACA0wE,EACA9rF,EACAg7E,EACAjF,EACAwZ,EACAC,EACA5Z,GAE4B,IACxB6Z,OACKrC,mBAAiBnyF,EAAAS,OAAWsE,EAASrO,KAAOw7F,oBACnDsC,EAAgB99F,KAAQy7F,wBAEdA,oBAAiBz7F,KACpBy7F,kBAAiB,IAExBqC,EAAgBC,EAAA55C,YAAAnkD,KACTmH,YACL,EAACnH,KACImH,YAAYvL,OACjB,EACAyS,EAASrO,KACJy7F,uCAEoBD,mBAAoBntF,YAK7C2vF,EACA55C,EACFC,EACA45C,EACAC,EACAC,EACAC,EACAjiB,EACAn/E,EACA42F,EACAD,EACAG,EAqBwD7tF,EACtDuJ,EAAGC,EAAG4uF,EApCN1iG,EAAI,EACF6H,EAAK6lF,EAAaztF,OACpByT,EAAI,EAaJivF,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACtBC,EAAe1+F,KAAQu7F,iBACvBnB,EAAYp6F,KAAQ07F,cACpBiD,EACJ/uF,KAAK2P,MAAgD,KAA1C3P,KAAKyrC,OAAOhtC,EAAU,GAAIA,EAAU,KAAc,KAEzDgR,EAAK,CACToK,QAASA,EACTwK,WAAUj0B,KAAOi0B,WACjBxuB,WAAUzF,KAAOyF,WACjBC,SAAU00F,GAKNwE,EAAS5+F,KACRqpF,cAAgBA,GAAYrpF,KAASy4F,SAAW,EAAI,IAGpD98F,EAAI6H,GAAE,KACL6nF,EAAchC,EAAa1tF,UAC+B0vF,EAAY,mBAEnDH,eACrBjlF,EAAiEolF,EAAY,GAC7EgT,EAAkBhT,EAAY,GACzBplF,EAAQ88D,mBAGOvgE,IAAlBq7F,GAA2Bl3F,EAAA8M,WACfoqF,EAAeQ,EAAgB53F,eAIzC9K,EAFFA,EAA2B0vF,EAAY,GAAM,EAL7C1vF,EAA2B0vF,EAAY,wBAUpBiC,WACjBgR,EAAcM,SACX5iB,MAAMvyD,GACX60E,EAAc,GAEZC,EAAgBK,IAClBn1E,EAAQjrB,SACR+/F,EAAgB,GAEbD,GAAgBC,IACnB90E,EAAQg3D,YACRwd,EAAQr6C,IACRs6C,EAAQt6C,OAERjoD,uBAEmBiyC,WAEfp3B,EAAKsnF,EADXzuF,EAA2Bg8E,EAAY,IAEjCz0E,EAAKknF,EAAiBzuF,EAAI,GAG1BS,EAFKguF,EAAiBzuF,EAAI,GAEhBmH,EACVzG,EAFK+tF,EAAiBzuF,EAAI,GAEhBuH,EACVmD,EAAInK,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,GACnC0Z,EAAQitE,OAAOlgF,EAAKuD,EAAGnD,GACvB6S,EAAQi3D,IAAIlqE,EAAII,EAAImD,EAAG,EAAG,EAAInK,KAAKiM,IAAI,KACrClgB,uBAEmB4xF,WACrB9jE,EAAQs3D,cACNplF,uBAEmBovF,OACrB17E,EAA2Bg8E,EAAY,GACvC2S,EAAK3S,EAAY,OACXnlF,EAA0EmlF,EAAY,GACtFjP,GAAWiP,EAAY,GACvB9hF,GAA2B,GAAtB8hF,EAAYzvF,OAAcyvF,EAAY,QAAK7oF,EACtD6c,EAAMnZ,SAAWA,EACjBmZ,EAAMpZ,QAAUA,EACVtK,KAAK+iG,IACTA,EAAgB/iG,GAAC,QAEbqyC,GAAS0wD,EAAgB/iG,GAC3B4N,GACFA,GAAGu0F,EAAkBzuF,EAAG2uF,EAAI,EAAGhwD,KAE/BA,GAAO,GAAK8vD,EAAiBzuF,GAC7B2+B,GAAO,GAAK8vD,EAAiBzuF,EAAI,GACjC2+B,GAAOpyC,OAAS,GAElBwgF,GAASpuC,GAAQ3uB,KACf1jB,uBAEmB8xF,WACrBp+E,EAA2Bg8E,EAAY,GACvC2S,EAA4B3S,EAAY,GACxClP,EAA4EkP,EAAY,GAGxFjnC,EAAiCinC,EAAY,GAC7ChnC,EAAiCgnC,EAAY,OACzC/pF,GAAgC+pF,EAAY,GAC1C5sE,GAAiC4sE,EAAY,GAC7C18D,GAAiC08D,EAAY,GAC7Cz8D,GAAiCy8D,EAAY,GAC7C35B,GAAyC25B,EAAY,IACvD3lF,GAAkC2lF,EAAY,IAC5C39E,GAAqD29E,EAAY,IACnE1sF,GAA+B0sF,EAAY,IACzCwT,GAAuFxT,EAAY,QAEpGlP,GAASkP,EAAYzvF,QAAU,GAAE,CAEpCoB,EAA8BquF,EAAY,IAC1CuI,EAAiCvI,EAAY,IAC7CsI,EAAmCtI,EAAY,IAC/CyI,EAAiCzI,EAAY,QACvCyT,GAAe9+F,KAAQy9F,6BAC3BzgG,EACA42F,EACAD,EACAG,GAEF3X,EAAQ2iB,GAAgB3vE,MACxBk8D,EAAY,GAAKlP,MACXyY,GAAqCvJ,EAAY,IACvDjnC,GAAW06C,GAAgB16C,QAAUwwC,IAAW50F,KAASi0B,WACzDo3D,EAAY,GAAKjnC,MACX0wC,GAAqCzJ,EAAY,IACvDhnC,GAAWy6C,GAAgBz6C,QAAUywC,IAAW90F,KAASi0B,WACzDo3D,EAAY,GAAKhnC,EACjB/iD,GAAS66E,EAAM76E,OACf+pF,EAAY,GAAK/pF,GACjB3C,GAAQw9E,EAAMx9E,MACd0sF,EAAY,IAAM1sF,OAGhB6zF,QAAc,EACdnH,EAAYzvF,OAAS,KACvB42F,GAAwCnH,EAAY,SAGlDv9D,QAAO,EAAE8kE,QAAc,EAAEC,QAAgB,EACzCxH,EAAYzvF,OAAS,IACvBkyB,GAAwCu9D,EAAY,IACpDuH,GAAyCvH,EAAY,IACrDwH,GAA2CxH,EAAY,MAEvDv9D,GAAOltB,EAAAwqB,eACPwnE,IAAiB,EACjBC,IAAmB,GAGjBnhC,IAAkBitC,EAEpBj5F,IAAY00F,EACF1oC,IAAmBitC,IAE7Bj5F,IAAY00F,WAEV2E,GAAa,EACV1vF,EAAI2uF,EAAI3uF,GAAK,OAEhBmjF,IACAA,GAAeuM,MAAgBpgG,GAAKqB,KAAQi0B,iBAuBxC8U,GAAI,CACRtf,EACA0wE,EACAhe,EAtBIkhB,GAAUr9F,KAAQu8F,iCACtBpgB,EAAMx9E,MACNw9E,EAAM76E,OACNw8F,EAAiBzuF,GACjByuF,EAAiBzuF,EAAI,GACrB1Q,GACA2C,GACA8iD,EACAC,EACA11B,GACAC,GACAlpB,GACAgI,GACA02E,EACAt2D,GACA8kE,IAAkBC,GAClB5sF,GAQAwY,GACAm0E,GAC6B4L,EACzB,KACJ3L,GAC6B4L,EACzB,MAEFO,QAAS,EACTC,QAAiB,KACjBhb,GAAqB4a,GAAsB,KACvC1yF,GAAQ6xF,EAAK3uF,MACdwvF,GAAuB1yF,IAAK,CAE/B0yF,GAAuB1yF,IAAS48B,eAIlCi2D,GAAYH,GAAuB1yF,WAC5B0yF,GAAuB1yF,IAC9B8yF,GAAoBpE,EAAgBmE,IAChC/a,EAAkB3K,SAAS2lB,IAAiB,SAKhDhb,GACAA,EAAkB3K,SAAS+jB,GAAWtC,gBAIpCiE,KAEE/a,GACFA,EAAkB1K,OAAO0lB,SAGtB9B,oBAAoBnzF,MAAKhK,KAAOg/F,KAEnC/a,GACFA,EAAkB1K,OAAO8jB,GAAWtC,mBAEjCoC,oBAAoBnzF,MAAKhK,KAAO+oC,OAErCptC,uBAEmB6xF,eACfpiF,GAA+BigF,EAAY,GAC3ChgF,GAA6BggF,EAAY,GACzC0I,GAAkC1I,EAAY,GAC9Cr2D,GAAkCq2D,EAAY,GACpDyI,EAAiCzI,EAAY,OACvCoI,GAAkCpI,EAAY,GAC9C6T,GAA2C7T,EAAY,GACvD58D,GAAiC48D,EAAY,GACnDsI,EAAmCtI,EAAY,OACzCxL,GAAqCwL,EAAY,IACvDruF,EAA8BquF,EAAY,IAC1CuI,EAAiCvI,EAAY,QACvC8T,GAAe,CACI9T,EAAY,IACZA,EAAY,KAG/B8G,GAASnyF,KAAQ6xF,WAAW+B,GAC5BzmE,GAAOglE,GAAUhlE,KACjBgnE,GAAS,CACbhC,GAAUzkF,MAAM,GAAKwxF,GACrB/M,GAAUzkF,MAAM,GAAKwxF,IAGnBE,QAAY,EACZjyE,MAAIntB,KAAS27F,QACfyD,GAAYp/F,KAAQ27F,QAAQxuE,KAE5BiyE,GAAY,QACPzD,QAAQxuE,IAAQiyE,QAGjBC,GAAUC,EAAA7qB,iBAAoBqpB,EAAkB1yF,GAAOC,GAAK,GAC5Dk0F,GACJ3vF,KAAK0F,IAAI6+E,GAAU,IAACvzF,EAAA+qB,yBACKwB,GAAMnwB,EAAMoiG,OACnCpqE,IAAYuqE,IAAcF,GAAU,KAChCnM,GAASlzF,KAAQ6xF,WAAW+B,GAASV,UACrCsM,IAAUH,GAAaE,IAAU7B,EAAA1M,WAAekC,IAChDuM,GAAKC,EAAAC,eACT7B,EACA1yF,GACAC,GACA,EACArO,EACAwiG,GACA/L,GACA7jF,KAAK0F,IAAI6+E,GAAU,IAACvzF,EAAA+qB,yBAEpBwB,GACAiyE,GACAT,EAA4B,EAAC3+F,KAAQ07F,eAEvCkE,EAAS,GAAMH,GAAK,CAC0B,IACtC3E,GAAsB,GACxB1rF,QAAC,EAAEywF,QAAE,EAAEC,QAAK,EAAE3wE,QAAK,EAAE4wE,QAAI,KACzBpM,EAAS,IACNvkF,GAAI,EAAGywF,GAAKJ,GAAM7jG,OAAQwT,GAAIywF,KAAMzwF,GAAC,CAExC0wF,IADAC,GAAON,GAAMrwF,KACuB,GACpC+f,GAAKnvB,KAAQ47F,YAAYkE,GAAOlM,EAAO,GAAMD,GAC7CvvC,EACyB27C,GAAK,IAC3B5L,GAAU,GAAK,GAAKtU,GAAcA,IACrCx7B,EACE0vC,GAAW5kE,GAAM7tB,OACG,GAAlB,GAAMyyF,IAAgBlU,GAAcsU,GAAU,GAC9CA,GAAU,GACZ1lE,OACI4uE,GAAUr9F,KAAQu8F,iCACtBptE,GAAMxwB,MACNwwB,GAAM7tB,OACNy+F,GAAK,GACLA,GAAK,GACL5wE,GAAMxwB,MACNwwB,GAAM7tB,OACN8iD,EACAC,EACA,EACA,EACA07C,GAAK,GACLZ,IACA,EAAKv+F,EAAAwqB,gBAEL,EACAnlB,MAGAg+E,GACAA,EAAkB3K,SAAS+jB,GAAWtC,cAAY,MAE5C6E,EAER9E,GAAuB72F,KAAI,CACzBwlB,EACA0wE,EACAhrE,GACAkuE,GACA,EACA,KACA,UAIFvJ,EAAO,IACJ1kF,GAAI,EAAGywF,GAAKJ,GAAM7jG,OAAQwT,GAAIywF,KAAMzwF,GAAC,CAExC0wF,IADAC,GAAON,GAAMrwF,KACuB,GACpC+f,GAAKnvB,KAAQ47F,YAAYkE,GAAOlM,EAASE,EAAO,IAChD1vC,EAAiC27C,GAAK,GACtC17C,EAAU0vC,GAAW5kE,GAAM7tB,OAASmtB,GAC9B4uE,GAAUr9F,KAAQu8F,iCACtBptE,GAAMxwB,MACNwwB,GAAM7tB,OACNy+F,GAAK,GACLA,GAAK,GACL5wE,GAAMxwB,MACNwwB,GAAM7tB,OACN8iD,EACAC,EACA,EACA,EACA07C,GAAK,GACLZ,IACA,EAAKv+F,EAAAwqB,gBAEL,EACAnlB,MAGAg+E,GACAA,EAAkB3K,SAAS+jB,GAAWtC,cAAY,MAE5C6E,EAER9E,GAAuB72F,KAAI,CACzBwlB,EACA0wE,EACAhrE,GACAkuE,GACA,EACA,KACA,OAIFpZ,GACFA,EAAkB7/C,KAChB02D,GAAuBv6F,IAAIs6F,YAGtBhB,GAAI,EAAGmG,GAAKlF,GAAuBl/F,OAAQi+F,GAAImG,KAAMnG,GAAC75F,KACxDm9F,oBAAoBnzF,MAAKhK,KAAO86F,GAAuBjB,QAIhEl+F,uBAEmB4vF,qBACO/oF,IAAxBo7F,EAAiC,KAE7B3gG,GAAS2gG,EADf33F,EAAiEolF,EAAY,GACjCgT,MACxCphG,GAAM,OACDA,KAGTtB,uBAEmB+xF,KACjBkR,EACFN,SAEKtiB,MAAMvyD,KAEX9tB,uBAEmBgyF,oBACrBt+E,EAA2Bg8E,EAAY,GACvC2S,EAA4B3S,EAAY,GACxC77E,EAAIsuF,EAAiBzuF,GAGrB+uF,GAFA3uF,EAAIquF,EAAiBzuF,EAAI,IAEX,GAAO,GADrB8uF,EAAU3uF,EAAI,GAAO,KAENyuF,GAASG,IAAWF,IACjCz0E,EAAQitE,OAAOlnF,EAAGC,GAClBwuF,EAAQE,EACRD,EAAQE,GAEL/uF,GAAK,EAAGA,EAAI2uF,EAAI3uF,GAAK,EAGxB8uF,GAFA3uF,EAAIsuF,EAAiBzuF,IAEP,GAAO,EACrB+uF,GAFA3uF,EAAIquF,EAAiBzuF,EAAI,IAEX,GAAO,EACjBA,GAAK2uF,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAChDz0E,EAAQk3D,OAAOnxE,EAAGC,GAClBwuF,EAAQE,EACRD,EAAQE,KAGVziG,uBAEmBwwF,eACrBqS,EAAsBnT,OACjBiQ,WAAajQ,EAAY,GAE1BiT,SACGtiB,MAAMvyD,GACX60E,EAAc,EACVC,IACF90E,EAAQjrB,SACR+/F,EAAgB,IAIpB90E,EAAQm3D,UAAmEyK,EAAY,KACrF1vF,uBAEmB2wF,iBACrBmS,EAAwBpT,EACpBkT,IACF90E,EAAQjrB,SACR+/F,EAAgB,QAEbjC,gBAAgB7yE,EAAkC4hE,KACrD1vF,uBAEmBiyF,OACjBgR,EACFL,IAEA90E,EAAQjrB,WAER7C,kBAGAA,GAIJ2iG,GAAWt+F,KACRg8E,MAAMvyD,GAET80E,GACF90E,EAAQjrB,UAaZ68F,EAAAn7F,UAAAskF,QAAO,SACL/6D,EACA0wE,EACA9rF,EACA+rF,EACAhW,EACAH,QAEKyX,cAAgBtB,OAChBuD,SACHl0E,EACA0wE,EACA9rF,EAASrO,KACJqpF,aACLjF,OACA5hF,OACAA,EACAyhF,IAcJoX,EAAAn7F,UAAAg6F,oBAAmB,SACjBzwE,EACApb,EACA+rF,EACAwD,EACAC,eAEKnC,cAAgBtB,OACTuD,SACVl0E,EACA,EACApb,EAASrO,KACJupF,0BACL,EACAqU,EACAC,IAGNxC,EAhkCA,aAkkCeD,8cCvpCZlyF,EAAAF,OAAAzN,EAAA,kBAAA,IACaokG,IApBb,IAAAplF,EAAAtf,EAAA,gDAoBa0kG,EACd1qF,EACAC,EACA7J,EACA8J,EACAnY,EACAwiG,EACA/L,EACA/lF,EACAie,EACAwB,EACAxT,EACAjU,OAEI+Q,EAAKxB,EAAgBC,GACrB2B,EAAK5B,EAAgBC,EAAS,GAC9BsB,EAAK,EACLI,EAAK,EACL+wC,EAAgB,EAChBs4C,EAAW,WAENC,IACP1pF,EAAKC,EACLG,EAAKC,EAELJ,EAAKxB,EADLC,GAAUC,GAEV0B,EAAK5B,EAAgBC,EAAS,GAC9B+qF,GAAYt4C,EACZA,EAAgB/3C,KAAK8W,MAAMjQ,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,OAGpEspF,UACOhrF,EAAS7J,EAAM8J,GAAU8qF,EAAWt4C,EAAgB63C,WAEzDhrB,GAAegrB,EAASS,GAAYt4C,EAClCw4C,EAAM5lF,EAAAW,KAAQ1E,EAAIC,EAAI+9D,GACtB4rB,EAAM7lF,EAAAW,KAAQtE,EAAIC,EAAI29D,GAEtB6rB,EAAcnrF,EAASC,EACvBmrF,EAAcL,EACdM,EAAOf,EAAS9xF,EAAQie,EAAyBwB,EAAMnwB,EAAM2c,GAC5DzE,EAAS7J,EAAM8J,GAAU8qF,EAAWt4C,EAAgB44C,GACzDL,IAEF1rB,GAAe+rB,EAAON,GAAYt4C,MAK9ByjC,EAJE5zE,EAAI+C,EAAAW,KAAQ1E,EAAIC,EAAI+9D,GACpB/8D,EAAI8C,EAAAW,KAAQtE,EAAIC,EAAI29D,MAItB9uE,EAAQ,KACJ86F,EAAI,CAAIL,EAAQC,EAAQ5oF,EAAMC,YAC7B+oF,EAAM,EAAG,EAAG,EAAG96F,EAAU86F,EAAMA,GACtCpV,EAAUoV,EAAK,GAAKA,EAAK,QAEzBpV,EAAU+U,EAAS3oF,MA2BjBipF,EAxBE5kF,EAAKjM,KAAKiM,GACV5e,EAAM,GACNyjG,EAAgBL,EAAclrF,IAAWD,KAG/CyyC,EAAgB,EAChBs4C,EAAWK,EACX7pF,EAAKxB,EAHLC,EAASmrF,GAITxpF,EAAK5B,EAAgBC,EAAS,GAG1BwrF,EAAa,CACfR,QAEIS,EAAgB/wF,KAAKyrC,MAAMxkC,EAAKD,EAAIH,EAAKD,GACzC40E,IACFuV,GAAiBA,EAAgB,GAAK9kF,EAAKA,OAEvCrM,GAAKgI,EAAO2oF,GAAU,EACtB1wF,GAAKgI,EAAO2oF,GAAU,SAC5BnjG,EAAO,GAAC,CAAKuS,EAAGC,GAAI8wF,EAAOf,GAAU,EAAGmB,EAAe3jG,GAChDC,UAIAtB,EAAI,EAAG6H,EAAKxG,EAAKpB,OAAQD,EAAI6H,GAAE,CACtC08F,QACIxwF,EAAQE,KAAKyrC,MAAMxkC,EAAKD,EAAIH,EAAKD,MACjC40E,IACF17E,GAASA,EAAQ,GAAKmM,EAAKA,QAEPrZ,IAAlBi+F,EAA2B,KACzBl6E,EAAQ7W,EAAQ+wF,KACpBl6E,GAASA,EAAQ1K,GAAK,EAAKA,EAAK0K,GAAS1K,EAAK,EAAIA,EAAK,EACnDjM,KAAK0F,IAAIiR,GAASktE,EAAQ,OACrB,KAGXgN,EAAgB/wF,UAEVkxF,EAASjlG,EACXklG,EAAa,EACVllG,EAAI6H,IAAM7H,EAAC,KAEV4mB,EAAM7U,EAAQie,EAAyBwB,EAAMnwB,EADrCouF,EAAU5nF,EAAK7H,EAAI,EAAIA,GAC2Bge,MAE9DzE,EAASC,EAAS9J,GAClB40F,EAAWt4C,EAAgB63C,EAASqB,EAAat+E,EAAM,EAAC,MAI1Ds+E,GAAct+E,KAEZ5mB,IAAMilG,OAGJd,EAAQ1U,EACVpuF,EAAK8jG,UAAUt9F,EAAKo9F,EAAQp9F,EAAK7H,GACjCqB,EAAK8jG,UAAUF,EAAQjlG,GAC3B64E,GAAegrB,EAASqB,EAAa,EAAIZ,GAAYt4C,EAC/Cn4C,EAAC+K,EAAAW,KAAQ1E,EAAIC,EAAI+9D,GACjB/kE,EAAC8K,EAAAW,KAAQtE,EAAIC,EAAI29D,GACvBv3E,EAAOgH,KAAI,CAAEuL,EAAGC,EAAGoxF,EAAa,EAAGnxF,EAAOowF,IAC1CN,GAAUqB,UAEL5jG,mQCpIImoF,IAeVl8E,EAAAF,OAAAzN,EAAA,+BAAA,IACa8pF,IAkIbn8E,EAAAF,OAAAzN,EAAA,aAAA,IACa+pF,IA9Jb,IAAAyb,EAAA9lG,EAAA,wQAWUmqF,EAAwB,YAgBrBC,EACd7/E,EACAo1C,EACAjjB,EACAulD,EACAlpE,EACAvO,EACAC,OAEM/G,EAAQ6G,EAAK,GAAK4/E,EAClB9jF,EAASkE,EAAK,GAAK4/E,EACnB37D,EAAOyE,EAAAC,sBAAyBxvB,EAAO2C,GAC7CmoB,EAAQu3E,uBAAwB,UAC1BxxE,EAAS/F,EAAQ+F,OACjB4sD,EAAQ,IAAA6kB,EAAA1kG,QACZktB,EACA27D,EACApxE,EACA,KACAtO,GAEIw7F,EAAevpE,EAAS/7B,OAExBulG,EAAcvxF,KAAKqI,MAAO,SAAuBipF,GACjDE,EAAgB,GACbzlG,EAAI,EAAGA,GAAKulG,IAAgBvlG,EAAC,KAC9BsK,EAAU0xB,EAASh8B,EAAI,GACvB0lG,EAAuBp7F,EAAQ8sE,oBAAsBmK,KACtDA,OAGD9P,EAASi0B,EAAqBp7F,EAASR,MACtC2nE,GAGAvjE,MAAM4B,QAAQ2hE,KACjBA,EAAM,CAAIA,YAGN1uE,EAAK,KAAM,UADH/C,EAAIwlG,GACoBjzF,SAAS,KAAK7H,OAAM,GACjDW,EAAI,EAAGsjC,EAAK8iC,EAAOxxE,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KACvCs6F,EAAgBl0B,EAAOpmE,GACvBd,EAAWo7F,EAAczkB,qBAAdykB,CAAoCr7F,MAChDC,GAAQS,EAAA8M,WAAgBO,EAAQ9N,EAASO,kBAGxCpI,EAAQijG,EAAc/vF,QACtB0qE,EAAO59E,EAAMm+E,UACfP,GACFA,EAAK2F,SAASljF,OAEVF,EAASH,EAAMq+E,YACjBl+E,IACFA,EAAOojF,SAASljF,GAChBF,EAAOsiF,YAAY,OAErBziF,EAAM4+E,aAAQz6E,OACR25E,EAAQmlB,EAAc7kB,cACxBN,GAAgC,IAAvBA,EAAM38D,aAAkB,KAC7B+hF,EAAUplB,EAAM8C,mBACjBsiB,EAAO,aAINC,EAAMrgG,SAASC,cAAa,UAClCogG,EAAI7iG,MAAQ4iG,EAAQ,GACpBC,EAAIlgG,OAASigG,EAAQ,OACfE,EAAaD,EAAI9vE,WAAU,KAAK,CAAGgwE,OAAO,IAChDD,EAAW7gB,UAAYliF,EACvB+iG,EAAWE,SAAS,EAAG,EAAGH,EAAI7iG,MAAO6iG,EAAIlgG,QACzCjD,EAAM0+E,SAAQ,IAAAlO,EAAA+yB,KAAA,CAEVJ,IAAKA,EACLD,QAASA,EACTv4D,OAAQmzC,EAAMuC,YACdmjB,aAAYC,EAAAvlG,QAAkBi3C,OAC9BuuD,aAAYD,EAAAvlG,QAAkBi3C,OAC9Bt+B,OAAQinE,EAAMiD,YACd3gE,QAAS,EACTjZ,KAAM22E,EAAM7oE,UACZ5F,MAAOyuE,EAAMwB,WACbj4E,SAAUy2E,EAAMtzC,cAChB6oB,eAAgByqB,EAAM5nB,2BAItBhzD,EAASlD,EAAMihB,aAAe,GAChC0iF,EAAiBZ,EAAiB7/F,MAEpCygG,EAAc,GACdZ,EAAiB7/F,GAAUygG,EAC3BA,EAAcr0D,EAAApxC,QAAcy2C,SAAO,GACnCgvD,EAAcr0D,EAAApxC,QAAcqxC,QAAM,GAClCo0D,EAAcr0D,EAAApxC,QAAcu2C,aAAW,GACvCkvD,EAAcr0D,EAAApxC,QAAcs2C,OAAK,IAEnCmvD,EAAe97F,EAASwnC,UAAU/lB,QAAO,QAAQ,KAAO1jB,KACtDiC,EACA7H,eAKA4jG,EAAavmG,OAAOD,KAAK2lG,GAC5B7gG,IAAI8Z,QACJnX,KAAIoG,EAAAkB,2BACShH,GAAP7H,EAAI,EAAQsmG,EAAWrmG,QAAQD,EAAI6H,IAAM7H,EAAC,KAC3CqmG,EAAiBZ,EAAiBa,EAAWtmG,YACxCuG,KAAQ8/F,OACXE,EAAeF,EAAe9/F,OAC3B8E,EAAI,EAAGsjC,EAAK43D,EAAatmG,OAAQoL,EAAIsjC,EAAItjC,GAAK,EAAC,CACtDo1E,EAAStJ,SAASovB,EAAal7F,EAAI,YAC1B2U,EAAI,EAAGwmF,EAAKvnD,EAAWh/C,OAAQ+f,EAAIwmF,IAAMxmF,EAChDygE,EAASntD,aAAa2rB,EAAWj/B,IACjCygE,EAAS2R,aAAamU,EAAal7F,aAKpCyiB,EAAQwtE,aAAa,EAAG,EAAGznE,EAAO7wB,MAAO6wB,EAAOluB,iBAYzCgkF,EAAU/gF,EAAOozB,EAAUiiE,OACnCwI,EAAc,MAChBxI,EAAS,KACLpqF,EAAII,KAAKqI,MAAMrI,KAAK2P,MAAMhb,EAAM,IAAM6gF,GACtC31E,EAAIG,KAAKqI,MAAMrI,KAAK2P,MAAMhb,EAAM,IAAM6gF,GAItCj5E,EAGJ,GAHSoO,EAAAC,MACFhL,EAAG,EAAGoqF,EAAUj7F,MAAQ,GAAC4b,EAAAC,MACxB/K,EAAG,EAAGmqF,EAAUt4F,OAAS,GAAKs4F,EAAUj7F,OAE5Cob,EAAI6/E,EAAU70F,KAAKoH,GACnB6N,EAAI4/E,EAAU70F,KAAKoH,EAAQ,GAE3BxQ,EADIi+F,EAAU70F,KAAKoH,EAAQ,GACnB,KAAO6N,EAAI,IAAMD,GACzBonF,EAAcvxF,KAAKqI,MAAO,SAAuB0f,EAAS/7B,QAC5DD,GAAKA,EAAIwlG,GAAgB,GAC3BiB,EAAen+F,KAAK0zB,EAASh8B,EAAIwlG,EAAc,WAG5CiB,0nCC5ITC,EAAA,SAAAhjG,GASK,SACHijG,EACE74E,EACAwK,EACAjgB,EACA3F,EACA+rF,EACAmI,EACAC,OAPFhiG,EASEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKiiG,SAAWh5E,EAMhBjpB,EAAKwzB,YAAcC,EAMnBzzB,EAAKs4C,QAAU9kC,EAMfxT,EAAKkwD,WAAariD,EAMlB7N,EAAKk7F,cAAgBtB,EAMrB55F,EAAKkiG,kBAAoBH,EAMzB/hG,EAAKmiG,eAAiBH,EAMtBhiG,EAAKoiG,kBAAoB,KAMzBpiG,EAAKqiG,oBAAsB,KAM3BriG,EAAKsiG,kBAAoB,KAMzBtiG,EAAKuiG,WAAa,KAMlBviG,EAAKwiG,aAAe,KAMpBxiG,EAAK07E,OAAS,KAMd17E,EAAKyiG,cAAgB,EAMrBziG,EAAK0iG,cAAgB,EAMrB1iG,EAAK2iG,aAAe,EAMpB3iG,EAAK4iG,cAAgB,EAMrB5iG,EAAK6iG,cAAgB,EAMrB7iG,EAAK8iG,cAAgB,EAMrB9iG,EAAK+iG,sBAAuB,EAM5B/iG,EAAKgjG,eAAiB,EAMtBhjG,EAAKijG,YAAW,CAAI,EAAG,GAMvBjjG,EAAKkjG,YAAc,EAMnBljG,EAAK87E,MAAK,GAMV97E,EAAK4wF,aAAe,EAMpB5wF,EAAK6wF,aAAe,EAMpB7wF,EAAK8wF,qBAAsB,EAM3B9wF,EAAK+wF,cAAgB,EAMrB/wF,EAAKmjG,WAAU,CAAI,EAAG,GAMtBnjG,EAAKgxF,eAAiB,KAMtBhxF,EAAKkxF,iBAAmB,KAMxBlxF,EAAKoxF,WAAa,KAMlBpxF,EAAKi7F,kBAAiB,GAMtBj7F,EAAKojG,mBAAkBn0E,EAAAriB,kBA/NWnN,EAAAqiG,EAAAjjG,GAyOpCijG,EAAApiG,UAAA2jG,YAAW,SAAC5uF,EAAiBC,EAAQ7J,EAAK8J,WAC9B+mE,YAGJ4hB,EAAgBC,EAAA55C,YACpBlvC,EACAC,EACA7J,EACA,EAACrL,KACI0wD,WAAU1wD,KACVy7F,mBAEDhyE,EAAOzpB,KAAQyiG,SACfqB,EAAc9jG,KAAQ4jG,mBACtBlC,EAAQj4E,EAAQuF,YACI,QAAjBo0E,gBACP35E,EAAQuF,YAAc0yE,EAAK1hG,KAAQojG,mBAEjC19F,EAAQ1F,KAAQwjG,oBACXD,uBACP79F,GAAQ1F,KAAS07F,uBAEV//F,EAAI,EAAG6H,EAAKs6F,EAAiBliG,OAAQD,EAAI6H,EAAI7H,GAAK,EAAC,KACpD6T,EAAIsuF,EAAiBniG,GAACqE,KAASijG,cAC/BxzF,EAAIquF,EAAiBniG,EAAI,GAACqE,KAASkjG,iBAE1B,IAAbx9F,GACuB,GADT1F,KACTyjG,YAAY,IACM,GADCzjG,KACnByjG,YAAY,GAAO,KAElB90D,EAAUn/B,EAACxP,KAAQijG,cACnBr0D,EAAUn/B,EAACzP,KAAQkjG,wBAEvBY,EACAn1D,EACAC,EACA,EACA,EACAlpC,GACCipC,GACAC,GAEHnlB,EAAQwF,aAAajlB,MAAMyf,EAASq6E,GACpCr6E,EAAQ7b,UAAU+gC,EAASC,GAC3BnlB,EAAQ/b,MAAK1N,KAAMyjG,YAAY,GAACzjG,KAAQyjG,YAAY,IACpDh6E,EAAQ4F,UAASrvB,KACVk8E,OAAMl8E,KACNqjG,cAAarjG,KACbsjG,cAAatjG,KACb0jG,YAAW1jG,KACXmjG,cAAYnjG,KACXijG,eAAajjG,KACbkjG,cAAaljG,KACd0jG,YAAW1jG,KACXmjG,cAEP15E,EAAQwF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpCxF,EAAQ4F,UAASrvB,KACVk8E,OAAMl8E,KACNqjG,cAAarjG,KACbsjG,cAAatjG,KACb0jG,YAAW1jG,KACXmjG,aACL3zF,EACAC,EAACzP,KACI0jG,YAAW1jG,KACXmjG,cAIe,QAAjBC,gBACP35E,EAAQuF,YAAc0yE,KAW1BY,EAAApiG,UAAA6jG,UAAS,SAAC9uF,EAAiBC,EAAQ7J,EAAK8J,WAC5By8E,YAAwB,KAAd5xF,KAASs8E,YAGpBkV,gBAAcxxF,KAChBgkG,qBAAoBhkG,KAAMwxF,qBAExBE,kBAAgB1xF,KAClBikG,uBAAsBjkG,KAAM0xF,uBAE9BwS,qBAAoBlkG,KAAM4xF,gBACzBkM,EAAgBC,EAAA55C,YACpBlvC,EACAC,EACA7J,EACA8J,EAAMnV,KACD0wD,WAAU1wD,KACVy7F,mBAEDhyE,EAAOzpB,KAAQyiG,SACjB/8F,EAAQ1F,KAAQuxF,uBACXD,sBACP5rF,GAAQ1F,KAAS07F,eAEZxmF,EAAS7J,EAAK6J,GAAUC,EAAM,KAC7B3F,EAAIsuF,EAAiB5oF,GAAMlV,KAASoxF,aACpC3hF,EAAIquF,EAAiB5oF,EAAS,GAAClV,KAASqxF,gBAE/B,IAAb3rF,GACsB,GADR1F,KACT2jG,WAAW,IACM,GADC3jG,KAClB2jG,WAAW,GAAO,KAEjBG,EAAcr0E,EAAA5hB,QAAA7N,KACb4jG,mBACLp0F,EACAC,EACA,EACA,EACA/J,GACC8J,GACAC,GAEHga,EAAQwF,aAAajlB,MAAMyf,EAASq6E,GACpCr6E,EAAQ7b,UAAU4B,EAAGC,GACrBga,EAAQ/b,MAAK1N,KAAM2jG,WAAW,GAAC3jG,KAAQ2jG,WAAW,SACzCjS,kBACPjoE,EAAQ06E,WAAUnkG,KAAMs8E,MAAO,EAAG,QAE3BkV,gBACP/nE,EAAQ26E,SAAQpkG,KAAMs8E,MAAO,EAAG,GAElC7yD,EAAQwF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,aAE3ByiE,kBACPjoE,EAAQ06E,WAAUnkG,KAAMs8E,MAAO9sE,EAAGC,QAE3B+hF,gBACP/nE,EAAQ26E,SAAQpkG,KAAMs8E,MAAO9sE,EAAGC,MAexC6yF,EAAApiG,UAAAmkG,cAAa,SAACpvF,EAAiBC,EAAQ7J,EAAK8J,EAAQmvF,OAC5C76E,EAAOzpB,KAAQyiG,SACf3E,EAAgBC,EAAA55C,YACpBlvC,EACAC,EACA7J,EACA8J,EAAMnV,KACD0wD,WAAU1wD,KACVy7F,mBAEPhyE,EAAQitE,OAAOoH,EAAiB,GAAIA,EAAiB,QACjDliG,EAASkiG,EAAiBliG,OAC1B0oG,IACF1oG,GAAU,WAEHD,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/B8tB,EAAQk3D,OAAOmd,EAAiBniG,GAAImiG,EAAiBniG,EAAI,WAEvD2oG,GACF76E,EAAQs3D,YAEH11E,GAWTi3F,EAAApiG,UAAAqkG,WAAU,SAACtvF,EAAiBC,EAAQirC,EAAMhrC,WAC/BxZ,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAC1CuZ,EAAMlV,KAAQqkG,cACZpvF,EACAC,EACAirC,EAAKxkD,GACLwZ,GACA,UAGGD,GAUTotF,EAAApiG,UAAA8tF,WAAU,SAAC9nF,wBACY4yC,QAAS5yC,EAASO,sBAG9Bs8F,YAAU/iG,KAASgjG,aAAY,MAC7BD,YAAU/iG,KACZgkG,qBAAoBhkG,KAAM+iG,iBAExBC,cAAYhjG,KACdikG,uBAAsBjkG,KAAMgjG,kBAE7BlF,EAAgB0G,EAAAriD,gBACpBj8C,EAAQlG,KACH0wD,WAAU1wD,KACVy7F,mBAED3rF,EAAKguF,EAAiB,GAAKA,EAAiB,GAC5C/tF,EAAK+tF,EAAiB,GAAKA,EAAiB,GAC5C9iD,EAASprC,KAAK8W,KAAK5W,EAAKA,EAAKC,EAAKA,GAClC0Z,EAAOzpB,KAAQyiG,SACrBh5E,EAAQg3D,YACRh3D,EAAQi3D,IACNod,EAAiB,GACjBA,EAAiB,GACjB9iD,EACA,EACA,EAAIprC,KAAKiM,SAEFknF,YACPt5E,EAAQwyD,YAED+mB,cACPv5E,EAAQjrB,SAGE,UAAL89E,OAAKt8E,KACP+jG,UAAU79F,EAAS4M,YAAa,EAAG,EAAG,KAW/CwvF,EAAApiG,UAAA4yE,SAAQ,SAACz0E,QACFmtF,mBAAmBntF,EAAMm+E,UAAWn+E,EAAMq+E,kBAC1CwS,cAAc7wF,EAAMo+E,iBACpB4S,aAAahxF,EAAMs+E,YAM1B2lB,EAAApiG,UAAA+uB,aAAY,SAAC5gB,QACNqiD,WAAariD,GAUpBi0F,EAAApiG,UAAA6tF,aAAY,SAAC7nF,UACEA,EAASwnC,0BAEFmF,WACXg8C,UACmD3oF,wBAGxC4sC,iBACXu7C,eACwDnoF,wBAG7C8sC,aACX+7C,YACqD7oF,wBAG1C+sC,iBACXw7C,eACwDvoF,wBAG7CgtC,uBACXq7C,oBAC6DroF,wBAGlDitC,mBACXw7C,iBAC0DzoF,wBAG/CktC,yBACX+6C,uBACgEjoF,wBAGrD0nC,YACXogD,WACoD9nF,KAiB/Do8F,EAAApiG,UAAAguF,YAAW,SAACjoF,EAAS5H,OACb6H,EAAW7H,EAAMw+E,qBAANx+E,CAA4B4H,GACxCC,GAAQS,EAAA8M,WAAAzT,KAAqB84C,QAAS5yC,EAASO,oBAG/CqsE,SAASz0E,QACT0vF,aAAa7nF,KASpBo8F,EAAApiG,UAAAiuF,uBAAsB,SAACjoF,WACfs1C,EAAat1C,EAASu+F,qBACnB9oG,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAACqE,KAC5C+tF,aAAavyC,EAAW7/C,KAUjC2mG,EAAApiG,UAAA2uF,UAAS,SAAC3oF,QACCw8F,oBACPx8F,EAAiEA,EAASu9C,oBAAmBzjD,KACtF0iG,kBAAiB1iG,KACjB2iG,qBAGH1tF,EAAkB/O,EAAS+nC,qBAC3B94B,EAASjP,EAASooC,iBACf4tC,QAAMl8E,KACR6jG,YAAY5uF,EAAiB,EAAGA,EAAgBrZ,OAAQuZ,GAEjD,UAALmnE,OAAKt8E,KACP+jG,UAAU9uF,EAAiB,EAAGA,EAAgBrZ,OAAQuZ,IAU/DmtF,EAAApiG,UAAAuuF,eAAc,SAACvoF,QACJw8F,oBACPx8F,EAAsEA,EAASu9C,oBAAmBzjD,KAC3F0iG,kBAAiB1iG,KACjB2iG,qBAGH1tF,EAAkB/O,EAAS+nC,qBAC3B94B,EAASjP,EAASooC,iBACf4tC,QAAMl8E,KACR6jG,YAAY5uF,EAAiB,EAAGA,EAAgBrZ,OAAQuZ,GAEjD,UAALmnE,OAAKt8E,KACP+jG,UAAU9uF,EAAiB,EAAGA,EAAgBrZ,OAAQuZ,IAU/DmtF,EAAApiG,UAAAmuF,eAAc,SAACnoF,WACJw8F,oBACPx8F,EAAsEA,EAASu9C,oBAAmBzjD,KAC3F0iG,kBAAiB1iG,KACjB2iG,mCAGY7pD,QAAS5yC,EAASO,sBAG9Bu8F,aAAY,MACdiB,uBAAsBjkG,KAAMgjG,kBAC3Bv5E,EAAOzpB,KAAQyiG,SACfxtF,EAAkB/O,EAAS+nC,qBACjCxkB,EAAQg3D,iBACH4jB,cACHpvF,EACA,EACAA,EAAgBrZ,OAChBsK,EAASooC,aACT,GAEF7kB,EAAQjrB,YAEI,UAAL89E,MAAK,KACNooB,EAAex+F,EAAS4tE,uBACzBiwB,UAAUW,EAAc,EAAG,EAAG,MAUvCpC,EAAApiG,UAAAquF,oBAAmB,SAACroF,QACTw8F,oBACPx8F,EAA2EA,EAASu9C,oBAAmBzjD,KAChG0iG,kBAAiB1iG,KACjB2iG,qBAGHgC,EAAiBz+F,EAASO,iCACXqyC,QAAS6rD,YAGrB3B,aAAY,MACdiB,uBAAsBjkG,KAAMgjG,kBAC3Bv5E,EAAOzpB,KAAQyiG,SACfxtF,EAAkB/O,EAAS+nC,qBAC7B/4B,EAAS,EACPirC,EAAqCj6C,EAASs5C,UAC9CrqC,EAASjP,EAASooC,YACxB7kB,EAAQg3D,oBACC9kF,EAAI,EAAG6H,EAAK28C,EAAKvkD,OAAQD,EAAI6H,IAAM7H,EAC1CuZ,EAAMlV,KAAQqkG,cACZpvF,EACAC,EACAirC,EAAKxkD,GACLwZ,GACA,GAGJsU,EAAQjrB,YAEI,UAAL89E,MAAK,KACNsoB,EAAgB1+F,EAASkvE,wBAC1B2uB,UAAUa,EAAe,EAAGA,EAAchpG,OAAQ,MAU3D0mG,EAAApiG,UAAA6uF,YAAW,SAAC7oF,WACDw8F,oBACPx8F,EAAmEA,EAASu9C,oBAAmBzjD,KACxF0iG,kBAAiB1iG,KACjB2iG,mCAGY7pD,QAAS5yC,EAASO,sBAG9Bu8F,cAAYhjG,KAAS+iG,WAAU,MAC7BA,YAAU/iG,KACZgkG,qBAAoBhkG,KAAM+iG,iBAExBC,cAAYhjG,KACdikG,uBAAsBjkG,KAAMgjG,kBAE7Bv5E,EAAOzpB,KAAQyiG,SACrBh5E,EAAQg3D,iBACH8jB,WACHr+F,EAASo5C,6BACT,EAC8Bp5C,EAASs5C,UACvCt5C,EAASooC,kBAEFy0D,YACPt5E,EAAQwyD,YAED+mB,cACPv5E,EAAQjrB,YAGE,UAAL89E,MAAK,KACNuoB,EAAoB3+F,EAASu5C,4BAC9BskD,UAAUc,EAAmB,EAAG,EAAG,MAS5CvC,EAAApiG,UAAAyuF,iBAAgB,SAACzoF,WACNw8F,oBACPx8F,EAAwEA,EAASu9C,oBAAmBzjD,KAC7F0iG,kBAAiB1iG,KACjB2iG,mCAGY7pD,QAAS5yC,EAASO,sBAG9Bu8F,cAAYhjG,KAAS+iG,WAAU,MAC7BA,YAAU/iG,KACZgkG,qBAAoBhkG,KAAM+iG,iBAExBC,cAAYhjG,KACdikG,uBAAsBjkG,KAAMgjG,kBAE7Bv5E,EAAOzpB,KAAQyiG,SACfxtF,EAAkB/O,EAASo5C,6BAC7BpqC,EAAS,EACP4vC,EAAQ5+C,EAASswE,WACjBrhE,EAASjP,EAASooC,YACxB7kB,EAAQg3D,oBACC9kF,EAAI,EAAG6H,EAAKshD,EAAMlpD,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCwkD,EAAO2E,EAAMnpD,GACnBuZ,EAAMlV,KAAQukG,WAAWtvF,EAAiBC,EAAQirC,EAAMhrC,QAEjD4tF,YACPt5E,EAAQwyD,YAED+mB,cACPv5E,EAAQjrB,YAGE,UAAL89E,MAAK,KACNwoB,EAAqB5+F,EAASuwE,6BAC/BstB,UAAUe,EAAoB,EAAGA,EAAmBlpG,OAAQ,MAQrE0mG,EAAApiG,UAAA8jG,qBAAoB,SAAC/R,OACbxoE,EAAOzpB,KAAQyiG,SACfsC,EAAgB/kG,KAAQ4iG,kBACzBmC,EAMCA,EAAiBnkB,WAAaqR,EAAUrR,YAC1CmkB,EAAiBnkB,UAAYqR,EAAUrR,UACvCn3D,EAAQm3D,UAAYqR,EAAUrR,YAPhCn3D,EAAQm3D,UAAYqR,EAAUrR,eACzBgiB,kBAAiB,CACpBhiB,UAAWqR,EAAUrR,aAc3B0hB,EAAApiG,UAAA+jG,uBAAsB,SAAC/R,OACfzoE,EAAOzpB,KAAQyiG,SACfuC,EAAkBhlG,KAAQ6iG,oBAC3BmC,GAoBCA,EAAmBxlB,SAAW0S,EAAY1S,UAC5CwlB,EAAmBxlB,QAAU0S,EAAY1S,QACzC/1D,EAAQ+1D,QAAU0S,EAAY1S,SAE5B/1D,EAAQq3D,uBACEkkB,EAAmBrlB,SAAUuS,EAAYvS,WACnDl2D,EAAQq3D,YACLkkB,EAAmBrlB,SAAWuS,EAAYvS,UAG3CqlB,EAAmBplB,gBAAkBsS,EAAYtS,iBACnDolB,EAAmBplB,eAAiBsS,EAAYtS,eAChDn2D,EAAQm2D,eAAiBsS,EAAYtS,iBAGrColB,EAAmBvlB,UAAYyS,EAAYzS,WAC7CulB,EAAmBvlB,SAAWyS,EAAYzS,SAC1Ch2D,EAAQg2D,SAAWyS,EAAYzS,UAE7BulB,EAAmBnkB,WAAaqR,EAAYrR,YAC9CmkB,EAAmBnkB,UAAYqR,EAAYrR,UAC3Cp3D,EAAQo3D,UAAYqR,EAAYrR,WAE9BmkB,EAAmBtlB,YAAcwS,EAAYxS,aAC/CslB,EAAmBtlB,WAAawS,EAAYxS,WAC5Cj2D,EAAQi2D,WAAawS,EAAYxS,YAE/BslB,EAAmBzlB,aAAe2S,EAAY3S,cAChDylB,EAAmBzlB,YAAc2S,EAAY3S,YAC7C91D,EAAQ81D,YAAc2S,EAAY3S,eAhDpC91D,EAAQ+1D,QAAU0S,EAAY1S,QAC1B/1D,EAAQq3D,cACVr3D,EAAQq3D,YAAYoR,EAAYvS,UAChCl2D,EAAQm2D,eAAiBsS,EAAYtS,gBAEvCn2D,EAAQg2D,SAAWyS,EAAYzS,SAC/Bh2D,EAAQo3D,UAAYqR,EAAYrR,UAChCp3D,EAAQi2D,WAAawS,EAAYxS,WACjCj2D,EAAQ81D,YAAc2S,EAAY3S,iBAC7BsjB,oBAAmB,CACtBrjB,QAAS0S,EAAY1S,QACrBG,SAAUuS,EAAYvS,SACtBC,eAAgBsS,EAAYtS,eAC5BH,SAAUyS,EAAYzS,SACtBoB,UAAWqR,EAAYrR,UACvBnB,WAAYwS,EAAYxS,WACxBH,YAAa2S,EAAY3S,eAyC/B+iB,EAAApiG,UAAAgkG,qBAAoB,SAAC/R,OACb1oE,EAAOzpB,KAAQyiG,SACfwC,EAAgBjlG,KAAQ8iG,kBACxB5P,EAAYf,EAAUe,UACxBf,EAAUe,UAAStyF,EAAAsqB,iBAElB+5E,GAUCA,EAAiB93E,MAAQglE,EAAUhlE,OACrC83E,EAAiB93E,KAAOglE,EAAUhlE,KAClC1D,EAAQ0D,KAAOglE,EAAUhlE,MAEvB83E,EAAiB/R,WAAaA,IAChC+R,EAAiB/R,UAA4CA,EAC7DzpE,EAAQypE,UAA4CA,GAElD+R,EAAiBpR,cAAgB1B,EAAU0B,eAC7CoR,EAAiBpR,aAAkD1B,EAAU0B,aAC7EpqE,EAAQoqE,aAAkD1B,EAAU0B,gBAnBtEpqE,EAAQ0D,KAAOglE,EAAUhlE,KACzB1D,EAAQypE,UAA4CA,EACpDzpE,EAAQoqE,aAAkD1B,EAAU0B,kBAC/DiP,kBAAiB,CACpB31E,KAAMglE,EAAUhlE,KAChB+lE,UAAWA,EACXW,aAAc1B,EAAU0B,gBAyB9ByO,EAAApiG,UAAAsrF,mBAAkB,SAAC5K,EAAWrB,MACvBqB,OAGG6K,EAAiB7K,EAAUd,gBAC5BijB,WAAU,CACbniB,UAASb,EAAAC,YACPyL,GAA+B7qF,EAAA+pB,wBANvB3qB,KACP+iG,WAAa,QASfxjB,OAGGmM,EAAmBnM,EAAYO,WAC/B6L,EAAqBpM,EAAYa,aACjCwL,EAAsBrM,EAAYU,cAClC4L,EAA4BtM,EAAYW,oBACxC4L,EAAsBvM,EAAYY,cAClC4L,EAAmBxM,EAAY34E,WAC/BolF,EAAwBzM,EAAYc,qBACrC2iB,aAAY,CACfxjB,aACyBh9E,IAAvBmpF,EACIA,EAAkB/qF,EAAAgqB,eAExB+0D,SAAUiM,GAAyChrF,EAAAiqB,gBACnD+0D,eAAgBiM,GACajrF,EAAAkqB,sBAE7B20D,cAC0Bj9E,IAAxBspF,EACIA,EAAmBlrF,EAAAmqB,gBAEzB81D,UAAS7gF,KACFg0B,kBACiBxxB,IAArBupF,EACGA,EAAgBnrF,EAAAyqB,kBAEtBq0D,gBAC4Bl9E,IAA1BwpF,EACIA,EAAqBprF,EAAAoqB,kBAE3Bu0D,YAAWQ,EAAAC,YACT0L,GAAmC9qF,EAAAqqB,0BAjCzBjrB,KACTgjG,aAAe,MA4CxBV,EAAApiG,UAAAgvF,cAAa,SAACC,MACPA,OAGG7O,EAAY6O,EAAW77E,aACxBgtE,OAGG4kB,EAAc/V,EAAWzQ,YAEzBymB,EAAahW,EAAW1S,SAAS,GACjC2oB,EAAcjW,EAAW/P,YACzBimB,EAAalW,EAAW5N,qBACzB0hB,cAAgBiC,EAAY,QAC5BhC,cAAgBgC,EAAY,QAC5B/B,aAAe7iB,EAAU,QACzBpE,OAASipB,OACT/B,cAAgBjU,EAAW3vE,kBAC3B6jF,cAAgB+B,EAAY,QAC5B9B,cAAgB8B,EAAY,QAC5B7B,qBAAuBpU,EAAW56B,yBAClCivC,eAAiBrU,EAAWtmD,mBAC5B46D,YAAW,MACTzvE,YAAcqxE,EAAW,QACzBrxE,YAAcqxE,EAAW,SAE3B3B,YAAcpjB,EAAU,QArBjBtgF,KACPk8E,OAAS,UALHl8E,KACRk8E,OAAS,MAmClBomB,EAAApiG,UAAAmvF,aAAY,SAACC,MACNA,OAGG0E,EAAgB1E,EAAU9S,aAC3BwX,OAGGsR,EAAqBtR,EAAclU,gBACpC0R,eAAc,CACjB5Q,UAASb,EAAAC,YACPslB,GAAuC1kG,EAAA+pB,wBAN3B3qB,KACXwxF,eAAiB,SASlByC,EAAkB3E,EAAU5S,eAC7BuX,OAGGsR,EAAuBtR,EAAgBnU,WACvC0lB,EAAyBvR,EAAgB7T,aACzCqlB,EAA0BxR,EAAgBhU,cAC1CylB,EAAgCzR,EAAgB/T,oBAChDylB,EAA0B1R,EAAgB9T,cAC1CylB,EAAuB3R,EAAgBrtF,WACvCi/F,EAA4B5R,EAAgB5T,qBAC7CqR,iBAAgB,CACnBlS,aAC6Bh9E,IAA3BgjG,EACIA,EAAsB5kG,EAAAgqB,eAE5B+0D,SAAU8lB,GACiB7kG,EAAAiqB,gBAE3B+0D,eAAgB8lB,GACiB9kG,EAAAkqB,sBAEjC20D,cAC8Bj9E,IAA5BmjG,EACIA,EAAuB/kG,EAAAmqB,gBAE7B81D,eAC2Br+E,IAAzBojG,EACIA,EAAoBhlG,EAAAyqB,iBAE1Bq0D,gBACgCl9E,IAA9BqjG,EACIA,EAAyBjlG,EAAAoqB,kBAE/Bu0D,YAAWQ,EAAAC,YACTulB,GAA2C3kG,EAAAqqB,0BAlC7BjrB,KACb0xF,iBAAmB,SAqCpBoU,EAAWxW,EAAU4E,UACrBU,EAActF,EAAUuF,aACxBC,EAAcxF,EAAUyF,aACxBC,EAAqB1F,EAAU/6B,oBAC/B0gC,EAAe3F,EAAUzmD,cACzBsrD,EAAY7E,EAAU/N,gBACtBwkB,EAAWzW,EAAU3S,UACrBqpB,EAAgB1W,EAAUiF,eAC1B0R,EAAmB3W,EAAUkF,uBAC9B5C,WAAU,CACbzkE,UAAmB3qB,IAAbsjG,EAAyBA,EAAQllG,EAAA8pB,YACvCwoE,eACoB1wF,IAAlBwjG,EAA8BA,EAAaplG,EAAAsqB,iBAC7C2oE,kBACuBrxF,IAArByjG,EACIA,EAAgBrlG,EAAAuqB,0BAGnBmxD,WAAqB95E,IAAbujG,EAAyBA,EAAQ,QACzC3U,kBACa5uF,IAAhBoyF,EAAyB50F,KAAQg0B,YAAc4gE,EAAc,OAC1DvD,kBACa7uF,IAAhBsyF,EAAyB90F,KAAQg0B,YAAc8gE,EAAc,OAC1DxD,yBACoB9uF,IAAvBwyF,GAAmCA,OAChCzD,mBAAiC/uF,IAAjByyF,EAA6BA,EAAe,OAC5D0O,WAAU,MACR3vE,YAAcmgE,EAAU,QACxBngE,YAAcmgE,EAAU,SAjFnBn0F,KACPs8E,MAAK,IAoFhBgmB,EA7kCA,sBA+kCeD,icC3mCb6D,SAAQ,WAKR1yD,OAAM,iLChBLtqC,EAAAF,OAAAzN,EAAA,UAAA,IAAAiyE,EAAAjxE,moCCAA,MAAAomC,EAAA1nC,EAAA,uvBAmDHkrG,EAAA,SAAA9mG,GAGK,SACH+mG,EAAY5uE,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAW,GAKrB/Y,OAA8Bjc,IAApBrF,EAAQshB,QAAwBthB,EAAQshB,QAAU,EAK5D/Y,OAAgClD,IAArBrF,EAAQuI,SAAyBvI,EAAQuI,SAAW,EAK/DgI,OAA0BlL,IAAlBrF,EAAQuQ,MAAsBvQ,EAAQuQ,MAAQ,EAKtDgkD,OACuBlvD,IAA3BrF,EAAQu0D,gBAA+Bv0D,EAAQu0D,gBAEjDlxD,EAAAnB,EAAAU,KAAAC,KAAA,CACEye,QAASA,EACT/Y,SAAUA,EACVgI,MAAOA,EACPgwE,kBAC2Bl7E,IAAzBrF,EAAQugF,aAA6BvgF,EAAQugF,aAAY,CAAI,EAAG,GAClEhsB,eAAgBA,WAOb2W,aAA6B7lE,IAAnBrF,EAAQ6rC,OAAuB7rC,EAAQ6rC,OAAM,CAAI,GAAK,IAMrExoC,EAAK6lG,kBAAoB,KAMzB7lG,EAAK8lG,mBACsB9jG,IAAzBrF,EAAQopG,aACJppG,EAAQopG,aAAYC,EAAAjqG,QACTwZ,SAMjBvV,EAAKimG,mBACsBjkG,IAAzBrF,EAAQ0kG,aACJ1kG,EAAQ0kG,aAAYC,EAAAvlG,QACJ2pG,SAMtB1lG,EAAKkmG,mBACsBlkG,IAAzBrF,EAAQ4kG,aACJ5kG,EAAQ4kG,aAAYD,EAAAvlG,QACJ2pG,SAMtB1lG,EAAKmmG,kBACqBnkG,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAIzD,IACGy+E,OAAwB35E,IAAhBrF,EAAQqkG,IAAoBrkG,EAAQqkG,IAAM,KAKlDD,OAA8B/+F,IAApBrF,EAAQokG,QAAwBpkG,EAAQokG,QAAU,KAK9D5oF,EAAMxb,EAAQwb,oBAEDnW,IAARmW,GAAqBwjE,GAAQ,aAC9BA,GAAUA,GAASolB,EAAU,QAExB/+F,IAARmW,GAAoC,IAAfA,EAAI/c,SAAiBugF,IAC7CxjE,EAAuCwjE,EAAOxjE,KAAG7H,EAAA/D,OAAWovE,kBAE/C35E,IAARmW,GAAqBA,EAAI/c,OAAS,EAAG,GAIzC,IACGq8F,OACYz1F,IAAhBrF,EAAQwb,IAAiBo/E,EAAAx7F,QAAc4nC,KAAI4zD,EAAAx7F,QAAcsnC,cAM3DrjC,EAAKmhF,YAA2Bn/E,IAAlBrF,EAAQuB,MAAmByZ,EAAAc,QAAW9b,EAAQuB,OAAS,KAMrE8B,EAAKomG,WAAUC,EAAA1qG,IACbggF,EACuBxjE,EACvB4oF,EACA/gG,EAAKmmG,aACL1O,EACAz3F,EAAKmhF,QAOPnhF,EAAKsmG,aAA6BtkG,IAAnBrF,EAAQ+X,OAAuB/X,EAAQ+X,OAAM,CAAI,EAAG,GAKnE1U,EAAKumG,mBACsBvkG,IAAzBrF,EAAQ6pG,aACJ7pG,EAAQ6pG,aAAYR,EAAAjqG,QACTwZ,SAMjBvV,EAAK09E,QAAU,KAMf19E,EAAK89E,WAAyB97E,IAAjBrF,EAAQqI,KAAqBrI,EAAQqI,KAAO,cA3J1CvF,EAAAmmG,EAAA/mG,GAmKjB+mG,EAAAlmG,UAAAqR,MAAK,eACG7D,EAAK1N,KAAQ29E,sBACRyoB,EAAI,CACbp9D,OAAMhpC,KAAOqoE,QAAQhiE,QACrBkgG,aAAYvmG,KAAOsmG,cACnBzE,aAAY7hG,KAAOymG,cACnB1E,aAAY/hG,KAAO0mG,cACnBhpG,YAAWsC,KAAO2mG,aAClBjoG,MAAKsB,KACE2hF,QAAM3hF,KAAS2hF,OAAOt7E,MAAKrG,KACvB2hF,OAAOt7E,QAAKrG,KACZ2hF,aAAUn/E,EACrBmW,IAAG3Y,KAAOinG,SACV/xF,OAAMlV,KAAO8mG,QAAQzgG,QACrB2gG,aAAYhnG,KAAO+mG,cACnBvhG,KAAqB,OAAjBxF,KAAOs+E,MAAct+E,KAAQs+E,MAAMj4E,aAAU7D,EACjDic,QAAOze,KAAOwf,aACd9R,MAAO7D,MAAM4B,QAAQiC,GAASA,EAAMrH,QAAUqH,EAC9ChI,SAAQ1F,KAAO6oC,cACf6oB,eAAc1xD,KAAOu0D,uBAUzB6xC,EAAAlmG,UAAAw+E,UAAS,mBACE2nB,kBAAiB,OAAArmG,KACZqmG,sBAEVr9D,EAAMhpC,KAAQqoE,QACZ7iE,EAAIxF,KAAQsT,kBAEXmzF,eAAa3E,EAAAvlG,QAAoB2pG,UAAQlmG,KACzC0mG,eAAa5E,EAAAvlG,QAAoB2pG,SAAQ,KAEzC1gG,EAAI,OACA,KAETwjC,EAAMhpC,KAAQqoE,QAAQhiE,aACbogG,eAAa3E,EAAAvlG,QAAoB2pG,WACxCl9D,EAAO,IAAMxjC,EAAK,SAEXkhG,eAAa5E,EAAAvlG,QAAoB2pG,WACxCl9D,EAAO,IAAMxjC,EAAK,YAIb8gG,eAAaE,EAAAjqG,QAAewZ,SAAQ,KACtCvQ,EAAI,OACA,KAELwjC,IAAMhpC,KAAUqoE,UAClBr/B,EAAMhpC,KAAQqoE,QAAQhiE,cAGjBigG,eAAaE,EAAAjqG,QAAeyZ,WAAShW,KACrCsmG,eAAaE,EAAAjqG,QAAeuZ,eAEjCkzB,EAAO,IAAMA,EAAO,GAAKxjC,EAAK,SAGzB8gG,eAAaE,EAAAjqG,QAAesZ,aAAW7V,KACvCsmG,eAAaE,EAAAjqG,QAAeuZ,eAEjCkzB,EAAO,IAAMA,EAAO,GAAKxjC,EAAK,QAG5Bk4E,EAAY19E,KAAQ49E,yBAC1B50C,EAAO,IAAM00C,EAAa,GAC1B10C,EAAO,IAAM00C,EAAa,QAErB2oB,kBAAoBr9D,OACbq9D,mBAUdD,EAAAlmG,UAAAgnG,UAAS,SAACl+D,QACHq/B,QAAUr/B,OACVq9D,kBAAoB,MAQ3BD,EAAAlmG,UAAA4/E,SAAQ,uBACM6B,QASdykB,EAAAlmG,UAAAu8E,SAAQ,SAACxoD,eACK2yE,WAAWnqB,SAASxoD,IASlCmyE,EAAAlmG,UAAA8+E,cAAa,SAAC/qD,eACA2yE,WAAW5nB,cAAc/qD,IAMvCmyE,EAAAlmG,UAAA++E,aAAY,uBACE2nB,WAAWtzF,WAMzB8yF,EAAAlmG,UAAAg/E,yBAAwB,uBACVD,gBAMdmnB,EAAAlmG,UAAAi/E,cAAa,uBACCynB,WAAWznB,iBAMzBinB,EAAAlmG,UAAAy+E,qBAAoB,uBACNioB,WAAWjoB,wBAQzBynB,EAAAlmG,UAAAk/E,UAAS,mBACElB,QAAO,OAAAl+E,KACFk+E,YAEVhpE,EAAMlV,KAAQ8mG,gBAETC,eAAaP,EAAAjqG,QAAewZ,SAAQ,KACrCvQ,EAAIxF,KAAQsT,UACZ6zF,EAAannG,KAAQ4mG,WAAWtzF,cACjC9N,IAAS2hG,EAAa,OAClB,KAETjyF,EAASA,EAAO7O,aAET0gG,eAAaP,EAAAjqG,QAAeyZ,WAAShW,KACrC+mG,eAAaP,EAAAjqG,QAAeuZ,eAEjCZ,EAAO,GAAKiyF,EAAc,GAAK3hG,EAAK,GAAK0P,EAAO,SAG3C6xF,eAAaP,EAAAjqG,QAAesZ,aAAW7V,KACvC+mG,eAAaP,EAAAjqG,QAAeuZ,eAEjCZ,EAAO,GAAKiyF,EAAc,GAAK3hG,EAAK,GAAK0P,EAAO,gBAG/CgpE,QAAUhpE,OACHgpE,SAQdkoB,EAAAlmG,UAAA+mG,OAAM,uBACQL,WAAWK,UAQzBb,EAAAlmG,UAAAoT,QAAO,uBACQgrE,MAA+Bt+E,KAAUs+E,MAApCt+E,KAAQ4mG,WAAWtzF,WAMvC8yF,EAAAlmG,UAAAm/E,kBAAiB,SAAC/8D,QACXskF,WAAWpqF,iBAAgBzZ,EAAAxG,QAAWkhB,OAAQ6E,IAUrD8jF,EAAAlmG,UAAAkkC,KAAI,gBACGwiE,WAAWxiE,QAMlBgiE,EAAAlmG,UAAAo/E,oBAAmB,SAACh9D,QACbskF,WAAWhkF,oBAAmB7f,EAAAxG,QAAWkhB,OAAQ6E,IAE1D8jF,EApYA,sBAsYeD,kZC9abtwF,YAAW,cAKXC,aAAY,eAKZC,SAAQ,WAKRC,UAAS,oLCgQR9M,EAAAF,OAAAzN,EAAA,OAAA,IACaY,irBA9QZirG,EAAqB,KAEzBC,EAAA,SAAAhoG,GAQK,SACHioG,EAAYnrB,EAAOxjE,EAAKnT,EAAM9H,EAAau6F,EAAYv5F,OAAvD8B,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKivF,mBAAqB,KAM1BjvF,EAAK07E,OAAUC,GAAK,IAAOzrD,MAEP,OAAhBhzB,IAC+B8C,EAAW,OAAE9C,YAAcA,GAO9D8C,EAAKw9E,QAAO,GAMZx9E,EAAKmhF,OAASjjF,EAMd8B,EAAK+mG,UAAY,KAMjB/mG,EAAKgnG,YAAcvP,EAMnBz3F,EAAK89E,MAAQ94E,EAMbhF,EAAKinG,KAAO9uF,EAKZnY,EAAKknG,kBAnEeznG,EAAAqnG,EAAAjoG,GA0EtBioG,EAAApnG,UAAAynG,WAAU,mBACcnlG,SAAbklG,UAAsB1nG,KAASwnG,cAAWzP,EAAAx7F,QAAgBsnC,OAAM,CAClEujE,IACHA,EAAkBl5E,EAAAC,sBAAyB,EAAG,IAEhDi5E,EAAmB/3E,UAASrvB,KAAMk8E,OAAQ,EAAG,OAE3CkrB,EAAmBnQ,aAAa,EAAG,EAAG,EAAG,QACpCyQ,UAAW,QACTp4F,GACP83F,EAAqB,UAChBM,UAAW,UAGK,SAAbA,UAMdJ,EAAApnG,UAAA0nG,qBAAoB,gBACbnlG,cAAaM,EAAAxG,QAAWkhB,SAM/B6pF,EAAApnG,UAAA2nG,kBAAiB,gBACVL,YAAWzP,EAAAx7F,QAAc8nB,WACzByjF,sBACAF,wBAMPN,EAAApnG,UAAA6nG,iBAAgB,gBACTP,YAAWzP,EAAAx7F,QAAcsnC,YACrBy6C,YACFpC,OAAOv9E,MAAKqB,KAAQs+E,MAAM,QAC1BpC,OAAO56E,OAAMtB,KAAQs+E,MAAM,SAE3BA,MAAK,MAASpC,OAAOv9E,WAAYu9E,OAAO56E,aAE1CwmG,sBACAF,wBAOPN,EAAApnG,UAAAu8E,SAAQ,SAACxoD,eACF+zE,cAAc/zE,QACP+pD,QAAQ/pD,GAAUj0B,KAASg+E,QAAQ/pD,GAAUj0B,KAASk8E,QAOpEorB,EAAApnG,UAAA8+E,cAAa,SAAC/qD,eACP+zE,cAAc/zE,QACP+pD,QAAQ/pD,GAAcA,EAAa,GAMjDqzE,EAAApnG,UAAAi/E,cAAa,uBACCqoB,aAMdF,EAAApnG,UAAAy+E,qBAAoB,oBACR8Q,2BACCkY,aAAU,KACXhpG,EAAKqB,KAAQs+E,MAAM,GACnBh9E,EAAMtB,KAAQs+E,MAAM,GACpB70D,EAAOyE,EAAAC,sBAAyBxvB,EAAO2C,GAC7CmoB,EAAQk4E,SAAS,EAAG,EAAGhjG,EAAO2C,QACzBmuF,mBAAqBhmE,EAAQ+F,iBAE7BigE,mBAAkBzvF,KAAQk8E,mBAGvBuT,oBAOd6X,EAAApnG,UAAAoT,QAAO,uBACOgrE,OAMdgpB,EAAApnG,UAAA+mG,OAAM,uBACQQ,MAMdH,EAAApnG,UAAAkkC,KAAI,mBACOojE,aAAWzP,EAAAx7F,QAAe4nC,KAAI,MAChCqjE,YAAWzP,EAAAx7F,QAAcqpB,YAEG5lB,KAAa,OAAE2Y,IAAG3Y,KAAQynG,WAClDn4F,QACFu4F,yBAEFN,UAASU,EAAAC,YAAAloG,KACPk8E,OAAMl8E,KACN+nG,iBAAiB9mG,KAAIjB,MAAAA,KACrB6nG,kBAAkB5mG,KAAIjB,SASjCsnG,EAAApnG,UAAA8nG,cAAa,SAAC/zE,WACF0tD,SAAM3hF,KAASg+E,QAAQ/pD,QAI3BzE,EAASruB,SAASC,cAAa,eAChC48E,QAAQ/pD,GAAczE,EAE3BA,EAAO7wB,MAAQiR,KAAK0X,KAAItnB,KAAMk8E,OAAOv9E,MAAQs1B,GAC7CzE,EAAOluB,OAASsO,KAAK0X,KAAItnB,KAAMk8E,OAAO56E,OAAS2yB,OAEzCk0E,EAAM34E,EAAOkC,WAAU,SAC7By2E,EAAIz6F,MAAMumB,EAAYA,GACtBk0E,EAAI94E,UAASrvB,KAAMk8E,OAAQ,EAAG,GAE9BisB,EAAIC,yBAAwB,WAII,aAA5BD,EAAIC,0BAAuCpoG,KAAS2nG,aACtDQ,EAAIvnB,UAASzoE,EAAAY,SAAA/Y,KAAiB2hF,QAC9BwmB,EAAIxG,SAAS,EAAG,EAAGnyE,EAAO7wB,MAAO6wB,EAAOluB,QAExC6mG,EAAIC,yBAAwB,iBAC5BD,EAAI94E,UAASrvB,KAAMk8E,OAAQ,EAAG,gBAExBmsB,EAAUF,EAAIlR,aAAa,EAAG,EAAGznE,EAAO7wB,MAAO6wB,EAAOluB,QACtDyD,EAAOsjG,EAAQtjG,KACfgV,EAAC/Z,KAAQ2hF,OAAO,GAAK,IACrB3nE,EAACha,KAAQ2hF,OAAO,GAAK,IACrBv+E,EAACpD,KAAQ2hF,OAAO,GAAK,IACrBx+E,EAACnD,KAAQ2hF,OAAO,GAEbhmF,EAAI,EAAG6H,EAAKuB,EAAKnJ,OAAQD,EAAI6H,EAAI7H,GAAK,EAC7CoJ,EAAKpJ,IAAMoe,EACXhV,EAAKpJ,EAAI,IAAMqe,EACfjV,EAAKpJ,EAAI,IAAMyH,EACf2B,EAAKpJ,EAAI,IAAMwH,EAEjBglG,EAAIG,aAAaD,EAAS,EAAG,MASjCf,EAAApnG,UAAA4nG,eAAc,gBACHP,iBACFA,iBACAA,UAAY,OAGvBD,EAjQA,qBA4QgBnrG,EAAIggF,EAAOxjE,EAAKnT,EAAM9H,EAAau6F,EAAYv5F,OACzDga,EAAS6vF,EAAArwF,OAAkB/b,IAAIwc,EAAKjb,EAAagB,UAChDga,IACHA,EAAS,IAAO2uF,EAAUlrB,EAAOxjE,EAAKnT,EAAM9H,EAAau6F,EAAYv5F,YACtD6O,IAAIoL,EAAKjb,EAAagB,EAAOga,IAEvCA,YAGM2uF,iWCxIZn+F,EAAAF,OAAAzN,EAAA,eAAA,IACa2sG,IA7Jb,MAAAvlE,EAAA1nC,EAAA,goBA0BHutG,EAAA,SAAAnpG,GAQK,SACHopG,EACEz0F,EACAvO,EACAwuB,EACAtb,EACAjb,EACAgrG,OANFloG,EAQEnB,EAAAU,KAAAC,KAAMgU,EAAQvO,EAAYwuB,EAAU8jE,EAAAx7F,QAAa4nC,OAAInkC,YAMrDQ,EAAKinG,KAAO9uF,EAMZnY,EAAK07E,OAAM,IAAOxrD,MACE,OAAhBhzB,IACF8C,EAAK07E,OAAOx+E,YAAcA,GAO5B8C,EAAK+mG,UAAY,KAMjB/mG,EAAK6e,MAAK04E,EAAAx7F,QAAc4nC,KAMxB3jC,EAAKmoG,mBAAqBD,WAlDHzoG,EAAAwoG,EAAAppG,GAyDzBopG,EAAAvoG,UAAAu8E,SAAQ,uBACMP,QAQdusB,EAAAvoG,UAAA2nG,kBAAiB,gBACVxoF,MAAK04E,EAAAx7F,QAAc8nB,WACnByjF,sBACAtqF,WAQPirF,EAAAvoG,UAAA6nG,iBAAgB,gBACUvlG,SAAfiD,aAAwBzF,KAC1ByF,WAAUkB,EAAAuM,UAAAlT,KAAkBgU,QAAMhU,KAASk8E,OAAO56E,aAEpD+d,MAAK04E,EAAAx7F,QAAcsnC,YACnBikE,sBACAtqF,WASPirF,EAAAvoG,UAAAkkC,KAAI,gBACO/kB,OAAK04E,EAAAx7F,QAAe4nC,MAAInkC,KAASqf,OAAK04E,EAAAx7F,QAAe8nB,aACvDhF,MAAK04E,EAAAx7F,QAAcqpB,aACnBpI,eACAmrF,mBAAkB3oG,KAAAA,KAAYynG,WAC9BF,UAAYW,EAAWloG,KACrBk8E,OAAMl8E,KACN+nG,iBAAiB9mG,KAAIjB,MAAAA,KACrB6nG,kBAAkB5mG,KAAIjB,SAQjCyoG,EAAAvoG,UAAA68E,SAAQ,SAACZ,QACFD,OAASC,GAQhBssB,EAAAvoG,UAAA4nG,eAAc,gBACHP,iBACFA,iBACAA,UAAY,OAGvBkB,EA3HA,qBAmIgBP,EAAY/rB,EAAOysB,EAAaC,OACxCrH,EAAuCrlB,KAEzCqlB,EAAI7oF,KAAG8Y,EAAAzB,aAAA,KACH84E,EAAUtH,EAAI7wE,SAChBo4E,GAAY,SAIhBD,EACGhsG,MAAI,WACCisG,GACFH,OAGHI,OAAK,SAAWl4E,GACXi4E,IAIU,kBAAVj4E,EAAM1f,MACO,wBAAb0f,EAAM5f,QAEN03F,IAEAC,QAnBM,WACZE,GAAY,OAyBV18C,EAAY,cACLm1C,EAAGz+F,EAAAxG,QAAY0oB,KAAM2jF,gBACrBpH,EAAGz+F,EAAAxG,QAAY8nB,MAAOwkF,sBAGjCx8C,EAAa9kD,QAAO7G,EAAAmiB,0BAIT2lF,2TCtMZ,MAAAxmF,EAAA/mB,EAAA,kjBAQHguG,EAAA,SAAA5pG,GAMK,SACH6pG,EAAYl1F,EAAQvO,EAAYwuB,EAAY5U,OAA5C7e,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKwT,OAASA,EAMdxT,EAAKwzB,YAAcC,EAMnBzzB,EAAKiF,WAAaA,EAMlBjF,EAAK6e,MAAQA,WAhCOpf,EAAAipG,EAAA7pG,GAsCtB6pG,EAAAhpG,UAAAsd,QAAO,gBACA/a,cAAaM,EAAAxG,QAAWkhB,SAM/ByrF,EAAAhpG,UAAAuG,UAAS,uBACKuN,QAOdk1F,EAAAhpG,UAAAu8E,SAAQ,gCAORysB,EAAAhpG,UAAA8+E,cAAa,uBACChrD,aAMdk1E,EAAAhpG,UAAAsoC,cAAa,uBACwB/iC,YAMrCyjG,EAAAhpG,UAAAod,SAAQ,uBACM+B,OAOd6pF,EAAAhpG,UAAAkkC,KAAI,yBAGN8kE,EArFA,sBAuFeD,0PC/FZ,IAAAE,EAAAluG,EAAA,qGAgDHmuG,EAAA,WAGK,SACHC,EAAY7xE,OACJr6B,EAAUq6B,GAAW,GAKxBx3B,KACEspG,MAAQnsG,EAAQgwB,KAKlBntB,KACE8sD,UAAY3vD,EAAQuI,SAKtB1F,KACEyxD,gBAAkBt0D,EAAQu0D,eAK5B1xD,KACEohF,OAASjkF,EAAQuQ,MAKnB1N,KACEqhF,YAAWzkD,EAAAwsB,YAA4B5mD,IAAlBrF,EAAQuQ,MAAsBvQ,EAAQuQ,MAAQ,GAKrE1N,KACEs8E,MAAQn/E,EAAQH,KAKlBgD,KACEupG,WAAapsG,EAAQ+1F,UAKvBlzF,KACEwpG,cAAgBrsG,EAAQ02F,aAK1B7zF,KACEg8E,WACcx5E,IAAjBrF,EAAQ8+E,KACJ9+E,EAAQ8+E,KAAI,IAAAmB,EAAA7gF,QAAA,CACFmC,MAnGI,SAwGjBsB,KACEypG,eACkBjnG,IAArBrF,EAAQs2F,SAAyBt2F,EAAQs2F,SAAW7jF,KAAKiM,GAAK,EAK7D7b,KACE0pG,gBACmBlnG,IAAtBrF,EAAQk1F,UAA0Bl1F,EAAQk1F,UAASC,EAAA/1F,QAAiBs2C,MAKnE7yC,KACE2pG,YAAcxsG,EAAQ63B,SAKxBh1B,KACEq8E,aAA6B75E,IAAnBrF,EAAQqB,OAAuBrB,EAAQqB,OAAS,KAK5DwB,KACE4pG,cAA+BpnG,IAApBrF,EAAQqxB,QAAwBrxB,EAAQqxB,QAAU,EAK/DxuB,KACE6pG,cAA+BrnG,IAApBrF,EAAQsxB,QAAwBtxB,EAAQsxB,QAAU,EAK/DzuB,KACE8pG,gBAAkB3sG,EAAQy1F,eAC3Bz1F,EAAQy1F,eACR,KAKD5yF,KACE+pG,kBAAoB5sG,EAAQ01F,iBAC7B11F,EAAQ01F,iBACR,KAKD7yF,KACE0nC,cAA+BllC,IAApBrF,EAAQ2wB,QAAwB,KAAO3wB,EAAQ2wB,eAQjEu7E,EAAAnpG,UAAAqR,MAAK,eACG7D,EAAK1N,KAAQ29E,sBACR0rB,EAAI,CACbl8E,KAAIntB,KAAOk0F,UACX7B,UAASryF,KAAOs0F,eAChBb,SAAQzzF,KAAOq0F,cACfr/D,SAAQh1B,KAAOo0F,cACf1uF,SAAQ1F,KAAO6oC,cACf6oB,eAAc1xD,KAAOu0D,oBACrB7mD,MAAO7D,MAAM4B,QAAQiC,GAASA,EAAMrH,QAAUqH,EAC9C1Q,KAAIgD,KAAO28E,UACXuW,UAASlzF,KAAOu0F,eAChBV,aAAY7zF,KAAOw0F,kBACnBvY,KAAIj8E,KAAOw8E,UAAOx8E,KAAUw8E,UAAUjrE,aAAU/O,EAChDhE,OAAMwB,KAAO08E,YAAS18E,KAAU08E,YAAYnrE,aAAU/O,EACtDgsB,QAAOxuB,KAAO60F,aACdpmE,QAAOzuB,KAAO+0F,aACdnC,eAAc5yF,KAAOy0F,oBAAiBz0F,KAC7By0F,oBAAoBljF,aACzB/O,EACJqwF,iBAAgB7yF,KAAO00F,sBAAmB10F,KACjC00F,sBAAsBnjF,aAC3B/O,EACJsrB,QAAO9tB,KAAO20F,gBASlB0U,EAAAnpG,UAAAk0F,YAAW,uBACGuV,WAQdN,EAAAnpG,UAAAg0F,QAAO,uBACOoV,OAQdD,EAAAnpG,UAAAm0F,YAAW,uBACGoV,WAQdJ,EAAAnpG,UAAAo0F,aAAY,uBACEoV,YAQdL,EAAAnpG,UAAA20F,WAAU,uBACI+U,UAQdP,EAAAnpG,UAAA60F,WAAU,uBACI8U,UAQdR,EAAAnpG,UAAAs8E,QAAO,uBACOR,OAQdqtB,EAAAnpG,UAAAq0D,kBAAiB,uBACH9C,iBAQd43C,EAAAnpG,UAAA2oC,YAAW,uBACGikB,WAQdu8C,EAAAnpG,UAAAy9E,SAAQ,uBACMyD,QAOdioB,EAAAnpG,UAAAqhF,cAAa,uBACCF,aAQdgoB,EAAAnpG,UAAAw8E,UAAS,uBACKL,SAQdgtB,EAAAnpG,UAAAy8E,QAAO,uBACOL,OAQd+sB,EAAAnpG,UAAAq0F,aAAY,uBACEgV,YAQdF,EAAAnpG,UAAAs0F,gBAAe,uBACDgV,eAQdH,EAAAnpG,UAAAu0F,kBAAiB,uBACHqV,iBAQdT,EAAAnpG,UAAAw0F,oBAAmB,uBACLqV,mBAQdV,EAAAnpG,UAAAy0F,WAAU,uBACIjtD,UASd2hE,EAAAnpG,UAAA8pG,YAAW,SAACh1E,QACL20E,UAAY30E,GASnBq0E,EAAAnpG,UAAA+pG,QAAO,SAAC98E,QACDm8E,MAAQn8E,GASfk8E,EAAAnpG,UAAAgqG,YAAW,SAACzW,QACLgW,UAAYhW,GASnB4V,EAAAnpG,UAAAiqG,WAAU,SAAC37E,QACJo7E,SAAWp7E,GASlB66E,EAAAnpG,UAAAkqG,WAAU,SAAC37E,QACJo7E,SAAWp7E,GASlB46E,EAAAnpG,UAAAmqG,aAAY,SAAChY,QACNqX,WAAarX,GASpBgX,EAAAnpG,UAAAs0D,kBAAiB,SAAC9C,QACXD,gBAAkBC,GASzB23C,EAAAnpG,UAAA48E,QAAO,SAACb,QACDD,MAAQC,GASfotB,EAAAnpG,UAAA+nC,YAAW,SAACviC,QACLonD,UAAYpnD,GASnB2jG,EAAAnpG,UAAAshF,SAAQ,SAAC9zE,QACF0zE,OAAS1zE,OACT2zE,YAAWzkD,EAAAwsB,YAAoB5mD,IAAVkL,EAAsBA,EAAQ,IAS1D27F,EAAAnpG,UAAA88E,UAAS,SAACx+E,QACH69E,QAAU79E,GASjB6qG,EAAAnpG,UAAA+8E,QAAO,SAACjgF,QACDs/E,MAAQt/E,GASfqsG,EAAAnpG,UAAAoqG,aAAY,SAACpX,QACNqW,WAAarW,GASpBmW,EAAAnpG,UAAAqqG,gBAAe,SAAC1W,QACT2V,cAAgB3V,GASvBwV,EAAAnpG,UAAAsqG,kBAAiB,SAACvuB,QACX6tB,gBAAkB7tB,GASzBotB,EAAAnpG,UAAAuqG,oBAAmB,SAACjsG,QACburG,kBAAoBvrG,GAS3B6qG,EAAAnpG,UAAAwqG,WAAU,SAAC58E,QACJ4Z,SAAW5Z,GAEpBu7E,EAxeA,aA0eeD,+OC/eZlgG,EAAAF,OAAAzN,EAAA,gBAAA,IACa2qF,IAQbh9E,EAAAF,OAAAzN,EAAA,uBAAA,IACaorF,IASbz9E,EAAAF,OAAAzN,EAAA,gBAAA,IACairF,IAgDbt9E,EAAAF,OAAAzN,EAAA,iBAAA,IACasrF,IAhHb,IAAAsR,EAAAl9F,EAAA,8KA4BG0vG,EAAkB,OA8TrB,SAEDvjB,EACAlhF,EACA7H,EACA4H,EACAohF,OAKIwX,EAHE1P,EAAa9wF,EAAMo+E,WACnB6S,EAAYjxF,EAAMs+E,UAGpB0K,IACFD,EAAeC,EACfwX,EACE1P,GAAcG,GAAaA,EAAU3S,UAAO,QAAUn6E,MAEtD2sF,EAAU,IACRA,EAAWhQ,iBAAa4Y,EAAAx7F,QAAiBsnC,OAAM,WAG7C+mE,EAAcxjB,EAAaoB,WAC/BnqF,EAAMihB,YAASw6E,EAAAv9F,QACH87F,OAEduS,EAAY1b,cAAcC,EAAY0P,GACtC+L,EAAY/b,UAAU3oF,EAAUD,MAE9BqpF,GAAaA,EAAU3S,UAAO,KAC1BkuB,EAAazjB,EAAaoB,WAC9BnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,EAAWuP,GACnCgM,EAAW5b,SAAS/oF,EAAUD,gBAzI/B,SAEDmhF,EACAlhF,EACA7H,EACA4H,EACAohF,OAEM9H,EAAclhF,EAAMq+E,eACtB6C,EAAW,KACPurB,EAAmB1jB,EAAaoB,WACpCnqF,EAAMihB,YAASw6E,EAAAv9F,QACHu2C,aAEdg4D,EAAiBtf,mBAAmB,KAAMjM,GAC1CurB,EAAiBzc,eAAenoF,EAAUD,OAEtCqpF,EAAYjxF,EAAMs+E,aACpB2S,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,GACxBub,EAAW5b,SAAS/oF,EAAUD,aAuK/B,SAEDmhF,EACAlhF,EACA7H,EACA4H,EACAohF,OAEMzG,EAAYviF,EAAMm+E,UAClB+C,EAAclhF,EAAMq+E,eACtBkE,GAAarB,EAAW,KACpBwrB,EAAgB3jB,EAAaoB,WACjCnqF,EAAMihB,YAASw6E,EAAAv9F,QACHy2C,SAEd+3D,EAAcvf,mBAAmB5K,EAAWrB,GAC5CwrB,EAAchc,YAAY7oF,EAAUD,OAEhCqpF,EAAYjxF,EAAMs+E,aACpB2S,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,GACxBub,EAAW5b,SAAS/oF,EAAUD,gBArE/B,SAEDmhF,EACAlhF,EACA7H,EACA4H,EACAohF,OAKIwX,EAHE1P,EAAa9wF,EAAMo+E,WACnB6S,EAAYjxF,EAAMs+E,UAGpB0K,IACFD,EAAeC,EACfwX,EACE1P,GAAcG,GAAaA,EAAU3S,UAAO,QAAUn6E,MAEtD2sF,EAAU,IACRA,EAAWhQ,iBAAa4Y,EAAAx7F,QAAiBsnC,OAAM,WAG7C+mE,EAAcxjB,EAAaoB,WAC/BnqF,EAAMihB,YAASw6E,EAAAv9F,QACH87F,OAEduS,EAAY1b,cAAcC,EAAY0P,GACtC+L,EAAYnc,eAAevoF,EAAUD,MAEnCqpF,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,EAAWuP,GACnCgM,EAAW5b,SAAS/oF,EAAUD,qBAnJ/B,SAEDmhF,EACAlhF,EACA7H,EACA4H,EACAohF,OAEM9H,EAAclhF,EAAMq+E,eACtB6C,EAAW,KACPurB,EAAmB1jB,EAAaoB,WACpCnqF,EAAMihB,YAASw6E,EAAAv9F,QACHu2C,aAEdg4D,EAAiBtf,mBAAmB,KAAMjM,GAC1CurB,EAAiBvc,oBAAoBroF,EAAUD,OAE3CqpF,EAAYjxF,EAAMs+E,aACpB2S,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,GACxBub,EAAW5b,SAAS/oF,EAAUD,kBAU/B,SAEDmhF,EACAlhF,EACA7H,EACA4H,EACAohF,OAEMzG,EAAYviF,EAAMm+E,UAClB+C,EAAclhF,EAAMq+E,eACtB6C,GAAeqB,EAAS,KACpBmqB,EAAgB3jB,EAAaoB,WACjCnqF,EAAMihB,YAASw6E,EAAAv9F,QACHy2C,SAEd+3D,EAAcvf,mBAAmB5K,EAAWrB,GAC5CwrB,EAAcpc,iBAAiBzoF,EAAUD,OAErCqpF,EAAYjxF,EAAMs+E,aACpB2S,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,GACxBub,EAAW5b,SAAS/oF,EAAUD,wBAzH/B,SAED0+E,EACAz+E,EACA7H,EACA4H,EACAohF,OAGI1rF,EAAG6H,EADDg4C,EAAat1C,EAASu+F,yBAEvB9oG,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAAC,EAE7CqvG,EADyBL,EAAmBnvD,EAAW7/C,GAAG+xC,YAExDi3C,EACAnpC,EAAW7/C,GACX0C,EACA4H,EACAohF,YA/JH,SAEDD,EACAlhF,EACA7H,EACA4H,EACAohF,OAEMzG,EAAYviF,EAAMm+E,UAClB+C,EAAclhF,EAAMq+E,eACtBkE,GAAarB,EAAW,KACpB0rB,EAAe7jB,EAAaoB,WAChCnqF,EAAMihB,YAASw6E,EAAAv9F,QACHqxC,QAEdq9D,EAAazf,mBAAmB5K,EAAWrB,GAC3C0rB,EAAajd,WAAW9nF,EAAUD,OAE9BqpF,EAAYjxF,EAAMs+E,aACpB2S,GAAaA,EAAU3S,UAAO,KAC1BkuB,GAAcxjB,GAA6BD,GAAcoB,WAC7DnqF,EAAMihB,YAASw6E,EAAAv9F,QACH2uE,MAEd2/B,EAAWxb,aAAaC,GACxBub,EAAW5b,SAAS/oF,EAAUD,eAtDlBigF,EAAaglB,EAAUC,UAC9BhxF,SAAQrJ,EAAA/D,OAAQm+F,GAAW,IAAM/wF,SAAQrJ,EAAA/D,OAAQo+F,GAAW,aAQrDxkB,EAAoBlhF,EAAYwuB,OACxC5e,EAAYmxE,EAAa/gF,EAAYwuB,UACpC5e,EAAYA,WAQLmxE,EAAa/gF,EAAYwuB,SA3Cd,GA4CIxuB,EAAcwuB,WAgD7B4yD,EACdlC,EACA1+E,EACA5H,EACAoiD,EACAn+B,EACAkhC,EACA6jC,OAEIvuD,GAAU,EACRq2D,EAAa9wF,EAAMo+E,cACrB0S,EAAU,KACR8I,EAAa9I,EAAWhQ,gBACxB8Y,GAAUF,EAAAx7F,QAAesnC,QAAUo0D,GAAUF,EAAAx7F,QAAe8nB,MAC9D8qE,EAAW7P,oBAAoBh9D,IAE3B21E,GAAUF,EAAAx7F,QAAe4nC,MAC3BgrD,EAAW/qD,OAEb6zD,EAAa9I,EAAWhQ,gBACxBgQ,EAAW9P,kBAAkB/8D,GAC7BwW,GAAU,UAsBb,SAED6rD,EACA1+E,EACA5H,EACAoiD,EACA+C,EACA6jC,OAEMnhF,EAAW7H,EAAMw+E,qBAANx+E,CAA4B4H,OACxCC,EAAQ,WAGP08C,EAAqB18C,EAASu9C,oBAClChD,EACA+C,MAEenlD,EAAM2G,cAErBomG,EAAezmB,EAAa/hC,EAAoBvkD,EAAO4H,SAGvD+kG,EADyBL,EAAmB/nD,EAAmBlV,YAE7Di3C,EACA/hC,EACAvkD,EACA4H,EACAohF,IA9CJgkB,CACE1mB,EACA1+E,EACA5H,EACAoiD,EACA+C,EACA6jC,GAGKvuD,EA+CN,SACMsyE,EAAezmB,EAAaz+E,EAAU7H,EAAO4H,MAChDC,EAASwnC,WAAOC,EAAApxC,QAAmB62C,oBAOxBuxC,EAAY6D,WAAWnqF,EAAMihB,YAASw6E,EAAAv9F,QAAgB+7F,SAC9D5N,WACuDxkF,EAC5DD,EACA5H,EAAM2G,4BAVAw2C,EAA6Et1C,EAAUu1C,gBACpF9/C,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChDyvG,EAAezmB,EAAanpC,EAAW7/C,GAAI0C,EAAO4H,y4CCjKxDqlG,EAAA,SAAAjsG,GAKK,SACHksG,EAAYrpG,EAAMspG,EAAaliC,OAA/B9oE,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKyF,QAAUulG,EAOfhrG,EAAKm3B,SAAW2xC,WArBmBrpE,EAAAsrG,EAAAlsG,GAuBvCksG,EAvBA,YA+HAE,EAAA,SAAApsG,GAGK,SACHqsG,EAAYl0E,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAW,IAE3Bh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBI,gBAAY6E,EACZ6c,MAAKzb,EAAArH,QAAcsH,MACnBjG,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,eAO1C+tG,QAAO9jG,EAAAuB,KAMZ5I,EAAKorG,QAAUzuG,EAAQgB,OAMvBqC,EAAKo4F,eAAiCp2F,IAArBrF,EAAQs7F,UAAgCt7F,EAAQs7F,SAMjEj4F,EAAKqrG,KAAO1uG,EAAQc,SAEGuE,IAAnBrF,EAAQ2uG,OACVtrG,EAAKmrG,QAAUxuG,EAAQ2uG,YACAtpG,IAAdhC,EAAKqrG,gBACPrrG,EAAKorG,QAAS,GAErBprG,EAAKmrG,QAAOI,EAAAC,IACVxrG,EAAKqrG,KACkDrrG,EAAKorG,UAQhEprG,EAAKyrG,eACkBzpG,IAArBrF,EAAQ+uG,SAAyB/uG,EAAQ+uG,SAAQC,EAAAltC,QAuD/CmtC,EAAYz0E,EArDVi3C,OACwBpsE,IAA5BrF,EAAQyxE,iBAAgCzxE,EAAQyxE,uBAMlDpuE,EAAK6rG,eAAiBz9B,EAAe,IAAA09B,EAAA/vG,QAAiB,KAMtDiE,EAAK+rG,oBAAmB,IAAAD,EAAA/vG,QAMxBiE,EAAKgsG,qBAAuB,EAM5BhsG,EAAKisG,sBAAqB,GAO1BjsG,EAAKksG,SAAQ,GAOblsG,EAAKmsG,UAAS,GAMdnsG,EAAKosG,mBAAkB,GAMvBpsG,EAAKqsG,oBAAsB,KAGvBhjG,MAAM4B,QAAQtO,EAAQw6B,UACxBA,EAAWx6B,EAAQw6B,SACVx6B,EAAQw6B,WAEjBA,GADAy0E,EAAajvG,EAAQw6B,UACCjE,YAEnBk7C,QAAkCpsE,IAAf4pG,IACtBA,EAAU,IAAA34E,EAAAl3B,QAAkBo7B,SAEbn1B,IAAbm1B,GACFn3B,EAAKssG,oBAAoBn1E,QAERn1B,IAAf4pG,GACF5rG,EAAKusG,wBAAwBX,YA3HRnsG,EAAAyrG,EAAArsG,GA2IzBqsG,EAAAxrG,UAAAmxE,WAAU,SAACprE,QACJ+mG,mBAAmB/mG,QACnBuX,WAQPkuF,EAAAxrG,UAAA8sG,mBAAkB,SAAC/mG,OACXgnG,EAAUn8F,EAAA/D,OAAU9G,WAEhBinG,YAAYD,EAAYhnG,SAO7BknG,mBAAmBF,EAAYhnG,OAE9BC,EAAWD,EAAQ88D,iBACrB78D,EAAQ,KACJ8N,EAAS9N,EAASO,iBACf4lG,gBAAcrsG,KAChBqsG,eAAe9yB,OAAOvlE,EAAQ/N,aAGhCwmG,sBAAsBQ,GAAchnG,OAGtCxD,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiB8wG,WAAYpnG,cAnBzC4mG,qBAAmB7sG,KACrB6sG,oBAAoBnhG,OAAOzF,IA2BtCylG,EAAAxrG,UAAAitG,mBAAkB,SAACF,EAAYhnG,QACxB2mG,mBAAmBK,GAAU,UACzBhnG,EAAOlD,EAAAxG,QAAYkhB,OAAMzd,KAAOstG,qBAAoBttG,eAEzDiG,EAAOnF,EAAAvE,QACSwE,eAAcf,KACzBstG,qBAAoBttG,QAa/B0rG,EAAAxrG,UAAAgtG,YAAW,SAACD,EAAYhnG,OAClBsnG,GAAQ,EACNzxG,EAAKmK,EAAQ2wB,oBACRp0B,IAAP1G,IACIA,EAAGoS,aAAQlO,KAAW0sG,SAG1Ba,GAAQ,EAH0BvtG,KAC7B0sG,SAAS5wG,EAAGoS,YAAcjI,GAK/BsnG,eACON,KAAUjtG,KAAS2sG,WAAY,SACnCA,UAAUM,GAAchnG,GAExBsnG,GAQT7B,EAAAxrG,UAAAkqE,YAAW,SAACzyC,QACLm1E,oBAAoBn1E,QACpBna,WAQPkuF,EAAAxrG,UAAA4sG,oBAAmB,SAACn1E,WACZ61E,EAAO,GACPC,EAAW,GACXC,EAAgB,GAEb/xG,EAAI,EAAGw4E,EAASx8C,EAAS/7B,OAAQD,EAAIw4E,EAAQx4E,IAAC,KAC/CsK,EAAU0xB,EAASh8B,GACnBsxG,EAAUn8F,EAAA/D,OAAU9G,QACjBinG,YAAYD,EAAYhnG,IAC/BwnG,EAAYxpG,KAAKgC,GAIZtK,EAAI,UAAGgyG,EAASF,EAAY7xG,OAAQD,EAAIgyG,EAAQhyG,IAAC,CAClDsK,EAAUwnG,EAAY9xG,GACtBsxG,EAAUn8F,EAAA/D,OAAU9G,QACrBknG,mBAAmBF,EAAYhnG,OAE9BC,EAAWD,EAAQ88D,iBACrB78D,EAAQ,KACJ8N,EAAS9N,EAASO,YACxB+mG,EAAQvpG,KAAK+P,GACb05F,EAAiBzpG,KAAKgC,aAEjBwmG,sBAAsBQ,GAAchnG,OAGpComG,gBAAcrsG,KAChBqsG,eAAejoE,KAAKopE,EAASE,GAG3B/xG,EAAI,UAAGiyG,EAASH,EAAY7xG,OAAQD,EAAIiyG,EAAQjyG,IAACqE,KACnDyC,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiB8wG,WAAYI,EAAY9xG,MASpE+vG,EAAAxrG,UAAA6sG,wBAAuB,SAACX,OAClByB,GAAsB,OACrBrxF,iBAAgB4wF,EAAA7wG,QACH8wG,YAGb,SACOvvF,GACH+vF,IACHA,GAAsB,EACtBzB,EAAWnoG,KAAK6Z,EAAI7X,SACpB4nG,GAAsB,WAIvBrxF,iBAAgB4wF,EAAA7wG,QACHuxG,eAGb,SACOhwF,GACH+vF,IACHA,GAAsB,EACtBzB,EAAW1gG,OAAOoS,EAAI7X,SACtB4nG,GAAsB,MAI5BzB,EAAW5vF,iBAAgB+Z,EAAAh6B,QACLi6B,IAGjB,SACO1Y,GACH+vF,IACHA,GAAsB,OACjBx8B,WACuDvzD,EAAI/Z,SAEhE8pG,GAAsB,IAExB5sG,KAAIjB,OAERosG,EAAW5vF,iBAAgB+Z,EAAAh6B,QACLk6B,OAGjB,SACO3Y,GACH+vF,IACHA,GAAsB,OACjBE,cACuDjwF,EAAI/Z,SAEhE8pG,GAAsB,IAExB5sG,KAAIjB,YAEH6sG,oBAAsBT,GAQ7BV,EAAAxrG,UAAAuY,MAAK,SAACu1F,MACAA,EAAQ,SACCC,KAASjuG,KAAS4sG,mBAAkB,CACnC5sG,KAAQ4sG,mBAAmBqB,GAChC1mG,QAAO7G,EAAAmiB,oBAEJgqF,2BACHD,mBAAkB,QAClBF,SAAQ,QACRC,UAAS,iBAGPN,uBAEIvwG,UADNuwG,eAAe9kG,QAAOvH,KAAMkuG,sBAAsBjtG,KAAIjB,OAC9CA,KAASysG,sBAAqBzsG,KACpCkuG,sBAAqBluG,KAAMysG,sBAAsB3wG,SAInD+wG,qBAAmB7sG,KACrB6sG,oBAAoBp0F,aAGlB4zF,gBAAcrsG,KAChBqsG,eAAe5zF,aAEjBg0F,sBAAqB,OAEpB0B,EAAU,IAAO7C,EAAiB8B,EAAA7wG,QAAiBgoB,YACpD9hB,cAAc0rG,QACd3wF,WAePkuF,EAAAxrG,UAAAkuG,eAAc,SAAC3pG,WACJ4nG,eAAc,OAAArsG,KACTqsG,eAAe9kG,QAAQ9C,QACrBooG,qBAAmB7sG,KAC5B6sG,oBAAoBtlG,QAAQ9C,IAgBrCinG,EAAAxrG,UAAAmuG,iCAAgC,SAACzoG,EAAYnB,OACrCuP,EAAM,CAAIpO,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,gBAC5D0oG,uBAAuBt6F,GAAM,SAAY/N,UAClCA,EAAQ88D,cACZlf,qBAAqBj+C,GACzBnB,EAASwB,cA0BtBylG,EAAAxrG,UAAAouG,uBAAsB,SAACt6F,EAAQvP,WACpB4nG,eAAc,OAAArsG,KACTqsG,eAAekC,gBAAgBv6F,EAAQvP,QACrCooG,qBAAmB7sG,KAC5B6sG,oBAAoBtlG,QAAQ9C,IAmBrCinG,EAAAxrG,UAAAsuG,iCAAgC,SAACx6F,EAAQvP,eAC3B6pG,uBACVt6F,GAIG,SACO/N,MACSA,EAAQ88D,cACZhiB,iBAAiB/sC,GAAM,KAC5B/W,EAASwH,EAASwB,MACpBhJ,EAAM,OACDA,OAcjByuG,EAAAxrG,UAAAuuG,sBAAqB,uBACP5B,qBASdnB,EAAAxrG,UAAAwd,YAAW,eACLia,cACKk1E,oBACPl1E,EAAQ33B,KAAQ6sG,oBAAoBn5E,WAAWrtB,MAAM,QACvCgmG,iBACd10E,EAAQ33B,KAAQqsG,eAAeqC,wBACbjC,wBAAqBnjG,EAAAiC,OAC9BosB,EAAQp4B,EAAAwkB,UAAA/jB,KAAiBysG,yBAGoC90E,GAS1E+zE,EAAAxrG,UAAAyuG,wBAAuB,SAAC/oG,OAChB+xB,EAAQ,eACT02E,iCAAiCzoG,GAAU,SAAYK,GAC1D0xB,EAAS1zB,KAAKgC,MAET0xB,GAeT+zE,EAAAxrG,UAAA6mF,oBAAmB,SAAC/yE,eACTq4F,eAAcrsG,KACTqsG,eAAeuC,YAAY56F,QACzB64F,oBAAmB7sG,KACrB6sG,oBAAoBn5E,WAAWrtB,MAAM,OAkBrDqlG,EAAAxrG,UAAA2uG,8BAA6B,SAACjpG,EAAYkpG,OAQlCt/F,EAAI5J,EAAW,GACf6J,EAAI7J,EAAW,GACjBmpG,EAAiB,KACf7vD,EAAY,CAAI0E,IAAKA,KACvBzE,EAAqBnqC,EAAAA,EACnBhB,EAAM,EAAKgB,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,GAC1Ck2B,EAAS4jE,GAAuBjnG,EAAAC,iBACjCukG,eAAekC,gBAClBv6F,GAGG,SACO/N,MACJilC,EAAOjlC,GAAO,KACVC,EAAWD,EAAQ88D,cACnBisC,EAA6B7vD,MACnCA,EAAqBj5C,EAAS+4C,eAC5BzvC,EACAC,EACAyvC,EACAC,IAEuB6vD,EAA0B,CACjDD,EAAiB9oG,MAKXgpG,EAAcr/F,KAAK8W,KAAKy4B,GAC9BnrC,EAAO,GAAKxE,EAAIy/F,EAChBj7F,EAAO,GAAKvE,EAAIw/F,EAChBj7F,EAAO,GAAKxE,EAAIy/F,EAChBj7F,EAAO,GAAKvE,EAAIw/F,OAKjBF,GAaTrD,EAAAxrG,UAAAuG,UAAS,SAACwN,eACIo4F,eAAe5lG,UAAUwN,IAYvCy3F,EAAAxrG,UAAAgvG,eAAc,SAACpzG,OACPmK,EAAOjG,KAAQ0sG,SAAS5wG,EAAGoS,wBACd1L,IAAZyD,EAAwBA,EAAU,MAS3CylG,EAAAxrG,UAAAivG,gBAAe,SAACC,OACRnpG,EAAOjG,KAAQ2sG,UAAUyC,eACZ5sG,IAAZyD,EAAwBA,EAAU,MAS3CylG,EAAAxrG,UAAAmvG,UAAS,uBACKzD,SAMdF,EAAAxrG,UAAAinF,YAAW,uBACGyR,WASd8S,EAAAxrG,UAAAovG,OAAM,uBACQzD,MAOdH,EAAAxrG,UAAAotG,qBAAoB,SAAC/pF,OACbtd,EAAoEsd,EAAM1kB,OAC1EouG,EAAUn8F,EAAA/D,OAAU9G,GACpBC,EAAWD,EAAQ88D,iBACpB78D,OAQG8N,EAAS9N,EAASO,YACpBwmG,KAAUjtG,KAASysG,mCACTA,sBAAsBQ,QACzBZ,gBAAcrsG,KAChBqsG,eAAe9yB,OAAOvlE,EAAQ/N,SAG5BomG,gBAAcrsG,KAChBqsG,eAAe3sC,OAAO1rD,EAAQ/N,QAfjCgnG,KAAUjtG,KAASysG,6BACdJ,gBAAcrsG,KAChBqsG,eAAe3gG,OAAOzF,QAExBwmG,sBAAsBQ,GAAchnG,OAevCnK,EAAKmK,EAAQ2wB,gBACRp0B,IAAP1G,EAAgB,KACZyzG,EAAMzzG,EAAGoS,gBACNw+F,SAAS6C,KAAStpG,SACpBupG,mBAAmBvpG,QACnBymG,SAAS6C,GAAOtpG,aAGlBupG,mBAAmBvpG,QACnB0mG,UAAUM,GAAchnG,OAE1BuX,eACA/a,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiBkzG,cAAexpG,KAUzDylG,EAAAxrG,UAAAwvG,WAAU,SAACzpG,OACHnK,EAAKmK,EAAQ2wB,oBACRp0B,IAAP1G,EACKA,KAAEkE,KAAS0sG,kBAEJzmG,KAAOjG,KAAU2sG,WAOnCjB,EAAAxrG,UAAAwT,QAAO,uBACO24F,eAAe34F,WAAOnU,EAAAmU,QAAA1T,KAAmBysG,wBAQvDf,EAAAxrG,UAAAwmF,aAAY,SAAC1yE,EAAQvO,EAAY9H,WACzBgyG,EAAkB3vG,KAAQusG,oBAC1BqD,EAAa5vG,KAAQisG,UAAUj4F,EAAQvO,cACpC9J,EAAO6H,OACRqsG,EAAeD,EAAcj0G,GACbg0G,EAAmBpB,gBACvCsB,GAIG,SACO1rF,2BACcA,EAAOnQ,OAAQ67F,UAIrCC,EAAKtD,qBACPsD,EAAKrtG,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiBwzG,oBAExCD,EAAKnE,QAAQ5rG,KAAI+vG,EAEfD,EACApqG,EACA9H,EAAU,SACAg6B,UACD60E,0BACF/pG,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QACHyzG,qBAChBxtG,EACAm1B,KAGJ12B,KAAI6uG,GAAA,kBAEGtD,0BACF/pG,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiB0zG,qBAExChvG,KAAI6uG,IAERH,EAAmBp2B,OAAOs2B,EAAY,CAAG77F,OAAQ67F,EAAaxpG,mBAvCzD1K,EAAI,EAAG6H,EAAKosG,EAAch0G,OAAQD,EAAI6H,IAAM7H,IAA5CA,QA0CJm9B,QAAO94B,KACL2rG,UAAO9jG,EAAAuB,MAAiBpJ,KAAQwsG,qBAAuB,GAGhEd,EAAAxrG,UAAAgwG,QAAO,gBACAz3F,OAAM,QACN8zF,oBAAoB9zF,QACzBpZ,EAAAa,UAAMgwG,QAAOnwG,KAAAC,OAQf0rG,EAAAxrG,UAAAiwG,mBAAkB,SAACn8F,OAEblJ,EADE6kG,EAAkB3vG,KAAQusG,oBAEhCoD,EAAmBpB,gBAAgBv6F,GAAM,SAAYmQ,eACxCA,EAAOnQ,OAAQA,UACxBlJ,EAAMqZ,GACC,KAGPrZ,GACF6kG,EAAmBjkG,OAAOZ,IAW9B4gG,EAAAxrG,UAAA6tG,cAAa,SAAC9nG,OACNgnG,EAAUn8F,EAAA/D,OAAU9G,GACtBgnG,KAAUjtG,KAASysG,6BAAqBzsG,KAC9BysG,sBAAsBQ,QAEzBZ,gBAAcrsG,KAChBqsG,eAAe3gG,OAAOzF,QAG1BioG,sBAAsBjoG,QACtBuX,WAQPkuF,EAAAxrG,UAAAguG,sBAAqB,SAACjoG,OACdgnG,EAAUn8F,EAAA/D,OAAU9G,QACrB2mG,mBAAmBK,GAAY1lG,QAAO7G,EAAAmiB,2BAC/B+pF,mBAAmBK,OACzBnxG,EAAKmK,EAAQ2wB,aACRp0B,IAAP1G,UAAgBkE,KACN0sG,SAAS5wG,EAAGoS,wBAEdy+F,UAAUM,QACjBxqG,cAAa,IACZ6oG,EAAiB8B,EAAA7wG,QAAiBuxG,cAAe7nG,KAWzDylG,EAAAxrG,UAAAsvG,mBAAkB,SAACvpG,OACbmqG,GAAU,UACHt0G,KAAEkE,KAAS0sG,SAAQ,GAAA1sG,KACnB0sG,SAAS5wG,KAAQmK,EAAO,aACnBymG,SAAS5wG,GACrBs0G,GAAU,eAIPA,GAST1E,EAAAxrG,UAAAmwG,UAAS,SAACvE,QACHH,QAAUG,GAQjBJ,EAAAxrG,UAAAowG,OAAM,SAACryG,iBACO2tG,QAAS,QAChByE,UAAStE,EAAAC,IAAK/tG,EAAG+B,KAAO4rG,WAEjCF,EA73BA,sBA+3BeD,2oBCliCZ,IAAA8E,EAAAt1G,EAAA,sFAsBH4gF,EAAA,WAGK,SACH20B,EAAYC,GAGPzwG,KACE0wG,OAAM,IAAAz4B,EAAA17E,QAAck0G,GAOtBzwG,KACE2wG,OAAM,UAQbH,EAAAtwG,UAAAq5E,OAAM,SAACvlE,EAAQrL,GACO,IACdg2B,EAAI,CACRvqB,KAAMJ,EAAO,GACbK,KAAML,EAAO,GACbM,KAAMN,EAAO,GACbO,KAAMP,EAAO,GACbrL,MAAOA,QAGJ+nG,OAAOn3B,OAAO56C,QACdgyE,OAAM7/F,EAAA/D,OAAQpE,IAAUg2B,GAQ/B6xE,EAAAtwG,UAAAkkC,KAAI,SAACopE,EAASnsF,WACNuvF,EAAK,IAAO/mG,MAAMwX,EAAOzlB,QACtBD,EAAI,EAAGoc,EAAIsJ,EAAOzlB,OAAQD,EAAIoc,EAAGpc,IAAC,KACnCqY,EAASw5F,EAAQ7xG,GACjBgN,EAAQ0Y,EAAO1lB,GAGfgjC,EAAI,CACRvqB,KAAMJ,EAAO,GACbK,KAAML,EAAO,GACbM,KAAMN,EAAO,GACbO,KAAMP,EAAO,GACbrL,MAAOA,GAETioG,EAAMj1G,GAAKgjC,OACNgyE,OAAM7/F,EAAA/D,OAAQpE,IAAUg2B,OAE1B+xE,OAAOtsE,KAAKwsE,IAQnBJ,EAAAtwG,UAAAwL,OAAM,SAAC/C,OACCymG,EAAGt+F,EAAA/D,OAAUpE,GAIbg2B,EAAI3+B,KAAQ2wG,OAAOvB,sBACbuB,OAAOvB,GACiB,YAAxBsB,OAAOhlG,OAAOizB,IAQ5B6xE,EAAAtwG,UAAAw/D,OAAM,SAAC1rD,EAAQrL,OACPg2B,EAAI3+B,KAAQ2wG,OAAM7/F,EAAA/D,OAAQpE,IAC1BkoG,EAAI,CAAIlyE,EAAKvqB,KAAMuqB,EAAKtqB,KAAMsqB,EAAKrqB,KAAMqqB,EAAKpqB,eACxCs8F,EAAM78F,UACXtI,OAAO/C,QACP4wE,OAAOvlE,EAAQrL,KAQxB6nG,EAAAtwG,UAAAwuG,OAAM,kBACO1uG,KAAQ0wG,OAAOzxC,MACb1+D,KAAG,SAAWo+B,UAClBA,EAAKh2B,UAShB6nG,EAAAtwG,UAAA0uG,YAAW,SAAC56F,GACU,IACd68F,EAAI,CACRz8F,KAAMJ,EAAO,GACbK,KAAML,EAAO,GACbM,KAAMN,EAAO,GACbO,KAAMP,EAAO,WAEJhU,KAAQ0wG,OAAOv3B,OAAO03B,GACpBtwG,KAAG,SAAWo+B,UAClBA,EAAKh2B,UAWhB6nG,EAAAtwG,UAAAqH,QAAO,SAAC9C,eACMqsG,SAAQ9wG,KAAM0uG,SAAUjqG,IAStC+rG,EAAAtwG,UAAAquG,gBAAe,SAACv6F,EAAQvP,eACVqsG,SAAQ9wG,KAAM4uG,YAAY56F,GAASvP,IASjD+rG,EAAAtwG,UAAA4wG,SAAQ,SAACzvF,EAAQ5c,WACXxH,EACKtB,EAAI,EAAGoc,EAAIsJ,EAAOzlB,OAAQD,EAAIoc,EAAGpc,OACxCsB,EAASwH,EAAS4c,EAAO1lB,IACf,OACDsB,SAGJA,GAMTuzG,EAAAtwG,UAAAwT,QAAO,iCACei9F,SAMtBH,EAAAtwG,UAAAuY,MAAK,gBACEi4F,OAAOj4F,aACPk4F,OAAM,IAObH,EAAAtwG,UAAAuG,UAAS,SAACwN,OACFlP,EAAI/E,KAAQ0wG,OAAOr2B,iCAEvBt1E,EAAKqP,KACLrP,EAAKsP,KACLtP,EAAKuP,KACLvP,EAAKwP,KACLN,IAOJu8F,EAAAtwG,UAAA2tE,OAAM,SAACkjC,WAEMp1G,UADN+0G,OAAOtsE,KAAK2sE,EAAML,OAAOzxC,OACd8xC,EAAMJ,OAAM3wG,KACrB2wG,OAAOh1G,GAAKo1G,EAAMJ,OAAOh1G,IAGpC60G,EAvMA,aAyMe30B,uPC/NZ,MAAAp/D,EAAAxhB,EAAA,ojBA2CH+1G,EAAA,SAAA3xG,GAGK,SACH4xG,EAAY9zG,OAAZqD,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK7C,WAAUs7B,EAAA98B,IAAiBgB,EAAQQ,YAMxC6C,EAAK0wG,cAAgBC,EAAkBh0G,EAAQI,cAM/CiD,EAAK4wG,8BACiC5uG,IAApCrF,EAAQk0G,yBACJl0G,EAAQk0G,wBAQd7wG,EAAKs4B,SAAU,EAMft4B,EAAK0e,YACe1c,IAAlBrF,EAAQkiB,MAAsBliB,EAAQkiB,MAAKzb,EAAArH,QAAesH,MAM5DrD,EAAK8wG,YAA2B9uG,IAAlBrF,EAAQS,OAAsBT,EAAQS,eA9CnCqC,EAAAgxG,EAAA5xG,GAqDnB4xG,EAAA/wG,UAAAqrD,gBAAe,uBACD2lD,eAMdD,EAAA/wG,UAAAsrD,2BAA0B,uBACZ4lD,0BAQdH,EAAA/wG,UAAAy4B,cAAa,uBACCh7B,YAOdszG,EAAA/wG,UAAAmsC,eAAc,gCASd4kE,EAAA/wG,UAAAod,SAAQ,uBACM4B,QAMd+xF,EAAA/wG,UAAAkH,SAAQ,uBACMkqG,QAMdL,EAAA/wG,UAAAqxG,kBAAiB,aAQjBN,EAAA/wG,UAAAgwG,QAAO,gBACA1yF,WAUPyzF,EAAA/wG,UAAAsxG,gBAAe,SAACj0G,QACT2zG,cAAgBC,EAAkB5zG,QAClCigB,WAOPyzF,EAAA/wG,UAAAuxG,SAAQ,SAACpyF,QACFH,OAASG,OACT7B,WAETyzF,EApIA,YA0IG,SACME,EAAkBO,UACpBA,EAGD7nG,MAAM4B,QAAQimG,GAAe,SACdvvG,UACRuvG,GAIe,mBAAfA,EACFA,WAGQvvG,UACPuvG,IAbD,eAiBIV,kQC9Lb3D,WAAU,aAOVoC,cAAa,gBAOblrF,MAAK,QAQLupF,cAAa,gBAObiC,kBAAiB,oBAOjBC,gBAAe,kBAOfC,kBAAiB,8KC7CHhxC,EAAIjrD,EAAQvO,YAChBuP,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,aAW3B67F,EAAK78F,EAAQvO,UACnBuO,YASMylB,EAAKqgB,mBAOP9lC,EAAQvO,OACVw3C,EAAInD,EAAS63D,kBAAkBlsG,GAC/BoyF,EAAY/9C,EAAS83D,0BAA0B59F,EAAQipC,GAEvDuwD,EAAO,GAEP7V,EAAS,CAAI16C,EAAG,EAAG,OAEvB06C,EAAU,GAAKE,EAAUzjF,KACzBujF,EAAU,IAAME,EAAUvjF,OACxBqjF,EAAU,GAAC,IAGXA,EAAU,GAAKE,EAAUxjF,KACzBsjF,EAAU,IAAME,EAAUtjF,OACxBojF,EAAU,GAEZ6V,EAAQvpG,KAAK61C,EAAS+3D,mBAAmBla,WAGtC6V,0BAlDVtkG,EAAAF,OAAAzN,EAAA,OAAA,IACa0jE,IAWb/1D,EAAAF,OAAAzN,EAAA,QAAA,IACas1G,IASb3nG,EAAAF,OAAAzN,EAAA,QAAA,IACak+B,2KCyBbvwB,EAAAF,OAAAzN,EAAA,mBAAA,IACau2G,IAyEb5oG,EAAAF,OAAAzN,EAAA,OAAA,IACaywG,IAyCb9iG,EAAAF,OAAAzN,EAAA,sBAAA,IACaw2G,IA7Kb,IAAAC,EAAA/2G,EAAA,sEASCg3G,GAAkB,WAgDNH,EACd7zG,EACAE,EACA6V,EACAvO,EACA9H,EACAu0G,EACAC,OAEMnG,EAAG,IAAOoG,eAChBpG,EAAIqG,KAAI,MAEI,mBAAHp0G,EAAqBA,EAAI+V,EAAQvO,EAAY9H,GAAcM,GAClE,GAEEE,EAAOuvC,WAAOk8B,EAAArtE,QAAiBstE,eACjCmiC,EAAIsG,aAAY,eAElBtG,EAAIiG,gBAAkBA,EAKtBjG,EAAIuG,OAAM,SAAahvF,OAEhByoF,EAAIwG,QAAWxG,EAAIwG,QAAU,KAAOxG,EAAIwG,OAAS,IAAG,KACjDtwG,EAAO/D,EAAOuvC,UAEhBlxC,OAAM,EACN0F,GAAI0nE,EAAArtE,QAAepB,MAAQ+G,GAAI0nE,EAAArtE,QAAe2uE,KAChD1uE,EAASwvG,EAAIyG,aACJvwG,GAAI0nE,EAAArtE,QAAe4uE,KAC5B3uE,EAASwvG,EAAI0G,eAEXl2G,GAAM,IAAOm2G,WAAYC,gBACvB5G,EAAIyG,aAAY,oBAIXvwG,GAAI0nE,EAAArtE,QAAestE,eAC5BrtE,EAAqCwvG,EAAIjvG,UAEvCP,EACF01G,EAEG/zG,EAAOusE,aAAaluE,EAAM,CACzBwX,OAAQA,EACRm2D,kBAAmBxsE,IAErBQ,EAAO00G,eAAer2G,IAGxB21G,SAGFA,KAMJnG,EAAI8G,QAAUX,EACdnG,EAAI+G,gBAYU/G,EAAI/tG,EAAKE,GAUpB,OAAA,SACc6V,EAAQvO,EAAY9H,EAAYu0G,EAASC,OAClD31G,EAAMwD,KACZ8xG,EACE7zG,EACAE,EACA6V,EACAvO,EACA9H,GAKG,SACOg6B,EAAUq7E,GAClBx2G,EAAO4tE,YAAYzyC,QACHn1B,IAAZ0vG,GACFA,EAAQv6E,KAGaw6E,GAAiBtqG,EAAAuB,gBAYhC2oG,EAAmBkB,GACjChB,EAAkBgB,sQC9KjB,MAAA1yF,EAAAtlB,EAAA,68BA4CGi4G,EAMS,gBAQfC,EAAA,SAAA9zG,GAGK,SACH+zG,EAAYp/F,OAAZxT,EACEnB,EAAAU,KAAAC,KAAMkzG,IAA6BlzG,YAOnCQ,EAAKwT,OAASA,WAZe/T,EAAAmzG,EAAA/zG,GAcjC+zG,EAdA,YAyBAC,EAAA,SAAAh0G,GAGK,SACHi0G,EAAY97E,OA4WNn5B,EA5WNmC,EAAAR,KACQ7C,EAAUq6B,GAAW,UAE3Bh3B,EAAAnB,EAAAU,KAAAC,KAAqD7C,IAAO6C,MAOvDo/D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAA4B,OAOvDpgE,EAAKs4C,QAAU,KAOft4C,EAAK+yG,gBAAkB,KAOvB/yG,EAAKgzG,qBACwBhxG,IAA3BrF,EAAQs2G,eAA+Bt2G,EAAQs2G,eAAiB,GAOlEjzG,EAAKkzG,kBAAmB,EAOxBlzG,EAAKmzG,eAAiB,KAOtBnzG,EAAKozG,eAAiB,KAEjBp8E,IACHA,EAAW,IAQbh3B,EAAKqzG,eAAc,IAAAnlC,EAAAnyE,QAAA,CACjBC,OAAM,IAAAmyE,EAAApyE,QAAA,CACJqyE,iBAAiB,EACjBhxE,QAAS45B,EAAY55B,QAEvBS,MAAOm5B,EAAYs8E,SACft8E,EAAYs8E,UAsSdz1G,EAAKwwE,EAAAC,8BACM7oE,EAASR,UACjBpH,EAAKsvC,EAAApxC,QAAcy2C,WAtSxBskC,sBAAsB,EACtBvI,wBAAwB,IAQ1BvuE,EAAKuzG,eAAc,IAAArlC,EAAAnyE,QAAA,CACjBC,OAAM,IAAAmyE,EAAApyE,QAAA,CACJqyE,iBAAiB,EACjBhxE,QAAS45B,EAAY55B,QAEvBS,MAAOm5B,EAAYw8E,aACfx8E,EAAYw8E,aACZC,IACJ38B,sBAAsB,EACtBvI,wBAAwB,IAGtBv3C,EAAYxjB,QACdxT,EAAKpE,UAAUo7B,EAAYxjB,iBAlGZ/T,EAAAqzG,EAAAj0G,GA4GnBi0G,EAAApzG,UAAAg0G,cAAa,SAAC3vG,EAAOhE,OACb4zG,EAAkB5zG,EAAIk3B,+BAA+BlzB,GAOrDyP,EAAMhU,KAAQo0G,uBAChBpgG,EAAM,KAEFqgG,EA2ST,SACkBrgG,YAGdA,EAAO,GAAIA,EAAO,KAClBA,EAAO,GAAIA,EAAO,OAGlBA,EAAO,GAAIA,EAAO,KAClBA,EAAO,GAAIA,EAAO,OAGlBA,EAAO,GAAIA,EAAO,KAClBA,EAAO,GAAIA,EAAO,OAGlBA,EAAO,GAAIA,EAAO,KAClBA,EAAO,GAAIA,EAAO,MA5TFsgG,CAAYtgG,GAC7BqgG,EAASnxG,MAVS,SAAaC,EAAGC,qCAEP+wG,EAAiBhxG,GAACiD,EAAA+f,yBAClBguF,EAAiB/wG,UAQtCmxG,EAAiBF,EAAS,GAE5BG,EAAMpuG,EAAA2f,iBAAoBouF,EAAiBI,GACzCE,EAAcl0G,EAAI44B,+BAA+Bq7E,iBAGhCjwG,EAAOkwG,IAAWz0G,KAAUwzG,gBAAe,KAE1DkB,EAASn0G,EAAI44B,+BAA+Bo7E,EAAe,IAC3DI,EAASp0G,EAAI44B,+BAA+Bo7E,EAAe,IAC3DK,EAAYxuG,EAAAyU,gBAA6B45F,EAAaC,GACtDG,EAAYzuG,EAAAyU,gBAA6B45F,EAAaE,GACtDG,EAAOllG,KAAK8W,KAAK9W,KAAK2F,IAAIq/F,EAAcC,gBACzCnB,iBAAmBoB,GAAI90G,KAASwzG,qBAC5BE,mBACPc,EACEI,EAAeC,EAAeN,EAAe,GAAKA,EAAe,IAE9DC,UAGJ,MAOTlB,EAAApzG,UAAAqiC,mBAAkB,SAACzI,OACXv1B,EAAQu1B,EAAgBv1B,MACxBhE,EAAMu5B,EAAgBv5B,IAExBi0G,EAAMx0G,KAAQk0G,cAAc3vG,EAAOhE,GAClCi0G,IACHA,EAASj0G,EAAIk3B,+BAA+BlzB,SAEzCwwG,8BAA8BP,IAQrClB,EAAApzG,UAAA80G,6BAA4B,SAAChhG,OACvBihG,EAAaj1G,KAAQ2zG,sBAEpBsB,EASEjhG,EAGHihG,EAAcpkC,YAAWrjC,EAAAC,WAAmBz5B,IAF5CihG,EAAcpkC,iBAAYruE,IAN1ByyG,EAHGjhG,EAGU,IAAAw8D,EAAAj0E,QAAAixC,EAAAC,WAAiCz5B,IAFjC,IAAAw8D,EAAAj0E,QAAA,SAIVo3G,eAAiBsB,OACjBpB,eAAe3sG,YAAYmqE,WAAW4jC,IAQtCA,GAQT3B,EAAApzG,UAAA60G,8BAA6B,SAACP,OACxBU,EAAal1G,KAAQ4zG,eACpBsB,EAKcA,EAAcnyC,cACtBnkB,eAAe41D,IALxBU,EAAa,IAAA1kC,EAAAj0E,QAAA,IAAAoxE,EAAApxE,QAAyBi4G,SACjCZ,eAAiBsB,OACjBnB,eAAe7sG,YAAYmqE,WAAW6jC,WAKtCA,GAOT5B,EAAApzG,UAAAyjB,YAAW,SAACmW,UACLA,EAAgBG,gBAAaj6B,KAAUo/D,WAAWtlC,KAKrDA,EAAgB53B,MAAI25B,EAAAt/B,QAAwB8kC,aAAWrhC,KACjDkgE,wBAAsBlgE,KAEvBuiC,mBAAmBzI,GAG1Bz6B,EAAAa,UAAMyjB,YAAW5jB,KAAAC,KAAC85B,IAEX,IAQTw5E,EAAApzG,UAAA4/D,gBAAe,SAAChmC,OACRv1B,EAAQu1B,EAAgBv1B,MACxBhE,EAAMu5B,EAAgBv5B,IAEtByT,EAAMhU,KAAQo0G,oBAChBI,EAAMx0G,KAAQk0G,cAAc3vG,EAAOhE,GAGjC40G,EAAgB,SAAax/D,OAC7By/D,EAAK,KACLC,EAAK,YACL1/D,EAAM,IAAM3hC,EAAO,GACrBohG,EAAKphG,EAAO,GACH2hC,EAAM,IAAM3hC,EAAO,KAC5BohG,EAAKphG,EAAO,IAEV2hC,EAAM,IAAM3hC,EAAO,GACrBqhG,EAAKrhG,EAAO,GACH2hC,EAAM,IAAM3hC,EAAO,KAC5BqhG,EAAKrhG,EAAO,IAEH,OAAPohG,GAAsB,OAAPC,EAAW,CACpBD,EAAIC,GAEP,SAELb,GAAUxgG,EAAM,KACZxE,EACJglG,EAAO,IAAMxgG,EAAO,IAAMwgG,EAAO,IAAMxgG,EAAO,GAAKwgG,EAAO,GAAK,KAC3D/kG,EACJ+kG,EAAO,IAAMxgG,EAAO,IAAMwgG,EAAO,IAAMxgG,EAAO,GAAKwgG,EAAO,GAAK,KAGvD,OAANhlG,GAAoB,OAANC,EAAUzP,KACrBuzG,gBAAkB+B,EAAgBH,EAAiBX,IAEzC,OAANhlG,EAAUxP,KACduzG,gBAAkBgC,EACrBJ,EAAgB,CAAE3lG,EAAGwE,EAAO,KAC5BmhG,EAAgB,CAAE3lG,EAAGwE,EAAO,MAEf,OAANvE,IAAUzP,KACduzG,gBAAkBgC,EACrBJ,EAAgB,CAAEnhG,EAAO,GAAIvE,IAC7B0lG,EAAgB,CAAEnhG,EAAO,GAAIvE,WAKjC+kG,EAASj0G,EAAIk3B,+BAA+BlzB,QACvCnI,UAAS,CAAEo4G,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,UACnDjB,gBAAkB+B,EAAgBd,UAElC,GAOTlB,EAAApzG,UAAAq/D,gBAAe,SAACzlC,WACLy5E,gBAAe,KAChBY,EAAkBr6E,EAAgBl0B,gBACnCxJ,UAAS4D,KAAMuzG,gBAAgBY,SAC/BY,8BAA8BZ,KASvCb,EAAApzG,UAAAy/D,cAAa,SAAC7lC,QACPy5E,gBAAkB,SAEjBv/F,EAAMhU,KAAQo0G,2BACfpgG,GAA8B,IAAxBrN,EAAAgM,QAAYqB,IAAahU,KAC7B5D,UAAU,OAEV,GASTk3G,EAAApzG,UAAAqc,OAAM,SAAChc,QACAszG,eAAet3F,OAAOhc,QACtBwzG,eAAex3F,OAAOhc,GAC3BlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,IASf+yG,EAAApzG,UAAAuG,UAAS,sCAEA2tG,oBAAiBp0G,KACjBoC,SAASs2B,UAAUC,kBAU5B26E,EAAApzG,UAAAk0G,kBAAiB,uBACHt7D,SASdw6D,EAAApzG,UAAA9D,UAAS,SAAC4X,QAEH8kC,QAAU9kC,GAAkB,UAC5BghG,6BAA6BhhG,QAC7BvR,cAAa,IAAK0wG,EAAWnzG,KAAM84C,WAE5Cw6D,EAxWA,YA0XG,SACMW,QACD51G,EAAKwwE,EAAAC,qCACM7oE,EAASR,UACjBpH,EAAKsvC,EAAApxC,QAAcs2C,QAO3B,SACMyiE,EAAgBE,mBACN7/D,4BACQ6/D,EAAY7/D,KAQpC,SACM4/D,EAAeE,EAASC,UAC3BD,EAAQ,IAAMC,EAAQ,GAAC,SACR//D,4BACQ8/D,GAAU9/D,EAAM,GAAI+/D,EAAQ,OAE5CD,EAAQ,IAAMC,EAAQ,GAAC,SACf//D,4BACQ8/D,GAAUC,EAAQ,GAAI//D,EAAM,OAG9C,eA6BI09D,olBC3gBZ,MAAA/2C,EAAArhE,EAAA,svCA0DG06G,EAAU,CAAI,EAAG,EAAG,EAAG,GACvBC,EAAW,GAKXC,EAMO,cANPA,EAYK,YA6DXC,EAAA,SAAAz2G,GAOK,SACH02G,EAAY7zG,EAAMy1B,EAAUq+E,OAA5Bx1G,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKm3B,SAAWA,EAOhBn3B,EAAKs5B,gBAAkBk8E,WAvBM/1G,EAAA81G,EAAA12G,GAyBjC02G,EAzBA,YAgDAE,EAAA,SAAA52G,GAGK,SACH62G,EAAY/4G,OAq3CNkB,EAjuCAs5B,EApJNn3B,EACEnB,EAAAU,KAAAC,KAAqD7C,IAAO6C,QAG5DQ,EAAK21G,0BAA4B31G,EAAK8sG,qBAAqBrsG,KAAKT,GAMhEA,EAAK4+D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAG,cAOvD3+D,EAAK41G,wBAAuB,SAAat8E,uBACrBA,IAAeklC,EAAAiC,YAAiBnnC,IAOpDt5B,EAAK61G,iBAAmBl5G,EAAQm5G,gBAC5Bn5G,EAAQm5G,gBACR91G,EAAK41G,wBAMT51G,EAAK+1G,uBAAyBp5G,EAAQq5G,sBAClCr5G,EAAQq5G,sBAAqBx3C,EAAA4B,OAQjCpgE,EAAKozG,eAAiB,KAOtBpzG,EAAKi2G,gBAAkB,KAMvBj2G,EAAKk2G,WAAU,CAAI,EAAG,GAQtBl2G,EAAKm2G,wBAAyB,EAM9Bn2G,EAAKo2G,uBAAyB,KAO9Bp2G,EAAKq2G,OAAM,IAAAvK,EAAA/vG,QAMXiE,EAAKgzG,qBACwBhxG,IAA3BrF,EAAQs2G,eAA+Bt2G,EAAQs2G,eAAiB,GAMlEjzG,EAAKkzG,kBAAmB,EAQxBlzG,EAAKs2G,kBAAmB,EAMxBt2G,EAAKu2G,cAAa,GAOlBv2G,EAAKiuE,SAAQ,IAAAC,EAAAnyE,QAAA,CACXC,OAAM,IAAAmyE,EAAApyE,QAAA,CACJqyE,iBAAiB,EACjBhxE,QAAST,EAAQS,QAEnBS,MAAOlB,EAAQkB,MAAQlB,EAAQkB,OAkwC7BA,EAAKwwE,EAAAC,8BACM7oE,EAASR,UACjBpH,EAAKsvC,EAAApxC,QAAcs2C,SAnwCxBykC,sBAAsB,EACtBvI,wBAAwB,IAQ1BvuE,EAAKw2G,iBAAgB,OACVx2G,EAAKy2G,oBAAoBh2G,KAAKT,cACzBA,EAAK02G,yBAAyBj2G,KAAKT,cACnCA,EAAK02G,yBAAyBj2G,KAAKT,WACtCA,EAAK22G,sBAAsBl2G,KAAKT,cAC7BA,EAAK42G,yBAAyBn2G,KAAKT,mBAC9BA,EAAK62G,8BAA8Bp2G,KAAKT,gBAC3CA,EAAK82G,2BAA2Br2G,KAAKT,UAC3CA,EAAK+2G,qBAAqBt2G,KAAKT,sBACnBA,EAAKg3G,iCAAiCv2G,KAAKT,IAOnEA,EAAKuuD,QAAU,KAKfvuD,EAAKi3G,cAAgB,KAGjBt6G,EAAQw6B,SACVA,EAAWx6B,EAAQw6B,SACVx6B,EAAQX,SACjBgE,EAAKuuD,QAAU5xD,EAAQX,OACvBm7B,EAAQ,IAAAlE,EAAAl3B,QAAkBiE,EAAKuuD,QAAQrxC,eACvCld,EAAKuuD,QAAQvyC,iBAAgB4wF,EAAA7wG,QACX8wG,WAChB7sG,EAAKk3G,iBAAiBz2G,KAAKT,IAE7BA,EAAKuuD,QAAQvyC,iBAAgB4wF,EAAA7wG,QACXuxG,cAChBttG,EAAKm3G,oBAAoB12G,KAAKT,MAG7Bm3B,EAAQ,MAAA,IACD37B,MAAK,wEAIbmB,EAAQy6G,eACVp3G,EAAKi3G,cAAgBt6G,EAAQy6G,cAO/Bp3G,EAAK+rE,UAAY50C,EAEjBn3B,EAAK+rE,UAAUhlE,QAAQ/G,EAAKq3G,YAAY52G,KAAKT,IAC7CA,EAAK+rE,UAAU/vD,iBAAgB+Z,EAAAh6B,QACTi6B,IACpBh2B,EAAKs3G,kBAAkB72G,KAAKT,IAE9BA,EAAK+rE,UAAU/vD,iBAAgB+Z,EAAAh6B,QACTk6B,OACpBj2B,EAAKu3G,qBAAqB92G,KAAKT,IAOjCA,EAAKw3G,kBAAoB,KAMzBx3G,EAAKs9D,OAAM,CAAI,EAAG,GAKlBt9D,EAAKy3G,oBACuBz1G,IAA1BrF,EAAQ+6G,eACH13G,EAAKi3G,cACNt6G,EAAQ+6G,uBAlNGj4G,EAAAi2G,EAAA72G,GAyNnB62G,EAAAh2G,UAAA23G,YAAW,SAAC5xG,OACJC,EAAWD,EAAQ88D,iBACrB78D,EAAQ,KACJiyG,EAAMn4G,KAAQg3G,iBAAiB9wG,EAASwnC,WAC1CyqE,GACFA,EAAOlyG,EAASC,OAGd3F,EAAGP,KAAQoC,SACb7B,GAAOA,EAAI47B,cAAUn8B,KAAWy6B,aAASz6B,KACtCo4G,sBAAqBp4G,KAAM02G,WAAYn2G,GAE9C0F,EAAQuW,iBAAgBzZ,EAAAxG,QAAWkhB,OAAMzd,KAAOm2G,4BAQlDD,EAAAh2G,UAAAm4G,oBAAmB,SAACv6F,EAAKu2F,YACbuC,uBAAsB,MACzBA,uBAAsB,IAAAnjF,EAAAl3B,gBACrBo7B,EAAQ33B,KAAQ42G,uBAAuBljF,WACpC/3B,EAAI,EAAG6H,EAAK6wG,EAASz4G,OAAQD,EAAI6H,IAAM7H,UACxCgrB,EAAU0tF,EAAS14G,GAChBke,EAAI,EAAGy+F,EAAK3xF,EAAQ/qB,OAAQie,EAAIy+F,IAAMz+F,EAAC,KACxC5T,EAAU0gB,EAAQ9M,GAAG5T,QACvBA,IAAyC,IAA9B0xB,EAAS5sB,QAAQ9E,IAAejG,KACxC42G,uBAAuB3yG,KAAKgC,QAKlCxD,cAAa,IACZqzG,EACFD,EAA2B71G,KACtB42G,uBACL94F,MAURo4F,EAAAh2G,UAAAq4G,eAAc,SAACtyG,QACRuyG,0BAA0BvyG,QAEtB2tG,gBAAiD,IAAnC5zG,KAASusE,UAAU9tC,mBACnCgwC,SAASvnE,YAAY6mG,cAAa/tG,KAAM4zG,qBACxCA,eAAiB,MAExB3tG,EAAQ2c,oBAAmB7f,EAAAxG,QACfkhB,OAAMzd,KACXm2G,4BAQTD,EAAAh2G,UAAAs4G,0BAAyB,SAACvyG,OAClBwyG,EAAKz4G,KAAQ62G,OAEb6B,EAAa,GACnBD,EAAMlxG,SAGD,SACO6qB,GACJnsB,IAAYmsB,EAAKnsB,SACnByyG,EAAcz0G,KAAKmuB,cAIhBz2B,EAAI+8G,EAAc98G,OAAS,EAAGD,GAAK,IAAKA,EAAC,SAC1Cg9G,EAAeD,EAAc/8G,GAC1BqL,EAAChH,KAAQ+2G,cAAcn7G,OAAS,EAAGoL,GAAK,IAAKA,EAAChH,KAC5C+2G,cAAc/vG,GAAG,KAAO2xG,GAAY34G,KACtC+2G,cAAcprG,OAAO3E,EAAG,GAGjCyxG,EAAM/sG,OAAOitG,KAUjBzC,EAAAh2G,UAAAk+D,UAAS,SAACE,QACCs1C,iBAAmBt1C,SACrBmQ,SAASvnE,YAAY6mG,cAAa/tG,KAAM4zG,qBACxCA,eAAiB,MAExBv0G,EAAAa,UAAMk+D,UAASr+D,KAAAC,KAACs+D,IASlB43C,EAAAh2G,UAAAqc,OAAM,SAAChc,QACAkuE,SAASlyD,OAAOhc,GACrBlB,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,IAQf21G,EAAAh2G,UAAAovE,WAAU,uBACIb,UAOdynC,EAAAh2G,UAAAw3G,iBAAgB,SAACn0F,GACXA,EAAMtd,SAAOjG,KACVusE,UAAUtoE,KAAKsf,EAAMtd,UAQ9BiwG,EAAAh2G,UAAAy3G,oBAAmB,SAACp0F,GACdA,EAAMtd,SAAOjG,KACVusE,UAAU7gE,OAAO6X,EAAMtd,UAQhCiwG,EAAAh2G,UAAA43G,kBAAiB,SAACh6F,QACX+5F,YAAoC/5F,EAAI/Z,UAO/CmyG,EAAAh2G,UAAAotG,qBAAoB,SAACxvF,YACTg5F,iBAAgB,KAClB7wG,EAAkC6X,EAAIjf,YACvC05G,eAAetyG,QACf4xG,YAAY5xG,KAQrBiwG,EAAAh2G,UAAA63G,qBAAoB,SAACj6F,OACb7X,EAAkC6X,EAAI/Z,aACvCw0G,eAAetyG,IAQtBiwG,EAAAh2G,UAAA+2G,oBAAmB,SAAChxG,EAASC,OACrBiB,EAAcjB,EAASq1C,iBAGvBq9D,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACVygB,QAAO,CAAGxf,EAAaA,SAGpB0vG,OAAOt9B,OAAOrzE,EAASO,YAAamyG,IAQ3C1C,EAAAh2G,UAAAk3G,yBAAwB,SAACnxG,EAASC,WAC1B4vE,EAAS5vE,EAASq1C,iBACf5/C,EAAI,EAAG6H,EAAKsyE,EAAOl6E,OAAQD,EAAI6H,IAAM7H,EAAC,KACvCwL,EAAc2uE,EAAOn6E,GAGrBi9G,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACV2yG,MAAK,CAAGl9G,GACRwQ,MAAOxQ,EACPgrB,QAAO,CAAGxf,EAAaA,SAGpB0vG,OAAOt9B,OAAOrzE,EAASO,YAAamyG,KAS7C1C,EAAAh2G,UAAAg3G,yBAAwB,SAACjxG,EAASC,WAC1BiB,EAAcjB,EAASq1C,iBACpB5/C,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GAGnCi9G,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACViG,MAAOxQ,EACPgrB,QAASA,QAGNkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAShD1C,EAAAh2G,UAAAm3G,8BAA6B,SAACpxG,EAASC,WAC/BkoB,EAAQloB,EAASq1C,iBACdv0C,EAAI,EAAGsjC,EAAKlc,EAAMxyB,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAcinB,EAAMpnB,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GAGnCi9G,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACV2yG,MAAK,CAAG7xG,GACRmF,MAAOxQ,EACPgrB,QAASA,QAGNkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAUlD1C,EAAAh2G,UAAAi3G,sBAAqB,SAAClxG,EAASC,WACvBkP,EAAQlP,EAASq1C,iBACdv0C,EAAI,EAAGsjC,EAAKl1B,EAAMxZ,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAciO,EAAMpO,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GAGnCi9G,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACV2yG,MAAK,CAAG7xG,GACRmF,MAAOxQ,EACPgrB,QAASA,QAGNkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAUlD1C,EAAAh2G,UAAAo3G,2BAA0B,SAACrxG,EAASC,WAC5BkwE,EAAWlwE,EAASq1C,iBACjB5/B,EAAI,EAAGwmF,EAAK/rB,EAASx6E,OAAQ+f,EAAIwmF,IAAMxmF,UACxCvG,EAAQghE,EAASz6D,GACd3U,EAAI,EAAGsjC,EAAKl1B,EAAMxZ,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAciO,EAAMpO,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GAGnCi9G,EAAW,CACf3yG,QAASA,EACTC,SAAUA,EACV2yG,MAAK,CAAG7xG,EAAG2U,GACXxP,MAAOxQ,EACPgrB,QAASA,QAGNkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAiBpD1C,EAAAh2G,UAAAq3G,qBAAoB,SAACtxG,EAASC,OACtBiB,EAAcjB,EAAS4M,YAGvBgmG,EAAiB,CACrB7yG,QAASA,EACTC,SAAUA,EACViG,MAhrBsB,EAirBtBwa,QAAO,CAAGxf,EAAaA,IAInB4xG,EAAwB,CAC5B9yG,QAASA,EACTC,SAAUA,EACViG,MAjrB6B,EAkrB7Bwa,QAAO,CAAGxf,EAAaA,IAGnB6xG,EAAe,CAAIF,EAAmBC,GAC5CD,EAAkBE,gBAAkBA,EACpCD,EAAyBC,gBAAkBA,OACtCnC,OAAOt9B,OAAM5yE,EAAAqL,6BAAc7K,GAAc2xG,OAC1C7qB,EAAuE/nF,EACrE2nC,EAAc5U,EAAA6U,uBAChBD,GAAc7tC,KAASoC,SAAM,KACzBzE,EAAUqC,KAAQoC,SAASs2B,UAAUC,gBAC3Cs1D,EAAiBA,EACd18E,QACAlD,UAAUw/B,EAAgBlwC,GAC7BswF,EAAczgD,EAAAqQ,WACwCowC,GACpD5/E,UAAU1Q,EAAYkwC,QAErBgpE,OAAOt9B,OAAO0U,EAAexnF,YAAasyG,IAQjD7C,EAAAh2G,UAAAs3G,iCAAgC,SAACvxG,EAASC,WAClCs1C,EAAat1C,EAASu+F,qBACnB9oG,EAAI,EAAGA,EAAI6/C,EAAW5/C,SAAUD,EAAC,KAClCs9G,EAAWz9D,EAAW7/C,IAE5Bw8G,EADYn4G,KAAQg3G,iBAAiBiC,EAASvrE,YACvCznC,EAASgzG,KAWpB/C,EAAAh2G,UAAAg5G,6BAA4B,SAAC/xG,EAAawwB,EAAU6jB,OAC9C05D,EAAal1G,KAAQ4zG,eACpBsB,EAKcA,EAAcnyC,cACtBnkB,eAAez3C,IALxB+tG,EAAa,IAAA1kC,EAAAj0E,QAAA,IAAAoxE,EAAApxE,QAAyB4K,SACjCysG,eAAiBsB,OACjBzmC,SAASvnE,YAAYmqE,WAAW6jC,WAKvCA,EAAc3nG,IAAG,WAAaoqB,GAC9Bu9E,EAAc3nG,IAAG,aAAeiuC,GACzB05D,GAQTgB,EAAAh2G,UAAAyjB,YAAW,SAACmW,UACLA,EAAgBG,qBAGhB+9E,kBAAoBl+E,EAItBA,EAAgBv5B,IAAIm4B,UAAU0R,kBAC/BtQ,EAAgB53B,MAAI25B,EAAAt/B,QAAwB8kC,aAAWrhC,KACjDkgE,wBAAsBlgE,KAEvBuiC,mBAAmBzI,QAEjB85E,gBAAc5zG,KAASq2G,iBAAiBv8E,KAO7CymC,IALAzmC,EAAgB53B,MAAI25B,EAAAt/B,QAAwBslC,cAAW7hC,KACjD22G,yBAEC32G,KAAQm5G,eAMfr/E,EAAgB53B,MAAI25B,EAAAt/B,QAAwBslC,cAAW7hC,KACpD22G,wBAAyB,GAGzBt3G,EAAAa,UAAMyjB,YAAW5jB,KAAAC,KAAC85B,KAAqBymC,OAvB1CA,GA8BN21C,EAAAh2G,UAAAq/D,gBAAe,SAACzhD,QACT64F,wBAAyB,OACzB0B,oBAAoBv6F,EAAG9d,KAAO+2G,uBAE7BvC,EAAM,CACV12F,EAAIlY,WAAW,GAAC5F,KAAS89D,OAAO,GAChChgD,EAAIlY,WAAW,GAAC5F,KAAS89D,OAAO,IAE5BnmC,EAAQ,GACR6jB,EAAU,GACP7/C,EAAI,EAAG6H,EAAExD,KAAQ+2G,cAAcn7G,OAAQD,EAAI6H,IAAM7H,EAAC,KACnDy9G,EAAWp5G,KAAQ+2G,cAAcp7G,GACjCi9G,EAAcQ,EAAY,GAC1BnzG,EAAU2yG,EAAY3yG,SACM,IAA9B0xB,EAAS5sB,QAAQ9E,IACnB0xB,EAAS1zB,KAAKgC,OAEVC,EAAW0yG,EAAY1yG,UACQ,IAAjCs1C,EAAWzwC,QAAQ7E,IACrBs1C,EAAWv3C,KAAKiC,WAEZ2yG,EAAQD,EAAYC,MACtB1xG,OAAW,EACTwf,EAAUiyF,EAAYjyF,QACtBxa,EAAQitG,EAAY,GAEnB5E,EAAO54G,OAASsK,EAASooC,aAC9BkmE,EAAOvwG,KAAK0iB,EAAQxa,GAAOqoG,EAAO54G,gBAG5BsK,EAASwnC,0BACGmF,MAChB1rC,EAAcqtG,EACd7tF,EAAQ,GAAK6tF,EACb7tF,EAAQ,GAAK6tF,uBAEGvhE,aAChB9rC,EAAcjB,EAASq1C,kBACXq9D,EAAYzsG,OAASqoG,EACjC7tF,EAAQ,GAAK6tF,EACb7tF,EAAQ,GAAK6tF,uBAEG1hE,aAChB3rC,EAAcjB,EAASq1C,kBACXq9D,EAAYzsG,MAAQA,GAASqoG,EACzC7tF,EAAQxa,GAASqoG,uBAEDthE,iCAKAF,SAChB7rC,EAAcjB,EAASq1C,kBACXs9D,EAAM,IAAID,EAAYzsG,MAAQA,GAASqoG,EACnD7tF,EAAQxa,GAASqoG,uBAEDrhE,eAChBhsC,EAAcjB,EAASq1C,kBACXs9D,EAAM,IAAIA,EAAM,IAAID,EAAYzsG,MAAQA,GAASqoG,EAC7D7tF,EAAQxa,GAASqoG,uBAED5mE,UAChBjnB,EAAQ,GAAK6tF,EACb7tF,EAAQ,GAAK6tF,EA31BK,IA41BdoE,EAAYzsG,WACT2qG,kBAAmB,EACxB5wG,EAASopC,UAAUklE,QACdsC,kBAAmB,YAGnBA,kBAAmB,MAClBn5G,EAAamgB,EAAIvd,IAAIm4B,UAAUC,gBACjCqiB,EAAM50C,EAAA8f,SAAA+S,EAAAC,mBACWhzB,EAAS4M,YAAanV,GAAUs7B,EAAAC,mBAChCs7E,EAAQ72G,IAEvBkwC,EAAc5U,EAAA6U,uBAChBD,EAAc,KACVogD,EAAiB/nF,EACpBqL,QACAlD,UAAUw/B,EAAgBlwC,GAC7BswF,EAAe/b,UAAUl3B,GACzBA,EAASizC,EACN5/E,UAAU1Q,EAAYkwC,GACtBpnB,YAELvgB,EAASgsE,UAAUl3B,QACd87D,kBAAmB,GAO1B3vG,GAAWnH,KACRq5G,wBAAwBnzG,EAAUiB,QAGtC+xG,6BAA6B1E,EAAQ78E,EAAU6jB,IAQtD06D,EAAAh2G,UAAA4/D,gBAAe,SAAChiD,YACJshD,WAAWthD,GAAG,OACf,MAEHq2F,EAAkBr2F,EAAIlY,gBACvBwyG,sBAAsBt6F,EAAIvZ,MAAOuZ,EAAIvd,IAAK4zG,QAC1C4C,cAAcn7G,OAAS,OACvBg7G,uBAAyB,SACxB1B,EAAal1G,KAAQ4zG,kBACvBsB,EAAa,KACTv3G,EAAamgB,EAAIvd,IAAIm4B,UAAUC,gBAC/B2gF,EAAc,GACd9E,EAASU,EAAcnyC,cAAcxnB,iBACrCg+D,EAAY5yG,EAAA0K,eAAA,CAAmBmjG,IAC/BgF,EAAkBx5G,KAAQ62G,OAAOjI,YAAY2K,GAC7CE,EAAiB,GACvBD,EAAmBt2G,KAAKw2G,WACf/9G,EAAI,EAAG6H,EAAKg2G,EAAmB59G,OAAQD,EAAI6H,IAAM7H,EAAC,KACnDg+G,EAAmBH,EAAmB79G,GACtCgrB,EAAUgzF,EAAiBhzF,QAC7ByoF,EAAGt+F,EAAA/D,OAAU4sG,EAAiBzzG,UAC5B2yG,EAAQc,EAAiBd,SAC3BA,IACFzJ,GAAG,IAAUyJ,EAAMroG,KAAI,MAEpBipG,EAAkBrK,KACrBqK,EAAkBrK,GAAG,IAAQvlG,MAAM,IAInC8vG,EAAiBzzG,SAASwnC,YAAOC,EAAApxC,QAAoBqxC,QA75B5B,IA85BzB+rE,EAAiBxtG,mBAkBAwa,EAAQ,GAAI6tF,IAC5BiF,EAAkBrK,GAAK,gBAQPzoF,EAAQ,GAAI6tF,IAC5BiF,EAAkBrK,GAAK,YAmBjBzoF,KAAO3mB,KAAUy2G,kBACvBgD,EAAkBrK,GAAK,KACvBqK,EAAkBrK,GAAK,IAACpvG,KACpBu2G,uBAAuBz4F,IAE5Bw7F,EAAer1G,KAAK01G,YApBjBA,EAAiBzzG,SAASwnC,YAAOC,EAAApxC,QAAoBu2C,aACpD6mE,EAAiBzzG,SAASwnC,YAAOC,EAAApxC,QAClB22C,oBACjBumE,EAAkBrK,GAAK,IACa,IAApCqK,EAAkBrK,GAAK,GAAGjjG,MAAW,cAKlC4qG,cAAc9yG,KAAI,CAAE01G,EAAkB,IAC3CF,EAAkBrK,GAAK,GAAKuK,YArBvB5C,cAAc9yG,KAAI,CAAE01G,EAAkB,IAC3CF,EAAkBrK,GAAK,GAAKuK,WApBtBC,EAAgBC,EACpB1F,EACAwF,EACAh8G,YAGiBi8G,EAAepF,KAC/BiF,EAAkBrK,GAAK,UAEnB2H,cAAc9yG,KAAI,CAAE01G,EAAkB,IAC3CF,EAAkBrK,GAAK,GAAKuK,IA4C9BL,EAAe19G,QAAMoE,KAClBq4G,oBAAoBv6F,EAAG,CAAGw7F,YAGxBtyG,EAAIsyG,EAAe19G,OAAS,EAAGoL,GAAK,IAAKA,EAAChH,KAC5C85G,cAAcR,EAAetyG,GAAIwtG,gBAG5BZ,gBAQhBsC,EAAAh2G,UAAAy/D,cAAa,SAAC7hD,WACHniB,EAACqE,KAAQ+2G,cAAcn7G,OAAS,EAAGD,GAAK,IAAKA,EAAC,KAC/Ci9G,EAAW54G,KAAQ+2G,cAAcp7G,GAAG,GACpCuK,EAAW0yG,EAAY1yG,YACzBA,EAASwnC,YAAOC,EAAApxC,QAAoBqxC,OAAM,KAEtCzmC,EAAcjB,EAAS4M,YACvBgmG,EAAoBF,EAAYI,gBAAgB,GAChDD,EAA2BH,EAAYI,gBAAgB,GAC7DF,EAAkBnyF,QAAQ,GAAKxf,EAC/B2xG,EAAkBnyF,QAAQ,GAAKxf,EAC/B4xG,EAAyBpyF,QAAQ,GAAKxf,EACtC4xG,EAAyBpyF,QAAQ,GAAKxf,OACjC0vG,OAAOn3C,OAAM/4D,EAAAqL,6BAAc7K,GAAc2xG,OAC1C7qB,EAAiB/nF,EACf2nC,EAAc5U,EAAA6U,uBAChBD,EAAc,KACVlwC,EAAamgB,EAAIvd,IAAIm4B,UAAUC,gBACrCs1D,EAAiBA,EACd18E,QACAlD,UAAUw/B,EAAgBlwC,GAC7BswF,EAAczgD,EAAAqQ,WAAcowC,GAAgB5/E,UAC1C1Q,EACAkwC,QAGCgpE,OAAOn3C,OACVuuB,EAAexnF,YACfsyG,aAGGlC,OAAOn3C,OAAM/4D,EAAA0K,eAAgBunG,EAAYjyF,SAAUiyF,eAGnDhC,8BACFn0G,cAAa,IACZqzG,EACFD,EAAyB71G,KACpB42G,uBACL94F,SAGC84F,uBAAyB,OAEzB,GAOTV,EAAAh2G,UAAAqiC,mBAAkB,SAACzkB,QACZ44F,WAAa54F,EAAIvZ,WACjB6zG,sBAAsBt6F,EAAIvZ,MAAOuZ,EAAIvd,IAAKud,EAAIlY,aASrDswG,EAAAh2G,UAAAk4G,sBAAqB,SAAC7zG,EAAOhE,EAAKw5G,OAU5BC,EAAOC,EAVbz5G,EAAAR,KACQm0G,EAAkB4F,GAAkBx5G,EAAIu3B,uBAAuBvzB,GAC/D5G,EAAa4C,EAAIm4B,UAAUC,wBASxB8+E,cAAa,KACd/yG,EACqB,iBADV1E,KACHy3G,cAA0B,SACjCn6G,UAAUA,IAAUkD,EAAKi3G,oBAC1Bj1G,EACNjC,EAAIg3B,sBACFhzB,GAAK,SACJ0B,EAAS3I,EAAO4I,OACfA,EAAWA,GAAYD,EAAQ88D,eAClBr1B,YAAOC,EAAApxC,QAAoBs2C,MAAK,CAC3ConE,EAAmB/zG,MACbN,EAAaM,EAASq1C,iBAC5By+D,EAAK,EAED/zG,QAAOA,EACPC,SAAQA,EACRygB,QAAO,CAAG/gB,EAAYA,YAIrB,KAERlB,YAAWA,QAGXs1G,EAAK,KACFE,EAAUjhF,EAAAgO,eAAAtgC,EAAAqL,6BACDmiG,EAAiBwB,GAC9Bh4G,GAEI2T,EAAS/Q,EAAIm4B,UAAU8P,gBAAaxoC,KAAUwzG,gBAC9CxhD,EAAG/4B,EAAA+b,aAAAruC,EAAA2K,OACM4oG,EAAY5oG,EAAQqkG,GACjCh4G,GAEFq8G,EAAKh6G,KAAQ62G,OAAOjI,YAAY58C,MAG9BgoD,GAASA,EAAMp+G,OAAS,EAAC,KACrBw2B,EAAO4nF,EAAM92G,MA/CD,SAAaC,EAAGC,UAEhC+2G,EAAsChG,EAAiBhxG,EAAGxF,GAC1Dw8G,EAAsChG,EAAiB/wG,EAAGzF,MA4CpB,GAClC42G,EAAiBniF,EAAKzL,QACxB6tF,EAASqF,EAAqB1F,EAAiB/hF,EAAMz0B,GACnD82G,EAAcl0G,EAAIw4B,uBAAuBy7E,GAC3CM,EAAI1uG,EAAA8f,SAAsB3hB,EAAOkwG,MACjCwF,GAAoBnF,GAAI90G,KAASwzG,gBAAe,CACZ,IAChC4G,EAAc,MACpBA,EAActpG,EAAA/D,OAAQwnG,KAAmB,OAE/B0D,sBACHn6C,OAAO,GAAK02C,EAAO,GAAKL,EAAgB,QACxCr2C,OAAO,GAAK02C,EAAO,GAAKL,EAAgB,IAG7C/hF,EAAKlsB,SAASwnC,YAAOC,EAAApxC,QAAoBqxC,QArmChB,IAsmCzBxb,EAAKjmB,WAEAunG,kBAAmB,OACnBwF,6BACH1E,EAAM,CACLpiF,EAAKnsB,UACLmsB,EAAKlsB,oBAGFwuG,EAASn0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDI,EAASp0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDK,EAAYxuG,EAAAyU,gBAA6B45F,EAAaC,GACtDG,EAAYzuG,EAAAyU,gBAA6B45F,EAAaE,GAC5DG,EAAOllG,KAAK8W,KAAK9W,KAAK2F,IAAIq/F,EAAcC,SACnCnB,iBAAmBoB,GAAI90G,KAASwzG,qBAC5BE,mBACPc,EACEI,EAAeC,EACXN,EAAe,GACfA,EAAe,SAElB2E,6BACH1E,EAAM,CACLpiF,EAAKnsB,UACLmsB,EAAKlsB,eAEFs1C,EAAU,GAChBA,EAAU1qC,EAAA/D,OAAQqlB,EAAKlsB,YAAa,UAC3BvK,EAAI,EAAG6H,EAAKw2G,EAAMp+G,OAAQD,EAAI6H,IAAM7H,EAAC,KACtCgrB,EAAUqzF,EAAMr+G,GAAGgrB,sBAEL4tF,EAAe,GAAI5tF,EAAQ,KAACvgB,EAAA2D,OAC3BwqG,EAAe,GAAI5tF,EAAQ,KAACvgB,EAAA2D,OAC7BwqG,EAAe,GAAI5tF,EAAQ,KAACvgB,EAAA2D,OAC3BwqG,EAAe,GAAI5tF,EAAQ,eAExC0zF,EAAWvpG,EAAA/D,OAAUitG,EAAMr+G,GAAGuK,UAC9Bm0G,KAAe7+D,IACnBA,EAAW6+D,IAAe,EAC1BD,EAActpG,EAAA/D,OAAQ4Z,KAAY,qBAQrC8vF,gBAAkB2D,SAIlBxG,sBACFnlC,SAASvnE,YAAY6mG,cAAa/tG,KAAM4zG,qBACxCA,eAAiB,OAS1BsC,EAAAh2G,UAAA45G,cAAa,SAAClB,EAAapE,WAMrBrtG,EALEwf,EAAUiyF,EAAYjyF,QACtB1gB,EAAU2yG,EAAY3yG,QACtBC,EAAW0yG,EAAY1yG,SACvB2yG,EAAQD,EAAYC,MACpB1sG,EAAQysG,EAAYzsG,MAGnBqoG,EAAO54G,OAASsK,EAASooC,aAC9BkmE,EAAOvwG,KAAK,UAGNiC,EAASwnC,0BACGwF,iCAIAF,SAChB7rC,EAAcjB,EAASq1C,kBACXs9D,EAAM,IAAIltG,OAAOQ,EAAQ,EAAG,EAAGqoG,wBAE3BrhE,eAChBhsC,EAAcjB,EAASq1C,kBACXs9D,EAAM,IAAIA,EAAM,IAAIltG,OAAOQ,EAAQ,EAAG,EAAGqoG,wBAErC1hE,aAChB3rC,EAAcjB,EAASq1C,kBACX5vC,OAAOQ,EAAQ,EAAG,EAAGqoG,6BAMhC6E,wBAAwBnzG,EAAUiB,OACjCmzG,EAAKt6G,KAAQ62G,OACnByD,EAAM5uG,OAAOktG,QACR2B,sBAAsBr0G,EAAUiG,EAAO0sG,EAAO,GAEzB,IACpB2B,EAAc,CAClB7zF,QAAO,CAAGA,EAAQ,GAAI6tF,GACtBvuG,QAASA,EACTC,SAAUA,EACV2yG,MAAOA,EACP1sG,MAAOA,GAGTmuG,EAAM/gC,OAAM5yE,EAAA0K,eAAgBmpG,EAAe7zF,SAAU6zF,QAChDzD,cAAc9yG,KAAI,CAAEu2G,EAAgB,IAEf,IACpBC,EAAe,CACnB9zF,QAAO,CAAG6tF,EAAQ7tF,EAAQ,IAC1B1gB,QAASA,EACTC,SAAUA,EACV2yG,MAAOA,EACP1sG,MAAOA,EAAQ,GAGjBmuG,EAAM/gC,OAAM5yE,EAAA0K,eAAgBopG,EAAgB9zF,SAAU8zF,QACjD1D,cAAc9yG,KAAI,CAAEw2G,EAAiB,SACrC9D,wBAAyB,GAQhCT,EAAAh2G,UAAAi5G,YAAW,mBAEFnB,mBAAiBh4G,KACjBg4G,kBAAkB91G,MAAI25B,EAAAt/B,QAAwBkmC,YAAW,KAExD3kB,EAAG9d,KAAQg4G,uBACZK,oBAAoBv6F,EAAG9d,KAAO+2G,mBAC7B3G,EAAOpwG,KAAQ06G,4BAChBj4G,cAAa,IACZqzG,EACFD,EAAyB71G,KACpB42G,uBACL94F,SAGC84F,uBAAyB,KACvBxG,SAEF,GAQT8F,EAAAh2G,UAAAw6G,cAAa,eAIPC,EAAWxzG,EAAaiyG,EAAalzG,EAAUvK,EAAGwQ,EAAO6hB,EACzD4sF,EAAU3xD,EAAO2vD,EAAaxJ,EAJ5ByL,EAAY76G,KAAQ+2G,cACpB+D,EAAiB,GACnBC,GAAU,MAGTp/G,EAAIk/G,EAAaj/G,OAAS,EAAGD,GAAK,IAAKA,EAE1Ci9G,GADAQ,EAAcyB,EAAal/G,IACD,GAC1ByzG,EAAGt+F,EAAA/D,OAAU6rG,EAAY3yG,SACrB2yG,EAAYC,QAEdzJ,GAAG,IAAUwJ,EAAYC,MAAMroG,KAAI,MAE/B4+F,KAAO0L,IACXA,EAAkB1L,GAAG,IAEA,IAAnBgK,EAAY,IACd0B,EAAkB1L,GAAKnmD,MAAQ2vD,EAC/BkC,EAAkB1L,GAAKjjG,MAAQysG,EAAYzsG,OAChB,GAAlBitG,EAAY,KACrB0B,EAAkB1L,GAAKphF,KAAO4qF,EAC9BkC,EAAkB1L,GAAKjjG,MAAQysG,EAAYzsG,MAAQ,OAGlDijG,KAAO0L,EAAiB,QAC3B7xD,EAAQ6xD,EAAkB1L,GAAKnmD,MAC/Bj7B,EAAO8sF,EAAkB1L,GAAKphF,MAE9B4sF,GADAzuG,EAAQ2uG,EAAkB1L,GAAKjjG,OACZ,GAMJ,IACbyuG,EAAW,GAIbD,EADAxzG,GADAjB,GAPE0yG,OADWp2G,IAATwrB,EACYA,EAEAi7B,GAKO/iD,UACAq1C,iBAEvBw/D,GAAU,EACF70G,EAASwnC,0BACGwF,kBACZ/rC,EAAYyxG,EAAYC,MAAM,IAAIj9G,OAAS,IAC7CuL,EAAYyxG,EAAYC,MAAM,IAAIltG,OAAOQ,EAAO,GAChD4uG,GAAU,wBAGIjoE,YACZ3rC,EAAYvL,OAAS,IACvBuL,EAAYwE,OAAOQ,EAAO,GAC1B4uG,GAAU,wBAGI5nE,cAChBwnE,EAAYA,EAAU/B,EAAYC,MAAM,IACvB,KAAAlrE,EAAApxC,QACDy2C,SAChB2nE,EAAYA,EAAU/B,EAAYC,MAAM,KAC1Bj9G,OAAS,IACjBuQ,GAASwuG,EAAU/+G,OAAS,IAC9BuQ,EAAQ,GAEVwuG,EAAUhvG,OAAOQ,EAAO,GACxB4uG,GAAU,EACI,IAAV5uG,IAEFwuG,EAAUj8E,MACVi8E,EAAU12G,KAAK02G,EAAU,IACzBC,EAAWD,EAAU/+G,OAAS,OAQlCm/G,EAAO,MACJ1B,wBAAwBnzG,EAAUiB,OACjCktG,EAAQ,WACD7xG,IAATwrB,SACG6oF,OAAOnrG,OAAOsiB,GACnBqmF,EAASpwG,KAAK+pB,EAAKrH,QAAQ,UAEfnkB,IAAVymD,SACG4tD,OAAOnrG,OAAOu9C,GACnBorD,EAASpwG,KAAKglD,EAAMtiC,QAAQ,UAEjBnkB,IAATwrB,QAAgCxrB,IAAVymD,EAAmB,CACjB,IACpBuxD,EAAc,CAClB3B,MAAOD,EAAYC,MACnB5yG,QAAS2yG,EAAY3yG,QACrBC,SAAU0yG,EAAY1yG,SACtBiG,MAAOyuG,EACPj0F,QAAS0tF,QAGNwC,OAAOt9B,OAAM5yE,EAAA0K,eACDmpG,EAAe7zF,SAC9B6zF,QAGCD,sBAAsBr0G,EAAUiG,EAAOysG,EAAYC,OAAO,QACtDjF,sBACFnlC,SAASvnE,YAAY6mG,cAAa/tG,KAAM4zG,qBACxCA,eAAiB,MAExBiH,EAAaj/G,OAAS,UAGnBm/G,GAQT7E,EAAAh2G,UAAAm5G,wBAAuB,SAACnzG,EAAUiB,QAC3B2vG,kBAAmB,EACxB5wG,EAAS04C,eAAez3C,QACnB2vG,kBAAmB,GAU1BZ,EAAAh2G,UAAAq6G,sBAAqB,SAACr0G,EAAUiG,EAAO0sG,EAAOtyF,QACvCswF,OAAOtI,gBACVroG,EAASO,aAAS,SACRkzG,GAENA,EAAiBzzG,WAAaA,SACnB1D,IAAVq2G,QAC4Br2G,IAA3Bm3G,EAAiBd,OAAmBvvG,EAAAS,OAC7B4vG,EAAiBd,MAAOA,KACjCc,EAAiBxtG,MAAQA,IAEzBwtG,EAAiBxtG,OAASoa,OAKpC2vF,EAvxCA,YA6xCG,SACMwD,EAAev2G,EAAGC,UAClBD,EAAEgJ,MAAQ/I,EAAE+I,MAYlB,SACMguG,EACPa,EACApC,EACAj7G,OAEMuI,EAAW0yG,EAAY1yG,YAEzBA,EAASwnC,YAAOC,EAAApxC,QAAoBqxC,OAAM,KACxCqgD,EAAqE/nF,KAr7C1C,IAu7C3B0yG,EAAYzsG,MAAoC,KAC5C0hC,EAAc5U,EAAA6U,oBAChBD,IACFogD,EAAqEA,EAClE18E,QACAlD,UAAUw/B,EAAgBlwC,QAEzBs9G,EAAuB70G,EAAAyU,gBAC3BozE,EAAen7E,YAASmmB,EAAAC,mBACL8hF,EAAkBr9G,IAEjCu9G,EACJtrG,KAAK8W,KAAKu0F,GAA2BhtB,EAAexnE,mBAC/Cy0F,EAA0BA,OAI/Bt1G,EAAUqzB,EAAAC,mBAAsB8hF,EAAkBr9G,UACxDi4G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,GAC5Di4G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,8BAC5BiI,EAAYgwG,GAY3C,SACMiE,EAAqBmB,EAAkBpC,EAAaj7G,OACrDuI,EAAW0yG,EAAY1yG,YAG3BA,EAASwnC,YAAOC,EAAApxC,QAAoBqxC,QA59CL,IA69C/BgrE,EAAYzsG,MAAoC,KAE5C8hF,EAAqE/nF,EACnE2nC,EAAc5U,EAAA6U,2BAChBD,IACFogD,EAAqEA,EAClE18E,QACAlD,UAAUw/B,EAAgBlwC,uBAG7BswF,EAAevqC,gBAAezqB,EAAAC,mBACT8hF,EAAkBr9G,IAEvCA,OAGEiI,EAAUqzB,EAAAC,mBAAsB8hF,EAAkBr9G,UACxDi4G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,GAC5Di4G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,yCAEzCiI,EAAYgwG,GAC7Bj4G,aAcWs4G,oyBCxjDZ,MAAA35C,EAAArhE,EAAA,0zBAgBGkgH,EAME,SAwERC,EAAA,SAAA/7G,GAOK,SACHg8G,EAAYn5G,EAAMo5G,EAAUC,EAAYzhF,OAAxCt5B,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAK86G,SAAWA,EAOhB96G,EAAK+6G,WAAaA,EAOlB/6G,EAAKs5B,gBAAkBA,WA9BM75B,EAAAo7G,EAAAh8G,GAgCjCg8G,EAhCA,YAsCMG,EAAqB,GAiB3BC,EAAA,SAAAp8G,GAGK,SACHq8G,EAAYlkF,OAsXN41C,EA3SA1oE,EA3ENlE,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAyB,MAKzCh3B,EAAKm7G,iBAAmBn7G,EAAKq3G,YAAY52G,KAAKT,GAK9CA,EAAKo7G,oBAAsBp7G,EAAK+3G,eAAet3G,KAAKT,GAMpDA,EAAK4+D,WAAajiE,EAAQ4hE,UAAY5hE,EAAQ4hE,UAASC,EAAAiC,YAMvDzgE,EAAKq7G,cAAgB1+G,EAAQ2+G,aAAe3+G,EAAQ2+G,aAAY98C,EAAA+B,MAMhEvgE,EAAKu7G,iBAAmB5+G,EAAQ6+G,gBAC5B7+G,EAAQ6+G,gBAAeh9C,EAAA+B,MAO3BvgE,EAAKy7G,iBAAmB9+G,EAAQ++G,gBAC5B/+G,EAAQ++G,gBAAel9C,EAAAoC,aAO3B5gE,EAAK27G,SAASh/G,EAAQi/G,OAAQj/G,EAAQi/G,MAMtC57G,EAAK67G,QAAUl/G,EAAQ+tC,OAAS/tC,EAAQ+tC,OAAMrjC,EAAAC,KAM9CtH,EAAK87G,cAAgBn/G,EAAQqH,aAAerH,EAAQqH,aAAe,EAMnEhE,EAAKgyE,YACehwE,IAAlBrF,EAAQkB,MAAsBlB,EAAQkB,OAoTpC+uE,EAAMyB,EAAAC,8BACL1B,EAAMz/B,EAAApxC,QAAcy2C,SAAUo6B,EAAMz/B,EAAApxC,QAAcu2C,uBAEvDs6B,EAAMz/B,EAAApxC,QAAc62C,qBACpBg6B,EAAMz/B,EAAApxC,QAAcu2C,uBAGL7sC,UACVA,EAAQ88D,cAGNqK,EAAOnnE,EAAQ88D,cAAcr1B,WAF3B,OAvTTltC,EAAK+rE,UAAYpvE,EAAQw6B,UAAQ,IAAAlE,EAAAl3B,QAI7BY,EAAQd,UACe,mBAAdc,EAAQd,OACjBqI,EAAcvH,EAAQd,gBAEhBkgH,EAASp/G,EAAQd,OACvBqI,EAAW,SAAapH,qBACNi/G,EAAQj/G,SAI5BoH,EAAWmD,EAAAC,YAObtH,EAAKg8G,aAAe93G,EAQpBlE,EAAKi8G,yBAAwB,YAzGZx8G,EAAAy7G,EAAAr8G,GAiHnBq8G,EAAAx7G,UAAAw8G,4BAA2B,SAACz2G,EAAS3I,QAC9Bm/G,yBAAwB3rG,EAAA/D,OAAQ9G,IAAY3I,GAQnDo+G,EAAAx7G,UAAAwd,YAAW,uBACG6uD,WAQdmvC,EAAAx7G,UAAAy8G,gBAAe,uBACDL,eAYdZ,EAAAx7G,UAAAikF,SAAQ,SAACl+E,eAEJw2G,yBAAwB3rG,EAAA/D,OAAQ9G,KASrCy1G,EAAAx7G,UAAA08G,gBAAe,SAACp4G,QACT83G,cAAgB93G,GASvBk3G,EAAAx7G,UAAAqc,OAAM,SAAChc,GACWP,KAAQoC,UACVpC,KAASwyE,QAAMxyE,KACtBusE,UAAUhlE,QAAOvH,KAAM68G,sBAAsB57G,KAAIjB,OAExDX,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GACTA,QACGgsE,UAAU/vD,iBAAgB+Z,EAAAh6B,QACTi6B,IAAGx2B,KAClB27G,uBAEFpvC,UAAU/vD,iBAAgB+Z,EAAAh6B,QACTk6B,OAAMz2B,KACrB47G,0BAGEppC,QAAMxyE,KACRusE,UAAUhlE,QAAOvH,KAAM88G,oBAAoB77G,KAAIjB,cAGjDusE,UAAU3pD,oBAAmB2T,EAAAh6B,QACZi6B,IAAGx2B,KAClB27G,uBAEFpvC,UAAU3pD,oBAAmB2T,EAAAh6B,QACZk6B,OAAMz2B,KACrB47G,uBASXF,EAAAx7G,UAAA23G,YAAW,SAAC/5F,OACJ7X,EAAU6X,EAAI/Z,aACXyuE,QAAMxyE,KACR88G,oBAAoB72G,IAQ7By1G,EAAAx7G,UAAAq4G,eAAc,SAACz6F,OACP7X,EAAU6X,EAAI/Z,aACXyuE,QAAMxyE,KACR68G,sBAAsB52G,IAO/By1G,EAAAx7G,UAAA2yE,SAAQ,uBACML,QAOdkpC,EAAAx7G,UAAA48G,oBAAmB,SAAC72G,OACZ6C,EAAGgI,EAAA/D,OAAU9G,GACb6C,KAAO0yG,IACXA,EAAsB1yG,GAAO7C,EAAQ4sE,YAEvC5sE,EAAQ6sE,SAAQ9yE,KAAMwyE,SAOxBkpC,EAAAx7G,UAAA28G,sBAAqB,SAAC52G,WACdrG,EAAYI,KAAQoC,SAAS40B,kBAAkBtD,WAC5C/3B,EAAIiE,EAAahE,OAAS,EAAGD,GAAK,IAAKA,EAAC,KACzC+6B,EAAc92B,EAAajE,MAE/B+6B,IAAW12B,MACX02B,aAAuBglF,GACvBhlF,EAAYm8C,aACkD,IAA9Dn8C,EAAYhZ,cAAcgW,WAAW8xD,YAAYv/E,eAEjDA,EAAQ6sE,SAASp8C,EAAYm8C,gBAK3B/pE,EAAGgI,EAAA/D,OAAU9G,GACnBA,EAAQ6sE,SAAS0oC,EAAsB1yG,WAChC0yG,EAAsB1yG,IAO/B4yG,EAAAx7G,UAAA68G,+BAA8B,SAAC92G,eACjBw2G,yBAAwB3rG,EAAA/D,OAAQ9G,KAU9Cy1G,EAAAx7G,UAAAyjB,YAAW,SAACmW,YACAslC,WAAWtlC,GAAe,OAC3B,MAEHjU,EAAG7lB,KAAQ67G,cAAc/hF,GACzBpuB,EAAM1L,KAAQ+7G,iBAAiBjiF,GAC/B+xB,EAAM7rD,KAAQi8G,iBAAiBniF,GAC/BvsB,GAAOsY,IAAQna,IAAWmgD,EAC1BtrD,EAAMu5B,EAAgBv5B,IACtBo3B,EAAQ33B,KAAQ0d,cAChB69F,EAAU,GACVD,EAAQ,MACV/tG,EAAG,cAIMkvG,0BACXl8G,EAAIg3B,sBACFuC,EAAgBv1B,MAKb,SACO0B,EAAS3I,WACR++G,QAAQp2G,EAAS3I,UACxBg+G,EAASr3G,KAAKgC,QACTy2G,4BAA4Bz2G,EAAS3I,SAC7B6+G,QAEfl7G,KAAIjB,MAAA,CAEJ0E,YAAW1E,KAAOw8G,aAClBh4G,aAAYxE,KAAOs8G,wBAGd3gH,EAAIg8B,EAAS8G,YAAc,EAAG9iC,GAAK,IAAKA,EAAC,KAC1CsK,EAAU0xB,EAASgH,KAAKhjC,GACxBwQ,EAAQmvG,EAASvwG,QAAQ9E,GAC3BkG,GAAQ,EAEVmvG,EAAS3vG,OAAOQ,EAAO,IAEvBwrB,EAASjsB,OAAOzF,GAChBs1G,EAAWt3G,KAAKgC,IAGI,IAApBq1G,EAAS1/G,QACX+7B,EAASpsB,OAAO+vG,QAIlB/6G,EAAIg3B,sBACFuC,EAAgBv1B,MAKb,SACO0B,EAAS3I,WACR++G,QAAQp2G,EAAS3I,UACnBuoB,IAAOgmC,GAAMviD,EAAAsB,SAAe+sB,EAASjE,WAAYztB,IAInDyF,GAAUmgD,IAAMviD,EAAAsB,SACR+sB,EAASjE,WAAYztB,KAE9Bs1G,EAAWt3G,KAAKgC,QACX82G,+BAA+B92G,KAPpCq1G,EAASr3G,KAAKgC,QACTy2G,4BAA4Bz2G,EAAS3I,UAQ/B6+G,QAEfl7G,KAAIjB,MAAA,CAEJ0E,YAAW1E,KAAOw8G,aAClBh4G,aAAYxE,KAAOs8G,wBAGdt1G,EAAIu0G,EAAW3/G,OAAS,EAAGoL,GAAK,IAAKA,EAC5C2wB,EAASjsB,OAAO6vG,EAAWv0G,IAE7B2wB,EAASpsB,OAAO+vG,UAEdA,EAAS1/G,OAAS,GAAK2/G,EAAW3/G,OAAS,IAACoE,KACzCyC,cAAa,IACZ24G,EACFD,EACAG,EACAC,EACAzhF,KAIC,GAEX4hF,EApXA,sBAyYeD,wdC9hBZ,MAAAuB,EAAA/hH,EAAA,y5BAoDA,SACMgiH,EAAoBn/F,UAEuCA,EAAK7X,QAEE6X,EAC7D,QAEiDA,EAAK/Z,QAGH+Z,EAAY,mBAKvE83F,EAAW,GAyBjBsH,EAAA,SAAA79G,GAGK,SACH89G,EAAY3lF,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnC4wC,EAAgEjrE,SAEjEirE,EAAetI,kBAClBsI,EAAetI,gBAAej4D,EAAAC,MAG3BsgE,EAAe1J,WAClB0J,EAAe1J,SAAQ72D,EAAAsB,QAGzB3I,EAAAnB,EAAAU,KAAAC,KAAMooE,IAAcpoE,MAMf+uD,QAAU5xD,EAAQX,OAASW,EAAQX,OAAS,KAMjDgE,EAAK48G,aAA6B56G,IAAnBrF,EAAQq3G,QAAuBr3G,EAAQq3G,OAMtDh0G,EAAK68G,WAAyB76G,IAAjBrF,EAAQ6rD,MAAqB7rD,EAAQ6rD,KAMlDxoD,EAAK+rE,UAAYpvE,EAAQw6B,SAAWx6B,EAAQw6B,SAAW,KAMvDn3B,EAAK88G,sBAAqB,GAM1B98G,EAAK+8G,2BAA0B,GAQ/B/8G,EAAKg9G,wBAAuB,GAS5Bh9G,EAAKi9G,iBAAgB,GAMrBj9G,EAAKgzG,qBACwBhxG,IAA3BrF,EAAQs2G,eAA+Bt2G,EAAQs2G,eAAiB,GAOlEjzG,EAAKq2G,OAAM,IAAAvK,EAAA/vG,QAOXiE,EAAKw2G,iBAAgB,OACVx2G,EAAKy2G,oBAAoBh2G,KAAKT,cACzBA,EAAK02G,yBAAyBj2G,KAAKT,cACnCA,EAAK02G,yBAAyBj2G,KAAKT,WACtCA,EAAK22G,sBAAsBl2G,KAAKT,cAC7BA,EAAK42G,yBAAyBn2G,KAAKT,mBAC9BA,EAAK62G,8BAA8Bp2G,KAAKT,gBAC3CA,EAAK82G,2BAA2Br2G,KAAKT,sBAC/BA,EAAKg3G,iCAAiCv2G,KAAKT,UACvDA,EAAK+2G,qBAAqBt2G,KAAKT,aApG5BP,EAAAk9G,EAAA99G,GA+GjB89G,EAAAj9G,UAAAmxE,WAAU,SAACprE,EAASy3G,OACZxiH,OAA0BsH,IAAfk7G,GAA2BA,EACtCC,EAAW7sG,EAAA/D,OAAU9G,GACrBC,EAAWD,EAAQ88D,iBACrB78D,EAAQ,KACJ03G,EAAa59G,KAAQg3G,iBAAiB9wG,EAASwnC,WACjDkwE,SACGJ,wBAAwBG,GAAez3G,EAASO,UAASE,EAAAkL,eAG9D+rG,EAAc33G,EAASC,IAIvBhL,IAAQ8E,KACLu9G,2BAA2BI,GAAWj9G,EAAAC,OACzCsF,EAAOlD,EAAAxG,QACGkhB,OAAMzd,KACXstG,qBAAoBttG,QAU/Bm9G,EAAAj9G,UAAA29G,mBAAkB,SAAC53G,QACZorE,WAAWprE,IAOlBk3G,EAAAj9G,UAAA49G,sBAAqB,SAAC73G,QACf8nG,cAAc9nG,IAOrBk3G,EAAAj9G,UAAA69G,aAAY,eACNpmF,cACK40C,UACP50C,EAAQ33B,KAAQusE,eACFxd,UACdp3B,EAAQ33B,KAAQ+uD,QAAQrxC,eAEnBia,GAOTwlF,EAAAj9G,UAAAyjB,YAAW,SAAC7F,OACJ7gB,EAAM+C,KAAQg+G,OAAOlgG,EAAIvZ,MAAOuZ,EAAIlY,WAAYkY,EAAIvd,YACtDtD,EAAOghH,UACTngG,EAAIlY,WAAa3I,EAAOu3G,OAAOnuG,MAAM,EAAG,GACxCyX,EAAIvZ,MAAQtH,EAAOw3G,aAEdp1G,EAAAa,UAAMyjB,YAAW5jB,KAAAC,KAAC8d,IAO3Bq/F,EAAAj9G,UAAA43G,kBAAiB,SAACh6F,OACV7X,EAAUg3G,EAAoBn/F,QAC/BuzD,WAAWprE,IAOlBk3G,EAAAj9G,UAAA63G,qBAAoB,SAACj6F,OACb7X,EAAUg3G,EAAoBn/F,QAC/BiwF,cAAc9nG,IAOrBk3G,EAAAj9G,UAAAotG,qBAAoB,SAACxvF,OACb7X,EAA0D6X,EAAIjf,eAC3DqhE,uBAAsB,KACvBkvC,EAAGt+F,EAAA/D,OAAU9G,GACbmpG,KAAGpvG,KAASy9G,mBAAgBz9G,KAC3By9G,iBAAiBrO,GAAOnpG,aAG1Bi4G,eAAej4G,IASxBk3G,EAAAj9G,UAAAy/D,cAAa,SAAC7hD,OACNqgG,EAAgB5+G,EAAAwkB,UAAA/jB,KAAkBy9G,yBACpCU,EAAiBviH,SACnBuiH,EAAiB52G,QAAOvH,KAAMk+G,eAAej9G,KAAIjB,YAC5Cy9G,iBAAgB,KAEhB,GAUTN,EAAAj9G,UAAA6tG,cAAa,SAAC9nG,EAASm4G,OACfC,OAA8B77G,IAAjB47G,GAA6BA,EAC1CT,EAAW7sG,EAAA/D,OAAU9G,GACrB+N,EAAMhU,KAAQw9G,wBAAwBG,MACxC3pG,EAAM,KACFykG,EAAKz4G,KAAQ62G,OACbyH,EAAa,GACnB7F,EAAMlK,gBAAgBv6F,GAAM,SAAYoe,GAClCnsB,IAAYmsB,EAAKnsB,SACnBq4G,EAAcr6G,KAAKmuB,cAGdz2B,EAAI2iH,EAAc1iH,OAAS,EAAGD,GAAK,IAAKA,EAC/C88G,EAAM/sG,OAAO4yG,EAAc3iH,IAI3B0iH,yBACiBd,2BAA2BI,gBAClCJ,2BAA2BI,KAU3CR,EAAAj9G,UAAAqc,OAAM,SAAChc,OACCg+G,EAAUv+G,KAAQoC,SAClB3G,EAAIuE,KAAQs9G,sBACZ3lF,EAAQ33B,KAA+D+9G,eAEzEQ,IACF9iH,EAAK8L,QAAO7G,EAAAmiB,eACZpnB,EAAKG,OAAS,EACd+7B,EAASpwB,QAAOvH,KAAM89G,sBAAsB78G,KAAIjB,QAElDX,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,GAETA,SACOgsE,UACP9wE,EAAKwI,KAAIvD,EAAAC,OAAAX,KAEAusE,UAASh2C,EAAAh6B,QACMi6B,IAAGx2B,KAClB83G,kBAAiB93G,MAAAU,EAAAC,OAAAX,KAIjBusE,UAASh2C,EAAAh6B,QACMk6B,OAAMz2B,KACrB+3G,qBAAoB/3G,YAIf+uD,SACdtzD,EAAKwI,KAAIvD,EAAAC,OAAAX,KAEA+uD,QAAOq+C,EAAA7wG,QACI8wG,WAAUrtG,KACrB83G,kBAAiB93G,MAAAU,EAAAC,OAAAX,KAIjB+uD,QAAOq+C,EAAA7wG,QACIuxG,cAAa9tG,KACxB+3G,qBAAoB/3G,OAK/B23B,EAASpwB,QAAOvH,KAAM69G,mBAAmB58G,KAAIjB,SAUjDm9G,EAAAj9G,UAAA89G,OAAM,SAACz5G,EAAO4vG,EAAiB5zG,OACvBi+G,EAAYj+G,EAAIu3B,uBAAsB,CAC1CvzB,EAAM,GAACvE,KAASwzG,gBAChBjvG,EAAM,GAACvE,KAASwzG,kBAEZiL,EAAal+G,EAAIu3B,uBAAsB,CAC3CvzB,EAAM,GAACvE,KAASwzG,gBAChBjvG,EAAM,GAACvE,KAASwzG,kBAEZxhD,EAAGrrD,EAAA0K,eAAA,CAAmBmtG,EAAWC,IAEnCpK,EAAQr0G,KAAQ62G,OAAOjI,YAAY58C,QAG9BorD,UAAOp9G,KAAUq9G,QACxBhJ,EAAWA,EAASnpE,QAAM,SAAWvkB,UAC5BA,EAAQ1gB,QAAQ88D,cAAcr1B,YAAOC,EAAApxC,QAAoBqxC,eAIhEqwE,GAAU,EACVzJ,EAAS,KACTC,EAAc,QAEM,IAApBJ,EAASz4G,OAAY,MAAA,CAErBqiH,QAASA,EACTzJ,OAAQA,EACRC,YAAaA,WAObiK,EAHE/gH,EAAa4C,EAAIm4B,UAAUC,gBAC3BgmF,EAAmB1lF,EAAAC,mBAAsBi7E,EAAiBx2G,GAG5DwhD,EAAqBnqC,EAAAA,EAChBrZ,EAAI,EAAGA,EAAI04G,EAASz4G,SAAUD,EAAC,KAChCi9G,EAAcvE,EAAS14G,GAC7Bi6G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,GAC5Di4G,EAAY,GAAC38E,EAAAC,mBAAuB0/E,EAAYjyF,QAAQ,GAAIhpB,OACtD4oB,EAAKngB,EAAA+f,yBAA4Bw4F,EAAqB/I,GACxDrvF,EAAQ44B,IACVu/D,EAAqB9F,EACrBz5D,EAAqB54B,OAGnBguF,EAAiBmK,EAAmB/3F,gBAEjCy2F,UAAOp9G,KAAUq9G,MAAK,KACvB3I,EAASn0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDI,EAASp0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDK,EAAYxuG,EAAAyU,gBAA6BtW,EAAOmwG,GAChDG,EAAYzuG,EAAAyU,gBAA6BtW,EAAOowG,GACzC/kG,KAAK8W,KAAK9W,KAAK2F,IAAIq/F,EAAcC,KACtC70G,KAASwzG,kBACfyK,GAAU,EACVzJ,EACEI,EAAeC,EAAeN,EAAe,GAAKA,EAAe,GACnEE,EAAcl0G,EAAIw4B,uBAAuBy7E,iBAE7B6I,MAAK,KACbuB,EACJF,EAAmBz4G,QAAQ88D,cAAcr1B,YAAOC,EAAApxC,QACnCqxC,UACXgxE,EAAQ,KACN3wB,EAAiBywB,EAAmBz4G,QAAQ88D,cAC1Cl1B,EAAc5U,EAAA6U,oBAChBD,IACFogD,EAAiBA,EACd18E,QACAlD,UAAUw/B,EAAgBlwC,IAE/B62G,EAAMv7E,EAAAoW,iBAAAjpC,EAAA0f,gBAEF64F,EACoD1wB,GAEtDtwF,QAGFi4G,EAAY,GAAC38E,EAAAC,mBAAuBq7E,EAAe,GAAI52G,GACvDi4G,EAAY,GAAC38E,EAAAC,mBAAuBq7E,EAAe,GAAI52G,GACvD62G,EAAMv7E,EAAAoW,iBAAAjpC,EAAA2f,iBACa44F,EAAqB/I,GACtCj4G,MAGJ82G,EAAcl0G,EAAIw4B,uBAAuBy7E,cAElBjwG,EAAOkwG,IAAWz0G,KAAUwzG,kBACjDyK,GAAU,OACDb,UAAYwB,GAAQ,CACrBlK,EAASn0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDI,EAASp0G,EAAIw4B,uBAAuBw7E,EAAe,IACnDK,EAAYxuG,EAAAyU,gBAA6B45F,EAAaC,GACtDG,EAAYzuG,EAAAyU,gBAA6B45F,EAAaE,GAC/C/kG,KAAK8W,KAAK9W,KAAK2F,IAAIq/F,EAAcC,KACtC70G,KAASwzG,kBACfgB,EACEI,EAAeC,EACXN,EAAe,GACfA,EAAe,GACrBE,EAAcl0G,EAAIw4B,uBAAuBy7E,YAM7CyJ,IACFxJ,EAAW,CAAI7kG,KAAK2P,MAAMk1F,EAAY,IAAK7kG,KAAK2P,MAAMk1F,EAAY,OAIlEwJ,QAASA,EACTzJ,OAAQA,EACRC,YAAaA,IAQjB0I,EAAAj9G,UAAAg+G,eAAc,SAACj4G,QACR8nG,cAAc9nG,GAAS,QACvBorE,WAAWprE,GAAS,IAQ3Bk3G,EAAAj9G,UAAAq3G,qBAAoB,SAACtxG,EAASC,OACtBvI,EAAUqC,KAAQoC,SAASs2B,UAAUC,gBACvCs1D,EAAiB/nF,EACf2nC,EAAc5U,EAAA6U,oBAChBD,IACFogD,EAAqEA,EAClE18E,QACAlD,UAAUw/B,EAAgBlwC,QAEzBohD,EAAOvR,EAAAqQ,WAAcowC,GACvBpgD,GACFkR,EAAQ1wC,UAAU1Q,EAAYkwC,WAE1B1mC,EAAc43C,EAAQxD,iBAAiB,GACpC5/C,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GACnCi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAASA,QAENkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAShDuE,EAAAj9G,UAAAs3G,iCAAgC,SAACvxG,EAASC,WAClCs1C,EAAat1C,EAASu+F,qBACnB9oG,EAAI,EAAGA,EAAI6/C,EAAW5/C,SAAUD,EAAC,KAClCiiH,EAAa59G,KAAQg3G,iBAAiBx7D,EAAW7/C,GAAG+xC,WACtDkwE,GACFA,EAAc33G,EAASu1C,EAAW7/C,MAUxCwhH,EAAAj9G,UAAAg3G,yBAAwB,SAACjxG,EAASC,WAC1BiB,EAAcjB,EAASq1C,iBACpB5/C,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GACnCi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAASA,QAENkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAShDuE,EAAAj9G,UAAAm3G,8BAA6B,SAACpxG,EAASC,WAC/BkoB,EAAQloB,EAASq1C,iBACdv0C,EAAI,EAAGsjC,EAAKlc,EAAMxyB,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAcinB,EAAMpnB,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GACnCi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAASA,QAENkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAUlDuE,EAAAj9G,UAAAk3G,yBAAwB,SAACnxG,EAASC,WAC1B4vE,EAAS5vE,EAASq1C,iBACf5/C,EAAI,EAAG6H,EAAKsyE,EAAOl6E,OAAQD,EAAI6H,IAAM7H,EAAC,KACvCwL,EAAc2uE,EAAOn6E,GACrBi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAAO,CAAGxf,EAAaA,SAEpB0vG,OAAOt9B,OAAOrzE,EAASO,YAAamyG,KAS7CuE,EAAAj9G,UAAAo3G,2BAA0B,SAACrxG,EAASC,WAC5BkwE,EAAWlwE,EAASq1C,iBACjB5/B,EAAI,EAAGwmF,EAAK/rB,EAASx6E,OAAQ+f,EAAIwmF,IAAMxmF,UACxCvG,EAAQghE,EAASz6D,GACd3U,EAAI,EAAGsjC,EAAKl1B,EAAMxZ,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAciO,EAAMpO,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GACnCi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAASA,QAENkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAWpDuE,EAAAj9G,UAAA+2G,oBAAmB,SAAChxG,EAASC,OACrBiB,EAAcjB,EAASq1C,iBACvBq9D,EAAW,CACf3yG,QAASA,EACT0gB,QAAO,CAAGxf,EAAaA,SAEpB0vG,OAAOt9B,OAAOrzE,EAASO,YAAamyG,IAQ3CuE,EAAAj9G,UAAAi3G,sBAAqB,SAAClxG,EAASC,WACvBkP,EAAQlP,EAASq1C,iBACdv0C,EAAI,EAAGsjC,EAAKl1B,EAAMxZ,OAAQoL,EAAIsjC,IAAMtjC,UACrCG,EAAciO,EAAMpO,GACjBrL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAS,EAAGD,EAAI6H,IAAM7H,EAAC,KAChDgrB,EAAUxf,EAAYd,MAAM1K,EAAGA,EAAI,GACnCi9G,EAAW,CACf3yG,QAASA,EACT0gB,QAASA,QAENkwF,OAAOt9B,OAAM5yE,EAAA0K,eAAgBsV,GAAUiyF,KAIpDuE,EAvlBA,sBAylBeD,+kBCtrBZ,MAAA5gD,EAAArhE,EAAA,+qBAYG4jH,EAMU,iBANVA,EAYO,cAZPA,EAkBQ,eAiCdC,EAAA,SAAAz/G,GAOK,SACH0/G,EAAY78G,EAAMy1B,EAAU/xB,EAAYo5G,EAAiBllF,OAAzDt5B,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKm3B,SAAWA,EAQhBn3B,EAAKoF,WAAaA,EAQlBpF,EAAKw+G,gBAAkBA,EAOvBx+G,EAAKs5B,gBAAkBA,WAvCS75B,EAAA8+G,EAAA1/G,GAyCpC0/G,EAzCA,YAkDAE,EAAA,SAAA5/G,GAGK,SACH6/G,EAAY1nF,OA0BN9yB,EA1BNlE,EAAAR,KACQ7C,EAAUq6B,GAAyB,OAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAqD7C,IAAO6C,MAOvDm/G,gBAAkB,KAOvB3+G,EAAK4+G,iBAAmB,KAMxB5+G,EAAK+rE,eAAiC/pE,IAArBrF,EAAQw6B,SAAyBx6B,EAAQw6B,SAAW,KAIjEx6B,EAAQd,UACe,mBAAdc,EAAQd,OACjBqI,EAAcvH,EAAQd,gBAEhBkgH,EAASp/G,EAAQd,OACvBqI,EAAW,SAAapH,qBACNi/G,EAAQj/G,SAI5BoH,EAAWmD,EAAAC,YAObtH,EAAKg8G,aAAe93G,EAMpBlE,EAAK67G,QAAUl/G,EAAQ+tC,OAAS/tC,EAAQ+tC,OAAMrjC,EAAAC,KAM9CtH,EAAK87G,cAAgBn/G,EAAQqH,aAAerH,EAAQqH,aAAe,EAMnEhE,EAAK6+G,aAAe,KAEpB7+G,EAAKgc,iBAAgBC,EAAAC,mBAAAC,EAAApgB,QACoB8hE,QACvC79D,EAAK8+G,+BAtEar/G,EAAAi/G,EAAA7/G,GA+EtB6/G,EAAAh/G,UAAA4/D,gBAAe,SAACv8C,WACT87F,aAAYr/G,KAAQu/G,iBAAiBh8F,EAAMhf,MAAOgf,EAAMhjB,WACnD4+G,iBAAen/G,KAASq/G,aAAY,MACvCD,iBAAmB77F,EAAM3d,gBACzBu5G,gBAAkB57F,EAAM3d,gBACxBq6D,gBAAgB18C,OAEfoU,EAAQ33B,KAAQusE,WAAS,IAAA94C,EAAAl3B,QAAA,MAAyB8iH,2BAEnD58G,cAAa,IACZq8G,EACFD,EACAlnF,EACApU,EAAM3d,WAAU5F,KACXo/G,iBACL77F,KAGG,SAEF,GAQT27F,EAAAh/G,UAAAy/D,cAAa,SAACp8C,WACH47F,gBAAe,MACjBA,gBAAkB,UAClBl/C,gBAAgB18C,OAEfoU,EAAQ33B,KAAQusE,WAAS,IAAA94C,EAAAl3B,QAAA,MAAyB8iH,2BAEnD58G,cAAa,IACZq8G,EACFD,EACAlnF,EACApU,EAAM3d,WAAU5F,KACXo/G,iBACL77F,SAIC67F,iBAAmB,MACjB,SAEF,GAOTF,EAAAh/G,UAAAq/D,gBAAe,SAACh8C,WACL47F,gBAAe,KAChBK,EAAgBj8F,EAAM3d,WACtB65G,EAASD,EAAc,GAACx/G,KAASm/G,gBAAgB,GACjDO,EAASF,EAAc,GAACx/G,KAASm/G,gBAAgB,GAEjDxnF,EAAQ33B,KAAQusE,WAAS,IAAA94C,EAAAl3B,QAAA,MAAyB8iH,eAExD1nF,EAASpwB,SAAO,SAAWtB,OACnB05G,EAAO15G,EAAQ88D,cACrB48C,EAAK/xG,UAAU6xG,EAAQC,GACvBz5G,EAAQ4qE,YAAY8uC,WAGjBR,gBAAkBK,OAElB/8G,cAAa,IACZq8G,EACFD,EACAlnF,EACA6nF,EAAax/G,KACRo/G,iBACL77F,MAUR27F,EAAAh/G,UAAA+/D,gBAAe,SAAC18C,OACRsb,EAAOtb,EAAMhjB,IAAIqB,mBAId29G,iBAAiBh8F,EAAMhf,MAAOgf,EAAMhjB,MAC3Cs+B,EAAK+sB,UAAUlgD,OAAM1L,KAAMm/G,gBAAe,UAAY,eACtDtgF,EAAK+sB,UAAU/lC,IAAG7lB,KAAMm/G,gBAAe,cAAgB,YAEvDtgF,EAAK+sB,UAAUlgD,OAAM,UAAU,gBAanCwzG,EAAAh/G,UAAAq/G,iBAAgB,SAACh7G,EAAOhE,UACfA,EAAIg3B,sBACThzB,EAAK,SACK0B,EAAS3I,WACR++G,QAAQp2G,EAAS3I,WACdivE,WAASjjE,EAAAsB,SAAA5K,KAAkBusE,UAAU74C,WAAYztB,IAAO,OACzDA,GAGXhF,KAAIjB,MAAA,CAEJ0E,YAAW1E,KAAOw8G,aAClBh4G,aAAYxE,KAAOs8G,iBAUzB4C,EAAAh/G,UAAAy8G,gBAAe,uBACDL,eASd4C,EAAAh/G,UAAA08G,gBAAe,SAACp4G,QACT83G,cAAgB93G,GASvB06G,EAAAh/G,UAAAqc,OAAM,SAAChc,OACCuyD,EAAM9yD,KAAQoC,SACpB/C,EAAAa,UAAMqc,OAAMxc,KAAAC,KAACO,QACR8uE,aAAavc,IAMpBosD,EAAAh/G,UAAAo/G,qBAAoB,gBACbjwC,aAAa,OAOpB6vC,EAAAh/G,UAAAmvE,aAAY,SAACvc,OACPvyD,EAAGP,KAAQoC,SACTk8D,EAAMt+D,KAAQy6B,YACfl6B,GAAQ+9D,IACX/9D,EAAMA,GAAOuyD,IAEEvyD,EAAIqB,cACZgqD,UAAUlgD,OAAM,UAAU,gBAIvCwzG,EAlQA,sBAoQeD,qVCrXZ,MAAAW,EAAA3kH,EAAA,siBAgBH4kH,EAAA,SAAAxgH,GAGK,SACHygH,EAAYtoF,UACVn4B,EAAAU,KAAAC,KAAMw3B,IAAWx3B,YALGC,EAAA6/G,EAAAzgH,GAatBygH,EAAA5/G,UAAAC,eAAc,uCAGhB2/G,EAhBA,sBAkBeD,2OClCZ,MAAAh7G,EAAA5J,EAAA,siBA8CH8kH,EAAA,SAAA1gH,GAGK,SACH2gH,EAAYxoF,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCtb,EAAW3c,EAAAC,OAAA,GAAcrC,iBAExB+e,EAAY+jG,eACZ/jG,EAAYgkG,wBACnB1/G,EAAAnB,EAAAU,KAAAC,KAAMkc,IAAWlc,MAEZmgH,gBAA+B39G,IAApBrF,EAAQ8iH,QAAwB9iH,EAAQ8iH,QAAU,GAClEz/G,EAAK4/G,+BACgC59G,IAAnCrF,EAAQ+iH,wBACJ/iH,EAAQ+iH,iCAhBUjgH,EAAA+/G,EAAA3gH,GA2B1B2gH,EAAA9/G,UAAAmgH,WAAU,uBAC2BlkH,IAAGmkH,EAAA/jH,QAAcgkH,UAStDP,EAAA9/G,UAAAigH,WAAU,SAACF,QACJ1yG,IAAG+yG,EAAA/jH,QAAcgkH,QAASN,IASjCD,EAAA9/G,UAAAsgH,0BAAyB,uBACarkH,IAAGmkH,EAAA/jH,QACxBkkH,6BAUjBT,EAAA9/G,UAAAkgH,0BAAyB,SAACF,QACnB3yG,IAAG+yG,EAAA/jH,QAAckkH,2BAA4BP,IAEtDF,EA9DA,sBAgEeD,iPCxGbQ,QAAO,UACPE,2BAA0B,iMCPzB,MAAA57G,EAAA5J,EAAA,yuBA0BHylH,EAAA,SAAArhH,GAGK,SACHshH,EAAYC,OAAZpgH,EACEnB,EAAAU,KAAAC,KAAM4gH,IAAS5gH,YAMfQ,EAAKqgH,eAAgB,EAMrBrgH,EAAK6iF,gBAAkB,KAMvB7iF,EAAKsgH,mBAMLtgH,EAAKugH,mBAAqB,KAM1BvgH,EAAKwgH,iBAMLxgH,EAAKygH,cAAa,GAMlBzgH,EAAK0gH,WAAY,EAMjB1gH,EAAKm6F,UAASh0F,EAAAkL,cAMdrR,EAAK2gH,cAAa,IAAAC,EAAA7kH,QAAiB,EAAG,EAAG,EAAG,YA3DV0D,EAAA0gH,EAAAthH,GAmEpCshH,EAAAzgH,UAAAmhH,eAAc,SAAC5nF,OACPmnF,EAAS5gH,KAAQmkF,WACjBm9B,EAAY7nF,EAAKnc,WACjB4iG,EAAyBU,EAAUJ,mCAEvCc,GAAS19E,EAAArnC,QAAcsnC,QACvBy9E,GAAS19E,EAAArnC,QAAcunC,OACtBw9E,GAAS19E,EAAArnC,QAAc8nB,QAAU67F,GAWtCS,EAAAzgH,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,EAAGtN,OACT8xB,EAAa9xB,EAAW8xB,WACxBt2B,EAAawE,EAAWkB,UAAU1F,WAClCijH,EAAS5gH,KAAQmkF,WAEnB1qD,EADemnF,EAAU15G,YACPq6G,QAAQtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,UAC/C87B,EAAKnc,YAAQsmB,EAAArnC,QAAgB8nB,QAC1Bu8F,EAAUJ,4BAGJI,EAAUP,aAAe,SAE7Ba,WAAY,GAHjBznF,EAAKg4E,SAAQ7tE,EAAArnC,QAAWsnC,cAMlBw9E,eAAe5nF,KACvBA,EAAOA,EAAK+nF,kBAEP/nF,GASTknF,EAAAzgH,UAAAu3F,mBAAkB,SAACC,EAAOx4F,EAAMu6B,gBACrB4nF,eAAe5nF,IACfp6B,EAAAa,UAAMu3F,mBAAkB13F,KAAAC,KAAC03F,EAAOx4F,EAAMu6B,IAUjDknF,EAAAzgH,UAAA0d,aAAY,SAACzb,gBACGgiF,WAAWj9E,aAS3By5G,EAAAzgH,UAAA2C,YAAW,SAACV,EAAYtD,OAChB4E,EAAatB,EAAWc,iBAAiBd,EAAWuB,YACpDL,EAAYlB,EAAWkB,UACvB1F,EAAa0F,EAAU1F,WACvB8jH,EAAiBp+G,EAAUoC,WAC3Bi8G,EAAar+G,EAAUrE,OACvB0G,EAAWrC,EAAUqC,SACrBuuB,EAAa9xB,EAAW8xB,WAExB2sF,EAAS5gH,KAAQmkF,WACjBw9B,EAAaf,EAAU15G,YACvB06G,EAAiBD,EAAWv/F,cAC5B03B,EAAW6nE,EAAWE,yBAAyBlkH,GAC/Cs/C,EAAInD,EAAS63D,kBAAkB8P,EAAgBE,EAAWG,YAC1DloF,EAAiBkgB,EAAStR,cAAcyU,GAE1CjpC,EAAS7R,EAAW6R,OAClBgxE,EACJvhF,EAAWuQ,QAAMilB,EAAAgO,eAAmBxjC,EAAWuQ,OAAQrW,GACrDqnF,IACFhxE,EAAMrN,EAAAyM,gBACJY,EAAMilB,EAAAgO,eACSxjC,EAAWuQ,OAAQrW,SAIhCokH,EAAiBJ,EAAWK,kBAAkB/tF,GAGhDt1B,EAAQiR,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKu8G,GACxCzgH,EAASsO,KAAK2P,MAAMpd,EAAWqD,KAAK,GAAKu8G,MAEzCr8G,EAAQ,KACJF,EAAOoK,KAAK2P,MAAM3P,KAAK8W,KAAK/nB,EAAQA,EAAQ2C,EAASA,IAC3D3C,EAAQ6G,EACRlE,EAASkE,MAGLsK,EAAM8pB,EAAiBj7B,EAAS,EAAIojH,EACpChyG,EAAM6pB,EAAiBt4B,EAAU,EAAIygH,EACrCE,EAAY,CAChBP,EAAW,GAAK5xG,EAChB4xG,EAAW,GAAK3xG,EAChB2xG,EAAW,GAAK5xG,EAChB4xG,EAAW,GAAK3xG,GAGZ8nF,EAAY/9C,EAAS83D,0BAA0B59F,EAAQipC,GAKvDilE,EAAc,GACpBA,EAAejlE,GAAC,OAEVklE,EAAeniH,KAAQ43F,uBAC3B+pB,EACAhkH,EACAukH,GAGIvnB,EAAS36F,KAAQ26F,UACjBynB,EAAYpiH,KAAQmhH,mBACrBD,WAAY,UACR1xG,EAAIqoF,EAAUzjF,KAAM5E,GAAKqoF,EAAUvjF,OAAQ9E,EAAC,IAAA,IAC1CC,EAAIooF,EAAUxjF,KAAM5E,GAAKooF,EAAUtjF,OAAQ9E,EAAC,KAC7CgqB,EAAIz5B,KAAQuhH,QAAQtkE,EAAGztC,EAAGC,EAAGtN,WAC1Bk/G,eAAe5nF,GAAI,KACpB21E,EAAGt+F,EAAA/D,OAAA/M,SACLy5B,EAAKnc,YAAQsmB,EAAArnC,QAAgBsnC,OAAM,CACrCq+E,EAAejlE,GAAGxjB,EAAKk+D,UAAUzpF,YAAcurB,MACzC4oF,EAAe5oF,EAAK4oF,aAAajT,QAE/B8R,YACLmB,IAAqD,IAAzCriH,KAASihH,cAAcl2G,QAAQ0uB,KAAYz5B,KAEnDkhH,WAAY,MAGuB,IAAxCznF,EAAK6oF,SAASlT,EAAKjtG,EAAWi5B,MAAW,aAMzCmnF,EAAiBzoE,EAAS0oE,2BAC9B/oF,EAAKk+D,UACLyqB,EACAznB,GAGE8nB,GAAU,EACVF,IACFE,EAAUN,EAAgBllE,EAAI,EAAGslE,IAE9BE,GACH3oE,EAAS4oE,gCACPjpF,EAAKk+D,UACLwqB,EACAC,EACAznB,OAMFgoB,EAAc/oF,EAAiB6nF,iBAI9Bh9B,eACLtiF,EAAWqD,KAAK,GAAK,EACrBrD,EAAWqD,KAAK,GAAK,EACrB,EAAIu8G,EACJ,EAAIA,EACJr8G,GACC/G,EAAQ,GACR2C,EAAS,OAGNojF,EAAe9jF,EAAAmrB,sBAAA/rB,KAA8BykF,qBAE9CX,aAAajlF,EAAQ6lF,EAAiBjhF,EAAWgb,aAChDgL,EAAOzpB,KAAQypB,QACf+F,EAAS/F,EAAQ+F,0BAENhG,sBAAqBxpB,KAAOykF,+BAItCsR,cACLp3F,EAAQ,EACR2C,EAAS,EACTqhH,EACAA,EACA,GACChkH,EAAQ,GACR2C,EAAS,GAGRkuB,EAAO7wB,OAASA,GAAS6wB,EAAOluB,QAAUA,GAC5CkuB,EAAO7wB,MAAQA,EACf6wB,EAAOluB,OAASA,QACDsjF,iBACfn7D,EAAQo7D,UAAU,EAAG,EAAGlmF,EAAO2C,GAG7B0jF,GAAWhlF,KACRilF,cAAcx7D,EAAStnB,EAAY6iF,YAGnCv7D,EAASk4F,EAAWpQ,0BACtBzsB,UAAUr7D,EAAStnB,QAEnB8+G,cAAcrlH,OAAS,EACA,IAIxBgnH,EAAOC,EAAQC,EAHf7oB,EAAKv+F,OAAOD,KAAKymH,GAAgB3hH,IAAI8Z,QACzC4/E,EAAG/2F,KAAIoG,EAAAkB,2BAIkB,IAAvB/G,EAAWgb,SAAaze,KACjB4kF,kBACL+8B,EAAWoB,UAAU5gH,EAAWkB,UAAU1F,aAI5CilH,EAAK,GACLC,EAAM,IAHN5oB,EAAKA,EAAG7O,kBAKDzvF,EAAIs+F,EAAGr+F,OAAS,EAAGD,GAAK,IAAKA,EAAC,KAC/BqnH,EAAW/oB,EAAGt+F,GACdsnH,GAAuBtB,EAAWuB,iBACtCF,EACA/uF,EACAt2B,GAGIwlH,GADoBrpE,EAAStR,cAAcw6E,GACRppF,EACnCwpF,GAAKH,GAAqB,GAAKE,GAAeR,EAC9CU,GAAKJ,GAAqB,GAAKE,GAAeR,EAC9CW,GAAkBxpE,EAASypE,yBAAwB58G,EAAA4M,WAC5C0uG,GACXe,GAEIQ,GAAmB1pE,EAAS+3D,mBAAmByR,IAC/C/lB,GAAM9tE,EAAAzlB,MAAAhK,KAAuB+1F,cAAa,CAC7CgsB,GAAkByB,GAAiB,GAAKvB,EAAa,IACpDroF,EACDmoF,GAAkBE,EAAa,GAAKuB,GAAiB,IACpD5pF,IAEE6pF,GACJ1B,EAAiBJ,EAAW+B,uBAAuB/lH,GAC/CgmH,GAAczB,EAAec,WACxBY,MAAgBD,GAAW,KAI9BhsB,IAHAl+D,EAA4DkqF,GAChEC,KAEqBjsB,UAGjBksB,GAAStmB,GAAO,IAAM+lB,GAAgB,GAAK3rB,GAAU,IAAMyrB,GAC3DU,GAAQl0G,KAAK2P,MAAMskG,GAAST,IAC5BW,GAASxmB,GAAO,IAAM+lB,GAAgB,GAAK3rB,GAAU,IAAM0rB,GAC3DW,GAAQp0G,KAAK2P,MAAMwkG,GAASV,IAG5Bx0F,GAAIi1F,IAFJt0G,EAAII,KAAK2P,MAAMskG,KAGf/0F,GAAIk1F,IAFJv0G,EAAIG,KAAK2P,MAAMwkG,KAGfE,GAAahnE,IAAM+lE,OAEnBX,EACJ4B,IAA+D,IAAjDxqF,EAAK6oF,SAAQxxG,EAAA/D,OAAA/M,MAAemC,EAAWi5B,UAEjDwnF,EAAK,CAEPn5F,EAAQsF,OACR+zF,EAAW,CAAItzG,EAAGC,EAAGD,EAAIqf,GAAGpf,EAAGD,EAAIqf,GAAGpf,EAAIqf,GAAGtf,EAAGC,EAAIqf,YAC3C+qE,GAAI,EAAGr2F,GAAKo/G,EAAMhnH,OAAQi+F,GAAIr2F,KAAMq2F,GAAC,GACxC58C,IAAM+lE,GAAYA,EAAWH,EAAOhpB,IAAC,KACjC1D,GAAOysB,EAAM/oB,IACnBpwE,EAAQg3D,YAERh3D,EAAQitE,OAAOosB,EAAY,GAAIA,EAAY,IAC3Cr5F,EAAQk3D,OAAOmiC,EAAY,GAAIA,EAAY,IAC3Cr5F,EAAQk3D,OAAOmiC,EAAY,GAAIA,EAAY,IAC3Cr5F,EAAQk3D,OAAOmiC,EAAY,GAAIA,EAAY,IAE3Cr5F,EAAQitE,OAAOP,GAAK,GAAIA,GAAK,IAC7B1sE,EAAQk3D,OAAOwV,GAAK,GAAIA,GAAK,IAC7B1sE,EAAQk3D,OAAOwV,GAAK,GAAIA,GAAK,IAC7B1sE,EAAQk3D,OAAOwV,GAAK,GAAIA,GAAK,IAC7B1sE,EAAQ0sE,OAGZysB,EAAM3+G,KAAK6+G,GACXD,EAAO5+G,KAAK++G,QAEZv5F,EAAQo7D,UAAUr1E,EAAGC,EAAGof,GAAGC,SAG1Bo1F,cACHzqF,EACAt3B,EACAqN,EACAC,EACAof,GACAC,GACA20F,GACAQ,GACAxgH,EAAWgb,SAETmkG,IAAUP,GACZ54F,EAAQ6F,eACH2xF,cAAckD,QAAQ1qF,SAEtBwnF,cAAch9G,KAAKw1B,QAErB2qF,gBAAgBjiH,EAAW86B,UAAW0kF,EAAYloF,gBAItDunF,iBAAmBY,OACnB9rB,mBAAqBl8D,OACrBinF,eAAa7gH,KACVqjF,kBAAe18E,EAAAoD,OAAA/J,KAAiBqjF,gBAAiB4+B,QACpD5+B,gBAAkB4+B,OAClBnB,mBAAqB7sF,OACrB8sF,mBAAqBpjH,OAErB0mH,kBACHliH,EACAw/G,EACA7nE,EACA7lB,EACAt2B,EACAqW,EACAipC,EACA2jE,EAAUP,mBAEPiE,oBAAoBniH,EAAYw/G,QAEhCz8B,WAAWz7D,EAAStnB,GAErBsB,EAAWuQ,QACbyV,EAAQ6F,UAGNo1D,IAAoBl1D,EAAOnxB,MAAMgQ,YACnCmhB,EAAOnxB,MAAMgQ,UAAYq2E,QAGf/iF,WAcdg/G,EAAAzgH,UAAAgkH,cAAa,SAACzqF,EAAMt3B,EAAYqN,EAAGC,EAAGof,EAAGC,EAAGs3D,EAAQ69B,EAAYxlG,OACxD09D,EAAKn8E,KAAQukH,aAAa9qF,MAC3B0iD,OAGCizB,EAAGt+F,EAAA/D,OAAA/M,MACHwkH,EAAYP,EAAaxqF,EAAK6oF,SAASlT,EAAKjtG,EAAWi5B,MAAQ,EAC/DsmE,EAAQjjF,EAAU+lG,EAClBC,EAAe/iB,IAAK1hG,KAAUypB,QAAQuF,YACxCy1F,SACGh7F,QAAQsF,YACRtF,QAAQuF,YAAc0yE,QAExBj4E,QAAQ4F,UACX8sD,EACAiK,EACAA,EACAjK,EAAMx9E,MAAQ,EAAIynF,EAClBjK,EAAM76E,OAAS,EAAI8kF,EACnB52E,EACAC,EACAof,EACAC,GAGE21F,GAAYzkH,KACTypB,QAAQ6F,UAEG,IAAdk1F,EACFriH,EAAWs5B,SAAU,EACZwoF,GACTxqF,EAAKirF,cAActV,KAOvBuR,EAAAzgH,UAAAu8E,SAAQ,eACAhzD,EAAOzpB,KAAQypB,eACdA,EAAUA,EAAQ+F,OAAS,MASpCmxF,EAAAzgH,UAAAqkH,aAAY,SAAC9qF,UACJA,EAAKgjD,YAQdkkC,EAAAzgH,UAAAokH,oBAAmB,SAACniH,EAAYw/G,MAC1BA,EAAW55G,iBAAc,CAKxB,IACG48G,EAAkB,SAAaC,EAAYrkH,EAAKskH,OAC9CnrF,EAAa5oB,EAAA/D,OAAU63G,GACzBlrF,KAAiBmrF,EAAW5nF,WAC9B2nF,EAAWE,YACTD,EAAWxhH,UAAU1F,WACrBknH,EAAW5nF,UAAUvD,KAGzBz4B,KAAK,KAAM0gH,GAEbx/G,EAAW6F,oBAAoB/D,KACsC0gH,KAWzEhE,EAAAzgH,UAAAkkH,gBAAe,SAACnnF,EAAW0kF,EAAYloF,OAE/BC,EAAa5oB,EAAA/D,OAAU40G,GACvBjoF,KAAiBuD,IACrBA,EAAUvD,GAAa,IAEzBuD,EAAUvD,GAAeD,EAAK7gB,WAAY,GAqB5C+nG,EAAAzgH,UAAAmkH,kBAAiB,SACfliH,EACAw/G,EACA7nE,EACA7lB,EACAt2B,EACAqW,EACAgvG,EACA/C,EACA8E,OAEMrrF,EAAa5oB,EAAA/D,OAAU40G,GACvBjoF,KAAiBv3B,EAAW+6B,cAChC/6B,EAAW+6B,YAAYxD,GAAa,QAMlCD,EAAMo+D,EAAWj+D,EAAgBpqB,EAAGC,EAAGwtC,EAJrC/f,EAAc/6B,EAAW+6B,YAAYxD,GACrCiB,EAAYx4B,EAAWw4B,UAEzBqqF,EAAY,MAEX/nE,EAHWnD,EAASl6B,aAGPq9B,GAAK+lE,IAAY/lE,MACjC46C,EAAY/9C,EAAS83D,0BAA0B59F,EAAQipC,EAAG46C,GAC1Dj+D,EAAiBkgB,EAAStR,cAAcyU,GACnCztC,EAAIqoF,EAAUzjF,KAAM5E,GAAKqoF,EAAUvjF,OAAQ9E,MACzCC,EAAIooF,EAAUxjF,KAAM5E,GAAKooF,EAAUtjF,OAAQ9E,EAC1CuzG,EAAW/lE,GAAKgjE,KAChB+E,GACFvrF,EAAOkoF,EAAWJ,QAAQtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,IACtC2f,YAAQsmB,EAAArnC,QAAgB4nC,OAC/BjH,EAAYzD,EAAK7gB,WAAY,EACxB+hB,EAAU8K,YAAYhM,EAAK7gB,WAC9B+hB,EAAU8I,QAAO,CACfhK,EACAC,EACAogB,EAASmrE,mBAAmBxrF,EAAKk+D,WACjC/9D,UAImBp3B,IAArBuiH,GACFA,EAAiBtrF,IAGnBkoF,EAAWuD,QAAQjoE,EAAGztC,EAAGC,EAAG9R,GAKpCgkH,EAAWwD,gBAAgBH,EAAWrnH,IAE1CgjH,EA7lBA,YAmmBAD,EAAwBxgH,UAAUikF,mBAEnBu8B,gbCrfZx3G,EAAAF,OAAAzN,EAAA,kBAAA,IACauW,IAtIb,IACHszG,EAAA,WAMK,SACHC,EAAYjxG,EAAME,EAAMD,EAAME,GAGzBvU,KACEoU,KAAOA,EAITpU,KACEsU,KAAOA,EAITtU,KACEqU,KAAOA,EAITrU,KACEuU,KAAOA,SAOd8wG,EAAAnlH,UAAAo6B,SAAQ,SAACq9D,eACKhmF,WAAWgmF,EAAU,GAAIA,EAAU,KAOjD0tB,EAAAnlH,UAAAolH,kBAAiB,SAACztB,eAETzjF,MAAQyjF,EAAUzjF,MACvByjF,EAAUvjF,MAAItU,KAASsU,MAAItU,KACtBqU,MAAQwjF,EAAUxjF,MACvBwjF,EAAUtjF,MAAIvU,KAASuU,MAS3B8wG,EAAAnlH,UAAAyR,WAAU,SAACnC,EAAGC,eACA2E,MAAQ5E,GAAKA,GAACxP,KAASsU,MAAItU,KAASqU,MAAQ5E,GAAKA,GAACzP,KAASuU,MAOzE8wG,EAAAnlH,UAAA6J,OAAM,SAAC8tF,eAEEzjF,MAAQyjF,EAAUzjF,MAAIpU,KACtBqU,MAAQwjF,EAAUxjF,MAAIrU,KACtBsU,MAAQujF,EAAUvjF,MAAItU,KACtBuU,MAAQsjF,EAAUtjF,MAO3B8wG,EAAAnlH,UAAAqL,OAAM,SAACssF,GACDA,EAAUzjF,KAAIpU,KAAQoU,OAAIpU,KACvBoU,KAAOyjF,EAAUzjF,MAEpByjF,EAAUvjF,KAAItU,KAAQsU,OAAItU,KACvBsU,KAAOujF,EAAUvjF,MAEpBujF,EAAUxjF,KAAIrU,KAAQqU,OAAIrU,KACvBqU,KAAOwjF,EAAUxjF,MAEpBwjF,EAAUtjF,KAAIvU,KAAQuU,OAAIvU,KACvBuU,KAAOsjF,EAAUtjF,OAO1B8wG,EAAAnlH,UAAAgT,UAAS,uBACKqB,KAAIvU,KAAQqU,KAAO,GAMjCgxG,EAAAnlH,UAAAoT,QAAO,uBACQ1M,gBAAiBsM,cAMhCmyG,EAAAnlH,UAAA0G,SAAQ,uBACM0N,KAAItU,KAAQoU,KAAO,GAOjCixG,EAAAnlH,UAAAuT,WAAU,SAACokF,eAEFzjF,MAAQyjF,EAAUvjF,MAAItU,KACtBsU,MAAQujF,EAAUzjF,MAAIpU,KACtBqU,MAAQwjF,EAAUtjF,MAAIvU,KACtBuU,MAAQsjF,EAAUxjF,MAG7BgxG,EA3HA,YAqIgBvzG,EAAesC,EAAME,EAAMD,EAAME,EAAMsjF,eACnCr1F,IAAdq1F,GACFA,EAAUzjF,KAAOA,EACjByjF,EAAUvjF,KAAOA,EACjBujF,EAAUxjF,KAAOA,EACjBwjF,EAAUtjF,KAAOA,EACVsjF,OAEIutB,EAAUhxG,EAAME,EAAMD,EAAME,aAI5B6wG,yKC2MZl8G,EAAAF,OAAAzN,EAAA,2BAAA,IACa8B,isBAtShBkoH,EAAA,SAAAlmH,GAGK,SACHmmH,EAAYroH,OAAZqD,EAAAR,KAGQylH,OACwBjjH,IAA5BrF,EAAQsoH,gBACuDtoH,EAAQsoH,gBAAeC,EAAAnpH,QAC9DopH,IAIpB7rE,EAAW38C,EAAQ28C,SAErB8rE,EAAOzoH,EAAQyoH,iBACNpjH,IAATojH,QAAsCpjH,IAAhBrF,EAAQc,MAChC2nH,EAAIC,EAAAC,UAAa3oH,EAAQc,OAG3BuC,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtB8zG,wBAAyBl0G,EAAQk0G,wBACjCz3F,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpBqoH,2BAA4B7oH,EAAQ6oH,2BACpCC,UAAW9oH,EAAQ8oH,UACnBnsE,SAAUA,EACVosE,iBAAkB/oH,EAAQ+oH,iBAC1BnE,eAAgB5kH,EAAQ4kH,eACxB6D,KAAMA,EACNhoH,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,oBAOjBkC,cAA+B3jH,IAApBrF,EAAQipH,QAAwBjpH,EAAQipH,QAAO,QAM/D5lH,EAAKorG,aAA6BppG,IAAnBrF,EAAQgB,OAAuBhB,EAAQgB,OAAM,aAM5DqC,EAAK6lH,iBACoB7jH,IAAvBrF,EAAQkgG,WAA2BlgG,EAAQkgG,WAAU,GAMvD78F,EAAKg3F,OAASr6F,EAAQG,MAMtBkD,EAAK8lH,WAAanpH,EAAQopH,UAM1B/lH,EAAKgyE,OAASr1E,EAAQkB,MAStBmC,EAAKgmH,iBAAmBf,EAExBjlH,EAAKimH,OAAOjmH,EAAKkmH,wBAEbd,GAAQA,EAAKhqH,OAAS,IACxB4E,EAAKmmH,gBAAed,EAAAe,2BAClBhB,EAAKrlH,IAAIC,EAAKqmH,uBAAuB5lH,KAAKT,eAxF/BP,EAAAulH,EAAAnmH,GAkGjBmmH,EAAAtlH,UAAA4mH,QAAO,SAAClB,QACDA,KAAOA,MACN98G,EAAM88G,EAAKp1G,KAAI,WAChBu2G,mBAAkBlB,EAAAe,2BAEnBhB,EAAKrlH,IAAGP,KAAM6mH,uBAAuB5lH,KAAIjB,QAE3C8I,IAWJ08G,EAAAtlH,UAAA8mH,cAAa,uBACCX,aAQdb,EAAAtlH,UAAAmvG,UAAS,uBACKzD,SAQd4Z,EAAAtlH,UAAAikF,SAAQ,uBACMqT,QAQdguB,EAAAtlH,UAAA+mH,aAAY,uBACEX,YAQdd,EAAAtlH,UAAAgnH,mBAAkB,uBACJV,kBAQdhB,EAAAtlH,UAAA2yE,SAAQ,uBACML,QAQdgzC,EAAAtlH,UAAAinH,WAAU,uBACIhB,UAOdX,EAAAtlH,UAAAwmH,qBAAoB,eACd/qH,EAAI,EACFkR,EAAG,WACE/D,KAAG9I,KAASqmH,YACrBx5G,EAAIlR,KAAOmN,EAAG,IAAM9I,KAAQqmH,YAAYv9G,UAEnC+D,EAAI2D,KAAI,MAQjBg1G,EAAAtlH,UAAAknH,iBAAgB,SAAC/pB,iBACHgpB,YAAahpB,QACpBopB,OAAMzmH,KAAM0mH,yBAOnBlB,EAAAtlH,UAAA2mH,uBAAsB,SAACn/F,OACf+9F,EAAezlH,KAAQwmH,iBAIvB/8F,EAAO,OACJzpB,KAAOw3F,aACPx3F,KAAOwyE,qBACCxyE,KAAOsmH,YAGpBb,GAAeC,EAAAnpH,QAAwBopH,KAAGpmH,EAAAC,OACrCiqB,EAAO,SACH,eACA,kBACAzpB,KAAOmmH,gBACRnmH,KAAO4rG,UAQnBlkF,EACE+9F,GAAeC,EAAAnpH,QAAwBopH,IAAG0B,EAAAC,aACzB5/F,EAAU+B,GACvB/B,EAASC,QAAO,eAAA,SAA0BngB,EAAGmxE,UACpCA,EAAEtoD,gBAAiB5G,EAAUA,EAAQkvD,EAAEtoD,eAAiB7oB,SAGjEsyC,EAAQ95C,KACX85C,SACGujD,EAAUr9F,KAAQqmH,4BASZ1uB,EAAW1jE,EAAYt2B,MAC1Bg6F,OAGG4vB,EAAY,YACFztE,EAAS0tE,YAAY7vB,EAAU,YAClCA,EAAU,WACVA,EAAU,aAEhB4vB,EAAclqB,OACjBp/F,EAAMypB,SAERzpB,EADEwnH,GAAeC,EAAAnpH,QAAwBopH,IACtC0B,EAAAC,aAAgBrpH,EAAKspH,GAElBtpH,EAAI0pB,QAAO,eAAA,SAA0BngB,EAAGmxE,UACrC4uC,EAAa5uC,SAQlC6sC,EA1QA,qBAsSgBnoH,EAAwBoqH,EAASC,OACzCrrH,EAASorH,EAAkB,SAAS,MACpC1vG,EAACzO,EAAAsC,KAAQvP,GAAM,SAAYsrH,EAAKx7G,EAAO6Q,UACpC2qG,EAAgB,YAAKD,EAAc,YAElC,OAAN3vG,EAAU,OACL,SAGLxL,EADEq7G,EAAiBH,EAAkB,SAAiB,eAItDl7G,EAFAwL,EAAqB,kBAAEnc,OAAS,iBACd8rH,EACfp+G,EAAA8C,UAAa2L,EAAqB,mBAAA,SAAa4vG,EAAKx7G,EAAO6Q,OAItD6qG,EAHav+G,EAAAsC,KAAQg8G,GAAc,SAAYt7G,UAC5CA,EAAe,YAAKq7G,EAAmB,iBAEC,aAC3CG,EAAK7uF,EAAA98B,IAAiB0rH,GACtBE,EAAK9uF,EAAA98B,IAAiBurH,EAAmB,mBAC3CI,GAASC,EAAK9uF,EAAAub,WACEszE,EAAOC,GAElBF,GAAgBH,EAAmB,cAI3Cp+G,EAAA8C,UAAa2L,EAAqB,mBAAA,SAAa4vG,EAAKx7G,EAAO6Q,UACrD2qG,EAAmB,eAAKD,EAAkB,aAI/C,GAEE,IACRn7G,EAAM,OAEFg6G,EAEHxuG,EAAqB,kBAAExL,GAAoB,cACxCy7G,EAEHjwG,EAAqB,kBAAExL,GAA0B,oBAEhDpO,EAAgC4Z,EAAU,OAAE,cAChC2vG,IACdvpH,EAASupH,EAAe,SAE1Bn7G,EAAGjD,EAAA8C,UAAa2L,EAAS,OAAA,SAAa4vG,EAAKx7G,EAAO6Q,mBACjC0qG,EACNC,EAAW,OAAKD,EAAc,MAE9BC,EAAe,cAGhB,IACRp7G,EAAM,OAEFlO,EAA+B0Z,EAAS,MAAExL,GAAiB,WAE3D8wF,EAAU,iBACGtlF,GACjBA,EAAa,UAAExQ,SAAO,SAAWogH,EAAKx7G,EAAO6Q,OACrClU,EAAM6+G,EAAgB,WACxBh/G,EAAQg/G,EAAa,aACXnlH,IAAVmG,IACFA,EAAQg/G,EAAW,MAAE,IAEvBtqB,EAAWv0F,GAAOH,SASlBhL,EALEsqH,EAAaR,EAAkB,SAAiB,cAChDS,EAAY5+G,EAAAsC,KAAQq8G,GAAU,SAAYN,EAAKx7G,EAAO6Q,UACnD2qG,EAAgB,YAAKpB,KAIxBt1G,EAAOi3G,EAA2B,gBACpCj3G,IACFtT,EAAUs7B,EAAA98B,IAAiB8U,mBAETy2G,EAAM,KAClBS,EAAUlvF,EAAA98B,IAAiBurH,EAAmB,YAChDS,IACGxqH,IAAUs7B,EAAAub,WAAe2zE,EAAYxqH,KACxCA,EAAawqH,QAKfvqH,GAAQ,EACNwqH,EAA4D,MAA3CzqH,EAAW+7C,qBAAqBt/B,OAAO,EAAG,GAE7DiuG,EAASH,EAAaI,WAAW,GAGjCC,EAAmB,CACrBC,WAAY,EACZC,WAAY,EAEZC,WAAYL,EAAOM,YAAc,EACjCC,WAAYP,EAAOQ,aAAe,MAIhCb,EAAY,CACdO,EAAsBP,EAAaA,EAAapsH,OAAS,OACnD4L,EAAC8B,EAAAsC,KACLs8G,EAAaI,YAAU,SACtBQ,UACCA,EAAgBC,aAAeR,EAAoBD,YACnDJ,EAAaa,WAAU,IAASD,EAAgBC,aAC9CR,EAAoBD,cAEtB9gH,IACF6gH,EAAS7gH,OAIP/B,EACuB,MAA1B4iH,EAAOW,iBAA8BrrH,EAAWs0C,mBAC7Cm+C,EAASg4B,EAAc,CACxBC,EAAOY,cAAc,GAAIZ,EAAOY,cAAc,IAC/CZ,EAAOY,cACLC,EAAYb,EAAOc,UAAY1jH,EAC/B2jH,EAAYf,EAAOgB,WAAa5jH,EAChC6jH,EAAkBpB,EAA0B,YAC9Cl0G,EAAM,CACRo8E,EAAO,GAAK84B,EAAYX,EAAoBC,WAE5Cp4B,EAAO,GAAKg5B,GAAa,EAAIb,EAAoBK,YACjDx4B,EAAO,GAAK84B,GAAa,EAAIX,EAAoBG,YACjDt4B,EAAO,GAAKg5B,EAAYb,EAAoBE,oBAIxBjmH,IAApB8mH,IAA6B3iH,EAAA+K,eACb43G,EAAiBt1G,GAAM,KAEjCu1G,EAAmBxxG,EAAoB,iBACvCyxG,EAAqBvwF,EAAA98B,IAAA,aAA8BsK,YACzDuN,EAASs1G,EACT1rH,EACE2rH,EAAiB,KAAOC,EAAsB,IAC9CD,EAAiB,KAAOC,EAAsB,GAGnB,OAA3B7rH,EAAW8I,aACb9I,EAAWvB,UAAU4X,OAGjB8lC,EAAQ2vE,EAAAC,gCACZxB,EACAl0G,EACAg0G,GAIIpC,EAAI,GACNH,EAAkBiC,EAAwB,mBAC9CjC,OAAsCjjH,IAApBijH,EAAgCA,EAAe,0BAGvCgC,GAAO,YAClBA,EAA4B,2BAEnCkC,EAAOlC,EAA4B,mBAAW,QAAO,IAAQ,KAAO,IAEjE9rH,EAAI,EAAG6H,EAAKmmH,EAAK/tH,OAAQD,EAAI6H,IAAM7H,KACtCguH,EAAKhuH,GAAe,WAAA,KAIhBiuH,EAHUtgH,EAAAsC,KAAQ+9G,EAAKhuH,GAAe,YAAA,SAAaoI,SAClC,eAAdA,EAAc,QAEqB,cAAS,SAElC,KAAf0hH,IAEFA,EAAkBmE,EAAU,IAE1BnE,IAAeC,EAAAnpH,QAAyBopH,qBAC7BiE,EAASlE,EAAAnpH,QAAsBopH,MAC1CC,EAAK3hH,KAA4B0lH,EAAKhuH,GAAS,WAK1CguH,EAAKhuH,GAAS,OACvB8pH,EAAeC,EAAAnpH,QAAuBopH,IACtCC,EAAK3hH,KAA4B0lH,EAAKhuH,GAAS,cAIjC,IAAhBiqH,EAAKhqH,SACP6pH,EAAeC,EAAAnpH,QAAuBstH,KACtC9xG,EAAe,YAAExQ,SAAO,SAAWxD,GACP,SAAtBA,EAAsB,eACxB5F,EAAS4F,EAAgB,OACzB6hH,EAAK3hH,KAA4BF,EAAkB,gBAMvD6hH,KAAMA,EACNtoH,MAAOoqH,EAAc,MACrBnB,UAAWA,EACXpoH,OAAQA,EACRR,WAAYA,EACZ8nH,gBAAiBA,EACjB3rE,SAAUA,EACVz7C,MAAOA,EACPg/F,WAAYA,EACZz/F,MAAOA,EACPF,YAAagqH,EAAoB,uBA/OtBnC,2YCzUZ,MAAA5iF,EAAA1nC,EAAA,i1BAkEH6uH,EAAA,SAAAzqH,GAGK,SACH0qH,EAAY5sH,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBowG,OAAQ7sH,EAAQ6sH,OAChBrsH,WAAYR,EAAQQ,WACpB0hB,MAAOliB,EAAQkiB,MACfy6B,SAAU38C,EAAQ28C,SAClBosE,iBAAkB/oH,EAAQ+oH,iBACtB/oH,EAAQ+oH,iBACR+D,EACJlI,eAAgB5kH,EAAQ4kH,eACxB4E,gBAAiBxpH,EAAQwpH,gBACzB1oH,IAAKd,EAAQc,IACb2nH,KAAMzoH,EAAQyoH,KACdhoH,MAAOT,EAAQS,MACfqmH,WAAY9mH,EAAQ8mH,WACpBn7G,IAAK3L,EAAQ2L,IACbuoG,wBAAyBl0G,EAAQk0G,wBACjCyQ,WAAY3kH,EAAQ2kH,0BAOtBthH,EAAK9C,iBACqB8E,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAM5D8C,EAAKylH,eACmBzjH,IAAtBrF,EAAQ8oH,UAA0B9oH,EAAQ8oH,UAASiE,EAAA3tH,QAMrDiE,EAAK2pH,uBAAsB,GAM3B3pH,EAAK4pH,sBAAqB,GAM1B5pH,EAAK6pH,4BAA8BltH,EAAQ6oH,2BAM3CxlH,EAAK8pH,iBACwB,IAA3BntH,EAAQ4oH,eAAwBwE,EAAAC,8BAA8BhoH,EAMhEhC,EAAKiqH,0BAA2B,WArEZxqH,EAAA8pH,EAAA1qH,GA2EtB0qH,EAAA7pH,UAAA6H,eAAc,mDAEH1I,EAAAa,UAAM6H,eAAchI,KAAAC,cAEpB0qH,UAAU3iH,iBAAc,OACxB,UAEIe,KAAG9I,KAASmqH,+BACZA,uBAAuBrhH,GAAKf,iBAAc,OAC1C,SAIN,GAOTgiH,EAAA7pH,UAAA4kH,YAAW,SAACnnH,EAAYs/B,wCAKhB0tF,EAAa3qH,KAAQ4qH,0BAA0BjtH,WAK1C7B,UAHN4uH,UAAU5F,YAAW9kH,KACnB0qH,WAAaC,EAAgB1tF,EAAS,IAEhCj9B,KAASmqH,uBAAsB,KACpCO,EAAS1qH,KAAQmqH,uBAAuBruH,GAC9C4uH,EAAU5F,YAAY4F,GAAaC,EAAgB1tF,EAAS,UAV5D59B,EAAAa,UAAM4kH,YAAW/kH,KAAAC,KAACrC,EAAYs/B,IAiBlC8sF,EAAA7pH,UAAAqxG,kBAAiB,uBACH+Y,iBAOdP,EAAA7pH,UAAAwjH,uBAAsB,SAAC/lH,6CAGdg7B,iBACLh7B,IAAUs7B,EAAAub,WAAAx0C,KACO24B,gBAAiBh7B,GAE3B,OAEKktH,aAOhBd,EAAA7pH,UAAA2qH,UAAS,kBACA,GAQTd,EAAA7pH,UAAA0Y,OAAM,kBAEFvZ,EAAAa,UAAM0Y,OAAM7Y,KAAAC,OAAAA,KACNsqH,gBAAe,KAAUnvH,KAAK2vH,UAAS9qH,KAAMsqH,iBAAe,KAQtEP,EAAA7pH,UAAA6iH,UAAS,SAACplH,8CAGDg7B,iBACLh7B,IAAUs7B,EAAAub,WAAAx0C,KACO24B,gBAAiBh7B,KAI3B0B,EAAAa,UAAM6iH,UAAShjH,KAAAC,KAACrC,IAQ3BosH,EAAA7pH,UAAA2hH,yBAAwB,SAAClkH,2CAEd0B,EAAAa,UAAM2hH,yBAAwB9hH,KAAAC,KAACrC,OAElCotH,EAAQ/qH,KAAQ24B,yBACbmhB,UAAcixE,IAAQ9xF,EAAAub,WAAeu2E,EAAUptH,QAGhDqtH,EAAOl6G,EAAA/D,OAAUpP,UACjBqtH,KAAOhrH,KAASoqH,wBAAqBpqH,KACpCoqH,sBAAsBY,GAAOC,EAAAC,iBAChCvtH,SAGQysH,sBAAsBY,GAT8B,OAAAhrH,KACpD85C,UAgBhBiwE,EAAA7pH,UAAA0qH,0BAAyB,SAACjtH,2CAEf0B,EAAAa,UAAM0qH,0BAAyB7qH,KAAAC,KAACrC,OAEnCotH,EAAQ/qH,KAAQ24B,oBACjBoyF,GAAQ9xF,EAAAub,WAAeu2E,EAAUptH,GAAU,OAAAqC,KAClC0qH,cAENM,EAAOl6G,EAAA/D,OAAUpP,UACjBqtH,KAAOhrH,KAASmqH,yBAAsBnqH,KACrCmqH,uBAAuBa,GAAO,IAAAG,EAAA5uH,QAAAyD,KAC5B0qH,UAAUU,qBAGPjB,uBAAuBa,IAcvCjB,EAAA7pH,UAAAmrH,YAAW,SAACpuE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,EAAYmL,OACrC6uF,EAAS,CAAI16C,EAAGztC,EAAGC,GACnB67G,EAAYtrH,KAAQurH,+BACxB5zB,EACAh6F,GAEI6tH,EAAUF,EAAYtrH,KACnB2mH,gBAAgB2E,EAAcr3F,EAAYt2B,QAC/C6E,EACEi3B,EAAI,IAAAz5B,KAAYimH,UACpBtuB,OACYn1F,IAAZgpH,EAAqB5nF,EAAArnC,QAAa4nC,KAAIP,EAAArnC,QAAaunC,WACvCthC,IAAZgpH,EAAwBA,EAAO,GAAAxrH,KAC1BtC,YAAWsC,KACXkmH,iBAAgBlmH,KAChByrH,oBAEPhyF,EAAK3wB,IAAMA,EACX2wB,EAAKjd,iBAAgBzZ,EAAAxG,QAAWkhB,OAAMzd,KAAOqjC,iBAAiBpiC,KAAIjB,OAC3Dy5B,GAWTswF,EAAA7pH,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,OACrB+5C,EAAgB13C,KAAQ24B,iDAG3B+e,GACA/5C,IAAUs7B,EAAAub,WACAkD,EAAkB/5C,QAUvBgc,EAAK3Z,KAAQ4qH,0BAA0BjtH,GACvCg6F,EAAS,CAAI16C,EAAGztC,EAAGC,GACrBgqB,OAAI,EACFmqF,EAAY8H,EAAA9yG,OAAU++E,GACxBh+E,EAAMgyG,YAAY/H,KACpBnqF,EAAO9f,EAAMxd,IAAIynH,QAEb96G,EAAG9I,KAAQ4Y,YACb6gB,GAAQA,EAAK3wB,KAAOA,EAAG,OAClB2wB,MAEDmyF,EAAc5rH,KAAQ6hH,yBAAyBnqE,GAC/Cm0E,EAAc7rH,KAAQ6hH,yBAAyBlkH,GAC/CmuH,EAAgB9rH,KAAQurH,+BAC5B5zB,EACAh6F,GAEIouH,EAAO,IAAAC,EAAAzvH,QACXm7C,EACAk0E,EACAjuH,EACAkuH,EACAl0B,EACAm0B,EAAgB9rH,KACXgiH,kBAAkB/tF,GAAUj0B,KAC5B6qH,YAAS,SACJoB,EAAGz1G,EAAGI,EAAGs1G,eACLC,gBAAgBF,EAAGz1G,EAAGI,EAAGs1G,EAAYx0E,IACjDz2C,KAAIjB,MAAAA,KACDqqH,4BAA2BrqH,KAC3ByqH,yBAAwBzqH,KACxBsqH,wBAEPyB,EAAQjjH,IAAMA,EAEV2wB,GACFsyF,EAAQK,YAAc3yF,EACtBsyF,EAAQM,sBACR1yG,EAAMgO,QAAQi8F,EAAcmI,IAE5BpyG,EAAMpM,IAAIq2G,EAAcmI,GAEnBA,EApD8B,OAAA/rH,KAE3BmsH,gBACVlvE,EACAztC,EACAC,EACAwkB,EACAyjB,GAAoB/5C,IA2D1BosH,EAAA7pH,UAAAisH,gBAAe,SAAClvE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,OAC/B87B,EAAO,KACLmqF,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,GAC/B3G,EAAG9I,KAAQ4Y,iBACP8xG,UAAUiB,YAAY/H,QAI9BnqF,EAAIz5B,KAAQ0qH,UAAUvuH,IAAIynH,IACjB96G,KAAOA,EAAG,KAIXsjH,EAAc3yF,EACpBA,EAAIz5B,KAAQqrH,YAAYpuE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,EAAYmL,GAGrDsjH,EAAY9uG,YAAQsmB,EAAArnC,QAAgB4nC,KAEtC1K,EAAK2yF,YAAcA,EAAYA,YAE/B3yF,EAAK2yF,YAAcA,EAErB3yF,EAAK4yF,2BACA3B,UAAU/iG,QAAQi8F,EAAcnqF,SAnBvCA,EAAIz5B,KAAQqrH,YAAYpuE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,EAAYmL,QACpD4hH,UAAUn9G,IAAIq2G,EAAcnqF,UAqB5BA,GAQTswF,EAAA7pH,UAAAqsH,2BAA0B,SAACvoH,yCAGlBymH,0BAA4BzmH,WAKxBlI,UADN2uH,yBAA2BzmH,EACnBhE,KAASmqH,uBAAsBnqH,KACrCmqH,uBAAuBruH,GAAI2c,aAE7B+E,YAePusG,EAAA7pH,UAAAssH,yBAAwB,SAAC7uH,EAAY8uH,wCAE3BC,EAAIzzF,EAAA98B,IAAiBwB,MACvB+uH,EAAI,KACA1B,EAAOl6G,EAAA/D,OAAU2/G,GACjB1B,KAAOhrH,KAASoqH,wBAAqBpqH,KACpCoqH,sBAAsBY,GAAWyB,MAKhD1C,EA/YA,YAoZG,SACME,EAAwB0C,EAAWh0G,GACQg0G,EAAUlwC,WAAY9jE,IAAMA,YAGjEmxG,4dC3dZ,MAAA8C,EAAA3xH,EAAA,mjBAMH4xH,EAAA,SAAAxtH,GAQK,SACHytH,EACEn1B,EACAt4E,EACA1G,EACAjb,EACAwoH,EACA1uF,OANFh3B,EAQEnB,EAAAU,KAAAC,KAAM23F,EAAWt4E,EAAOmY,IAAWx3B,YAMnCQ,EAAKmmG,aAAejpG,EAQpB8C,EAAKinG,KAAO9uF,EAEZnY,EAAKsI,IAAM6P,EAMXnY,EAAK07E,OAAM,IAAOxrD,MACE,OAAhBhzB,IACF8C,EAAK07E,OAAOx+E,YAAcA,GAO5B8C,EAAK+mG,UAAY,KAMjB/mG,EAAKusH,kBAAoB7G,WAtDLjmH,EAAA6sH,EAAAztH,GA8DtBytH,EAAA5sH,UAAAu8E,SAAQ,uBACMP,QAQd4wC,EAAA5sH,UAAA2nG,kBAAiB,WA+DhB,IAEKM,OAhEC9oF,MAAKukB,EAAArnC,QAAa8nB,WAClByjF,sBACA5rB,SA8DDisB,EAAGj6E,EAAAC,sBAAyB,EAAG,IACjCyyD,UAAS,gBACbunB,EAAIxG,SAAS,EAAG,EAAG,EAAG,GACfwG,EAAI34E,aAhEJhS,WAQPsvG,EAAA5sH,UAAA6nG,iBAAgB,eACR5rB,EAAKn8E,KAAyCk8E,OAChDC,EAAM6wC,cAAgB7wC,EAAM8wC,cAAajtH,KACtCqf,MAAKukB,EAAArnC,QAAasnC,YAElBxkB,MAAKukB,EAAArnC,QAAaunC,WAEpBgkE,sBACAtqF,WAOPsvG,EAAA5sH,UAAAkkC,KAAI,gBACO/kB,OAAKukB,EAAArnC,QAAc8nB,aACrBhF,MAAKukB,EAAArnC,QAAa4nC,UAClB+3C,OAAM,IAAOxrD,MACQ,YAAjBi2E,eAAqB3mG,KACvBk8E,OAAOx+E,YAAWsC,KAAQ2mG,oBAG1BtnF,OAAKukB,EAAArnC,QAAc4nC,YACrB9kB,MAAKukB,EAAArnC,QAAaqpB,aAClBpI,eACAuvG,kBAAiB/sH,KAAAA,KAAYynG,WAC7BF,UAASU,EAAAC,YAAAloG,KACPk8E,OAAMl8E,KACN+nG,iBAAiB9mG,KAAIjB,MAAAA,KACrB6nG,kBAAkB5mG,KAAIjB,SAUjC8sH,EAAA5sH,UAAA4nG,eAAc,gBACHP,iBACFA,iBACAA,UAAY,OAGvBulB,EAjIA,sBA8IeD,8PCpJZ,MAAA7qG,EAAA/mB,EAAA,inBAwEHiyH,EAAA,SAAA7tH,GAKK,SACH8tH,EAAYx1B,EAAWt4E,EAAOmY,OAA9Bh3B,EACEnB,EAAAU,KAAAC,OAAAA,KAEM7C,EAAUq6B,GAAyB,UAKzCh3B,EAAKm3F,UAAYA,EAMjBn3F,EAAK6e,MAAQA,EAQb7e,EAAK4rH,YAAc,KAQnB5rH,EAAKmjC,MAAO,EAQZnjC,EAAKsI,IAAG,GAMRtI,EAAK4sH,iBACoB5qH,IAAvBrF,EAAQ8mH,WAA2B,IAAM9mH,EAAQ8mH,WAOnDzjH,EAAK6sH,kBAAiB,YA1DPptH,EAAAktH,EAAA9tH,GAgEjB8tH,EAAAjtH,UAAAsd,QAAO,gBACA/a,cAAaM,EAAAxG,QAAWkhB,SAM/B0vG,EAAAjtH,UAAAotH,QAAO,aAKPH,EAAAjtH,UAAA0Y,OAAM,uBACQ9P,IAAG,IAAM9I,KAAQ23F,WAS/Bw1B,EAAAjtH,UAAAshH,eAAc,oBACF4K,4BAIN3yF,EAAIz5B,KAAQosH,kBAOV3yF,EAAKnc,YAAQsmB,EAAArnC,QAAgBsnC,mBAG1BupF,YAAc,EACZ3zF,EAETA,EAAOA,EAAK2yF,kBACL3yF,gBAUX0zF,EAAAjtH,UAAAmsH,oBAAmB,mBACPD,iBAIN3yF,EAAIz5B,KAAQosH,YACZrtF,EAAI/+B,WAGFy5B,EAAKnc,YAAQsmB,EAAArnC,QAAgBsnC,OAAM,CAIrCpK,EAAK2yF,YAAc,WAEV3yF,EAAKnc,YAAQsmB,EAAArnC,QAAgBqpB,QAGtCmZ,EAAOtF,EACEA,EAAKnc,YAAQsmB,EAAArnC,QAAgB4nC,KAGtCpF,EAAKqtF,YAAc3yF,EAAK2yF,YAExBrtF,EAAOtF,EAETA,EAAOsF,EAAKqtF,kBACL3yF,KAQX0zF,EAAAjtH,UAAAqtH,aAAY,uBACE51B,WAMdw1B,EAAAjtH,UAAAod,SAAQ,uBACM+B,OAWd8tG,EAAAjtH,UAAAuxG,SAAQ,SAACpyF,WACEA,QAAKukB,EAAArnC,QAAe8nB,OAAKrkB,KAASqf,MAAQA,EAAK,MAAA,IAC5CrjB,MAAK,qCAEZqjB,MAAQA,OACR7B,WAUP2vG,EAAAjtH,UAAAkkC,KAAI,yBAUJ+oF,EAAAjtH,UAAAoiH,SAAQ,SAACxmH,EAAIs/B,YACDgyF,YAAW,OACZ,MAGLl2G,EAAKlX,KAAQqtH,kBAAkBvxH,MAC9Bob,OAGgB,IAAVA,EAAY,OACd,OAHPA,EAAQkkB,OACHiyF,kBAAkBvxH,GAAMob,MAKzBqP,EAAQ6U,EAAOlkB,EAAQ,IAAO,UAChCqP,GAAKvmB,KAASotH,YACT,WAEK7mG,EAAKvmB,KAAQotH,cAU7BD,EAAAjtH,UAAAmiH,aAAY,SAACvmH,gBACDsxH,cAG4B,SAA1BC,kBAAkBvxH,IAOhCqxH,EAAAjtH,UAAAwkH,cAAa,SAAC5oH,QACHsxH,cAAWptH,KACbqtH,kBAAkBvxH,IAAM,IAGnCqxH,EA7OA,sBA+OeD,ySCvTZ,MAAAh7E,EAAAj3C,EAAA,wtBAyBHuyH,EAAA,SAAAnuH,GAeK,SACHouH,EACEr2E,EACAw0E,EACA8B,EACA7B,EACAl0B,EACAm0B,EACA73F,EACAmyD,EACAunC,EACAC,EACAC,EACAC,OAZFttH,EAcEnB,EAAAU,KAAAC,KAAM23F,EAAS/zD,EAAArnC,QAAY4nC,OAAInkC,KAM/BQ,EAAKutH,kBAAmCvrH,IAApBqrH,GAAgCA,EAMpDrtH,EAAK8pH,gBAAkBwD,EAMvBttH,EAAKwzB,YAAcC,EAMnBzzB,EAAKwtH,QAAU5nC,EAMf5lF,EAAKw9E,QAAU,KAMfx9E,EAAKytH,gBAAkBrC,EAMvBprH,EAAK0tH,gBAAkBrC,EAMvBrrH,EAAK2tH,kBAAoBrC,GAAsCn0B,EAM/Dn3F,EAAK4tH,aAAY,GAMjB5tH,EAAK6tH,qBAAuB,KAM5B7tH,EAAK8tH,SAAW,MAEVC,EAAe1C,EAAeha,mBAClCrxG,EAAK2tH,mBAEDK,EAAkBhuH,EAAK0tH,gBAAgBznH,YACzCgoH,EAAkBjuH,EAAKytH,gBAAgBxnH,YAErCioH,EAAsBF,EAAe7nH,EAAAyM,gBACvBm7G,EAAcC,GAC9BD,KAEiC,cAAzBG,UAGVluH,EAAK6e,MAAKukB,EAAArnC,QAAaunC,YAInB6qF,EAAmBv3E,EAAW3wC,YAChCkoH,IAIAF,EAHGA,EAGY9nH,EAAAyM,gBAAmBq7G,EAAiBE,GAFjCA,OAMhB7kF,EAAmB+hF,EAAerjF,cACtChoC,EAAK2tH,kBAAkB,IAGnBtkF,EAAgB+kF,EAAAC,gCACpBz3E,EACAs2E,EACAgB,EACA5kF,OAGGglF,SAASjlF,IAAqBA,GAAoB,SAGrDrpC,EAAK6e,MAAKukB,EAAArnC,QAAaunC,YAInBirF,OACmBvsH,IAAvBorH,EAAmCA,EAAkB17E,EAAA88E,mBAMvDxuH,EAAKyuH,eAAc,IAAAC,EAAA3yH,QACjB66C,EACAs2E,EACAgB,EACAD,EACA5kF,EAAmBklF,EACnBjlF,GAGgD,IAA9CtpC,EAAKyuH,eAAeE,eAAevzH,cAErC4E,EAAK6e,MAAKukB,EAAArnC,QAAaunC,QAIzBtjC,EAAK8tH,SAAW1C,EAAeja,kBAAkB9nE,OAC7CuO,EAAe53C,EAAKyuH,eAAeG,2BAEnCX,IACEr3E,EAAW7wC,YACb6xC,EAAa,GAAC79B,EAAAC,MACZ49B,EAAa,GACbq2E,EAAgB,GAChBA,EAAgB,IAElBr2E,EAAa,GAAC79B,EAAAC,MACZ49B,EAAa,GACbq2E,EAAgB,GAChBA,EAAgB,KAGlBr2E,EAAYzxC,EAAAyM,gBAAmBglC,EAAcq2E,cAIpCr2E,YAGLi3E,EAAczD,EAAeha,0BACjCx5D,EACA53C,EAAK8tH,UAGEgB,EAAOD,EAAYj7G,KAAMk7G,GAAQD,EAAY/6G,KAAMg7G,IAAI,IAAA,IACrDC,EAAOF,EAAYh7G,KAAMk7G,GAAQF,EAAY96G,KAAMg7G,IAAI,KACxD91F,EAAOk0F,EAAgBntH,EAAK8tH,SAAUgB,EAAMC,EAAMt7F,GACpDwF,GACFj5B,EAAK4tH,aAAanqH,KAAKw1B,GAKI,IAA7Bj5B,EAAK4tH,aAAaxyH,SACpB4E,EAAK6e,MAAKukB,EAAArnC,QAAaunC,YAjBzBtjC,EAAK6e,MAAKukB,EAAArnC,QAAaunC,sBAzLJ7jC,EAAAwtH,EAAApuH,GAmNvBouH,EAAAvtH,UAAAu8E,SAAQ,uBACMuB,SAMdyvC,EAAAvtH,UAAAsvH,WAAU,eACFC,EAAO,WACRrB,aAAa7mH,QAAO,SACbkyB,EAAM99B,EAAGkP,GACb4uB,GAAQA,EAAKnc,YAAQsmB,EAAArnC,QAAgBsnC,QACvC4rF,EAAQxrH,KAAI,CACV+P,OAAMhU,KAAOiuH,gBAAgBpc,mBAAmBp4E,EAAKk+D,WACrDxb,MAAO1iD,EAAKgjD,cAGhBx7E,KAAIjB,YAEHouH,aAAaxyH,OAAS,EAEJ,IAAnB6zH,EAAQ7zH,OAAYoE,KACjBqf,MAAKukB,EAAArnC,QAAa8nB,eAEjB44B,EAACj9C,KAAQmuH,kBAAkB,GAC3B3oH,EAAIxF,KAAQkuH,gBAAgBwB,YAAYzyE,GACxCt+C,EAAmB,iBAAJ6G,EAAoBA,EAAOA,EAAK,GAC/ClE,EAAoB,iBAAJkE,EAAoBA,EAAOA,EAAK,GAChDskC,EAAgB9pC,KAAQkuH,gBAAgB1lF,cAAcyU,GACtDpT,EAAgB7pC,KAAQiuH,gBAAgBzlF,cAAaxoC,KACpDsuH,UAGDC,EAAYvuH,KAAQkuH,gBAAgBrc,mBAAkB7xG,KACrDmuH,wBAEFnwC,QAAO4wC,EAAA5qH,OACVrF,EACA2C,EAAMtB,KACDg0B,YACL6V,EAAgB7pC,KACXiuH,gBAAgBxnH,YACrBqjC,EACAykF,EAAYvuH,KACPivH,eACLQ,EAAOzvH,KACFguH,QAAOhuH,KACP+tH,aAAY/tH,KACZsqH,sBAGFjrG,MAAKukB,EAAArnC,QAAasnC,YAEpBrmB,WAMPiwG,EAAAvtH,UAAAkkC,KAAI,mBACO/kB,OAAKukB,EAAArnC,QAAc4nC,KAAI,MACzB9kB,MAAKukB,EAAArnC,QAAaqpB,aAClBpI,cAEDmyG,EAAa,OAEZtB,qBAAoB,QACpBD,aAAa7mH,QAAO,SACbkyB,EAAM99B,EAAGkP,OACXwU,EAAQoa,EAAKnc,cACf+B,GAAKukB,EAAArnC,QAAc4nC,MAAQ9kB,GAAKukB,EAAArnC,QAAcqpB,QAAO,CACvD+pG,QAEMC,EAAelvH,EAAAC,OACnB84B,EAAI12B,EAAAxG,QACMkhB,QAAM,SACNnO,OACFugH,EAAQp2F,EAAKnc,WAEjBuyG,GAAKjsF,EAAArnC,QAAcsnC,QACnBgsF,GAAKjsF,EAAArnC,QAAc8nB,OACnBwrG,GAAKjsF,EAAArnC,QAAcunC,wBAEL8rF,GAEK,MADnBD,SAEOG,wBACAN,4BAMRnB,qBAAqBpqH,KAAK2rH,KAEjC3uH,KAAIjB,YAGHouH,aAAa7mH,SAAO,SAAWkyB,EAAM99B,EAAGkP,GAC7B4uB,EAAKnc,YACVsmB,EAAArnC,QAAc4nC,MACrB1K,EAAK2K,UAIU,IAAfurF,GACFpyF,WAAUv9B,KAAMwvH,WAAWvuH,KAAIjB,MAAQ,KAQ7CytH,EAAAvtH,UAAA4vH,iBAAgB,gBACTzB,qBAAqB9mH,QAAO7G,EAAAmiB,oBAC5BwrG,qBAAuB,MAEhCZ,EAzUA,sBA2UeD,waC7VFwB,iDAOAe,QAPAf,EAAkB,GAOlBe,GAA6B,iKCdvC,IAAAppH,EAAA1L,EAAA,oDA+CH+0H,EAAA,WAQK,SACHC,EACE74E,EACAs2E,EACAa,EACAE,EACAyB,EACAC,GAKGnwH,KACEowH,YAAch5E,EAKhBp3C,KACEqwH,YAAc3C,EAEkD,IACjE4C,EAAiB,GACfC,EAAYt3F,EAAAyb,aAAA10C,KAAqBqwH,YAAWrwH,KAAOowH,aAMtDpwH,KACEwwH,cAAa,SAAaphH,OACvBtG,EAAMsG,EAAE,GAAC,IAAUA,EAAE,UACtBkhH,EAAkBxnH,KACrBwnH,EAAkBxnH,GAAOynH,EAAanhH,IAEjCkhH,EAAkBxnH,IAMxB9I,KACEywH,iBAAmBhC,EAKrBzuH,KACE0wH,uBAAyBR,EAAiBA,EAK5ClwH,KACE2wH,WAAU,GAMZ3wH,KACE4wH,iBAAkB,EAKpB5wH,KACE6wH,kBAAiB7wH,KACfowH,YAAY7pH,cACfkoH,KAAezuH,KACVowH,YAAY3pH,aAASE,EAAAC,SACnB6nH,IAAe9nH,EAAAC,SAAA5G,KAAmBowH,YAAY3pH,aAKtDzG,KACE8wH,kBAAiB9wH,KAAQowH,YAAY3pH,YAASE,EAAAC,SAAA5G,KACjCowH,YAAY3pH,aAC1B,KAKDzG,KACE+wH,kBAAiB/wH,KAAQqwH,YAAY5pH,YAASE,EAAAC,SAAA5G,KACjCqwH,YAAY5pH,aAC1B,SAEEuqH,EAAkBrqH,EAAA4M,WAAcg7G,GAChC0C,EAAmBtqH,EAAA6M,YAAe+6G,GAClC2C,EAAsBvqH,EAAAkM,eAAkB07G,GACxC4C,EAAqBxqH,EAAAiM,cAAiB27G,GACtC6C,EAAapxH,KAAQwwH,cAAcQ,GACnCK,EAAcrxH,KAAQwwH,cAAcS,GACpCK,EAAiBtxH,KAAQwwH,cAAcU,GACvCK,EAAgBvxH,KAAQwwH,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACGvgH,KAAK4F,IACH,EACA5F,KAAK0X,KAAI/M,EAAAI,KAAAhU,EAAAgM,QAEG47G,IACL4B,EACCA,EADD,UAOT,WAEDsB,SACHT,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QAGOZ,gBAAe,KAClBc,EAAY18G,EAAAA,OACX27G,WAAWppH,SAAO,SAAWoqH,EAAUh2H,EAAGkP,GAC7C6mH,EAAY9hH,KAAK2F,IACfm8G,EACAC,EAASn1H,OAAO,GAAG,GACnBm1H,EAASn1H,OAAO,GAAG,GACnBm1H,EAASn1H,OAAO,GAAG,YAMlBm0H,WAAWppH,QAAO,SACXoqH,MAEN/hH,KAAK4F,IACHm8G,EAASn1H,OAAO,GAAG,GACnBm1H,EAASn1H,OAAO,GAAG,GACnBm1H,EAASn1H,OAAO,GAAG,IAEnBk1H,EAAS1xH,KACN8wH,kBAAoB,EAAC,KAEpBc,EAAW,EACdD,EAASn1H,OAAO,GAAG,GAAIm1H,EAASn1H,OAAO,GAAG,KAC1Cm1H,EAASn1H,OAAO,GAAG,GAAIm1H,EAASn1H,OAAO,GAAG,KAC1Cm1H,EAASn1H,OAAO,GAAG,GAAIm1H,EAASn1H,OAAO,GAAG,KAEzCo1H,EAAY,GAAG,GAAKF,EAAS1xH,KAAQ8wH,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC5xH,KAAU8wH,mBAExBc,EAAY,GAAG,GAAKF,EAAS1xH,KAAQ8wH,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC5xH,KAAU8wH,mBAExBc,EAAY,GAAG,GAAKF,EAAS1xH,KAAQ8wH,kBAAoB,IAC3Dc,EAAY,GAAG,IAAC5xH,KAAU8wH,uBAMtB18G,EAAOxE,KAAK2F,IAChBq8G,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJhiH,KAAK4F,IAChBo8G,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAENx9G,EAAIpU,KAAQ8wH,kBAAoB,IACzCa,EAASn1H,OAASo1H,KAGtB3wH,KAAIjB,OAIVswH,EAAiB,UAanBL,EAAA/vH,UAAA2xH,aAAY,SAAC1uH,EAAGC,EAAGgM,EAAG0iH,EAAMC,EAAMC,QAC3BrB,WAAW1sH,KAAI,CAClBzH,OAAM,CAAGs1H,EAAMC,EAAMC,GACrBnzH,OAAM,CAAGsE,EAAGC,EAAGgM,MAoBnB6gH,EAAA/vH,UAAAuxH,SAAQ,SAACtuH,EAAGC,EAAGgM,EAAGC,EAAGyiH,EAAMC,EAAMC,EAAMC,EAAMT,OACrCU,EAAgBvrH,EAAA0K,eAAA,CAAmBygH,EAAMC,EAAMC,EAAMC,IACrDE,EAAenyH,KAAQ8wH,kBAAiBnqH,EAAAC,SACjCsrH,GAAgBlyH,KAAS8wH,kBAClC,KACEsB,EAAgBpyH,KAA+B8wH,kBAI/CuB,EAAMryH,KACLowH,YAAY7pH,YACjB4rH,EAAkB,IAClBA,EAAkB,EAEhBG,GAAmB,KAEnBd,EAAiB,EAAC,SACXnB,YAAY/+E,YAAQtxC,KAAW+wH,kBAAiB,KACjDwB,EAAgB5rH,EAAA0K,eAAA,CAAmBlO,EAAGC,EAAGgM,EAAGC,IAGlDijH,EAFqB3rH,EAAAC,SACV2rH,GAAgBvyH,KAAS+wH,kBA5QjB,KA8QuBuB,GAEvCD,GAAMryH,KAASowH,YAAY9+E,YAAc6gF,IAC5CG,EACEH,EAlRiB,KAkRuBG,SAIzCA,GAAgBtyH,KAASywH,kBAE1B3B,SAASoD,EAAiB,KAC1BpD,SAASoD,EAAiB,KAC1BpD,SAASoD,EAAiB,KAC1BpD,SAASoD,EAAiB,mBAEVA,EAAgBlyH,KAAOywH,uBAOvC+B,EAAc,OAEbF,GAEAxD,SAASgD,EAAK,KACdhD,SAASgD,EAAK,KACdhD,SAASiD,EAAK,KACdjD,SAASiD,EAAK,KACdjD,SAASkD,EAAK,KACdlD,SAASkD,EAAK,KACdlD,SAASmD,EAAK,KACdnD,SAASmD,EAAK,QAEXT,EAAiB,EACnBc,GAAmB,UAUF,IANjBE,GACI1D,SAASgD,EAAK,KAAQhD,SAASgD,EAAK,IAAU,EAAJ,IAC1ChD,SAASiD,EAAK,KAAQjD,SAASiD,EAAK,IAAU,EAAJ,IAC1CjD,SAASkD,EAAK,KAAQlD,SAASkD,EAAK,IAAU,EAAJ,IAC1ClD,SAASmD,EAAK,KAAQnD,SAASmD,EAAK,IAAU,EAAJ,KAG7B,GAAfO,GACe,GAAfA,GACe,GAAfA,EAAgB,UAQpBhB,EAAiB,EAAC,KACfc,EAAgB,KACbtzH,EAAM,EAAKmE,EAAE,GAAKiM,EAAE,IAAM,GAAIjM,EAAE,GAAKiM,EAAE,IAAM,GAC7CqjH,EAASzyH,KAAQwwH,cAAcxxH,GAEjC8Q,OAAE,KACFuiH,EAKFviH,GAJqByK,EAAAU,OACX62G,EAAK,GAAIM,GAAgB73G,EAAAU,OACxB+2G,EAAK,GAAII,IAClB,EACkB73G,EAAAU,OAAUw3G,EAAU,GAAIL,QAE5CtiH,GAAMgiH,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,OAErC1iH,GAAM+hH,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8BxiH,EAAKA,EAAKC,EAAKA,EACL/P,KAAQ0wH,0BAE9C4B,EAAgB,IACd1iH,KAAK0F,IAAInS,EAAE,GAAKiM,EAAE,KAAOQ,KAAK0F,IAAInS,EAAE,GAAKiM,EAAE,IAAC,KAExCsjH,EAAE,EAAKtvH,EAAE,GAAKgM,EAAE,IAAM,GAAIhM,EAAE,GAAKgM,EAAE,IAAM,GACzCujH,EAAK3yH,KAAQwwH,cAAckC,GAC3BE,EAAE,EAAKvjH,EAAE,GAAKlM,EAAE,IAAM,GAAIkM,EAAE,GAAKlM,EAAE,IAAM,GACzC0vH,EAAK7yH,KAAQwwH,cAAcoC,QAE5BnB,SACHtuH,EACAC,EACAsvH,EACAE,EACAd,EACAC,EACAY,EACAE,EACArB,EAAiB,QAEdC,SACHmB,EACAF,EACAtjH,EACAC,EACAwjH,EACAF,EACAX,EACAC,EACAT,EAAiB,YAIbsB,EAAE,EAAK3vH,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC2vH,EAAK/yH,KAAQwwH,cAAcsC,GAC3BE,EAAE,EAAK5jH,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC4jH,EAAKjzH,KAAQwwH,cAAcwC,QAE5BvB,SACHtuH,EACA2vH,EACAE,EACA3jH,EACAyiH,EACAiB,EACAE,EACAhB,EACAT,EAAiB,QAEdC,SACHqB,EACA1vH,EACAgM,EACA4jH,EACAD,EACAhB,EACAC,EACAiB,EACAzB,EAAiB,cAOrBa,EAAM,UACExB,kBAAiB,YAGtBD,iBAAkB,EAOE,IAAR,GAAd4B,IAAuBxyH,KACrB6xH,aAAa1uH,EAAGiM,EAAGC,EAAGyiH,EAAME,EAAMC,GAEd,IAAR,GAAdO,IAAuBxyH,KACrB6xH,aAAa1uH,EAAGiM,EAAGhM,EAAG0uH,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IAAuBxyH,KACrB6xH,aAAazuH,EAAGiM,EAAGlM,EAAG4uH,EAAME,EAAMH,GAEd,IAAR,EAAdU,IAAuBxyH,KACrB6xH,aAAazuH,EAAGiM,EAAGD,EAAG2iH,EAAME,EAAMD,MAU7C/B,EAAA/vH,UAAAkvH,sBAAqB,eACbp7G,EAAMrN,EAAAkL,0BAEP8+G,WAAWppH,SAAO,SAAWoqH,EAAUh2H,EAAGkP,OACvC8N,EAAMg5G,EAASn1H,0BACJwX,EAAQ2E,EAAI,uBACZ3E,EAAQ2E,EAAI,uBACZ3E,EAAQ2E,EAAI,OAGxB3E,GAMTi8G,EAAA/vH,UAAAivH,aAAY,uBACEwB,YAEhBV,EAvcA,aAyceD,0OCzZZ9mH,EAAAF,OAAAzN,EAAA,6BAAA,IACa23H,IAoDbhqH,EAAAF,OAAAzN,EAAA,mCAAA,IACaszH,IAmDb3lH,EAAAF,OAAAzN,EAAA,UAAA,IACayI,IAzMb,IAiBCmvH,EAjBDjhF,EAAAj3C,EAAA,2GA4BA,SACMm4H,EAAiBjrB,EAAK5tB,EAAI1xD,EAAI6xD,EAAI5xD,GACzCq/E,EAAI1nB,YACJ0nB,EAAIzR,OAAO,EAAG,GACdyR,EAAIxnB,OAAOpG,EAAI1xD,GACfs/E,EAAIxnB,OAAOjG,EAAI5xD,GACfq/E,EAAIpnB,YACJonB,EAAIp5E,OACJo5E,EAAIhS,OACJgS,EAAIxG,SAAS,EAAG,EAAG/xF,KAAK4F,IAAI+kE,EAAIG,GAAM,EAAG9qE,KAAK4F,IAAIqT,EAAIC,IACtDq/E,EAAI74E,UAUH,SACM+jG,EAA8BtuH,EAAMmQ,UAGzCtF,KAAK0F,IAAIvQ,EAAc,EAATmQ,GAAc,KAAO,GACnCtF,KAAK0F,IAAIvQ,EAAc,EAATmQ,EAAa,GAAK,QAAc,WA2ClCg+G,EACd97E,EACAs2E,EACA9jF,EACAE,OAEMH,EAAY1Q,EAAA5qB,UAAau7B,EAAc8jF,EAAYt2E,GAGrDvN,EAAgB5Q,EAAAgb,mBAClBy5E,EACA5jF,EACAF,GAGI0pF,EAAsB5F,EAAWz7E,wBACXzvC,IAAxB8wH,IACFzpF,GAAoBypF,OAEhBC,EAAsBn8E,EAAWnF,wBACXzvC,IAAxB+wH,IACF1pF,GAAoB0pF,OAOhBn7E,EAAehB,EAAW3wC,gBAC3B2xC,GAAYzxC,EAAA8K,mBAAuB2mC,EAAczO,GAAY,KAC1D6pF,EAAkBv6F,EAAAgb,mBACHmD,EAAYvN,EAAkBF,GACjDE,EACEilF,SAAS0E,IAAuBA,EAAqB,IACvD3pF,GAAoB2pF,UAIjB3pF,WAeOglF,EACdz3E,EACAs2E,EACAa,EACAzkF,OAEMF,EAAYjjC,EAAAmM,UAAay7G,GAC3B1kF,EAAmBqpF,EACrB97E,EACAs2E,EACA9jF,EACAE,WAGGglF,SAASjlF,IAAqBA,GAAoB,IAACljC,EAAA+L,cACxC67G,GAAY,SAAY54G,UACpCk0B,EAAmBqpF,EACjB97E,EACAs2E,EACA/3G,EACAm0B,GAEKglF,SAASjlF,IAAqBA,EAAmB,KAIrDA,WA0BO7lC,EACdrF,EACA2C,EACA2yB,EACA4V,EACAuO,EACAtO,EACAykF,EACAkF,EACAhE,EACArpC,EACAynC,EACAC,OAEMrkG,EAAOyE,EAAAC,sBACXve,KAAK2P,MAAM0U,EAAat1B,GACxBiR,KAAK2P,MAAM0U,EAAa3yB,gBAEnBmoB,EAASqkG,GAEO,IAAnB2B,EAAQ7zH,OAAY,OACf6tB,EAAQ+F,gBAKRkkG,EAAW/qH,UACXiH,KAAK2P,MAAM5W,EAAQsrB,GAAcA,EAH1CxK,EAAQ/b,MAAMumB,EAAYA,GAM1BxK,EAAQ2+E,yBAAwB,cAE1BurB,EAAgBhtH,EAAAkL,cACtB49G,EAAQloH,SAAO,SAAWoR,EAAKhd,EAAGkP,YACzB8oH,EAAkBh7G,EAAI3E,eAGzB4/G,EAAkBjtH,EAAAC,SAAY+sH,GAC9BE,EAAmBltH,EAAAuM,UAAaygH,GAChCG,EAAa5lG,EAAAC,sBACjBve,KAAK2P,MAAO0U,EAAa2/F,EAAsB/pF,GAC/Cj6B,KAAK2P,MAAO0U,EAAa4/F,EAAuBhqF,aAE3CiqF,EAAehG,OAEhBiG,EAAc9/F,EAAa4V,EAEjC4lF,EAAQloH,SAAO,SAAWoR,EAAKhd,EAAGkP,OAC1BmpH,EAAOr7G,EAAI3E,OAAO,GAAK2/G,EAAiB,GACxCM,IAASt7G,EAAI3E,OAAO,GAAK2/G,EAAiB,IAC1CO,EAAQvtH,EAAAC,SAAY+R,EAAI3E,QACxBmgH,EAASxtH,EAAAuM,UAAayF,EAAI3E,QAG5B2E,EAAIwjE,MAAMx9E,MAAQ,GAAKga,EAAIwjE,MAAM76E,OAAS,GAC5CwyH,EAAczkG,UACZ1W,EAAIwjE,MACJiK,EACAA,EACAztE,EAAIwjE,MAAMx9E,MAAQ,EAAIynF,EACtBztE,EAAIwjE,MAAM76E,OAAS,EAAI8kF,EACvB4tC,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,UAKZK,EAAaztH,EAAA4M,WAAcg7G,UAEjCkF,EAActE,eAAe5nH,SAAO,SAAWoqH,EAAUh2H,EAAGkP,GAoBvD,IACGrO,EAASm1H,EAASn1H,OAClBqC,EAAS8yH,EAAS9yH,OACpB0X,EAAK/Z,EAAO,GAAG,GACjBma,EAAKna,EAAO,GAAG,GACbga,EAAKha,EAAO,GAAG,GACjBoa,EAAKpa,EAAO,GAAG,GACbia,EAAKja,EAAO,GAAG,GACjBqa,EAAKra,EAAO,GAAG,GAEX63H,EAAKX,GAAY70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GACpDwqF,EAAKZ,IACP70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GAEjCywC,EAAKm5C,GAAY70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GACpDjhB,EAAK6qG,IACP70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GAEjC4wC,EAAKg5C,GAAY70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GACpDhhB,EAAK4qG,IACP70H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,GAMjCyqF,EAAwBh+G,EACxBi+G,EAAwB79G,EAC9BJ,EAAK,EACLI,EAAK,MAMC89G,EAAe,EALrBj+G,GAAM+9G,EACN39G,GAAM49G,EAKK,EAAG,EAAGj6C,EAAK85C,IAJtB59G,GAAM89G,EACN19G,GAAM29G,EAIK,EAAG,EAAG95C,EAAK25C,IACnB,EAAG,EAAG79G,EAAII,EAAIiS,EAAKyrG,IACnB,EAAG,EAAG79G,EAAII,EAAIiS,EAAKwrG,IAEhBI,EAAWn6G,EAAAO,kBAAqB25G,MACjCC,MAILjrG,EAAQsF,OACRtF,EAAQg3D,YAjRT,mBAEgCj+E,IAA7B2wH,EAAsC,KAClChrB,EAAMhnG,SAASC,cAAa,UAAWswB,WAAU,MACvDy2E,EAAIC,yBAAwB,UAC5BD,EAAIvnB,UAAS,wBACbwyC,EAAiBjrB,EAAK,EAAG,EAAG,EAAG,GAC/BirB,EAAiBjrB,EAAK,EAAG,EAAG,EAAG,OACzBpjG,EAAOojG,EAAIlR,aAAa,EAAG,EAAG,EAAG,GAAGlyF,KAC1CouH,EACEE,EAA8BtuH,EAAM,IACpCsuH,EAA8BtuH,EAAM,IACpCsuH,EAA8BtuH,EAAM,UAGjCouH,EAqQHwB,IACA7G,IAAkB57E,EAAAs4E,yBAAA,CAGlB/gG,EAAQitE,OAAOnc,EAAI1xD,WAGb+rG,EAAKP,EAAK95C,EACVs6C,EAAKP,EAAKzrG,EACPisG,EAAO,EAAGA,EAHL,EAGmBA,IAE/BrrG,EAAQk3D,OACNpG,EAAKm5C,GAAaoB,EAAO,GAAKF,EANpB,GAOV/rG,EAAK6qG,EAAYoB,EAAOD,EAAE,IAGhB3gE,GAAR4gE,GACFrrG,EAAQk3D,OACNpG,EAAKm5C,GAAaoB,EAAO,GAAKF,EAZtB,GAaR/rG,EAAK6qG,GAAaoB,EAAO,GAAKD,EAAE,IAKtCprG,EAAQk3D,OAAOjG,EAAI5xD,QAEnBW,EAAQitE,OAAOnc,EAAI1xD,GACnBY,EAAQk3D,OAAO0zC,EAAIC,GACnB7qG,EAAQk3D,OAAOjG,EAAI5xD,GAGrBW,EAAQ0sE,OAER1sE,EAAQpb,UACNqmH,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZL,EACAC,GAGF7qG,EAAQ7b,UACN+lH,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAGxB/qG,EAAQ/b,MACNm8B,EAAmB5V,GAClB4V,EAAmB5V,GAGtBxK,EAAQ4F,UAAUykG,EAActkG,OAAQ,EAAG,GAC3C/F,EAAQ6F,cAGNu+F,IACFpkG,EAAQsF,OAERtF,EAAQ2+E,yBAAwB,cAChC3+E,EAAQ81D,YAAW,QACnB91D,EAAQo3D,UAAY,EAEpB4yC,EAActE,eAAe5nH,SAAO,SAAWoqH,EAAUh2H,EAAGkP,OACpDhM,EAAS8yH,EAAS9yH,OAClBw1H,GAAMx1H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EACzCwqF,IAAOz1H,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EAC1CywC,GAAM17E,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EACzCjhB,IAAOhqB,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EAC1C4wC,GAAM77E,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EACzChhB,IAAOjqB,EAAO,GAAG,GAAKu1H,EAAc,IAAMtqF,EAEhDrgB,EAAQg3D,YACRh3D,EAAQitE,OAAOnc,EAAI1xD,GACnBY,EAAQk3D,OAAO0zC,EAAIC,GACnB7qG,EAAQk3D,OAAOjG,EAAI5xD,GACnBW,EAAQs3D,YACRt3D,EAAQjrB,YAGVirB,EAAQ6F,WAEH7F,EAAQ+F,sVClaJulG,+CAMAvK,QANAuK,EAAmB,QAMnBvK,EAAwB,CACnCxpB,uBAAuB,EACvBg0B,yBAAyB,0KCdxB,MAAAC,EAAAh6H,EAAA,ugBAIHi6H,EAAA,SAAA71H,YAAA81H,0DAAwBl1H,EAAAk1H,EAAA91H,GAItB81H,EAAAj1H,UAAA4kH,YAAW,SAAC7nF,aACEl1B,kBAAc,IACd/H,KAAQo1H,WACTx8G,WAAYqkB,EAAS,WAGvByB,MAAM4uF,YAQjB6H,EAAAj1H,UAAAm1H,mBAAkB,cACQ,SAAfpxF,gBAGHn7B,EAAG9I,KAAQs1H,eAEXr4E,EADSyuE,EAAA6J,QAAWzsH,GACN,QACfvB,QAAO,SACAkyB,GACJA,EAAKk+D,UAAU,KAAO16C,SACnBvxC,OAAMggH,EAAA9yG,OAAQ6gB,EAAKk+D,YACxBl+D,EAAK6zF,YAEPrsH,KAAIjB,SAGZm1H,EAlCA,sBAoCeD,0NCxCZ,IAAA/mH,EAAAlT,EAAA,iBAqBHu6H,EAAA,WAGK,SACHC,EAAYC,GAKP11H,KACEorH,mBACmB5oH,IAAtBkzH,EAAkCA,EAAoB,KAKrD11H,KACE21H,OAAS,EAKX31H,KACE41H,SAAQ,GAKV51H,KACE61H,QAAU,KAKZ71H,KACE81H,QAAU,YAMjBL,EAAAv1H,UAAA6H,eAAc,uBACAqjH,cAAgB,GAACprH,KAASikC,WAAQjkC,KAAUorH,eAM1DqK,EAAAv1H,UAAAuY,MAAK,gBACEk9G,OAAS,OACTC,SAAQ,QACRC,QAAU,UACVC,QAAU,MAOjBL,EAAAv1H,UAAAyrH,YAAW,SAAC7iH,eACE8sH,SAAS97G,eAAehR,IAStC2sH,EAAAv1H,UAAAqH,QAAO,SAACgI,WACFwmH,EAAK/1H,KAAQ61H,QACVE,GACLxmH,EAAEwmH,EAAMC,OAAQD,EAAME,KAAIj2H,MAC1B+1H,EAAQA,EAAMG,OASlBT,EAAAv1H,UAAA/D,IAAG,SAAC2M,EAAK0uB,OACDu+F,EAAK/1H,KAAQ41H,SAAS9sH,wBACXtG,IAAVuzH,EAAqB,IACxBA,IAAK/1H,KAAU81H,UAERC,IAAK/1H,KAAU61H,cACnBA,QAAO71H,KAA8B61H,QAAQK,WAC7CL,QAAQM,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAKn2H,KAAQ81H,aACdA,QAAQI,MAAQH,OAChBD,QAAUC,GAXNA,EAAMC,QAoBjBP,EAAAv1H,UAAAwL,OAAM,SAAC5C,OACCitH,EAAK/1H,KAAQ41H,SAAS9sH,wBACXtG,IAAVuzH,EAAqB,IACxBA,IAAK/1H,KAAU81H,cACZA,QAAgCC,EAAMI,WAClCL,UAAO91H,KACT81H,QAAQI,MAAQ,OAEdH,IAAK/1H,KAAU61H,cACnBA,QAAgCE,EAAMG,WAClCL,UAAO71H,KACT61H,QAAQM,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,mBAEhBN,SAAS9sH,UACd6sH,OACAI,EAAMC,QAMfP,EAAAv1H,UAAA+jC,SAAQ,uBACM0xF,QAMdF,EAAAv1H,UAAA6gB,QAAO,eAGDg1G,EAFEt6H,EAAI,IAAOoO,MAAK7J,KAAM21H,QACxBh6H,EAAI,MAEHo6H,EAAK/1H,KAAQ81H,QAASC,EAAOA,EAAQA,EAAMI,MAC9C16H,EAAKE,KAAOo6H,EAAME,YAEbx6H,GAMTg6H,EAAAv1H,UAAA6jB,UAAS,eAGHgyG,EAFE10G,EAAM,IAAOxX,MAAK7J,KAAM21H,QAC1Bh6H,EAAI,MAEHo6H,EAAK/1H,KAAQ81H,QAASC,EAAOA,EAAQA,EAAMI,MAC9C90G,EAAO1lB,KAAOo6H,EAAMC,cAEf30G,GAMTo0G,EAAAv1H,UAAAk1H,SAAQ,uBACMS,QAAQG,QAMtBP,EAAAv1H,UAAAk2H,YAAW,uBACGP,QAAQI,MAOtBR,EAAAv1H,UAAAo1H,aAAY,uBACEQ,QAAQG,MAMtBR,EAAAv1H,UAAAw+B,IAAG,eACKq3F,EAAK/1H,KAAQ61H,2BACPD,SAASG,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,WAEjBN,QAAgCE,EAAMG,WACjCL,UAAO71H,KACV81H,QAAU,aAEVH,OACAI,EAAMC,QAOfP,EAAAv1H,UAAAynB,QAAO,SAAC7e,EAAKH,QACNxM,IAAI2M,QACJ8sH,SAAS9sH,GAAKktH,OAASrtH,GAO9B8sH,EAAAv1H,UAAAqN,IAAG,SAACzE,EAAKH,cACEG,KAAG9I,KAAS41H,UAAW,QAC1BG,EAAK,CACTE,KAAMntH,EACNotH,MAAO,KACPC,MAAKn2H,KAAO81H,QACZE,OAAQrtH,QAEAmtH,aAGHA,QAAQI,MAAQH,EAHN/1H,KACV61H,QAAUE,OAIZD,QAAUC,OACVH,SAAS9sH,GAAOitH,SACdJ,QAQTF,EAAAv1H,UAAA2Y,QAAO,SAACrT,QACD4lH,cAAgB5lH,GAEzBiwH,EA/OA,aAiPeD,mLCtPC1jH,EAAemrC,EAAGztC,EAAGC,EAAG4mH,eAChB7zH,IAAlB6zH,GACFA,EAAc,GAAKp5E,EACnBo5E,EAAc,GAAK7mH,EACnB6mH,EAAc,GAAK5mH,EACZ4mH,IAECp5E,EAAGztC,EAAGC,YAUF68G,EAAUrvE,EAAGztC,EAAGC,UACvBwtC,EAAC,IAASztC,EAAC,IAASC,WAQbmJ,EAAO++E,UACd20B,EAAU30B,EAAU,GAAIA,EAAU,GAAIA,EAAU,aAQzC49B,EAAQzsH,UACfA,EAAIqI,MAAK,KAAM5Q,IAAI8Z,iBAOZi8G,EAAK3+B,UACXA,EAAU,IAAMA,EAAU,IAAMA,EAAU,YAQpC4+B,EAAiB5+B,EAAW79C,OACpCmD,EAAI06C,EAAU,GACdnoF,EAAImoF,EAAU,GACdloF,EAAIkoF,EAAU,MAEhB79C,EAASl6B,aAAeq9B,GAAKA,EAAInD,EAASj6B,aAAU,OAC/C,MAEHg4E,EAAY/9C,EAAS08E,iBAAiBv5E,UACvC46C,GAGIA,EAAUlmF,WAAWnC,EAAGC,0BAjEhCvG,EAAAF,OAAAzN,EAAA,kBAAA,IACauW,IAgBb5I,EAAAF,OAAAzN,EAAA,aAAA,IACa+wH,IAQbpjH,EAAAF,OAAAzN,EAAA,UAAA,IACaqd,IAQb1P,EAAAF,OAAAzN,EAAA,WAAA,IACag6H,IAObrsH,EAAAF,OAAAzN,EAAA,QAAA,IACa+6H,IAQbptH,EAAAF,OAAAzN,EAAA,oBAAA,IACag7H,2KCpEb,MAAAE,EAAAx7H,EAAA,woBAkCHy7H,EAAA,SAAAr3H,GAGK,SACHs3H,EAAYx5H,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBowG,OAAQ7sH,EAAQ6sH,OAChBrsH,WAAYR,EAAQQ,WACpB0hB,MAAOliB,EAAQkiB,MACfy6B,SAAU38C,EAAQ28C,SAClBioE,eAAgB5kH,EAAQ4kH,eACxBnkH,MAAOT,EAAQS,MACfqmH,WAAY9mH,EAAQ8mH,WACpBn7G,IAAK3L,EAAQ2L,IACbuoG,wBAAyBl0G,EAAQk0G,wBACjCyQ,WAAY3kH,EAAQ2kH,0BAOtBthH,EAAKo2H,yBACHp2H,EAAKmmH,kBAAoBgQ,EAAQz2H,UAAUymH,gBAM7CnmH,EAAK0lH,iBAAmB/oH,EAAQ+oH,iBAE5B/oH,EAAQwpH,kBACVnmH,EAAKmmH,gBAAkBxpH,EAAQwpH,iBAOjCnmH,EAAKolH,KAAO,KAERzoH,EAAQyoH,KACVplH,EAAKsmH,QAAQ3pH,EAAQyoH,MACZzoH,EAAQc,KACjBuC,EAAK8vG,OAAOnzG,EAAQc,KAOtBuC,EAAKq2H,iBAAgB,YArDH52H,EAAA02H,EAAAt3H,GA6DpBs3H,EAAAz2H,UAAA42H,oBAAmB,uBACL5Q,kBAQdyQ,EAAAz2H,UAAA62H,mBAAkB,kBACTr7H,OAAOs7H,eAAch3H,MAAO2mH,kBAAe3mH,KAAU2mH,gBAAe3mH,KAClE2mH,gBAAgB1lH,KAAIjB,MAAAA,KACpB2mH,iBAUXgQ,EAAAz2H,UAAA+2H,QAAO,uBACOrR,MAQd+Q,EAAAz2H,UAAAmjC,iBAAgB,SAAC9f,OAIXrhB,EAHEu3B,EAAoDlW,EAAM1kB,OAC1DuwG,EAAGt+F,EAAA/D,OAAU0sB,GACb6nF,EAAY7nF,EAAKnc,WAEnBgkG,GAAS19E,EAAArnC,QAAcqpB,cACpBixG,iBAAiBznB,IAAO,EAC7BltG,EAAIg1H,EAAA36H,QAAiB46H,eACZ/nB,KAAGpvG,KAAS62H,+BACTA,iBAAiBznB,GAC7BltG,EACEo/G,GAAS19E,EAAArnC,QAAc8nB,MAAK6yG,EAAA36H,QACV66H,cACd9V,GAAS19E,EAAArnC,QAAcsnC,OAAMqzF,EAAA36H,QACf86H,iBACd70H,GAEIA,MAARN,GAAiBlC,KACdyC,cAAa,IAAAmqH,EAAA0K,gBAAqBp1H,EAAMu3B,KASjDk9F,EAAAz2H,UAAAq3H,oBAAmB,SAACrR,QACbwE,UAAUjyG,aACVytG,iBAAmBA,OACnB1oG,WASPm5G,EAAAz2H,UAAA6mH,mBAAkB,SAACJ,EAAiB79G,QAC7B69G,gBAAkBA,OAClB+D,UAAU2K,0BACD,IAAHvsH,EAAmB9I,KACvBymH,OAAO39G,QAEP0U,WASTm5G,EAAAz2H,UAAAowG,OAAM,SAACryG,OACC2nH,EAAIC,EAAAC,UAAa7nH,QAClB2nH,KAAOA,OACPkB,QAAQlB,IAQf+Q,EAAAz2H,UAAA4mH,QAAO,SAAClB,QACDA,KAAOA,MACN98G,EAAM88G,EAAKp1G,KAAI,WACZomH,yBAAwB52H,KAC1B+mH,mBAAkBlB,EAAA2R,oBAAqB5R,EAAI5lH,KAAO85C,UAAWhxC,QAE7D29G,OAAO39G,IAUhB6tH,EAAAz2H,UAAAymH,gBAAe,SAAChvB,EAAW1jE,EAAYt2B,KAUvCg5H,EAAAz2H,UAAAglH,QAAO,SAACjoE,EAAGztC,EAAGC,OACNm0G,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,QAC5Bi7G,UAAUiB,YAAY/H,IAAY5jH,KACpC0qH,UAAUvuH,IAAIynH,IAGzB+S,EA7LA,sBA+LeD,sUCtNbS,cAAa,gBAQbE,YAAW,cAOXD,cAAa,8NC1BZ,MAAA72G,EAAAtlB,EAAA,yuBAuCHw8H,EAAA,SAAAp4H,GAGK,SACHq4H,EAAYv6H,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtB8zG,wBAAyBl0G,EAAQk0G,wBACjC1zG,WAAYR,EAAQQ,WACpB0hB,MAAOliB,EAAQkiB,MACfzhB,MAAOT,EAAQS,cAOjB4C,EAAKm3H,aAA6Bn1H,IAAnBrF,EAAQ6sH,QAAuB7sH,EAAQ6sH,OAMtDxpH,EAAKo3H,qBACwBp1H,IAA3BrF,EAAQ4kH,eAA+B5kH,EAAQ4kH,eAAiB,EAMlEvhH,EAAKs5C,cAAgCt3C,IAArBrF,EAAQ28C,SAAyB38C,EAAQ28C,SAAW,SAG9DA,EAAW38C,EAAQ28C,gBACrBA,GAAQld,EAAAwsB,OACHtP,EAAS41E,YAAY51E,EAASl6B,cAHzB,CAAI,IAAK,MAUvBpf,EAAKkqH,UAAS,IAAAS,EAAA5uH,QAAiBY,EAAQyc,WAAa,GAMpDpZ,EAAKq3H,QAAO,CAAI,EAAG,GAMnBr3H,EAAKy1H,KAAO94H,EAAQ2L,KAAG,GAMvBtI,EAAKirH,YAAW,CAAIxH,WAAY9mH,EAAQ8mH,YASxCzjH,EAAKshH,WAAa3kH,EAAQ2kH,WAAa3kH,EAAQ2kH,WAAa,WArEvC7hH,EAAAy3H,EAAAr4H,GA2EvBq4H,EAAAx3H,UAAA6H,eAAc,uBACA2iH,UAAU3iH,kBAOxB2vH,EAAAx3H,UAAA4kH,YAAW,SAACnnH,EAAYs/B,OAChBytF,EAAS1qH,KAAQ4qH,0BAA0BjtH,GAC7C+sH,GACFA,EAAU5F,YAAY7nF,IAa1By6F,EAAAx3H,UAAA43F,kBAAiB,SAACn6F,EAAYs/C,EAAG46C,EAAWpzF,OACpCimH,EAAS1qH,KAAQ4qH,0BAA0BjtH,OAC5C+sH,EAAS,OACL,UAILjxF,EAAMmqF,EAAckU,EADpBrV,GAAU,EAELjzG,EAAIqoF,EAAUzjF,KAAM5E,GAAKqoF,EAAUvjF,OAAQ9E,EAAC,IAAA,IAC1CC,EAAIooF,EAAUxjF,KAAM5E,GAAKooF,EAAUtjF,OAAQ9E,EAClDm0G,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,GAC/BqoH,GAAS,EACLpN,EAAUiB,YAAY/H,KAIxBkU,GAHAr+F,EAAqDixF,EAAUvuH,IAC7DynH,IAEYtmG,aAAQsmB,EAAArnC,QAAiBsnC,UAErCi0F,GAA4B,IAAnBrzH,EAASg1B,IAGjBq+F,IACHrV,GAAU,UAITA,GAOTiV,EAAAx3H,UAAAwjH,uBAAsB,SAAC/lH,UACd,GAQT+5H,EAAAx3H,UAAA0Y,OAAM,uBACQq9G,MAQdyB,EAAAx3H,UAAAumH,OAAM,SAAC39G,QACImtH,OAASntH,SACXmtH,KAAOntH,OACP0U,YAQTk6G,EAAAx3H,UAAA6iH,UAAS,SAACplH,eACIg6H,SAMdD,EAAAx3H,UAAAmsC,eAAc,uBACAyN,SAASzN,kBAYvBqrF,EAAAx3H,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,wBAS7B+5H,EAAAx3H,UAAA63H,YAAW,uBACGj+E,UAOd49E,EAAAx3H,UAAA2hH,yBAAwB,SAAClkH,eACbm8C,cAGIA,SAHImxE,EAAAC,iBACgBvtH,IAWpC+5H,EAAAx3H,UAAA0qH,0BAAyB,SAACjtH,qCAENg7B,gBAAiBh7B,GACjC,SAEU+sH,WAUdgN,EAAAx3H,UAAA8hH,kBAAiB,SAAC/tF,eACJ2jG,iBASdF,EAAAx3H,UAAAgjH,iBAAgB,SAACjmE,EAAGhpB,EAAYt2B,OACxBm8C,EAAQ95C,KAAQ6hH,yBAAyBlkH,GACzCokH,EAAc/hH,KAAQgiH,kBAAkB/tF,GACxC+jG,EAAQp7F,EAAAwsB,OAAUtP,EAAS41E,YAAYzyE,GAACj9C,KAAQ63H,gBAChC,GAAlB9V,EACKiW,UAEUA,EAAUjW,EAAc/hH,KAAO63H,UAapDH,EAAAx3H,UAAAqrH,+BAA8B,SAAC5zB,EAAWrgD,OAClC35C,OACe6E,IAAnB80C,EAA+BA,EAAct3C,KAAQ24B,gBACjDmhB,EAAQ95C,KAAQ6hH,yBAAyBlkH,eACtCyJ,YAAczJ,EAAW2zC,aAChCqmD,EAASszB,EAAArtH,MAASk8C,EAAU69C,EAAWh6F,uBAEjBg6F,EAAW79C,GAAY69C,EAAY,MAO7D+/B,EAAAx3H,UAAAuY,MAAK,gBACEiyG,UAAUjyG,SAGjBi/G,EAAAx3H,UAAAgwG,QAAO,gBACAz3F,QACLpZ,EAAAa,UAAMgwG,QAAOnwG,KAAAC,OAQf03H,EAAAx3H,UAAAilH,gBAAe,SAACH,EAAWrnH,OACnB+sH,EAAS1qH,KAAQ4qH,0BAA0BjtH,GAC7CqnH,EAAY0F,EAAUU,gBACxBV,EAAUU,cAAgBpG,IAY9B0S,EAAAx3H,UAAAglH,QAAO,SAACjoE,EAAGztC,EAAGC,EAAG9R,KACnB+5H,EA5SA,YAmTAO,EAAA,SAAA54H,GAIK,SACH64H,EAAYh2H,EAAMu3B,OAAlBj5B,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKi5B,KAAOA,WAbqBx5B,EAAAi4H,EAAA74H,GAerC64H,EAfA,sBAiBeT,0ZCxVZvuH,EAAAF,OAAAzN,EAAA,oBAAA,IACa2vH,IAcbhiH,EAAAF,OAAAzN,EAAA,SAAA,IACaqC,IAwBbsL,EAAAF,OAAAzN,EAAA,mBAAA,IACa48H,IA8BbjvH,EAAAF,OAAAzN,EAAA,aAAA,IACa68H,IAgEblvH,EAAAF,OAAAzN,EAAA,uBAAA,IACa88H,IAebnvH,EAAAF,OAAAzN,EAAA,wBAAA,IACa+8H,IA5Kb,IAAAvkH,EAAA9Y,EAAA,uOAoBaiwH,EAAiBvtH,OAC3Bm8C,EAAWn8C,EAAWi8C,4BACrBE,IACHA,EAAWu+E,EAAoB16H,GAC/BA,EAAWk8C,mBAAmBC,IAEzBA,WASOl8C,EAAMk8C,EAAU69C,EAAWh6F,OACnCs/C,EAAI06C,EAAU,GACd34F,EAAS86C,EAASmrE,mBAAmBttB,GACrCnxF,EAAmB8xH,EAAqB36H,2BACtB6I,EAAkBxH,UAQjC24F,MAPDjxF,EAAUC,EAAAC,SAAYJ,GACtB6hB,EAAazY,KAAK0X,MACrB9gB,EAAiB,GAAKxH,EAAO,IAAM0H,UAEtC1H,EAAO,IAAM0H,EAAa2hB,EACnByxB,EAASypE,yBAAyBvkH,EAAQi+C,YAerCk7E,EAAgBnkH,EAAQukH,EAAaC,EAAcC,OAC3D9iH,OAAwBnT,IAAfi2H,EAA2BA,EAAU7iH,EAAArZ,QAAUwZ,SAExD0xB,EAAcixF,EAAsB1kH,EAAQukH,EAAaC,yBAG7DxkH,OAAQA,EACRo8E,OAAMzpF,EAAAoM,UAAYiB,EAAQ2B,GAC1B8xB,YAAaA,EACbuwF,SAAUQ,aAsBEJ,EAAU5gG,OAClBmhG,EAAanhG,GAAW,GAExBxjB,EAAS2kH,EAAW3kH,QAAMilB,EAAA98B,IAAA,aAA+BsK,YAEzDmyH,EAAW,CACf5kH,OAAQA,EACRmK,QAASw6G,EAAWx6G,QACpB65G,SAAUW,EAAWX,SACrBvwF,YAAaixF,EACX1kH,EACA2kH,EAAWv6G,QACXu6G,EAAWX,SACXW,EAAWz6G,qCAGK06G,GAYnB,SACMF,EACP1kH,EACAukH,EACAC,EACAK,WAEMz6G,OAA0B5b,IAAhB+1H,EAA4BA,EAAWrmF,EAAAyB,iBAEjDryC,EAAMqF,EAAAuM,UAAac,GACnBrV,EAAKgI,EAAAC,SAAYoN,GAEjBgkH,EAAQp7F,EAAAwsB,YACK5mD,IAAjBg2H,EAA6BA,EAAYtmF,EAAAC,mBAErCj0B,EACJ26G,EAAoB,EAChBA,EACAjpH,KAAK4F,IAAI7W,EAAQq5H,EAAS,GAAI12H,EAAS02H,EAAS,IAEhDp8H,EAASwiB,EAAU,EACnBqpB,EAAW,IAAO59B,MAAMjO,GACrBqhD,EAAI,EAAGA,EAAIrhD,IAAUqhD,EAC5BxV,EAAYwV,GAAK/+B,EAAgBtO,KAAKuX,IAAI,EAAG81B,UAExCxV,WAYO4wF,EACd16H,EACA46H,EACAC,EACAC,UAGON,EADQG,EAAqB36H,GACL46H,EAAaC,EAAcC,YAS5CH,EAAqB36H,OAE/BqW,GADJrW,EAAUs7B,EAAA98B,IAAiBwB,IACH8I,gBACnBuN,EAAM,KACH8kH,EACH,IAAG7/F,EAAA6Y,gBAAAC,EAAAx1C,QAAyBy1C,SAAYr0C,EAAWs0C,mBACtDj+B,EAAMrN,EAAAmL,gBAAmBgnH,GAAOA,EAAMA,EAAMA,UAEvC9kH,+VCpLN,IAAA+kH,EAAA99H,EAAA,mLAgBG+9H,EAAY,CAAI,EAAG,EAAG,GAuC5BC,EAAA,WAGK,SACHC,EAAY/7H,OAwBNoqC,KApBDvnC,KACEme,aAA8B3b,IAApBrF,EAAQghB,QAAwBhhB,EAAQghB,QAAU,EAK9Dne,KACEwnC,aAAerqC,EAAQsqC,qCAGnBD,cAAY,SACPrkC,EAAGC,UACJA,EAAID,KAEb,GAEF,KAKGhG,EAAQg8H,QAAO,IAAA,IACTx9H,EAAI,EAAG6H,EAAExD,KAAQwnC,aAAa5rC,OAAS,EAAGD,EAAI6H,IAAM7H,KACtD4rC,WAGMC,aAAa7rC,GAACqE,KAASwnC,aAAa7rC,EAAI,KAAO4rC,EAAU,CAChEA,OAAa/kC,cAHf+kC,EAAUvnC,KAAQwnC,aAAa7rC,GAACqE,KAASwnC,aAAa7rC,EAAI,GAa7DqE,KACEsnC,YAAcC,EAKhBvnC,KACEoe,QAAOpe,KAAQwnC,aAAa5rC,OAAS,EAKvCoE,KACEk+E,aAA6B17E,IAAnBrF,EAAQizF,OAAuBjzF,EAAQizF,OAAS,KAK5DpwF,KACEo5H,SAAW,UACQ52H,IAApBrF,EAAQg8H,eACLC,SAAWj8H,EAAQg8H,sBACZC,SAASx9H,QAAMoE,KAASwnC,aAAa5rC,OAAQ,SAGrDoY,EAAS7W,EAAQ6W,YAERxR,IAAXwR,GAAoBhU,KAAUk+E,SAAOl+E,KAAUo5H,WAAQp5H,KACpDk+E,QAAOv3E,EAAA4M,WAAcS,mBAInBkqE,SAAOl+E,KAASo5H,UAAQp5H,KAAWk+E,UAAOl+E,KAAUo5H,SAC3D,IAMCp5H,KACEq5H,WAAa,UACQ72H,IAAtBrF,EAAQm8H,iBACLD,WAAal8H,EAAQm8H,wBACdD,WAAWz9H,QAAMoE,KAASwnC,aAAa5rC,OAAQ,KAM1DoE,KACEu5H,eACkB/2H,IAArBrF,EAAQ66H,SACJ76H,EAAQ66H,SAAQh4H,KACVq5H,WAEN,KAFgBnnF,EAAAC,iCAIbonF,WAASv5H,KAASq5H,YAAUr5H,KAC3Bu5H,YAASv5H,KAAUq5H,WAC3B,IAMCr5H,KACE84C,aAAqBt2C,IAAXwR,EAAuBA,EAAS,KAK5ChU,KACEw5H,gBAAkB,KAKpBx5H,KACEy5H,SAAQ,CAAI,EAAG,GAKjBz5H,KACE05H,WAAU,CAAI,EAAG,EAAG,EAAG,QAENl3H,IAAlBrF,EAAQw8H,MAAmB35H,KACxBw5H,gBAAkBr8H,EAAQw8H,MAAMp5H,KAAG,SAAWiF,EAAMy3C,OACjD46C,EAAS,IAAAupB,EAAA7kH,QACbqT,KAAK2F,IAAI,EAAG/P,EAAK,IACjBoK,KAAK4F,IAAIhQ,EAAK,GAAK,GAAG,GACtBoK,KAAK2F,IAAI,EAAG/P,EAAK,IACjBoK,KAAK4F,IAAIhQ,EAAK,GAAK,GAAG,OAEpBwO,EAAM,KACF4lH,EAAmB55H,KAAQ4xG,0BAA0B59F,EAAQipC,GACnE46C,EAAUzjF,KAAOxE,KAAK4F,IAAIokH,EAAoBxlH,KAAMyjF,EAAUzjF,MAC9DyjF,EAAUvjF,KAAO1E,KAAK2F,IAAIqkH,EAAoBtlH,KAAMujF,EAAUvjF,MAC9DujF,EAAUxjF,KAAOzE,KAAK4F,IAAIokH,EAAoBvlH,KAAMwjF,EAAUxjF,MAC9DwjF,EAAUtjF,KAAO3E,KAAK2F,IAAIqkH,EAAoBrlH,KAAMsjF,EAAUtjF,aAEzDsjF,UAEA7jF,GAAMhU,KACV65H,qBAAqB7lH,UAY9BklH,EAAAh5H,UAAA45H,iBAAgB,SAAC9lH,EAAQ9U,EAAMuF,WACvBozF,EAAS73F,KAAQ4xG,0BAA0B59F,EAAQ9U,GAChDvD,EAAIk8F,EAAUzjF,KAAM5Q,EAAKq0F,EAAUvjF,KAAM3Y,GAAK6H,IAAM7H,EAAC,IAAA,IACnDqL,EAAI6wF,EAAUxjF,KAAMi2B,EAAKutD,EAAUtjF,KAAMvN,GAAKsjC,IAAMtjC,EAC3DvC,EAAQ,CAAEvF,EAAMvD,EAAGqL,KAYzBkyH,EAAAh5H,UAAAwiH,gCAA+B,SAC7B/qB,EACAlzF,EACAs1H,EACA9lH,OAEI4jF,EAAWroF,EAAGC,EACduqH,EAAkB,KAClB/8E,EAAI06C,EAAU,GAAK,MACE,SAAhBrwD,aACP93B,EAAImoF,EAAU,GACdloF,EAAIkoF,EAAU,IAEdqiC,EAAeh6H,KAAQ6xG,mBAAmBla,EAAW1jF,GAEhDgpC,GAACj9C,KAASme,SAAO,IACG,SAAhBmpB,aACP93B,EAAII,KAAKqI,MAAMzI,EAAI,GACnBC,EAAIG,KAAKqI,MAAMxI,EAAI,GACnBooF,EAASkhC,EAAAjnH,eAA2BtC,EAAGA,EAAGC,EAAGA,EAAGsqH,IAEhDliC,EAAS73F,KAAQ4xG,0BACfooB,EACA/8E,EACA88E,GAGAt1H,EAASw4C,EAAG46C,GAAS,OAChB,IAEP56C,SAEG,GAQTi8E,EAAAh5H,UAAAuG,UAAS,uBACKqyC,SAQdogF,EAAAh5H,UAAA2f,WAAU,uBACIzB,SAQd86G,EAAAh5H,UAAA0f,WAAU,uBACIzB,SASd+6G,EAAAh5H,UAAAk/E,UAAS,SAACniC,eACCihC,QAAOl+E,KACFk+E,aAEAk7C,SAASn8E,IAUzBi8E,EAAAh5H,UAAAsoC,cAAa,SAACyU,eACAzV,aAAayV,IAQ3Bi8E,EAAAh5H,UAAAmsC,eAAc,uBACA7E,cASd0xF,EAAAh5H,UAAAsiH,2BAA0B,SAAC7qB,EAAWoiC,EAAe9lH,MAC/C0jF,EAAU,GAAC33F,KAASoe,QAAO,IACJ,SAAhBkpB,YAAiB,KAClBlzB,EAAsB,EAAfujF,EAAU,GACjBtjF,EAAsB,EAAfsjF,EAAU,2BAErBvjF,EACAA,EAAO,EACPC,EACAA,EAAO,EACP0lH,OAGEC,EAAeh6H,KAAQ6xG,mBAC3Bla,EACA1jF,GAAUjU,KAAS05H,wBAET9nB,0BACVooB,EACAriC,EAAU,GAAK,EACfoiC,UAGG,MASTb,EAAAh5H,UAAA+5H,6BAA4B,SAACtiC,EAAW16C,EAAG88E,MACrC98E,EAACj9C,KAAQoe,SAAW6+B,EAACj9C,KAAQme,QAAO,OAC/B,SAGH+7G,EAAaviC,EAAU,GACvBwiC,EAAaxiC,EAAU,GACvByiC,EAAaziC,EAAU,MAEzB16C,IAAMi9E,EAAU,OAAAnB,EAAAjnH,eAEhBqoH,EACAC,EACAD,EACAC,EACAL,WAIKzyF,YAAW,KACZ47B,EAAStzD,KAAKuX,IAAGnnB,KAAMsnC,YAAa2V,EAAIi9E,GACxC9lH,EAAOxE,KAAKqI,MAAMkiH,EAAaj3D,GAC/B7uD,EAAOzE,KAAKqI,MAAMmiH,EAAal3D,MACjCjmB,EAAIi9E,EAAU,OAAAnB,EAAAjnH,eACesC,EAAMA,EAAMC,EAAMA,EAAM0lH,OAGnDzlH,EAAO1E,KAAKqI,MAAMirD,GAAUi3D,EAAa,IAAM,EAC/C5lH,EAAO3E,KAAKqI,MAAMirD,GAAUk3D,EAAa,IAAM,0BACtBhmH,EAAME,EAAMD,EAAME,EAAMwlH,OAGnDC,EAAeh6H,KAAQ6xG,mBAAmBla,EAAS33F,KAAO05H,wBACpD9nB,0BAA0BooB,EAAiB/8E,EAAG88E,IAU5Db,EAAAh5H,UAAAm6H,mBAAkB,SAACp9E,EAAG46C,EAAW5jF,OACzBm8E,EAAMpwF,KAAQo/E,UAAUniC,GACxBx3C,EAAUzF,KAAQwoC,cAAcyU,GAChC+6E,EAAQp7F,EAAAwsB,OAAAppD,KAAe0vH,YAAYzyE,GAACj9C,KAAQy5H,UAC5CrlH,EAAOg8E,EAAO,GAAKyH,EAAUzjF,KAAO4jH,EAAS,GAAKvyH,EAClD6O,EAAO87E,EAAO,IAAMyH,EAAUvjF,KAAO,GAAK0jH,EAAS,GAAKvyH,EACxD4O,EAAO+7E,EAAO,GAAKyH,EAAUxjF,KAAO2jH,EAAS,GAAKvyH,EAClD8O,EAAO67E,EAAO,IAAMyH,EAAUtjF,KAAO,GAAKyjH,EAAS,GAAKvyH,0BACxC2O,EAAMC,EAAMC,EAAMC,EAAMN,IAUhDilH,EAAAh5H,UAAA0xG,0BAAyB,SAAC59F,EAAQipC,EAAG88E,OAC7BpiC,EAAYqhC,OACbsB,uBAAuBtmH,EAAO,GAAIA,EAAO,GAAIipC,GAAG,EAAO06C,OACtDvjF,EAAOujF,EAAU,GACjBtjF,EAAOsjF,EAAU,eAClB2iC,uBAAuBtmH,EAAO,GAAIA,EAAO,GAAIipC,GAAG,EAAM06C,oBAEzDvjF,EACAujF,EAAU,GACVtjF,EACAsjF,EAAU,GACVoiC,IAQJb,EAAAh5H,UAAA+kH,mBAAkB,SAACttB,OACXvH,EAAMpwF,KAAQo/E,UAAUuY,EAAU,IAClClyF,EAAUzF,KAAQwoC,cAAcmvD,EAAU,IAC1CqgC,EAAQp7F,EAAAwsB,OAAAppD,KAAe0vH,YAAY/3B,EAAU,IAAC33F,KAASy5H,iBAE3DrpC,EAAO,IAAMuH,EAAU,GAAK,IAAOqgC,EAAS,GAAKvyH,EACjD2qF,EAAO,IAAMuH,EAAU,GAAK,IAAOqgC,EAAS,GAAKvyH,IAYrDyzH,EAAAh5H,UAAA2xG,mBAAkB,SAACla,EAAW1jF,OACtBm8E,EAAMpwF,KAAQo/E,UAAUuY,EAAU,IAClClyF,EAAUzF,KAAQwoC,cAAcmvD,EAAU,IAC1CqgC,EAAQp7F,EAAAwsB,OAAAppD,KAAe0vH,YAAY/3B,EAAU,IAAC33F,KAASy5H,UACvDrlH,EAAOg8E,EAAO,GAAKuH,EAAU,GAAKqgC,EAAS,GAAKvyH,EAChD4O,EAAO+7E,EAAO,IAAMuH,EAAU,GAAK,GAAKqgC,EAAS,GAAKvyH,EACtD6O,EAAOF,EAAO4jH,EAAS,GAAKvyH,EAC5B8O,EAAOF,EAAO2jH,EAAS,GAAKvyH,0BACZ2O,EAAMC,EAAMC,EAAMC,EAAMN,IAchDilH,EAAAh5H,UAAAq6H,kCAAiC,SAAC30H,EAAYH,EAAY4wH,eAC5CmE,gCACV50H,EAAW,GACXA,EAAW,GACXH,GACA,EACA4wH,IAiBJ6C,EAAAh5H,UAAAs6H,gCAA+B,SAC7BhrH,EACAC,EACAhK,EACAg1H,EACApE,OAEMp5E,EAACj9C,KAAQ2xG,kBAAkBlsG,GAC3BiI,EAAQjI,EAAUzF,KAAQwoC,cAAcyU,GACxCmzC,EAAMpwF,KAAQo/E,UAAUniC,GACxB+6E,EAAQp7F,EAAAwsB,OAAAppD,KAAe0vH,YAAYzyE,GAACj9C,KAAQy5H,UAE5CiB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAchrH,KAAKqI,OAAOzI,EAAI4gF,EAAO,IAAM3qF,EAAai1H,GACxDG,EAAcjrH,KAAKqI,OAAOm4E,EAAO,GAAK3gF,GAAKhK,EAAak1H,GAC1DR,EAAczsH,EAAQktH,EAAe5C,EAAS,GAC9CoC,EAAc1sH,EAAQmtH,EAAe7C,EAAS,UAE9CyC,GACFN,EAAavqH,KAAK0X,KAAK6yG,GAAc,EACrCC,EAAaxqH,KAAK0X,KAAK8yG,GAAc,IAErCD,EAAavqH,KAAKqI,MAAMkiH,GACxBC,EAAaxqH,KAAKqI,MAAMmiH,qBAGKn9E,EAAGk9E,EAAYC,EAAY/D,IAkB5D6C,EAAAh5H,UAAAo6H,uBAAsB,SAAC9qH,EAAGC,EAAGwtC,EAAGw9E,EAA2BpE,OACnDjmC,EAAMpwF,KAAQo/E,UAAUniC,GACxBx3C,EAAUzF,KAAQwoC,cAAcyU,GAChC+6E,EAAQp7F,EAAAwsB,OAAAppD,KAAe0vH,YAAYzyE,GAACj9C,KAAQy5H,UAE5CiB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAchrH,KAAKqI,OAAOzI,EAAI4gF,EAAO,IAAM3qF,EAAai1H,GACxDG,EAAcjrH,KAAKqI,OAAOm4E,EAAO,GAAK3gF,GAAKhK,EAAak1H,GAC1DR,EAAaS,EAAc5C,EAAS,GACpCoC,EAAaS,EAAc7C,EAAS,UAEpCyC,GACFN,EAAavqH,KAAK0X,KAAK6yG,GAAc,EACrCC,EAAaxqH,KAAK0X,KAAK8yG,GAAc,IAErCD,EAAavqH,KAAKqI,MAAMkiH,GACxBC,EAAaxqH,KAAKqI,MAAMmiH,qBAGKn9E,EAAGk9E,EAAYC,EAAY/D,IAW5D6C,EAAAh5H,UAAAqjH,yBAAwB,SAAC39G,EAAYq3C,EAAGo5E,eAC1BiE,uBACV10H,EAAW,GACXA,EAAW,GACXq3C,GACA,EACAo5E,IAQJ6C,EAAAh5H,UAAA46H,uBAAsB,SAACnjC,eACTnwD,aAAamwD,EAAU,KAWrCuhC,EAAAh5H,UAAAwvH,YAAW,SAACzyE,eACDs8E,UAASv5H,KACJu5H,eAEAF,WAAWp8E,IAQ3Bi8E,EAAAh5H,UAAAs2H,iBAAgB,SAACv5E,eACLu8E,qBAKIA,gBAAgBv8E,GALLj9C,KACX84C,QAAO94C,KACV4xG,0BAAyB5xG,KAAM84C,QAASmE,GAC7C,MAcRi8E,EAAAh5H,UAAAyxG,kBAAiB,SAAClsG,EAAYsrC,OACtBkM,EAAC3zC,EAAA0B,kBAAAhL,KACAwnC,aACL/hC,EACAsrC,GAAiB,kBAENkM,EAACj9C,KAAOme,QAAOne,KAAOoe,UAOrC86G,EAAAh5H,UAAA25H,qBAAoB,SAAC7lH,WACbpY,EAAMoE,KAAQwnC,aAAa5rC,OAC3Bm/H,EAAc,IAAOlxH,MAAMjO,GACxBqhD,EAACj9C,KAAQme,QAAS8+B,EAAIrhD,IAAUqhD,EACvC89E,EAAe99E,GAACj9C,KAAS4xG,0BAA0B59F,EAAQipC,QAExDu8E,gBAAkBuB,GAE3B7B,EA9lBA,aAgmBeD,kWC9oBZ/vH,EAAAF,OAAAzN,EAAA,sBAAA,IACay/H,IAoCb9xH,EAAAF,OAAAzN,EAAA,uBAAA,IACai8H,IAYbtuH,EAAAF,OAAAzN,EAAA,8BAAA,IACaqrH,IA4Bb19G,EAAAF,OAAAzN,EAAA,uBAAA,IACa0/H,IAOb/xH,EAAAF,OAAAzN,EAAA,aAAA,IACauqH,IAjGb,IAAA33G,EAAAlT,EAAA,gEAUa+/H,EAAmBtzG,EAAUoyB,OACrCohF,EAAM,SACNC,EAAM,SACNC,EAAM,SACNC,EAAU,0BAQJ1jC,EAAW1jE,EAAYt2B,UAC1Bg6F,EAGIjwE,EACJC,QAAQuzG,EAAQvjC,EAAU,GAAGzpF,YAC7ByZ,QAAQwzG,EAAQxjC,EAAU,GAAGzpF,YAC7ByZ,QAAQyzG,EAAQzjC,EAAU,GAAGzpF,YAC7ByZ,QAAQ0zG,GAAU,eACXp+E,EAAI06C,EAAU,GACdrE,EAAQx5C,EAAS08E,iBAAiBv5E,mBACjCq2C,EAAO,KACJA,EAAMpgF,YAAcykF,EAAU,GAAK,GACpCzpF,mBAZD,YAwBJspH,EAAoB8D,EAAWxhF,WACvCv3B,EAAM+4G,EAAU1/H,OAChB2/H,EAAgB,IAAO1xH,MAAM0Y,GAC1B5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EACzB4/H,EAAiB5/H,GAAKq/H,EAAmBM,EAAU3/H,GAAIm+C,UAElD8sE,EAA2B2U,YAOpB3U,EAA2B2U,UACT,IAA5BA,EAAiB3/H,OACZ2/H,EAAiB,YASd5jC,EAAW1jE,EAAYt2B,MAC1Bg6F,OAGG7oE,EAAC48F,EAAA4K,KAAiB3+B,GAClBxrF,EAAKoO,EAAAU,OAAU6T,EAAGysG,EAAiB3/H,eAClC2/H,EAAiBpvH,GAAOwrF,EAAW1jE,EAAYt2B,cAY9Cs9H,EAAoBtjC,EAAW1jE,EAAYt2B,aAQ3CmoH,EAAU7nH,OAClB2nH,EAAI,GACNx7F,EAAK,sBAAyBnQ,KAAKhc,MACnCmsB,EAAK,KAEDoxG,EAAgBpxG,EAAM,GAAGq7C,WAAW,GACpCg2D,EAAerxG,EAAM,GAAGq7C,WAAW,GACrCD,OAAQ,MACPA,EAAWg2D,EAAeh2D,GAAYi2D,IAAgBj2D,EACzDogD,EAAK3hH,KAAKhG,EAAI0pB,QAAQyC,EAAM,GAAIjd,OAAO8tF,aAAaz1B,YAE/CogD,KAETx7F,EAAK,kBAAqBnQ,KAAKhc,GACtB,SAEDy9H,EAAOvhH,SAASiQ,EAAM,GAAI,IACvBzuB,EAAIwe,SAASiQ,EAAM,GAAI,IAAKzuB,GAAK+/H,EAAM//H,IAC9CiqH,EAAK3hH,KAAKhG,EAAI0pB,QAAQyC,EAAM,GAAIzuB,EAAEuS,oBAE7B03G,SAETA,EAAK3hH,KAAKhG,GACH2nH,iPCjHPD,IAAG,MACHkE,KAAI,iKCEUvC,EAAaqU,EAAKC,OAC1BC,EAAS,GAEfngI,OAAOD,KAAKmgI,GAAQr0H,SAAO,SAAWoU,GAClB,OAAdigH,EAAOjgH,SAA6BnZ,IAAdo5H,EAAOjgH,IAC/BkgH,EAAU53H,KAAK0X,EAAC,IAASmgH,mBAAmBF,EAAOjgH,YAGjDogH,EAAKF,EAAUrrH,KAAI,YAIzBmrH,GAA2B,KAF3BA,EAAMA,EAAIh0G,QAAO,QAAA,KAEP5c,QAAO,KAAe4wH,EAAG,IAASA,EAAG,KAClCI,yBAdZ7yH,EAAAF,OAAAzN,EAAA,gBAAA,IACa+rH,2KCsFbp+G,EAAAF,OAAAzN,EAAA,mCAAA,IACamuH,4hBAtDhBsS,EAAA,SAAA38H,GAGK,SACH48H,EAAY9+H,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEgU,OAAQ7W,EAAQ6W,OAChBo8E,OAAQjzF,EAAQizF,OAChB+oC,QAASh8H,EAAQg8H,QACjB1xF,YAAatqC,EAAQsqC,YACrBuwF,SAAU76H,EAAQ66H,SAClBsB,UAAWn8H,EAAQm8H,UACnBK,MAAOx8H,EAAQw8H,qBAOjBn5H,EAAK07H,WAAa/+H,EAAQg/H,mBAnBHl8H,EAAAg8H,EAAA58H,GA0BzB48H,EAAA/7H,UAAAsnH,YAAW,SAACvqE,eACEi/E,WAAWj/E,IAQzBg/E,EAAA/7H,UAAAk8H,aAAY,uBACEF,YAEhBD,EAtCA,qBAsDgBvS,EACdnD,EACAtyG,EACAooH,GAE6B,IACvB50F,EAAW,GAEX00F,EAAS,GAEThD,EAAO,GAEPG,EAAS,GAETK,EAAK,GAEL3R,OAAoCxlH,IAArB65H,EAAiCA,EAAgB,GAUhEprH,EAAOs1G,EAA8B,aACrC5oH,EAAUs7B,EAAA98B,IAAiB8U,GAC3BglC,EAAgBt4C,EAAWs0C,mBAE3Bm2E,EAA4D,MAA3CzqH,EAAW+7C,qBAAqBt/B,OAAO,EAAG,UAEjEmsG,EAA2B,WAAErjH,MAAI,SAAWC,EAAGC,UACtCA,EAA0B,iBAAID,EAA0B,oBAGjEojH,EAA2B,WAAEh/G,SAAO,SAAWogH,QAIzCK,EAAapsH,OAAS,IACT0N,EAAAsC,KAAQo8G,GAAY,SAAYsU,UACzC3U,EAAsB,YAAK2U,EAAwB,aAKV,IAAzC3U,EAAsB,WAAE58G,QAAO,MAE/Bw7G,EAA4B,WAAA,IAAUoB,EAAsB,aAC5D2U,EAAwB,cASb,CACjBH,EAAUl4H,KAAK0jH,EAAsB,gBAC/BliH,EAC6B,MAAhCkiH,EAA4B,iBAAe1xE,EACxCsmF,EAAY5U,EAAqB,UACjC6U,EAAa7U,EAAsB,WACrCS,EACF+Q,EAAQl1H,KAAI,CACV0jH,EAAyB,cAAE,GAC3BA,EAAyB,cAAE,KAG7BwR,EAAQl1H,KAAK0jH,EAAyB,eAExClgF,EAAYxjC,KAAKwB,GACjB6zH,EAAUr1H,KACRs4H,GAAaC,EAAaD,EAAS,CAAIA,EAAWC,IAEpD7C,EAAM11H,KAAI,CAAE0jH,EAAiB,YAAGA,EAAkB,uBAI3CqU,EAAY,CACrBhoH,OAAQC,EACRklH,QAASA,EACT1xF,YAAaA,EACb00F,UAAWA,EACX7C,UAAWA,EACXK,MAAOA,cArGIqC,4OCnFZ,MAAAS,EAAAxhI,EAAA,ilBAkBGyhI,EAAc,CAAI,wCAMlBC,EAAkB,CAAI,uCAOtBC,EAAOC,EAAAC,gBAAmBJ,EAAc,UAClCG,EAAAE,0BAgMT,SACmB3qG,EAAM4qG,+BACCC,EAAkB7qG,EAAM4qG,QAzLrDE,EAAA,SAAA79H,YACE89H,QAAA38H,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAK48H,WAAU,IAAAC,EAAA9gI,iBARY0D,EAAAk9H,EAAA99H,GAe7B89H,EAAAj9H,UAAAo9H,aAAY,SAAClrG,OACPg0F,EAAUh0F,EAAKmrG,aAAY,WAC3BnX,IACFA,EAAUA,EAAQoX,YAEhBC,EAAoBz9H,KAAQo9H,WAAWE,aAAalrG,UACnDqrG,GAGLA,EAA8B,QAAIrX,GAClCqX,EAAoBZ,EAAAa,gBAClBD,EACAb,EACAxqG,EAAI,MAG+C,MAT5C,MAWb+qG,EAjCA,YAwCMF,EAAgBJ,EAAAC,gBAAmBJ,EAAc,OAC9CG,EAAAc,0BAuJN,SACgBvrG,EAAM4qG,+BACIY,EAAexrG,EAAM4qG,oBAxJjCH,EAAAc,0BA+Jd,SACwBvrG,EAAM4qG,+BACJa,EAAazrG,EAAM4qG,QAzJ1CY,EAAaf,EAAAC,gBACjBJ,EAAc,OAELG,EAAAc,0BA6JR,SACgBvrG,EAAM4qG,OACjB3+H,EAAKw+H,EAAAa,gBAAA,GAAuBI,EAAe1rG,EAAM4qG,OAClD3+H,EAAK,WAGJ0/H,EAAyC,SAA7B3rG,EAAKmrG,aAAY,oBACnCl/H,EAAiB,UAAI0/H,EACd1/H,YApKGw+H,EAAAc,yBAAAK,EAAAC,8BACWpB,EAAAc,0BA0KpB,SAC4BvrG,EAAM4qG,+BACRkB,EAAmB9rG,EAAM4qG,gBA3KvCH,EAAAc,0BAkLZ,SACqBvrG,EAAM4qG,+BACDmB,EAAmB/rG,EAAM4qG,kBAnLrCH,EAAAc,0BA0Ld,SACsBvrG,EAAM4qG,OACvB7+H,EAASi0B,EAAKmrG,aAAY,UAC1B71G,EAAW0K,EAAKmrG,aAAY,YAC5Ba,EAAehsG,EAAKmrG,aAAY,gBAChCc,EAAQ,GACVlgI,IACFkgI,EAAiB,OAAIlgI,GAEnBupB,IACF22G,EAAmB,SAAI32G,GAErB02G,IACFC,EAAuB,aAAID,UAEtBC,wBAvMS1B,EAAkB,OACzBE,EAAAE,yBAAAiB,EAAAC,qBACGpB,EAAAE,yBAAAiB,EAAAC,6BACQpB,EAAAE,yBAA2BuB,cACjCzB,EAAAE,yBAAAiB,EAAAC,eASVH,EAAajB,EAAAC,gBACjBJ,EAAc,WAEDG,EAAAc,0BAgNZ,SACoBvrG,EAAM4qG,OACrBuB,EAAM,UACZA,EAAe,OAAInsG,EAAKmrG,aAAY,UACpCgB,EAAa,KAAAC,EAAAC,SAAarsG,GACnBmsG,wBAnNS5B,EAAkB,OACzBE,EAAAE,yBAAAiB,EAAAC,uBACKpB,EAAAE,yBAAAiB,EAAAC,eASVC,EAAiBrB,EAAAC,gBAAmBJ,EAAc,eACvCG,EAAAE,yBAAAiB,EAAAC,gCACMpB,EAAAE,0BAwOpB,SAC+B3qG,EAAM4qG,+BACX0B,EAAyBtsG,EAAM4qG,QAlOtD0B,EAAuB7B,EAAAC,gBAAmBJ,EAAc,kBAC1CG,EAAA8B,iBAwOjB,SAC2BvsG,EAAM4qG,+BACP4B,EAAoBxsG,EAAM4qG,QAlOjD4B,EAAkB/B,EAAAC,gBAAmBJ,EAAc,YAC3CG,EAAAE,yBAAAiB,EAAAC,uBACApB,EAAAE,yBAAAiB,EAAAa,mCACAhC,EAAAE,yBAAAiB,EAAAa,mCACAhC,EAAAE,yBAAAiB,EAAAa,mCACAhC,EAAAE,yBAAAiB,EAAAa,0BAQRV,EAAiBtB,EAAAC,gBACrBJ,EAAc,SAEHG,EAAAE,yBAAAiB,EAAAC,kBACFpB,EAAAc,yBAAAK,EAAAC,+BAEOtB,EAAkB,YACpBE,EAAAE,yBAAAiB,EAAAC,eASVa,EAAkBjC,EAAAC,gBAAmBH,EAAkB,aAC9CE,EAAA8B,gBAAkBI,eAClBlC,EAAA8B,gBAAkBI,KAQ3BlB,EAAWhB,EAAAC,gBACfJ,EAAc,mBAEOG,EAAAE,yBAAAiB,EAAAC,uBACPpB,EAAAc,0BAmKb,SACqBvrG,EAAM4qG,+BACDgC,EAAY5sG,EAAM4qG,yBAnK7BL,EAAkB,cAClBE,EAAAE,yBAAAiB,EAAAC,uBACFpB,EAAAE,yBAAAiB,EAAAC,wBACCpB,EAAAE,yBAA2BuB,MAStCU,EAAUnC,EAAAC,gBACdJ,EAAc,eAEGG,EAAAE,yBAA2BgC,oBACxBlC,EAAAE,yBAAAiB,EAAAiB,uBACPpC,EAAAE,yBAAAiB,EAAAa,mCACChC,EAAAE,yBAAAiB,EAAAa,oCACChC,EAAAE,yBAAAiB,EAAAa,qCACChC,EAAAE,yBAAAiB,EAAAa,2CAEAlC,EAAkB,YACpBE,EAAAE,yBAAAiB,EAAAC,eA0Fb,SACMK,EAAgBlsG,EAAM4qG,OACvB71H,EAAW01H,EAAAa,gBAAA,GAEfoB,EACA1sG,EACA4qG,MAEwB,GAAtB71H,EAAYvL,+BAGMuL,GAmBrB,SACM43H,EAAgB3sG,EAAM4qG,OACvB71H,EAAW62H,EAAAC,WAAc7rG,GAAMjhB,MAAK,UACrChK,GAAqC,GAAtBA,EAAYvL,YAG1B4T,GAAKrI,EAAY,GACjBsI,GAAKtI,EAAY,OACnBqmB,MAAMhe,KAAMge,MAAM/d,UAGdD,EAAGC,cA8BEytH,kSCzXZ,MAAAgC,EAAAjkI,EAAA,uhBAeGyhI,EAAc,CAAI,uCAOlBE,EAAOC,EAAAC,gBAAmBJ,EAAc,uBACrBG,EAAAE,0BA2QtB,SACgC3qG,EAAM4qG,+BACZmC,EAAgC/sG,EAAM4qG,sBA5QhDH,EAAAE,0BA4RhB,SAC0B3qG,EAAM4qG,+BACNoC,EAA0BhtG,EAAM4qG,yBA7RvCH,EAAAE,0BAuPnB,SAC6B3qG,EAAM4qG,+BACTqC,EAA6BjtG,EAAM4qG,QAtPhEsC,EAAA,SAAAjgI,YACEkgI,WACElgI,EAAAU,KAAAC,OAAAA,YAFcC,EAAAs/H,EAAAlgI,GAShBkgI,EAAAr/H,UAAAo9H,aAAY,SAAClrG,OACLotG,EAAS3C,EAAAa,gBAAA,GAAuBd,EAASxqG,EAAI,WAC5CotG,GAAwB,MAEnCD,EAbA,YAoBME,EAAe5C,EAAAC,gBAAmBJ,EAAc,eACrCG,EAAAE,yBAAAiB,EAAAC,iBACTpB,EAAAE,yBAAAiB,EAAAC,+BACcpB,EAAAE,yBAAAiB,EAAAC,uBACRpB,EAAAE,yBAAAiB,EAAAC,oBACHpB,EAAAE,yBAAAiB,EAAAC,kCACcpB,EAAAE,yBAAAiB,EAAAC,cAQnByB,EAAsB7C,EAAAC,gBAAmBJ,EAAc,OACpDG,EAAAc,0BA8PN,SACgBvrG,EAAM4qG,uBACL5qG,QAxPdutG,EAAkB9C,EAAAC,gBAAmBJ,EAAc,eACxCG,EAAAE,0BAsHd,SACwB3qG,EAAM4qG,+BACJ0C,EAAwBttG,EAAM4qG,QAhHrD4C,EAAoB/C,EAAAC,gBAAmBJ,EAAc,OAClDG,EAAAE,0BAwMN,SACgB3qG,EAAM4qG,+BACI6C,EAAeztG,EAAM4qG,cAzMvCH,EAAAE,0BAmGR,SACkB3qG,EAAM4qG,+BACEyC,EAAiBrtG,EAAM4qG,QA7F9C8C,EAAWjD,EAAAC,gBAAmBJ,EAAc,MAC1CG,EAAAE,0BA6JL,SACe3qG,EAAM4qG,+BACK+C,EAAc3tG,EAAM4qG,QAvJ3C+C,EAAYlD,EAAAC,gBAAmBJ,EAAc,KAC5CG,EAAAc,0BAkIJ,SACcvrG,EAAM4qG,OACfgD,EAAIxB,EAAAC,SAAYrsG,UACjB4tG,0BAIMA,GACTC,EACA7tG,EACA4qG,QAPO,eApIDx6H,IAQJ09H,EAAiBrD,EAAAC,gBAAmBJ,EAAc,KACjDG,EAAAE,0BA+GJ,SACc3qG,EAAM4qG,+BACM8C,EAAa1tG,EAAM4qG,QAzG1CqC,EAA2BxC,EAAAC,gBAAmBJ,EAAc,WA2I/D,SACoBtqG,EAAM4qG,OACrB5rH,EAAOghB,EAAKmrG,aAAY,QACxB50H,EAAKk0H,EAAAa,gBAAA,GAAuBwC,EAAmB9tG,EAAM4qG,OACtDr0H,EAAK,OAG4Bq0H,EAAYA,EAAYphI,OAAS,GAChEwV,GAAQzI,KA1IXk3H,EAAahD,EAAAC,gBAAmBJ,EAAc,OAC3CG,EAAAE,yBAAAiB,EAAAC,sBACIpB,EAAAE,yBAAAiB,EAAAC,cAQPgC,EAAsBpD,EAAAC,gBAAmBJ,EAAc,YAC/CG,EAAAc,0BA6DX,SACqBvrG,EAAM4qG,OACtB5rH,EAAOghB,EAAKmrG,aAAY,eACzBnsH,0BAG2BA,GAAOuuH,EAAoBvtG,EAAM4qG,QAHxD,OAxDLmD,EAAuBtD,EAAAC,gBAAmBJ,EAAc,gBAC5CG,EAAAE,yBAAAiB,EAAAC,yBACFpB,EAAAE,yBAAAiB,EAAAC,wBACDpB,EAAAE,0BA+DZ,SACsB3qG,EAAM4qG,+BACF4C,EAAsBxtG,EAAM4qG,QAzDnDmC,EAA8BtC,EAAAC,gBAAmBJ,EAAc,UACzDG,EAAAE,yBAAAiB,EAAAC,8BACSpB,EAAAE,yBAAAiB,EAAAC,iBACbpB,EAAAE,yBAAAiB,EAAAC,kBACCpB,EAAAE,yBAAAiB,EAAAC,+BACapB,EAAAE,yBAAAiB,EAAAC,wBACPpB,EAAAE,yBAAAiB,EAAAC,cAQTmB,EAAwBvC,EAAAC,gBAAmBJ,EAAc,cAC/CG,EAAAE,yBAAAiB,EAAAC,yBACApB,EAAAE,yBAAAyB,EAAAC,yBACE5B,EAAAE,0BA6Hf,SACyB3qG,EAAM4qG,+BACLmD,EAAyB/tG,EAAM4qG,kBAqB7CsC,gPClUZ,IAAAJ,EAAAjkI,EAAA,aASHkwE,EAAA,oBAAAi1D,YAQEA,EAAAlgI,UAAAhD,KAAI,SAACV,MACEA,MAEmB,iBAANA,EAAmB,KAC7B29B,EAAG+kG,EAAA9jI,MAASoB,eACN6jI,iBAAiBlmG,uBACT39B,GAAMwD,KACdqgI,iBAA0C7jI,QAE1C8gI,aAAqC9gI,GARxC,OACF,MAeX4jI,EAAAlgI,UAAAmgI,iBAAgB,SAAClmG,WACNjvB,EAAIivB,EAAIr4B,WAAYoJ,EAAGA,EAAIA,EAAEo1H,eAChCp1H,EAAEq1H,UAAYC,KAAKC,aAAY,OAAAzgI,KACrBs9H,aAAqCpyH,UAG9C,MAQTk1H,EAAAlgI,UAAAo9H,aAAY,SAAClrG,KACfguG,EAxCA,aA0Cej1D,uOC7BFu1D,IAOVx3H,EAAAF,OAAAzN,EAAA,mBAAA,IACaolI,IAWbz3H,EAAAF,OAAAzN,EAAA,qBAAA,IACaqlI,IAYb13H,EAAAF,OAAAzN,EAAA,sBAAA,IACaslI,IAsBb33H,EAAAF,OAAAzN,EAAA,cAAA,IACaulI,IASb53H,EAAAF,OAAAzN,EAAA,kBAAA,IACawlI,IASb73H,EAAAF,OAAAzN,EAAA,SAAA,IACaH,IAWb8N,EAAAF,OAAAzN,EAAA,qBAAA,IACaylI,IA6Bb93H,EAAAF,OAAAzN,EAAA,mBAAA,IACaojI,IA6Bbz1H,EAAAF,OAAAzN,EAAA,gBAAA,IACa0lI,IA2Bb/3H,EAAAF,OAAAzN,EAAA,4BAAA,IACaoiI,IAsCbz0H,EAAAF,OAAAzN,EAAA,4BAAA,IACawhI,IAgCb7zH,EAAAF,OAAAzN,EAAA,qBAAA,IACa2lI,IA2Bbh4H,EAAAF,OAAAzN,EAAA,uBAAA,IACa4lI,IA0Bbj4H,EAAAF,OAAAzN,EAAA,yBAAA,IACa6lI,mDAiCHC,IAYVn4H,EAAAF,OAAAzN,EAAA,gBAAA,IACa+lI,IAkBbp4H,EAAAF,OAAAzN,EAAA,mBAAA,IACauhI,IAmBb5zH,EAAAF,OAAAzN,EAAA,aAAA,IACagmI,IAuBbr4H,EAAAF,OAAAzN,EAAA,mBAAA,IACamiI,IAiCbx0H,EAAAF,OAAAzN,EAAA,aAAA,IACaimI,IAqDbt4H,EAAAF,OAAAzN,EAAA,uBAAA,IACakmI,IA6Bbv4H,EAAAF,OAAAzN,EAAA,yBAAA,IACammI,IAMbx4H,EAAAF,OAAAzN,EAAA,oBAAA,IACaomI,IAebz4H,EAAAF,OAAAzN,EAAA,oBAAA,IACaqmI,IAOb14H,EAAAF,OAAAzN,EAAA,eAAA,IACasmI,IAvkBb,IAAAv4H,EAAArO,EAAA,cAsBUylI,EAAuB,qDAQpBC,EAAgBmB,EAAcC,UACrCF,IAAclB,gBAAgBmB,EAAcC,YAWrCnB,EAAkBxuG,EAAM4vG,UAC/BnB,EAAmBzuG,EAAM4vG,EAAmB,IAAMxxH,KAAI,aAY/CqwH,EAAmBzuG,EAAM4vG,EAAqBC,MAE1D7vG,EAAKmuG,UAAYC,KAAK0B,oBACtB9vG,EAAKmuG,UAAYC,KAAK2B,UAElBH,EACFC,EAAYh+H,KAAKkJ,OAAOilB,EAAKgwG,WAAWz6G,QAAO,gBAAA,KAE/Cs6G,EAAYh+H,KAAKmuB,EAAKgwG,oBAGpBl3H,OAAC,MACAA,EAAIknB,EAAKtwB,WAAYoJ,EAAGA,EAAIA,EAAEo1H,YACjCO,EAAmB31H,EAAG82H,EAAqBC,UAGxCA,WAOOnB,EAAW38G,6BACGA,WASd48G,EAAe3uG,EAAM0vG,EAAc1wH,UAC1CghB,EAAK2uG,eAAee,EAAc1wH,IAAI,YAS/BhW,EAAMinI,cACT1vB,WAAYC,gBAAgByvB,EAAG,4BAW5BrB,EAAkBsB,EAAaj9G,mBAMjC+M,EAAM4qG,OACRr0H,EAAQ25H,EAAYviI,UACXyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACA4qG,WAEYx6H,IAAVmG,EAAmB,KACfqU,EAAiCggH,EACrCA,EAAYphI,OAAS,YAEhBohB,EAAOrU,cAcNg2H,EAAgB2D,EAAaj9G,mBAM/B+M,EAAM4qG,OACRr0H,EAAQ25H,EAAYviI,UACXyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACA4qG,QAEYx6H,IAAVmG,GACqCq0H,EACrCA,EAAYphI,OAAS,GAEjBqI,KAAK0E,aAcHs4H,EAAaqB,EAAaj9G,mBAM5B+M,EAAM4qG,OACRr0H,EAAQ25H,EAAYviI,UACXyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACA4qG,QAEYx6H,IAAVmG,IACFq0H,EAAYA,EAAYphI,OAAS,GAAK+M,aAe9Bg1H,EAAyB2E,EAAaC,EAAcl9G,mBAMtD+M,EAAM4qG,OACRr0H,EAAQ25H,EAAYviI,UACXyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACA4qG,WAEYx6H,IAAVmG,EAAmB,KACfwb,EAAiC64G,EACrCA,EAAYphI,OAAS,GAEjBwoB,OACa5hB,IAAjB+/H,EAA6BA,EAAenwG,EAAKowG,UAC/CxlH,OAAK,EACLoH,KAAYD,EACdnH,EAAQmH,EAAOC,IAEfpH,EAAK,GACLmH,EAAOC,GAAYpH,GAErBA,EAAM/Y,KAAK0E,cAcHo0H,EAAyBuF,EAAaC,EAAcl9G,mBAMtD+M,EAAM4qG,OACRr0H,EAAQ25H,EAAYviI,UACXyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACA4qG,QAEYx6H,IAAVmG,IACqCq0H,EACrCA,EAAYphI,OAAS,QAGJ4G,IAAjB+/H,EAA6BA,EAAenwG,EAAKowG,WAChC75H,aAeXu4H,EAAkBuB,EAAYp9G,mBAC3B+M,EAAMzpB,EAAOq0H,GAC5ByF,EAAW1iI,UACIyC,IAAb6iB,EAAyBA,EAAQrlB,KACjCoyB,EACAzpB,EACAq0H,GAE2CA,EAC3CA,EAAYphI,OAAS,GAEGw2B,KACf5Y,YAAY4Y,aAgBX+uG,EAAoBsB,EAAYp9G,OAC1Cq9G,EAAeC,kBACFvwG,EAAMzpB,EAAOq0H,WACNx6H,IAAlBkgI,EAA2B,CAC7BA,EAAa,OACPE,EAAW,GACjBA,EAAYxwG,EAAKowG,WAAaC,EAC9BC,EAActwG,EAAK0vG,cAAgBc,EACnCD,EAAcvB,EAAsBhvG,EAAKowG,WAE3ChB,EAAUkB,EAAeC,EAAah6H,EAAOq0H,aAiBjCoE,EAAsByB,EAAcC,OAC5CC,EAAgBF,kBAQVl6H,EAAOq0H,EAAagG,OAItB5wG,EAHwC4qG,EAC5CA,EAAYphI,OAAS,GAEFw2B,KACjB6wG,EAAWF,cACEvgI,IAAbygI,IACFA,EAAWD,GAKNrC,OADgBn+H,IAArBsgI,EAAiCA,EAAmB1wG,EAAK0vG,aACCmB,QAYrD5B,EAA+BD,aAa5BE,EAAan9G,EAAQ++G,WAC7BtnI,EAASsnI,EAAYtnI,OACrBunI,EAAQ,IAAOt5H,MAAMjO,GAClBD,EAAI,EAAGA,EAAIC,IAAUD,EAC5BwnI,EAASxnI,GAAKwoB,EAAO++G,EAAYvnI,WAE5BwnI,WAaOrG,EAAgBsG,EAAeC,EAAWC,GAGrD,IAEC3nI,EAAG6H,EADD+/H,OAAkC/gI,IAApB8gI,EAAgCA,EAAe,OAE9D3nI,EAAI,EAAG6H,EAAK4/H,EAAcxnI,OAAQD,EAAI6H,IAAM7H,EAC/C4nI,EAAYH,EAAcznI,IAAM0nI,SAE3BE,WAWOhC,EAAUiC,EAAWpxG,EAAM4qG,EAAa33G,OAClDna,MACCA,EAAIknB,EAAKopC,kBAAmBtwD,EAAGA,EAAIA,EAAEu4H,mBAAkB,KACpDC,EAAUF,EAAUt4H,EAAE42H,sBACZt/H,IAAZkhI,EAAqB,KACjB/mI,EAAS+mI,EAAQx4H,EAAEs3H,gBACVhgI,IAAX7F,GACFA,EAAOoD,KAAKslB,EAAUna,EAAG8xH,cAiBjBU,EACdv5G,EACAq/G,EACApxG,EACA4qG,EACA33G,UAEA23G,EAAY/4H,KAAKkgB,GACjBo9G,EAAUiC,EAAWpxG,EAAM4qG,EAAa33G,GACf23G,EAAYt+F,eAyBvB8iG,EACdkB,EACAC,EACAthH,EACA27G,EACA2G,EACAt+G,WAGI1c,EAAOypB,EADLx2B,QAAuB4G,IAAbmhI,EAAyBA,EAAWtiH,GAAQzlB,OAEnDD,EAAI,EAAGA,EAAIC,IAAUD,OAEd6G,KADdmG,EAAQ0Y,EAAO1lB,UAQA6G,KANb4vB,EAAOuwG,EAAY5iI,UACJyC,IAAb6iB,EAAyBA,EAAQrlB,KACjC2I,EACAq0H,OACax6H,IAAbmhI,EAAyBA,EAAShoI,QAAK6G,KAGvCkgI,EAActwG,EAAK0vG,cAAc1vG,EAAKowG,WAAWziI,KAC/CslB,EACA+M,EACAzpB,EACAq0H,YA8BMyE,EACdt9G,EACAu+G,EACAC,EACAthH,EACA27G,EACA2G,EACAt+G,UAEA23G,EAAY/4H,KAAKkgB,GACjBq9G,EACEkB,EACAC,EACAthH,EACA27G,EACA2G,EACAt+G,GAEiC23G,EAAYt+F,UAG7CklG,OAAiBphI,WASLk/H,EAAsBmC,GACpCD,EAAiBC,WAMHlC,gBACSn/H,IAAnBohI,GAAoD,oBAAbE,gBACzCF,EAAc,IAAOE,eAEhBF,MAGLG,OAAYvhI,WASAo/H,EAAiBzgI,GAC/B4iI,EAAY5iI,WAOE0gI,gBACIr/H,IAAduhI,GAA0C,oBAAR5iI,WACpC4iI,EAAY5iI,SAAS6iI,eAAeC,eAAc,GAAA,GAAS,OAEtDF,+LChkBN76H,EAAAF,OAAAzN,EAAA,YAAA,IACakjI,aAAAA,EAASrsG,UAChBA,EAAK2uG,eAPK,+BAOuB,gLCNvC73H,EAAAF,OAAAzN,EAAA,eAAA,IACa2oI,IAQbh7H,EAAAF,OAAAzN,EAAA,qBAAA,IACa4oI,IAYbj7H,EAAAF,OAAAzN,EAAA,gBAAA,IACa6oI,IASbl7H,EAAAF,OAAAzN,EAAA,eAAA,IACa0jI,IAQb/1H,EAAAF,OAAAzN,EAAA,qBAAA,IACa8oI,IAabn7H,EAAAF,OAAAzN,EAAA,0BAAA,IACasjI,IAQb31H,EAAAF,OAAAzN,EAAA,gCAAA,IACa+oI,IAYbp7H,EAAAF,OAAAzN,EAAA,cAAA,IACa0iI,IAOb/0H,EAAAF,OAAAzN,EAAA,wBAAA,IACagpI,IAObr7H,EAAAF,OAAAzN,EAAA,qBAAA,IACaipI,IAObt7H,EAAAF,OAAAzN,EAAA,yBAAA,IACakpI,IAqBbv7H,EAAAF,OAAAzN,EAAA,wBAAA,IACampI,IAQbx7H,EAAAF,OAAAzN,EAAA,mCAAA,IACaopI,IAQbz7H,EAAAF,OAAAzN,EAAA,uBAAA,IACaqpI,IArJb,IAAA1F,EAAAjkI,EAAA,0CAQaipI,EAAY9xG,UAEnB+xG,EADAjF,EAAA0B,kBAAqBxuG,GAAM,aAQpB+xG,EAAkBU,OAC1Br9H,EAAC,6BAAgCyS,KAAK4qH,UACxCr9H,OACchF,IAATgF,EAAE,KAAoB,kBAUjB48H,EAAahyG,OACrBvY,EAACqlH,EAAA0B,kBAAqBxuG,GAAM,GAC5B0yG,EAAWtnI,KAAKpC,MAAMye,UACrB2T,MAAMs3G,QAAYtiI,EAAYsiI,EAAW,aAOlC7F,EAAY7sG,UAEnBiyG,EADAnF,EAAA0B,kBAAqBxuG,GAAM,aAQpBiyG,EAAkBQ,OAE1Br9H,EAAC,4CAA+CyS,KAAK4qH,UACvDr9H,EACKm2B,WAAWn2B,EAAE,oBAURq3H,EAAuBzsG,UAE9BkyG,EADApF,EAAA0B,kBAAqBxuG,GAAM,aAQpBkyG,EAA6BO,OACrCr9H,EAAC,gBAAmByS,KAAK4qH,UAC3Br9H,EACK2S,SAAS3S,EAAE,GAAI,oBAUVy2H,EAAW7rG,8BACAA,GAAM,GAAOorG,gBAOxB+G,EAAqBnyG,EAAM2yG,GACzCH,EAAoBxyG,EAAM2yG,EAAI,IAAM,cAOtBP,EAAkBpyG,EAAMyyG,GACtCzyG,EAAK5Y,YAAW0lH,EAAA2C,cAAemD,mBAAmBH,aAOpCJ,EAAsBryG,EAAM0yG,OACpCG,EAAI,IAAOznI,KAAgB,IAAXsnI,GAChBD,EACJI,EAAKC,iBAAc,IAChB39G,EAAAC,UACOy9G,EAAKE,cAAgB,EAAG,GAAC,IAChC59G,EAAAC,UACOy9G,EAAKG,aAAc,GAAC,IAC3B79G,EAAAC,UACOy9G,EAAKI,cAAe,GAAC,IAC5B99G,EAAAC,UACOy9G,EAAKK,gBAAiB,GAAC,IAC9B/9G,EAAAC,UACOy9G,EAAKM,gBAAiB,GAAC,IAEnCnzG,EAAK5Y,YAAW0lH,EAAA2C,cAAep0E,eAAeo3E,aAOhCH,EAAqBtyG,EAAMzJ,OACnCk8G,EAASl8G,EAAQ68G,cACvBpzG,EAAK5Y,YAAW0lH,EAAA2C,cAAep0E,eAAeo3E,aAOhCF,EAAgCvyG,EAAMqzG,OAC9CZ,EAASY,EAAmBv3H,WAClCkkB,EAAK5Y,YAAW0lH,EAAA2C,cAAep0E,eAAeo3E,aAOhCD,EAAoBxyG,EAAMyyG,GACxCzyG,EAAK5Y,YAAW0lH,EAAA2C,cAAep0E,eAAeo3E,gJCxJrCzrF,EAAQssF,GACD,iBAAPnqI,QAAqC,IAAND,EAAyBA,EAAOC,QAAUmqI,IACnE,mBAAN/pD,QAAyBA,OAAOC,IAAMD,OAAO+pD,GACnDtsF,EAAOusF,MAAQD,uCAoBZE,EAAsB,QAEtBC,EAAqB,qBACrBC,EAAa,oBACbC,EAAUn2H,KAAKiM,GAAG,EAOlBmqH,EAAQ,MAIRC,EAAM,oBACNC,EAAM,kBACNC,EAASv2H,KAAKiM,GAAG,EACjBuqH,EAAmB,EAAVx2H,KAAKiM,GAKdwqH,EAAM,cAENC,EAAS,CACbC,UAAsB,EACtBC,QAAmB,eACnBC,MAAkB,eAClBC,QAAmB,gBACnBC,QAAmB,eACnBC,KAAiB,gBACjBC,KAAiB,eACjBC,QAAoB,iBACpBC,OAAkB,gBAClBC,SAAqB,SACrBC,UAAsB,gBACtBC,OAAmB,WACnBC,KAAiB,iBAEbjxF,EAAK,CACPkxF,GAAE,CAAGC,SAAU,eACR,CAAGA,SAAU,KAAO,OAGzBC,EAAW,0BACNl9G,EAAMtf,EAAKhC,MACdgC,EAAIhC,GAAG,OACFgC,EAAIhC,WAKTy+H,EAHA9rI,EAAOC,OAAOD,KAAKqP,GACnB08H,EAAO1+H,EAAIunB,cAAc1I,QAAQ2/G,EAAW,IAC5C3rI,GAAI,IAECA,EAAIF,EAAKG,YAChB2rI,EAAU9rI,EAAKE,IACQ00B,cAAc1I,QAAQ2/G,EAAW,MACnCE,EAAI,OAChB18H,EAAIy8H,OAKbE,EAAS,SAAYC,OAYnBC,EAAWC,EAAUC,EAXrBp3G,EAAI,GACJq3G,EAAWJ,EAAQv2H,MAAK,KAAM5Q,KAAG,SAAUi7E,UACtCA,EAAEgiD,UACRtyF,QAAM,SAAU/nC,UACVA,KACN4kI,QAAM,SAAUpvD,EAAGx1E,OAChBgO,EAAQhO,EAAEgO,MAAK,YACnBA,EAAMlN,MAAK,GACX00E,EAAExnE,EAAM,GAAGkf,eAAiBlf,EAAM,GAC3BwnE,QAGLijD,EAAM,CACRlP,KAAI,WACJsb,MAAK,YACLC,GAAE,SAAWzsD,GACX/qD,EAAKw3G,GAAKtqG,WAAW69C,IAEvB0sD,MAAK,SAAW1sD,GACd/qD,EAAK03G,KAAO3sD,EAAIyqD,GAElBmC,MAAK,SAAW5sD,GACd/qD,EAAKwqB,KAAOugC,EAAIyqD,GAElBoC,MAAK,SAAW7sD,GACd/qD,EAAKyqB,KAAOsgC,EAAIyqD,GAElBqC,OAAM,SAAW9sD,GACf/qD,EAAK63G,OAAS9sD,EAAIyqD,GAEpBsC,MAAK,SAAW/sD,GACd/qD,EAAK+3G,MAAQhtD,EAAIyqD,GAEnBwC,MAAK,SAAWjtD,GACd/qD,EAAKi4G,MAAQltD,EAAIyqD,GAEnB0C,MAAK,SAAWntD,GACd/qD,EAAKm4G,MAAQptD,EAAIyqD,GAEnBvkC,MAAK,SAAWlmB,GACd/qD,EAAKixE,MAAQ/jE,WAAW69C,GAAKyqD,GAE/B4C,MAAK,SAAWrtD,GACd/qD,EAAKq4G,qBAAuBnrG,WAAW69C,IAEzCutD,KAAI,SAAWvtD,GACb/qD,EAAKu4G,MAAQxtD,EAAIyqD,GAEnBgD,IAAG,SAAWztD,GACZ/qD,EAAKla,GAAKonB,WAAW69C,IAEvB0tD,IAAG,SAAW1tD,GACZ/qD,EAAK9Z,GAAKgnB,WAAW69C,IAEvB2tD,IAAG,SAAW3tD,GACZ/qD,EAAK24G,GAAKzrG,WAAW69C,IAEvB7/D,EAAC,SAAW6/D,GACV/qD,EAAK24G,GAAKzrG,WAAW69C,IAEvBr4E,EAAC,SAAWq4E,GACV/qD,EAAKttB,EAAIw6B,WAAW69C,IAEtBp4E,EAAC,SAAWo4E,GACV/qD,EAAKrtB,EAAIu6B,WAAW69C,IAEtB6tD,IAAG,WACD54G,EAAK64G,KAAM,GAEbC,KAAI,SAAW/tD,GACb/qD,EAAK84G,KAAOpvH,SAASqhE,EAAG,KAE1BguD,MAAK,WACH/4G,EAAKg5G,UAAW,GAElBC,QAAO,SAAWluD,GAChB/qD,EAAKk5G,aAAenuD,EAAErqE,MAAK,KAAM5Q,KAAG,SAAU4C,UACrCw6B,WAAWx6B,OAGtBkkI,SAAQ,SAAW7rD,GACjB/qD,EAAK42G,SAAW1pG,WAAW69C,IAE7BtlC,MAAK,SAAWslC,GACd/qD,EAAKylB,MAAQslC,MACTouD,EAAOx/G,EAAM8rB,EAAOslC,GACpBouD,IACFn5G,EAAK42G,SAAWuC,EAAKvC,WAGzBwC,eAAc,SAAWruD,GACvB/qD,EAAKo5G,eAAiBruD,EAAIyqD,GAE5B6D,GAAE,SAAWtuD,OACPsuD,EAAK1/G,EAAMk8G,EAAW9qD,GAC1B/qD,EAAKo5G,gBAAkBC,GAAUnsG,WAAW69C,IAAMyqD,GAEpD8D,SAAQ,SAAWvuD,GACZ,UAADA,EACF/qD,EAAKu5G,UAAS,OAGdv5G,EAAKs5G,SAAWvuD,GAGpByuD,KAAI,SAAWzuD,OACT0uD,EAAS,SACI,IAAb1uD,EAAE5/E,SAAsD,IAAtCsuI,EAAUn/H,QAAQywE,EAAEphE,OAAO,EAAG,MAAoD,IAAtC8vH,EAAUn/H,QAAQywE,EAAEphE,OAAO,EAAG,MAAoD,IAAtC8vH,EAAUn/H,QAAQywE,EAAEphE,OAAO,EAAG,MAC1IqW,EAAKw5G,KAAOzuD,IAGhB2uD,OAAM,WACJ15G,EAAK05G,QAAS,QAGbxC,KAAaG,EAChBF,EAAWE,EAASH,GAChBA,KAAa/L,EAEQ,mBADvBiM,EAAejM,EAAO+L,IAEpBE,EAAaD,GAGbn3G,EAAKo3G,GAAgBD,EAIvBn3G,EAAKk3G,GAAaC,QAGE,iBAAdn3G,EAAKu5G,WAAwC,UAAdv5G,EAAKu5G,YAC5Cv5G,EAAKu5G,UAAYv5G,EAAKu5G,UAAU35G,eAE3BI,GASL25G,EAAU,KACVC,EAAK,WACLC,EAAO,aACPC,EAAS,QACTC,EAAM,uBAEDC,EAAOztI,MACC,iBAAJA,EAAiB,MAAA,IAChBhB,MAAK,qBAEZgB,KAAOA,EAAKwgI,YACZkN,MAAQ,OACRC,MAAQ,OACRC,KAAO,UACPzkF,MAAK,QACL0kF,cAAgB,UAChBxrH,MAtBO,WAwKLyrH,EAAMhgI,EAAKhC,EAAKH,GACnBkB,MAAM4B,QAAQ3C,KAChBH,EAAMw7G,QAAQr7G,GACdA,EAAM,UAEJiiI,EAAQjiI,EAAG,GAAQgC,EAEnB+3D,EAAMl6D,EAAMo/H,QAAM,SAAUiD,EAAQrsG,UACtCssG,EAAMtsG,EAAMqsG,GACLA,IACND,GACCjiI,IACFgC,EAAIhC,GAAO+5D,YAINooE,EAAMzvD,EAAG1wE,MACXjB,MAAM4B,QAAQ+vE,QAIf1yE,EAAM0yE,EAAEhqD,WACL,cAAH1oB,IACFA,EAAM0yE,EAAEhqD,SAEO,IAAbgqD,EAAE5/E,cACAiO,MAAM4B,QAAQ+vE,EAAE,KAClB1wE,EAAIhC,GAAG,QACPmiI,EAAMzvD,EAAE,GAAI1wE,EAAIhC,UAGlBgC,EAAIhC,GAAO0yE,EAAE,OAGVA,EAAE5/E,UAIA,YAAHkN,MAIG,SAAHA,SACIA,KAAOgC,IACXA,EAAIhC,GAAG,SAETgC,EAAIhC,GAAK7E,KAAKu3E,OAOZ7/E,SAJCkO,MAAM4B,QAAQ3C,KACjBgC,EAAIhC,GAAG,IAIDA,mDAIJgC,EAAIhC,GAAG,CACLsI,KAAMoqE,EAAE,GAAGnrD,cACX66G,QAAS1vD,EAAE,SAEI,IAAbA,EAAE5/E,QACJqvI,EAAMzvD,EAAE,GAAI1wE,EAAIhC,2CAKlBgC,EAAIhC,GAAG,CACLsI,KAAMoqE,EAAE,GACRr4E,EAAGq4E,EAAE,GACLysD,GAAIzsD,EAAE,SAES,IAAbA,EAAE5/E,QACJqvI,EAAMzvD,EAAE,GAAI1wE,EAAIhC,0VAwBlB0yE,EAAE,GAAC,QAAaA,EAAE,SAClBsvD,EAAMhgI,EAAKhC,EAAK0yE,eAGhB7/E,GAAI,IACKA,EAAI6/E,EAAE5/E,YACRiO,MAAM4B,QAAQ+vE,EAAE7/E,IAAC,OACbsvI,EAAMzvD,EAAG1wE,EAAIhC,WAGjBgiI,EAAMhgI,EAAKhC,EAAK0yE,SArEzB1wE,EAAIhC,GAAO0yE,OAJX1wE,EAAIhC,IAAO,OAjBXgC,EAAI0wE,IAAK,EAlKbivD,EAAOvqI,UAAUirI,cAAa,eACxBC,EAAIprI,KAAQhD,KAAIgD,KAAM2qI,YAtBf,SAuBFtrH,MAAgB,KAChB+qH,EAAW3vH,KAAK2wH,IAAI,SAChBT,OAAK3qI,KAAShD,KAAKpB,OAAM,OAGlCwvI,EAAIprI,KAAQhD,KAAIgD,KAAM2qI,qBAGbtrH,YAlCD,cAoCIgsH,QAAQD,QAnCZ,cAqCId,QAAQc,QAnCb,cAqCKE,OAAOF,QApCR,cAsCCG,WAAWH,QAxChB,cA0CK5iH,OAAO4iH,QAvCb,WA4CZX,EAAOvqI,UAAUqrI,WAAU,SAAYH,MAC7B,MAAJA,cACGI,MAAI,cACJnsH,MAjDI,MAoDPkrH,EAAU9vH,KAAK2wH,eACZI,KAAIxrI,KAAQwrI,KAAKhO,iBACjBiO,UAAUL,aAGPpvI,MAAK,oBAAsBovI,EAAI,8BAAgCprI,KAAQ2qI,QAEnFF,EAAOvqI,UAAUurI,UAAS,SAAYL,SAC5B,MAAJA,GACgB,YAATI,MAAaxrI,KACf6qI,cAAc5mI,KAAIjE,KAAMwrI,WAE1BA,KAAO,eACPnsH,MApEK,IAuEJ,MAAJ+rH,QACGV,QACa,YAATc,YACFX,cAAc5mI,KAAIjE,KAAMwrI,WACxBA,KAAO,WAETnsH,MA7EK,OA8ELwrH,cAAa7qI,KAAQmmD,MAAMznB,gBACtBmsG,gBAAa7qI,KAChBqf,OA3EC,aAiFZorH,EAAOvqI,UAAUsoB,OAAM,SAAY4iH,OAC7BZ,EAAO/vH,KAAK2wH,OAIZb,EAAU9vH,KAAK2wH,eACZI,KAAO7tG,WAAU39B,KAAMwrI,gBACvBC,UAAUL,aAGPpvI,MAAK,oBAAsBovI,EAAI,0BAA4BprI,KAAQ2qI,YARtEa,MAAQJ,GAUjBX,EAAOvqI,UAAUorI,OAAM,SAAYF,GACzB,MAAJA,OAICI,MAAQJ,OAHN/rH,MAhGQ,GAsGjBorH,EAAOvqI,UAAUoqI,QAAO,SAAYc,MAC9Bd,EAAQ7vH,KAAK2wH,QACVI,MAAQJ,UAGP,MAAJA,EAAY,KACVM,EAAU,UACdA,EAAWznI,KAAIjE,KAAMwrI,WAChBd,QACa,YAATE,KAAa5qI,KACf4qI,KAAOc,OAEPb,cAAc5mI,KAAKynI,QAErBvlF,MAAMliD,KAAIjE,KAAM6qI,oBAChBA,cAAgBa,YAChBrsH,MA1HK,OA6HRkrH,EAAU9vH,KAAK2wH,aAITpvI,MAAK,oBAAsBovI,EAAI,2BAA6BprI,KAAQ2qI,YAHvEc,UAAUL,KAKnBX,EAAOvqI,UAAUmrI,QAAO,SAAYD,MAC9Bf,EAAM5vH,KAAK2wH,eACRI,KAAOJ,YACP/rH,MArIK,MAwIJ,MAAJ+rH,cACGI,KAAI,aACJnsH,MAxII,MA2IPmrH,EAAO/vH,KAAK2wH,eACTI,KAAOJ,YACP/rH,MA9II,OAiJPkrH,EAAU9vH,KAAK2wH,aAITpvI,MAAK,oBAAsBovI,EAAI,2BAA6BprI,KAAQ2qI,YAHvEc,UAAUL,IAKnBX,EAAOvqI,UAAUgkB,OAAM,qBACTymH,MAAK3qI,KAAQhD,KAAKpB,QAAMoE,KAC7BmrI,oBAtJG,SAwJD9rH,MAAe,OAAArf,KACV4qI,eAEJ5uI,MAAK,2BAA2BgE,KAAOhD,KAAI,eAAiBgD,KAAQqf,iBAoIvEssH,EAAIv2F,SAZD,oBAaHA,MAoKLw2F,EAAG,SAAYC,OACbC,EAtSM,IAAOrB,EAsSMoB,GArST3nH,SAsSVhiB,EAAO4pI,EAAKt6G,QACZpgB,EAAO06H,EAAKt6G,QAChBs6G,EAAK3nB,QAAO,QAAU/yG,IACtB06H,EAAK3nB,QAAO,QAAUjiH,QAClB4I,EAAG,UACPmgI,EAAMa,EAAMhhI,YAxKI8gI,MACJ,WAARA,EAAI1pI,KACN0pI,EAAIG,SAAQ,UACK,aAARH,EAAI1pI,MACb0pI,EAAIG,SAAQ,WACZH,EAAII,OAAQ,GAEa,iBAAdJ,EAAI/7E,WACb+7E,EAAIG,SAAWrwI,OAAOD,KAAKmwI,EAAI/7E,YAAY,GAE3C+7E,EAAIG,SAAWH,EAAI/7E,WAGnB+7E,EAAIK,KAAI,SACNC,EAAS,GACJvwI,EAAI,EAAG6H,EAAKooI,EAAIK,KAAKrwI,OAAQD,EAAI6H,IAAM7H,EAAC,KAE3CwwI,EADOP,EAAIK,KAAKtwI,GACE,GAAG00B,eACW,IAAhC87G,EAAWphI,QAAO,SACpBmhI,GAAS,KACgC,IAAhCC,EAAWphI,QAAO,SAC3BmhI,GAAS,KAC+B,IAA/BC,EAAWphI,QAAO,QAC3BmhI,GAAS,KAC+B,IAA/BC,EAAWphI,QAAO,UAC3BmhI,GAAS,KAGY,IAArBA,EAAUtwI,SACZswI,GAAS,KAEc,IAArBA,EAAUtwI,SACZgwI,EAAI3B,KAAOiC,GAGXN,EAAIQ,OACNR,EAAI11F,MAAQ01F,EAAIQ,KAAKh7H,KAAKif,cACb,UAATu7G,EAAI11F,QACN01F,EAAI11F,MAAK,SAEP01F,EAAIQ,KAAKlB,UACC,WAARU,EAAI1pI,KACF0pI,EAAIS,OAAST,EAAIS,MAAMC,WACzBV,EAAIvE,SAAWuE,EAAIQ,KAAKlB,QAAQU,EAAIS,MAAMC,SAASnpI,GAGrDyoI,EAAIvE,SAAWuE,EAAIQ,KAAKlB,cAI1BqB,EAASX,EAAIY,gBAoERC,EAAQr3F,UAERA,GADKw2F,EAAIvE,UAAY,GApElB,WAARuE,EAAI1pI,OACNqqI,EAASX,GAEPW,IAIEA,EAAOF,MACTT,EAAI5B,UAAYuC,EAAOF,MAAMj7H,KAAKif,cAElCu7G,EAAI5B,UAAYuC,EAAOn7H,KAAKif,cAEF,OAAxBu7G,EAAI5B,UAAU3jI,MAAM,EAAG,KACzBulI,EAAI5B,UAAY4B,EAAI5B,UAAU3jI,MAAM,IAErB,oCAAbulI,EAAI5B,WAAgE,qBAAb4B,EAAI5B,YAC7D4B,EAAI5B,UAAS,UAEE,aAAb4B,EAAI5B,WAAyC,+BAAb4B,EAAI5B,YACpB,8BAAd4B,EAAI/7E,aACN+7E,EAAIc,QAAS,GAEfd,EAAI5B,UAAS,SAEW,WAAtB4B,EAAI5B,UAAU3jI,OAAM,KACtBulI,EAAI5B,UAAY4B,EAAI5B,UAAU3jI,MAAM,GAAG,IAEf,aAAtBulI,EAAI5B,UAAU3jI,OAAM,KACtBulI,EAAI5B,UAAY4B,EAAI5B,UAAU3jI,MAAM,GAAG,KAEpCulI,EAAI5B,UAAUj/H,QAAO,WACxB6gI,EAAI5B,UAAS,SAEXuC,EAAOF,OAASE,EAAOF,MAAMC,WAC/BV,EAAIe,MAAQJ,EAAOF,MAAMC,SAASl7H,KAAKuW,QAAO,MAAM,IAAMA,QAAO,gBAAA,QAC1B,kBAAnCikH,EAAIe,MAAMt8G,cAAchqB,MAAM,EAAG,MACnCulI,EAAIe,MAAK,QAGXf,EAAIzoI,EAAIopI,EAAOF,MAAMC,SAASnpI,EAC9ByoI,EAAI3D,GAAKtqG,WAAW4uG,EAAOF,MAAMC,SAASrE,GAAI,KAG5CsE,EAAOF,OAASE,EAAOF,MAAMO,UAC/BhB,EAAIjC,aAAe4C,EAAOF,MAAMO,UAE7BhB,EAAI5B,UAAUj/H,QAAO,eACxB6gI,EAAI5B,UAAS,WAEV4B,EAAI5B,UAAUj/H,QAAO,eACxB6gI,EAAI5B,UAAS,YAEV4B,EAAI5B,UAAUj/H,QAAO,UACpB6gI,EAAI5B,UAAUj/H,QAAO,6BACzB6gI,EAAI5B,UAAS,SAEE,YAAb4B,EAAI5B,YACN4B,EAAI5B,UAAS,WAEV4B,EAAI5B,UAAUj/H,QAAO,YACxB6gI,EAAI5B,UAAS,UAGb4B,EAAIxoI,IAAM0rH,SAAS8c,EAAIxoI,KACzBwoI,EAAIxoI,EAAIwoI,EAAIzoI,GAUN,4cAYyBwoI,8HAGEA,yBACTc,0BACCA,+BACKd,gCACCA,iCACCA,iCACAA,iCACAA,4CAEXA,uBAGlBpkI,SA9BM,SAAYpE,mBAzIT2H,EAAK8wH,OACfiR,EAAUjR,EAAO,GACjBkR,EAASlR,EAAO,KACdiR,KAAW/hI,IAASgiI,KAAUhiI,IAClCA,EAAI+hI,GAAW/hI,EAAIgiI,GACG,IAAlBlR,EAAOhgI,SACTkP,EAAI+hI,GAAWjR,EAAO,GAAG9wH,EAAI+hI,MAoIxBE,CAAOnB,EAAKzoI,MA8BhByoI,EAAIpD,QAASoD,EAAI5C,OAAsB,4BAAZ4C,EAAIG,UAAsD,iCAAZH,EAAIG,WAChFH,EAAIpD,MAAQoD,EAAI5C,OAEb4C,EAAItD,SAAUsD,EAAI3wF,MAAqB,6BAAZ2wF,EAAIG,UAAuD,oCAAZH,EAAIG,WACjFH,EAAIzD,KAAOwD,EAAIC,EAAI3wF,KAAO,EAAI,IAAK,IACnC2wF,EAAItD,OAASsD,EAAI3wF,MAWnB+xF,CAASliI,GACFA,YAGA7O,EAAKmV,GACM,IACd67H,EAAIjtI,QACiB,IAArB8J,UAAUlO,OAAY,KACpBsxI,EAAMpjI,UAAU,GACN,iBAAHojI,EACO,MAAZA,EAAIzlH,OAAO,GACbxrB,EAAKmV,GAAQq2H,EAAU39H,UAAU,IAGjC7N,EAAKmV,GAAQw6H,EAAI9hI,UAAU,IAG7B7N,EAAKmV,GAAQ87H,UAGa,IAArBpjI,UAAUlO,OAAY,IACzBiO,MAAM4B,QAAQ2F,GAAI,OACbA,EAAK7Q,KAAG,SAAUi7E,GACnB3xE,MAAM4B,QAAQ+vE,GAChBv/E,EAAK+N,MAAMijI,EAAMzxD,GAGjBv/E,EAAKu/E,SAIS,iBAAJpqE,MACVA,KAAQnV,EAAI,OACPA,EAAKmV,gBAGGA,EACjBnV,EAAI,QAAWmV,EAAK+7H,MAAQ/7H,WAEXA,EACjBnV,EAAI,QAAWmV,EAAKg8H,MAAQh8H,cAERA,EACpBnV,EAAI,WAAcmV,EAAKi8H,SAAWj8H,EAGlC8a,QAAQ9Q,IAAIhK,YAxtBP,SAAYnV,GACrBA,EAAI,YAAY,mFAChBA,EAAI,YAAY,mHAChBA,EAAI,YAAY,oJAEhBA,EAAKqxI,MAAQrxI,EAAI,aACjBA,EAAI,aAAgBA,EAAI,aACxBA,EAAKsxI,OAAStxI,EAAI,aAClBA,EAAI,eAAkBA,EAAI,aAC1BA,EAAI,eAAkBA,EAAI,aAstB5BuxI,CAAQvxI,OAQJwxI,EAAS,uIAMTC,EAAK,2CAmBAtyI,EAAM6V,gBA/BEA,SACG,iBAAJA,EA+BV08H,CAAQ18H,UAqBHA,cAlDMA,UACRA,KAAQhV,EA8BT2xI,CAAQ38H,GAAI,OACPhV,EAAKgV,eA5BDA,UACRw8H,EAAU9lI,MAAI,SAAW6jI,UACvBv6H,EAAKlG,QAAQygI,IAAQ,KA4BxBqC,CAAQ58H,GAAI,KACV4xD,EAAM+oE,EAAI36H,eAzBG0tB,OACjBmvG,EAAO1jH,EAAMuU,EAAI,gBAChBmvG,OAGD78H,EAAOmZ,EAAM0jH,EAAI,eACd78H,GAAQy8H,EAAM3iI,QAAQkG,IAAQ,GAqB7B88H,CAAclrE,GAAG,OACZ5mE,EAAI,iBAET+xI,WAtBYrvG,OAChBsvG,EAAM7jH,EAAMuU,EAAI,gBACfsvG,SAGE7jH,EAAM6jH,EAAG,SAiBOC,CAAarrE,UAC5BmrE,EACKvG,EAAUuG,GAEZnrE,kBAnBK5xD,SACH,MAANA,EAAK,GAoBNk9H,CAASl9H,GACJw2H,EAAUx2H,cAOnB1F,EAAM,SAAYgrC,EAAa/5C,OAE7BmM,EAAOyb,KADXmyB,EAAcA,GAAW,IAEpB/5C,EAAM,OACF+5C,MAEJnyB,KAAY5nB,OAEDgG,KADdmG,EAAQnM,EAAO4nB,MAEbmyB,EAAYnyB,GAAYzb,UAGrB4tC,GAGL63F,EAAK,SAAYC,EAAQC,EAAQC,OAC/BC,EAAMH,EAASC,SACZC,EAAU3+H,KAAK8W,KAAK,EAAI8nH,EAAMA,IAGnCC,EAAI,SAAYj/H,UACXA,EAAE,GAAI,EAAK,GAGhBk/H,EAAU,SAAYl/H,UAChBI,KAAK0F,IAAI9F,IAAM62H,EAAO72H,EAAKA,EAAKi/H,EAAKj/H,GAAK42H,GAGhDuI,EAAK,SAAYN,EAAQO,EAAKN,OAC5BE,EAAMH,EAASC,EACfO,EAAM,GAAMR,SAChBG,EAAM5+H,KAAKuX,KAAM,EAAIqnH,IAAQ,EAAIA,GAAOK,GAChCj/H,KAAKyqC,IAAI,IAAO0rF,EAAU6I,IAAQJ,GAGxCM,EAAK,SAAYT,EAAQU,WAEvBP,EAAKQ,EADLC,EAAS,GAAMZ,EAEfO,EAAM7I,EAAU,EAAIn2H,KAAK4qC,KAAKu0F,GACzBpzI,EAAI,EAAGA,GAAK,GAAIA,OACvB6yI,EAAMH,EAASz+H,KAAKC,IAAI++H,GAExBA,GADAI,EAAOjJ,EAAU,EAAIn2H,KAAK4qC,KAAKu0F,EAAMn/H,KAAKuX,KAAM,EAAIqnH,IAAQ,EAAIA,GAAOS,IAAYL,EAE/Eh/H,KAAK0F,IAAI05H,IAAS,MAAY,OACzBJ,SAIJ,eAsGAM,EAASC,UACTA,MAULC,EAAK,CAtBD,CACNC,oBAxFIb,EAAGxuI,KAAQoD,EAACpD,KAAQmD,OACnBmsI,GAAK,EAAId,EAAMA,SACXxuI,OAAAA,KACFuW,GAAK,UAEHvW,OAAAA,KACF2W,GAAK,QAEPrH,EAAIM,KAAK8W,KAAI1mB,KAAMsvI,SACfhH,YACEoE,OAAM1sI,KACRopI,GAAKx5H,KAAKD,IAAG3P,KAAMsoI,aAGnBc,GAAKgF,EAAKpuI,KAAMsP,EAAGM,KAAKC,IAAG7P,KAAMsoI,QAAS14H,KAAKD,IAAG3P,KAAMsoI,cAIrDc,UACCztH,EAAC3b,KACHopI,GAAEppI,KAAQ2b,OAGVytH,GAAK,IAkEhBlyF,QA3DoD,SAErCyhC,OAQXnpE,EAAGC,EAPH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,KAERqsC,EAAMoqF,EAAM,IAAMpqF,EAAMoqF,GAAM,IAAO1uF,EAAM0uF,EAAM,KAAO1uF,EAAM0uF,GAAM,IAAI,OACnE,QAILt2H,KAAK0F,IAAI1F,KAAK0F,IAAIwmC,GAAOiqF,IAAYC,EAAK,OACrC,aAGE0G,OACPl9H,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAACnD,KAAQopI,GAAKsF,EAAWl3F,EAAGx3C,KAAQwoI,OACvD/4H,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAACnD,KAAQopI,GAAKx5H,KAAKwL,IAAIxL,KAAKyqC,IAAI8rF,EAAS,GAAMrqF,aAG9DwyF,EAAS1+H,KAAKC,IAAIisC,GAClBizF,EAAKJ,EAAK3uI,KAAMsP,EAAGwsC,EAAKwyF,GAC5B9+H,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAACnD,KAAQopI,GAAKsF,EAAWl3F,EAAGx3C,KAAQwoI,OACvD/4H,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAACnD,KAAQopI,GAAKx5H,KAAKwL,IAAI2zH,UAE5Cp2D,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GAiCTxhC,QA5BoD,SACrCwhC,OAIXnhC,EAAKsE,EAFLtsC,EAAImpE,EAAEnpE,EAACxP,KAAQuW,GACf9G,EAAIkpE,EAAElpE,EAACzP,KAAQ2W,WAGV+1H,OACP5wF,EAAMiqF,EAAU,EAAIn2H,KAAK4qC,KAAK5qC,KAAKuL,KAAK1L,GAACzP,KAASmD,EAACnD,KAAQopI,eAGvD2F,EAAKn/H,KAAKuL,KAAK1L,GAACzP,KAASmD,EAACnD,KAAQopI,SAE1B,QADZttF,EAAMgzF,EAAK9uI,KAAMsP,EAAGy/H,IACH,OACR,YAGXv3F,EAAMk3F,EAAU1uI,KAAMwoI,MAAQh5H,GAACxP,KAASmD,EAACnD,KAAQopI,KAEjDzwD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALS,wGAgBA,CACTF,kBACAn4F,QAASg4F,EACT/3F,QAAS+3F,EACTK,MALS,yBASPA,EAAK,GACLC,EAAS,YAEJ3pH,EAAI6mG,EAAM/wH,OACb4mB,EAAMitH,EAAU5zI,cACf8wH,EAAK6iB,OAIVC,EAAUjtH,GAAOmqG,EACjBA,EAAK6iB,MAAMhoI,SAAO,SAAU2D,GAC1BqkI,EAAMrkI,EAAEmlB,eAAiB9N,YALzB2J,QAAQ9Q,IAAIzf,IACL,OAsBP65C,EAAW,CACbt+B,iBAHAk4H,EAAM7nI,QAAQse,IAIdA,IAAKA,EACL1pB,aAhBWiV,OACNA,EAAI,OACA,MAELlG,EAAIkG,EAAKif,0BACK,IAAPk/G,EAAMrkI,IAAsBskI,EAAUD,EAAMrkI,IAC9CskI,EAAUD,EAAMrkI,aAavBukI,EAAS,CACbC,MAAe,CACbvsI,EAAG,QACH8kI,GAAI,QACJ0H,YAAW,cAGbC,MAAe,CACbzsI,EAAG,QACH8kI,GAAI,QACJ0H,YAAW,6BAGbE,MAAe,CACb1sI,EAAG,QACH8kI,GAAI,cACJ0H,YAAW,wBAGbG,MAAe,CACb3sI,EAAG,QACH8kI,GAAI,QACJ0H,YAAW,YAGbI,KAAc,CACZ5sI,EAAG,YACHC,EAAG,WACHusI,YAAW,aAGbK,KAAc,CACZ7sI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,uBAGbM,MAAe,CACb9sI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,4BAGbO,SAAkB,CAChB/sI,EAAG,YACHC,EAAG,YACHusI,YAAW,iBAGbQ,OAAgB,CACdhtI,EAAG,WACH8kI,GAAI,IACJ0H,YAAW,8BAGbS,QAAiB,CACfjtI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,mCAGbU,MAAe,CACbltI,EAAG,QACH8kI,GAAI,cACJ0H,YAAW,qBAGbW,OAAgB,CACdntI,EAAG,YACH8kI,GAAI,YACJ0H,YAAW,eAGbY,SAAkB,CAChBptI,EAAG,YACH8kI,GAAI,YACJ0H,YAAW,yBAGba,OAAgB,CACdrtI,EAAG,UACHC,EAAG,UACHusI,YAAW,eAGbc,OAAgB,CACdttI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,oBAGbe,OAAgB,CACdvtI,EAAG,kBACH8kI,GAAI,kBACJ0H,YAAW,eAGbgB,IAAa,CACXxtI,EAAG,UACH8kI,GAAI,OACJ0H,YAAW,mCAGbiB,OAAgB,CACdztI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,2BAGbkB,QAAiB,CACf1tI,EAAG,WACH8kI,GAAI,SACJ0H,YAAW,gBAGbmB,QAAiB,CACf3tI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,gBAGboB,QAAiB,CACf5tI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,gBAGbqB,QAAiB,CACf7tI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,gBAGbsB,QAAiB,CACf9tI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,gBAGbuB,QAAiB,CACf/tI,EAAG,YACH8kI,GAAI,SACJ0H,YAAW,6BAGbwB,QAAiB,CACfhuI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,gCAGbyB,SAAkB,CAChBjuI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,gBAGb0B,QAAiB,CACfluI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,gBAGb2B,QAAiB,CACfnuI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,gBAGb4B,MAAe,CACbpuI,EAAG,QACH8kI,GAAI,IACJ0H,YAAW,SAGb6B,KAAc,CACZruI,EAAG,QACH8kI,GAAI,IACJ0H,YAAW,gCAGb8B,MAAe,CACbtuI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,cAGb+B,MAAe,CACbvuI,EAAG,QACH8kI,GAAI,QACJ0H,YAAW,cAGbgC,MAAe,CACbxuI,EAAG,QACH8kI,GAAI,IACJ0H,YAAW,mBAGbiC,SAAkB,CAChBzuI,EAAG,UACHC,EAAG,UACHusI,YAAW,0BAGbkC,QAAiB,CACf1uI,EAAG,QACH8kI,GAAI,QACJ0H,YAAW,yBAGbmC,MAAe,CACb3uI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,oBAGboC,OAAgB,CACd5uI,EAAG,QACHC,EAAG,aACHusI,YAAW,kBAGbqC,QAAiB,CACf7uI,EAAG,QACHC,EAAG,aACHusI,YAAW,WAGbsC,MAAe,CACb9uI,EAAG,QACH8kI,GAAI,MACJ0H,YAAW,UAGbuC,MAAe,CACb/uI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,UAGbwC,KAAc,CACZhvI,EAAG,QACH8kI,GAAI,OACJ0H,YAAW,WAGTrC,EAAQmC,EAAUnC,MAAK,CACzBnqI,EAAG,QACH8kI,GAAI,cACJ0H,YAAW,UAGbF,EAAU/C,OAAM,CACdvpI,EAAG,QACHC,EAAG,QACHusI,YAAW,iCAgDTyC,EAAS,GACbA,EAAUC,MAAK,CACb3I,QAAO,QACP4I,QAAO,QACPC,UAAS,SAGXH,EAAUI,OAAM,CACd9I,QAAO,yBACP4I,QAAO,SACPC,UAAS,SAGXH,EAAUK,OAAM,CACd/I,QAAO,uBACP4I,QAAO,QACPC,UAAS,wCAGXH,EAAUM,MAAK,CACbhJ,QAAO,QACP4I,QAAO,QACPC,UAAS,6BAGXH,EAAUO,MAAK,CACb5I,SAAQ,2CACRuI,QAAO,SACPC,UAAS,6BAGXH,EAAUQ,QAAO,CACflJ,QAAO,mBACP4I,QAAO,SACPC,UAAS,+BAGXH,EAAUS,SAAQ,CAChBnJ,QAAO,mBACP4I,QAAO,UACPC,UAAS,yBAGXH,EAAUU,cAAa,CACrBpJ,QAAO,qBACP4I,QAAO,SACPC,UAAS,iBAGXH,EAAUW,OAAM,CACdrJ,QAAO,qDACP4I,QAAO,OACPC,UAAS,kBAGXH,EAAUY,MAAK,CACbtJ,QAAO,qDACP4I,QAAO,WACPC,UAAS,gBAGXH,EAAUa,WAAU,CAClBvJ,QAAO,yBACP4I,QAAO,OACPC,UAAS,cAGXH,EAAUc,OAAM,CACdxJ,QAAO,6CACP4I,QAAO,OACPC,UAAS,mCAGXH,EAAUe,OAAM,CACdzJ,QAAO,yDACP4I,QAAO,OACPC,UAAS,aAGXH,EAAUgB,OAAM,CACd1J,QAAO,aACP4I,QAAO,SACPC,UAAS,kBAGXH,EAAUiB,SAAQ,CAChB3J,QAAO,eACP4I,QAAO,SACPC,UAAS,YAGXH,EAAUkB,cAAa,CACrB5J,QAAO,cACP4I,QAAO,SACPC,UAAS,yBAGXH,EAAUmB,MAAK,CACb7J,QAAO,wDACP4I,QAAO,OACPC,UAAS,8BA2CR,IAECiB,EAAc,YA6BTC,EAAmB9qI,MACL,IAAjBA,EAAM/M,OAAY,OACb,SAEL83I,EAAkB,MAAP/qI,EAAM,UACjB+qI,IACF/qI,EAAQA,EAAMtC,MAAM,IAEb,SAALsC,EAAgB,CACVyI,KAAI,OAAUuiI,WAAYD,EAAUE,KAAM,KAAMC,QAAQ,IAGhEziI,KAAMzI,EACNgrI,WAAYD,EACZE,KAAMJ,EAAe7qI,IAAU,KAC/BkrI,QAAQ,YAIHC,EAAiBC,UAChBA,EAAU,KAAQnkI,KAAKiM,GAAK,aA4B7Bm4H,EAAal1I,EAAMm1I,EAAO5oI,UAC1B8B,OAAO8tF,aAAajxF,MAAM,KAAI,IAAMmtF,WAAWr4F,EAAKwS,OAAOjL,MAAM4tI,EAAO5oI,cAyBxE6oI,EAASl6B,UACTA,EAAMz5G,KAAG,SAAWwZ,UAAY+5H,EAAiB/5H,EAAEo6H,gBAAiBL,EAAiB/5H,EAAEq6H,4BAGvFC,EAAev1I,EAAMoW,EAAQo/H,UAElCljI,KAAM4iI,EAAal1I,EAAMoW,EAAS,EAAGA,EAAS,IAAIsoH,OAClDtrG,OAAQ8hH,EAAal1I,EAAMoW,EAAS,GAAIA,EAAS,GAAK,GAAGsoH,OACzD+W,cAAez1I,EAAK01I,WAAWt/H,EAAS,GAAIo/H,GAC5CG,cAAe31I,EAAK01I,WAAWt/H,EAAS,GAAIo/H,GAC5CI,eAAgB51I,EAAK01I,WAAWt/H,EAAS,IAAKo/H,GAC9CK,eAAgB71I,EAAK01I,WAAWt/H,EAAS,IAAKo/H,GAC9CM,iBAAkB91I,EAAK01I,WAAWt/H,EAAS,IAAKo/H,GAChDO,kBAAmB/1I,EAAK01I,WAAWt/H,EAAS,IAAKo/H,GACjDQ,cAAeh2I,EAAKi2I,SAAS7/H,EAAS,IAAKo/H,aAItCU,EAAcl2I,EAAMoW,EAAQ+/H,EAAYX,WAC3CY,EAAchgI,EAAS,IAEvBigI,EAAgB,GACXx5I,EAAI,EAAGA,EAAIs5I,EAAWH,cAAen5I,IAAC,KACzCy5I,EAAM,CACRhB,cAAet1I,EAAKu2I,WAAWH,EAJZ,GAI0Bv5I,EAAsB24I,GACnEH,eAAgBr1I,EAAKu2I,WAAWH,EALb,GAK2Bv5I,EAAuB,EAAG24I,GACxEgB,iBAAkBx2I,EAAKu2I,WAAWH,EANf,GAM6Bv5I,EAAuB,EAAG24I,GAC1EiB,kBAAmBz2I,EAAKu2I,WAAWH,EAPhB,GAO8Bv5I,EAAuB,GAAI24I,IAE9Ea,EAAiBlxI,KAAKmxI,UAEjBD,WAGAz8F,EAAW88F,EAAQ/wI,wBACJi0C,GAAU,OAAA,IACnBA,EAAW88F,GAExB/wI,EAAWA,GAAQ,SAAaqsB,MAC3BA,EAAK,MACAA,OAGN2kH,EAAOr6I,EAAMo6I,MACH,iBAAJC,OAINC,EAAUh9F,EAAWlD,YAAYr5C,IAAIs5I,EAAK1J,aAC1C2J,MAIAD,EAAKzL,WAA2B,SAAdyL,EAAKzL,UAAoB,KACzC2L,EAAWvrH,EAAMgoH,EAAWqD,EAAKzL,WACjC2L,IACFF,EAAK9L,aAAe8L,EAAK9L,eAAiBgM,EAASjM,QAAUiM,EAASjM,QAAQv4H,MAAK,KAAQ,MAC3FskI,EAAK9I,MAAQgJ,EAASrD,QACtBmD,EAAKlD,UAAYoD,EAASpD,UAAYoD,EAASpD,UAAYkD,EAAKzL,WAGpEyL,EAAKrM,GAAKqM,EAAKrM,IAAM,EACrBqM,EAAKxL,KAAOwL,EAAKxL,MAAI,MACrBwL,EAAK9I,MAAQ8I,EAAK9I,OAAK,QACvB8I,EAAKx6F,KAAOw6F,EAAKx6F,MAAQw6F,EAAKtN,SArWVhlI,EAAGC,EAAOkmI,EAC1Bx6H,EACAC,EACAugI,EACAhgI,EAmWAsmI,WApVUzyI,EAAGC,EAAG6kI,EAAI0E,EAAOkJ,OAC1B1yI,EAAC,KACAmvI,EAAUloH,EAAMqlH,EAAW9C,GAC1B2F,IACHA,EAAUhF,GAEZnqI,EAAImvI,EAAQnvI,EACZC,EAAIkvI,EAAQlvI,EACZ6kI,EAAKqK,EAAQrK,UAGXA,IAAO7kI,IACTA,GAAK,EAAM,EAAM6kI,GAAM9kI,IAEd,IAAP8kI,GAAYr4H,KAAK0F,IAAInS,EAAIC,GAAK4iI,KAChC6P,GAAS,EACTzyI,EAAID,IAGJA,EAAGA,EACHC,EAAGA,EACH6kI,GAAIA,EACJyE,OAAQmJ,GA8TInJ,CAAO+I,EAAKtyI,EAAGsyI,EAAKryI,EAAGqyI,EAAKxN,GAAIwN,EAAK9I,MAAO8I,EAAK/I,QAC3DoJ,GAxWgB3yI,EAwWGyyI,EAAQzyI,EAxWRC,EAwWWwyI,EAAQxyI,EAAGwyI,EAAQ3N,GAxWvBqB,EAwW2BmM,EAAKnM,IArW1DgG,IAFAxgI,EAAK3L,EAAIA,IACT4L,EAAK3L,EAAIA,IACQ0L,EACjBQ,EAAI,EACJg6H,GAEFx6H,GADA3L,GAAK,EAAImsI,GAjtCD,mBAitCeA,GA/sCjB,mBAEA,oBA6sC6BA,KAC1BnsI,EACTmsI,EAAK,GAELhgI,EAAIM,KAAK8W,KAAK4oH,IAIdA,GAAIA,EACJhgI,EAAGA,EACHymI,KAJSjnI,EAAKC,GAAMA,IA6VlBg7H,EAtJH,SACkBA,eAEFvnI,IAAbunI,EAAiC,KACzBA,EAAS54H,MAAK,KACb5Q,IAAIkzI,GAiJFuC,CAAYP,EAAK1L,UAC5BkM,EAAWR,EAAKzN,gBAtNPgC,EAAWL,EAAcxmI,EAAGC,EAAGksI,EAAIyG,EAAKhM,OACjDlnE,EAAG,UAGLA,EAAIqzE,gBADY1zI,IAAdwnI,GAAoC,SAATA,EAz2Cf,EADF,EAg3CVL,IACF9mE,EAAI8mE,aAAeA,EAAappI,IAAIo9B,YACR,IAAxBklC,EAAI8mE,aAAa,IAAoC,IAAxB9mE,EAAI8mE,aAAa,IAAoC,IAAxB9mE,EAAI8mE,aAAa,KAC7E9mE,EAAIqzE,WAt3CO,GAw3CTrzE,EAAI8mE,aAAa/tI,OAAS,IACA,IAAxBinE,EAAI8mE,aAAa,IAAoC,IAAxB9mE,EAAI8mE,aAAa,IAAoC,IAAxB9mE,EAAI8mE,aAAa,IAAoC,IAAxB9mE,EAAI8mE,aAAa,KAC1G9mE,EAAIqzE,WAz3CK,EA03CTrzE,EAAI8mE,aAAa,IAAM7D,EACvBjjE,EAAI8mE,aAAa,IAAM7D,EACvBjjE,EAAI8mE,aAAa,IAAM7D,EACvBjjE,EAAI8mE,aAAa,GAAM9mE,EAAI8mE,aAAa,GAAK,IAAa,KAK5DI,IACFlnE,EAAIqzE,WAl4CY,EAm4ChBrzE,EAAIszE,MAAQpM,GAEdlnE,EAAI1/D,EAAIA,EACR0/D,EAAIz/D,EAAIA,EACRy/D,EAAIysE,GAAKA,EACTzsE,EAAIkzE,IAAMA,EACHlzE,EAqLsBmlE,CAAMyN,EAAKzL,UAAWyL,EAAK9L,aAAciM,EAAQzyI,EAAGyyI,EAAQxyI,EAAG0yI,EAAIxG,GAAIwG,EAAIC,IACtGhM,GAEFx+H,EAAMvL,KAAOy1I,GACblqI,EAAMvL,KAAO01I,QAGRvyI,EAAIyyI,EAAQzyI,OACZC,EAAIwyI,EAAQxyI,OACZ6kI,GAAK2N,EAAQ3N,QACbyE,OAASkJ,EAAQlJ,YAGjB4C,GAAKwG,EAAIxG,QACThgI,EAAIwmI,EAAIxmI,OACRymI,IAAMD,EAAIC,SAGV/N,MAAQiO,OAGR5G,OAGL5qI,EAAS,KAAIzE,WA3CXyE,EAAS+wI,QALT/wI,EAAS+wI,GAmFV,SACMY,EAAqBz9D,EAAG22D,EAAInsI,OAK/BkzI,EACAC,EACAC,EACAC,EAPAC,EAAY99D,EAAEnpE,EACdknI,EAAW/9D,EAAElpE,EACbknI,EAASh+D,EAAE17B,EAAI07B,EAAE17B,EAAI,EAWtB,GACCy5F,GAAY3Q,GAAW2Q,GAAW,MAAS3Q,EAC7C2Q,GAAY3Q,UACH2Q,EAAW3Q,GAAW2Q,EAAW,MAAQ3Q,EAClD2Q,EAAW3Q,UACF2Q,GAAY3Q,SAGZv2H,GAAIwF,EAAAA,EAAUvF,GAAIuF,EAAAA,EAAUioC,EAAG07B,EAAE17B,MACjCy5F,EAAW3Q,EACO,MAAA,CAClBv2H,EAAGwF,EAAAA,EAAUvF,EAAGuF,EAAAA,EAAUioC,EAAG07B,EAAE17B,UAGtCw5F,EAAY7mI,KAAKiM,KACnB46H,GAAc,EAAI7mI,KAAKiM,IAEzBy6H,EAAU1mI,KAAKC,IAAI6mI,GACnBF,EAAU5mI,KAAKD,IAAI+mI,GACnBH,EAAWD,EAAUA,GAGnB9mI,IAFF6mI,EAAKlzI,EAAKyM,KAAK8W,KAAK,EAAQ4oH,EAAKiH,IAEtBI,GAAUH,EAAU5mI,KAAKD,IAAI8mI,GACtChnI,GAAI4mI,EAAKM,GAAUH,EAAU5mI,KAAKC,IAAI4mI,GACtCx5F,GAAKo5F,GAAM,EAAI/G,GAAOqH,GAAUL,YAI3BM,EAAqBj+D,EAAG22D,EAAInsI,EAAGC,GAEgB,IAKlDyzI,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKAhB,EAEAE,EAvBAe,EAAQ,MAkBRC,EAAIh/D,EAAEnpE,EACNooI,EAAIj/D,EAAElpE,EACNooI,EAAIl/D,EAAE17B,EAAI07B,EAAE17B,EAAI,EAQ+B,GAHnD45F,EAAIjnI,KAAK8W,KAAKixH,EAAIA,EAAIC,EAAIA,GAC1Bd,EAAKlnI,KAAK8W,KAAKixH,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAG/BhB,EAAI1zI,EAAIu0I,GAMkD,GAH5DjB,EAAY,EAIRK,EAAK3zI,EAAIu0I,SACA3R,EACX4Q,GAAUvzI,GAERoM,EAAGmpE,EAAEnpE,EACLC,EAAGkpE,EAAElpE,EACLwtC,EAAG07B,EAAE17B,QAMTw5F,EAAY7mI,KAAKyrC,MAAMu8F,EAAGD,GAY5BZ,EAAKc,EAAIf,EAGTM,GAFAJ,EAAKH,EAAIC,IAEK,EAAMxH,IADpB2H,EAAK,EAAMrnI,KAAK8W,KAAK,EAAM4oH,GAAM,EAAMA,GAAM0H,EAAKA,IAElDK,EAAQN,EAAKE,EACbQ,EAAO,EAGmD,GAExDA,IAMAP,EAAK5H,GALL6H,EAAKh0I,EAAIyM,KAAK8W,KAAK,EAAM4oH,EAAK+H,EAAQA,KAKtBF,GAFhBR,EAASE,EAAIO,EAAQS,EAAIR,EAAQF,GAAM,EAAM7H,EAAK+H,EAAQA,KAM1DG,GADAD,EAAOR,GAFPE,EAAK,EAAMrnI,KAAK8W,KAAK,EAAMwwH,GAAM,EAAMA,GAAMF,EAAKA,KAGnCI,GAFfE,EAAON,GAAM,EAAME,GAAMD,GAEKI,EAC9BD,EAAQE,EACRD,EAAQE,QAEHC,EAAQA,EAnFDE,OAmFmBD,EAlFnB,WAuFZjoI,EAAGinI,EACHhnI,EAHSG,KAAK4qC,KAAK+8F,EAAO3nI,KAAK0F,IAAIgiI,IAInCr6F,EAAG05F,YA+EEmB,GAAY51I,UAn1DJ,IAo1DPA,GAn1DO,IAm1DgBA,EAzPjCw2C,EAAWlD,YAAcA,EACzBkD,EAAWlD,YAAYt+B,YA2PnB6gI,GAAe,SAAYv7I,EAAQqM,EAAM8sC,eAxPtBn5C,EAAQqM,UACzBrM,EAAO05I,aAAertI,EAAKqtI,cAEpB15I,EAAO2G,IAAM0F,EAAK1F,GAAKyM,KAAK0F,IAAI9Y,EAAO8yI,GAAKzmI,EAAKymI,IAAM,SAlmDnD,IAsmDJ9yI,EAAO05I,WACR15I,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,GAtmD9I,IAumDJntI,EAAO05I,YACR15I,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAAMntI,EAAOmtI,aAAa,KAAO9gI,EAAK8gI,aAAa,IAgPrWqO,CAAcx7I,EAAQqM,GAAI,OACrB8sC,KAt1DO,IA41DZn5C,EAAO05I,YA51DK,IA41DyBrtI,EAAKqtI,WAA0B,OAC/DvgG,MAILsiG,EAAWz7I,EAAO2G,EAClB+0I,EAAY17I,EAAO8yI,MAp2DL,IAq2Dd9yI,EAAO05I,WAA4B,IAEf,IADFiC,GAAe37I,GAAQ,EAAOm5C,GAC3B,OAGvBsiG,EAAWrS,EACXsS,EAAYrS,MAGVuS,EAASvvI,EAAK1F,EACdk1I,EAASxvI,EAAKzF,EACdk1I,EAAUzvI,EAAKymI,MAh3DD,IAi3DdzmI,EAAKqtI,aACPkC,EAASxS,EACTyS,EA/2DsB,YAg3DtBC,EAAUzS,GAIRqS,IAAcI,GAAWL,IAAaG,IAAWN,GAAYt7I,EAAO05I,cAAiB4B,GAAYjvI,EAAKqtI,YAAU,OAC3GvgG,MAITA,EAAQygG,EAAqBzgG,EAAOuiG,EAAWD,GAE3CH,GAAYt7I,EAAO05I,cACrBvgG,EAjHF,SACyBgjC,EAAGu9D,EAAYvM,MAlxDzB,IAoxDXuM,SAIA1mI,EAAGmpE,EAAEnpE,EAAIm6H,EAAa,GACtBl6H,EAAGkpE,EAAElpE,EAAIk6H,EAAa,GACtB1sF,EAAG07B,EAAE17B,EAAI0sF,EAAa,OAzxDX,IA2xDJuM,EAAyB,KAC9BqC,EAAQ5O,EAAa,GACrB6O,EAAQ7O,EAAa,GACrB8O,EAAQ9O,EAAa,GACrB+O,EAAQ/O,EAAa,GACrBgP,EAAQhP,EAAa,GACrBiP,EAAQjP,EAAa,GACrBkP,EAAOlP,EAAa,UAItBn6H,EAAGqpI,GAAQlgE,EAAEnpE,EAAIopI,EAAQjgE,EAAElpE,EAAIkpI,EAAQhgE,EAAE17B,GAAKs7F,EAC9C9oI,EAAGopI,GAAQD,EAAQjgE,EAAEnpE,EAAImpE,EAAElpE,EAAIipI,EAAQ//D,EAAE17B,GAAKu7F,EAC9Cv7F,EAAG47F,IAASF,EAAQhgE,EAAEnpE,EAAIkpI,EAAQ//D,EAAElpE,EAAIkpE,EAAE17B,GAAKw7F,IAyFzCK,CAAkBnjG,EAAOn5C,EAAO05I,WAAY15I,EAAOmtI,eAEzDmO,GAAYjvI,EAAKqtI,cACnBvgG,WAnFyBgjC,EAAGu9D,EAAYvM,MAlzD3B,IAozDXuM,SAIA1mI,EAAGmpE,EAAEnpE,EAAIm6H,EAAa,GACtBl6H,EAAGkpE,EAAElpE,EAAIk6H,EAAa,GACtB1sF,EAAG07B,EAAE17B,EAAI0sF,EAAa,OAzzDX,IA4zDJuM,EAAyB,KAC9BqC,EAAQ5O,EAAa,GACrB6O,EAAQ7O,EAAa,GACrB8O,EAAQ9O,EAAa,GACrB+O,EAAQ/O,EAAa,GACrBgP,EAAQhP,EAAa,GACrBiP,EAAQjP,EAAa,GACrBkP,EAAOlP,EAAa,GACpBoP,GAASpgE,EAAEnpE,EAAI+oI,GAASM,EACxBG,GAASrgE,EAAElpE,EAAI+oI,GAASK,EACxBI,GAAStgE,EAAE17B,EAAIw7F,GAASI,SAK1BrpI,EAAGupI,EAAQH,EAAQI,EAAQL,EAAQM,EACnCxpI,GAAImpI,EAAQG,EAAQC,EAAQN,EAAQO,EACpCh8F,EAAG07F,EAAQI,EAAQL,EAAQM,EAAQC,IAuD7BC,CAAoBvjG,EAAO9sC,EAAKqtI,WAAYrtI,EAAK8gI,eAE3Dh0F,EAAQihG,EAAqBjhG,EAAO2iG,EAASF,EAAQC,GAr4DnC,IAu4DdxvI,EAAKqtI,aAEqB,IADFiC,GAAetvI,GAAM,EAAM8sC,GACxB,cAKxBA,YAGAwiG,GAAe37I,EAAQ28I,EAASxjG,MAClB,OAAjBn5C,EAAO25I,OAA0C,IAAxB35I,EAAO25I,MAAMv6I,cACxCswB,QAAQ9Q,IAAG,+BACJ,UAELg6B,EAAK,CAAI5lC,GAAImmC,EAAMnmC,EAAGC,EAAGkmC,EAAMlmC,GAC/ByU,EAAM,CAAI1U,EAAG6K,OAAOupC,IAAKn0C,EAAG4K,OAAOupC,KACnCw1F,EAAc,GACTz9I,EAAI,EAAGA,EAAIa,EAAO25I,MAAMv6I,OAAQD,IAAC,KACpCi4I,EAAOp3I,EAAO25I,MAAMx6I,MACxBy9I,EAAen1I,KAAK2vI,EAAKxiI,MACrBwiI,EAAKC,OAAM,CACb3vH,EAASkxB,WAGO,OAAdw+F,EAAKA,UAOLyF,EAAUzF,EAAKA,KAAK0F,SAAS,GAE7BC,GAAW3pI,KAAK0F,IAAI+jI,EAAQG,IAAI,IAAM5pI,KAAK0F,IAAI+jI,EAAQG,IAAI,KAAO,IAClEplI,EAAOilI,EAAQI,GAAG,GAAKF,EACvBllI,EAAOglI,EAAQI,GAAG,GAAKF,EACvBjlI,EAAO+kI,EAAQI,GAAG,IAAMJ,EAAQK,IAAI,GAAK,GAAKL,EAAQG,IAAI,GAAKD,EAC/DhlI,EAAO8kI,EAAQI,GAAG,IAAMJ,EAAQK,IAAI,GAAK,GAAKL,EAAQG,IAAI,GAAKD,OAC/DllI,EAAO+gC,EAAM3lC,GAAK2E,EAAOghC,EAAM5lC,GAAK+E,EAAO6gC,EAAM3lC,GAAK6E,EAAO8gC,EAAM5lC,IAGvE0U,EAASy1H,GAAkBvkG,EAAO+jG,EAASE,GACtC7rH,MAAMtJ,EAAO1U,KAAC,cAjBbokI,EAAKD,iBACPznH,QAAQ9Q,IAAG,kCAAqCw4H,EAAKxiI,KAAI,MAClD,SAmBToc,MAAMtJ,EAAO1U,IACf0c,QAAQ9Q,IAAG,oDACRg6B,EAAM5lC,EAAI02H,EAAG,IAAS9wF,EAAM3lC,EAAIy2H,EAAG,YAAiBkT,EAAc,MAC9D,IAETzjG,EAAMnmC,GAAK0U,EAAO1U,EAClBmmC,EAAMlmC,EAAIyU,EAAOzU,EACV,YAGAkqI,GAAkBC,EAAKT,EAASU,OACnCpkI,EAAG,CAAIjG,EAAG6K,OAAOupC,IAAKn0C,EAAG4K,OAAOupC,QAChCp2B,MAAMosH,EAAIpqI,GAAC,OAAYiG,MACvBqkI,EAAE,CAAItqI,EAAGoqI,EAAIpqI,EAAGC,EAAGmqI,EAAInqI,GAC3BqqI,EAAGtqI,GAAKqqI,EAAGJ,GAAG,GACdK,EAAGrqI,GAAKoqI,EAAGJ,GAAG,GACdK,EAAGtqI,EAAIk/H,EAAWoL,EAAGtqI,EAAII,KAAKiM,IAAMjM,KAAKiM,OACrCP,EAAIy+H,GAAeD,EAAID,MACvBV,EAAO,IACL3rH,MAAMlS,EAAE9L,GAAC,OACJiG,EAET6F,EAAE9L,EAAIsqI,EAAGtqI,EAAI8L,EAAE9L,EACf8L,EAAE7L,EAAIqqI,EAAGrqI,EAAI6L,EAAE7L,MAEXuqI,EAAKR,EADL79I,EAAI,QAGN69I,EAAMO,GAAez+H,EAAGu+H,GACpBrsH,MAAMgsH,EAAIhqI,GAAC,CACb0c,QAAQ9Q,IAAG,mGAGb4+H,EAAG,CAAIxqI,EAAGsqI,EAAGtqI,GAAKgqI,EAAIhqI,EAAI8L,EAAE9L,GAAIC,EAAGqqI,EAAGrqI,GAAK+pI,EAAI/pI,EAAI6L,EAAE7L,IACrD6L,EAAE9L,GAAKwqI,EAAIxqI,EACX8L,EAAE7L,GAAKuqI,EAAIvqI,QACJ9T,KAAOiU,KAAK0F,IAAI0kI,EAAIxqI,GAXZ,OAWwBI,KAAK0F,IAAI0kI,EAAIvqI,GAXrC,UAYb9T,EAAI,SACNuwB,QAAQ9Q,IAAG,mDACJ3F,EAETA,EAAIjG,EAAIk/H,EAAWpzH,EAAE9L,EAAIqqI,EAAGJ,GAAG,IAC/BhkI,EAAIhG,EAAI6L,EAAE7L,EAAIoqI,EAAGJ,GAAG,QAEfjsH,MAAMlS,EAAE9L,KACXiG,EAAIjG,EAAIoqI,EAAIpqI,EAAI8L,EAAE9L,EAClBiG,EAAIhG,EAAImqI,EAAInqI,EAAI6L,EAAE7L,UAGfgG,WAGAskI,GAAeH,EAAKC,OAKvBI,EAJA3+H,EAAC,CAAI9L,EAAGoqI,EAAIpqI,EAAIqqI,EAAGL,IAAI,GAAI/pI,EAAGmqI,EAAInqI,EAAIoqI,EAAGL,IAAI,IAC7CU,EAAWtqI,KAAKqI,MAAMqD,EAAE9L,GAAxB0qI,EAA+BtqI,KAAKqI,MAAMqD,EAAE7L,GAC5C0qI,EAAW7+H,EAAE9L,EAAI,EAAM0qI,EAAvBC,EAAkC7+H,EAAE7L,EAAI,EAAMyqI,EAC9CzkI,EAAG,CAAGjG,EAAG6K,OAAOupC,IAAKn0C,EAAG4K,OAAOupC,QAE/Bs2F,EAAS,GAAKA,GAAUL,EAAGH,IAAI,GAAC,OAC3BjkI,KAELykI,EAAS,GAAKA,GAAUL,EAAGH,IAAI,GAAC,OAC3BjkI,EAETwkI,EAAOC,EAASL,EAAGH,IAAI,GAAMQ,MACzBE,EAAUP,EAAGQ,IAAIJ,GAAK,GAAtBG,EAA6BP,EAAGQ,IAAIJ,GAAK,GAC7CA,QACIK,EAAST,EAAGQ,IAAIJ,GAAK,GAArBK,EAA4BT,EAAGQ,IAAIJ,GAAK,GAC5CA,GAAOJ,EAAGH,IAAI,OACVa,EAAUV,EAAGQ,IAAIJ,GAAK,GAAtBM,EAA6BV,EAAGQ,IAAIJ,GAAK,GAC7CA,QACIO,EAAUX,EAAGQ,IAAIJ,GAAK,GAAtBO,EAA6BX,EAAGQ,IAAIJ,GAAK,GACzCQ,EAAMN,EAASA,EAAQO,EAAMP,GAAU,EAAMA,GAC/CQ,GAAO,EAAMR,IAAW,EAAMA,GAASS,GAAO,EAAMT,GAAUA,SAChE1kI,EAAIjG,EAAKmrI,EAAMP,EAAQM,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EACzD9kI,EAAIhG,EAAKkrI,EAAMP,EAAQM,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EAClD9kI,MAGLolI,GAAW,SAAYC,EAAKC,EAAQplG,OAIlC6lC,EAAGlgE,EAAG3f,EAHNq/I,EAAMrlG,EAAMnmC,EACdyrI,EAAMtlG,EAAMlmC,EACZyrI,EAAMvlG,EAAMsH,GAAK,EAEf4lB,EAAG,OACFlnE,EAAI,EAAGA,EAAI,EAAGA,QACbo/I,GAAgB,IAANp/I,QAAuB6G,IAAZmzC,EAAMsH,SAGrB,IAANthD,GACF6/E,EAAIw/D,EAEF1/H,GADgC,SAAzBvQ,QAAQ+vI,EAAI7Q,KAAKtuI,IACvB,IAEA,KAIU,IAANA,GACP6/E,EAAIy/D,EAEF3/H,GADgC,SAAzBvQ,QAAQ+vI,EAAI7Q,KAAKtuI,IACvB,IAEA,MAIH6/E,EAAI0/D,EACJ5/H,EAAC,KAEKw/H,EAAI7Q,KAAKtuI,YAEfknE,EAAIvnD,GAAKkgE,gBAGT3Y,EAAIvnD,IAAMkgE,gBAGV3Y,EAAIvnD,GAAKkgE,gBAGT3Y,EAAIvnD,IAAMkgE,qBAGOh5E,IAAbmzC,EAAMr6B,KACRunD,EAAI5lB,EAAIu+B,sBAIOh5E,IAAbmzC,EAAMr6B,KACRunD,EAAI5lB,GAAKu+B,wBAKJ,YAGJ3Y,GAGLs4E,GAAO,SAAan+H,OAClB6lD,EAAG,CACLrzD,EAAGwN,EAAM,GACTvN,EAAGuN,EAAM,WAEPA,EAAMphB,OAAO,IACfinE,EAAI5lB,EAAIjgC,EAAM,IAEZA,EAAMphB,OAAO,IACfinE,EAAIr7D,EAAIwV,EAAM,IAET6lD,YAOAu4E,GAAWjyF,MACQ,mBAAf9uC,OAAOy0G,SAAuB,IACnCz0G,OAAOy0G,SAAS3lE,GAAG,iBAGbllC,UAAS,yCAEP,iBAAHklC,GAAoBA,GAAQA,IAAQ2lE,SAAS3lE,GAAG,MAAA,IAC/CllC,UAAS,+CAQd5V,GAAU7R,EAAQqM,EAAM8sC,OAC3B08F,KACAxoI,MAAM4B,QAAQkqC,KAChBA,EAAQwlG,GAAQxlG,IAvBL,SAAaA,GAC1BylG,GAAWzlG,EAAMnmC,GACjB4rI,GAAWzlG,EAAMlmC,GAuBjB4rI,CAAY1lG,GAERn5C,EAAOwrI,OAASn/H,EAAKm/H,gBAXNxrI,EAAQqM,UAlmEZ,IAmmENrM,EAAOwrI,MAAMkO,YAlmEP,IAkmEoC15I,EAAOwrI,MAAMkO,aAA4C,UAAdrtI,EAAKmhI,YAnmEpF,IAmmEgHnhI,EAAKm/H,MAAMkO,YAlmE3H,IAkmEwJrtI,EAAKm/H,MAAMkO,aAA8C,UAAhB15I,EAAOwtI,UAUrLsR,CAAY9+I,EAAQqM,KAEpD8sC,EAAQtnC,GAAU7R,EADlB61I,EAAK,IAAO35F,EAAU,SACW/C,GACjCn5C,EAAS61I,GAGI,QAAX71I,EAAOytI,OACTt0F,EAAQklG,GAAYr+I,GAAQ,EAAOm5C,IAGlB,YAAfn5C,EAAOuvI,SACTp2F,EAAK,CACHnmC,EAAGmmC,EAAMnmC,EAAIy2H,EACbx2H,EAAGkmC,EAAMlmC,EAAIw2H,EACbhpF,EAAGtH,EAAMsH,GAAK,WAGZzgD,EAAO6qI,WACT1xF,EAAK,CACHnmC,EAAGmmC,EAAMnmC,EAAIhT,EAAO6qI,SACpB53H,EAAGkmC,EAAMlmC,EAAIjT,EAAO6qI,SACpBpqF,EAAGtH,EAAMsH,GAAK,MAGlBtH,EAAQn5C,EAAO26C,QAAQxB,IACb,UAKRn5C,EAAOqtI,iBACTl0F,EAAMnmC,GAAKhT,EAAOqtI,gBAIpBl0F,EAAQoiG,GAAgBv7I,EAAOwrI,MAAOn/H,EAAKm/H,MAAOryF,UAM9C9sC,EAAKghI,iBACPl0F,EAAK,CACHnmC,EAAGmmC,EAAMnmC,EAAI3G,EAAKghI,eAClBp6H,EAAGkmC,EAAMlmC,EACTwtC,EAAGtH,EAAMsH,GAAK,IAID,YAAbp0C,EAAKkjI,SAEPp2F,EAAK,CACHnmC,EAAGmmC,EAAMnmC,EAAI02H,EACbz2H,EAAGkmC,EAAMlmC,EAAIy2H,EACbjpF,EAAGtH,EAAMsH,GAAK,IAGhBtH,EAAQ9sC,EAAKquC,QAAQvB,GACjB9sC,EAAKw+H,WACP1xF,EAAK,CACHnmC,EAAGmmC,EAAMnmC,EAAI3G,EAAKw+H,SAClB53H,EAAGkmC,EAAMlmC,EAAI5G,EAAKw+H,SAClBpqF,EAAGtH,EAAMsH,GAAK,KAMP,QAATp0C,EAAKohI,KACA4Q,GAAYhyI,GAAM,EAAM8sC,GAG1BA,MAGL08F,GAAQ35F,EAAU,kBAEb6iG,GAAYC,EAAMC,EAAIztG,OACzB0tG,EAAkB74E,EAAKpnE,SACvBoO,MAAM4B,QAAQuiC,IAChB0tG,EAAmBrtI,GAAUmtI,EAAMC,EAAIztG,IAAM,CAAMx+B,EAAGo0C,IAAKn0C,EAAGm0C,KAC1D5V,EAAOpyC,OAAS,OACG,IAAT4/I,EAAKpqI,MAAiC,YAAToqI,EAAKpqI,WAAsC,IAAPqqI,EAAGrqI,MAA+B,YAAPqqI,EAAGrqI,KAC5E,iBAAlBsqI,EAAiBz+F,EAAc,CAChCy+F,EAAiBlsI,EAAGksI,EAAiBjsI,EAAGisI,EAAiBz+F,GAAG4wB,OAAO7/B,EAAOriC,OAAO,KAEjF+vI,EAAiBlsI,EAAGksI,EAAiBjsI,EAAGu+B,EAAO,IAAI6/B,OAAO7/B,EAAOriC,OAAO,KAG1E+vI,EAAiBlsI,EAAGksI,EAAiBjsI,GAAGo+D,OAAO7/B,EAAOriC,OAAO,KAG/D+vI,EAAiBlsI,EAAGksI,EAAiBjsI,KAG/CozD,EAAMx0D,GAAUmtI,EAAMC,EAAIztG,GAEN,KADpBvyC,EAAOC,OAAOD,KAAKuyC,IACVpyC,QAGTH,EAAK8L,SAAO,SAAWuB,WACA,IAAT0yI,EAAKpqI,MAAiC,YAAToqI,EAAKpqI,WAAsC,IAAPqqI,EAAGrqI,MAA+B,YAAPqqI,EAAGrqI,SAClG,MAAHtI,GAAkB,MAAHA,GAAkB,MAAHA,EAAW,eAItC,MAAHA,GAAkB,MAAHA,EAAW,OAIhC+5D,EAAI/5D,GAAOklC,EAAOllC,MAZX+5D,YAkBJ84E,GAAUh9G,UACbA,aAAgB+Z,EACX/Z,EAELA,EAAKi9G,MACAj9G,EAAKi9G,MAEPljG,EAAW/Z,YAGXk9G,GAAQC,EAAUC,EAAQ/jG,GACjC8jG,EAAWH,GAAUG,OAEjBhxI,EADAkxI,GAAS,cAEI,IAAND,GACTA,EAASD,EACTA,EAAWzJ,GACX2J,GAAS,SACe,IAARD,EAAOvsI,GAAqB3F,MAAM4B,QAAQswI,MAC1D/jG,EAAQ+jG,EACRA,EAASD,EACTA,EAAWzJ,GACX2J,GAAS,GAEXD,EAASJ,GAAUI,GACf/jG,EACKujG,GAAYO,EAAUC,EAAQ/jG,IAErCltC,EAAG,CACDosC,QAAO,SAAYlJ,UACVutG,GAAYO,EAAUC,EAAQ/tG,IAEvCmJ,QAAO,SAAYnJ,UACVutG,GAAYQ,EAAQD,EAAU9tG,KAGrCguG,IACFlxI,EAAI8wI,MAAQG,GAEPjxI,GASR,IASCmxI,GAAyB,SAQzBC,GAAsB,SAEtBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJzE,GAAI,GACJ0E,GAAI,CACNrlG,QAASslG,GACTrlG,QA2BC,SACgBslG,OACb5rC,EAAO6rC,GAAQ/rH,GAAO8rH,EAAKE,uBAC3B9rC,EAAK/0D,KAAO+0D,EAAKr5D,IAAG,CACdq5D,EAAKr5D,IAAKq5D,EAAK/0D,IAAK+0D,EAAKr5D,IAAKq5D,EAAK/0D,MAErC+0D,EAAK7iF,KAAM6iF,EAAK+rC,OAAQ/rC,EAAK5nD,MAAO4nD,EAAKt4E,MAhCjD4iH,QAAS0B,IAUR,SACML,GAAU/C,EAAIqD,UACrBA,EAAWA,GAAY,EA4TtB,SACaC,EAAKD,OAEfE,EAAQ,QAAaD,EAAIE,QAC3BC,EAAS,QAAaH,EAAII,gBAErBJ,EAAIK,WAAaL,EAAIM,YAaXJ,EAbkCF,EAAIE,QAa7BE,EAbsCJ,EAAII,SAahCC,EAb0CL,EAAIK,WAc9EE,EAAUC,GAAkBH,GAC5BI,EAAY5tI,KAAKqI,MAAMglI,EAAU,KACjCQ,EAAS7tI,KAAKqI,MAAMklI,EAAW,KAAU,GAoCtBO,EAnCAF,EAmCQG,EAnCGF,EAmCEG,EAnCMN,EAqCtCnxI,EAAQyxI,EAAO,EACfC,EAAY5B,GAA0Bx2E,WAAWt5D,GACjD2xI,EAAY5B,GAAuBz2E,WAAWt5D,GAG9C4xI,EAASF,EAAYH,EAAS,EAC9BM,EAASF,EAAYH,EACrBM,GAAW,EAEXF,EAASlG,KACXkG,EAASA,EAASlG,GAAIsE,GAAI,EAC1B8B,GAAW,IAGTF,IAAW3B,IAAMyB,EAAYzB,IAAK2B,EAAS3B,KAAQ2B,EAAS3B,IAAKyB,EAAYzB,KAAM6B,IACrFF,KAGEA,IAAW1B,IAAMwB,EAAYxB,IAAK0B,EAAS1B,KAAQ0B,EAAS1B,IAAKwB,EAAYxB,KAAM4B,MACrFF,IAEe3B,IACb2B,IAIAA,EAASlG,KACXkG,EAASA,EAASlG,GAAIsE,GAAI,GAGxB6B,EAAS1B,IACX0B,EAASA,EAAS1B,GAAIH,GAAI,EAC1B8B,GAAW,GAGXA,GAAW,GAGPD,IAAW5B,IAAQ0B,EAAY1B,IAAO4B,EAAS5B,KAAW4B,EAAS5B,IAAO0B,EAAY1B,KAAO6B,IACjGD,KAGIA,IAAW3B,IAAQyB,EAAYzB,IAAO2B,EAAS3B,KAAW2B,EAAS3B,IAAOyB,EAAYzB,KAAO4B,MACjGD,IAEe5B,IACb4B,IAIAA,EAAS1B,KACX0B,EAASA,EAAS1B,GAAIH,GAAI,GAGZhvI,OAAO8tF,aAAa8iD,GAAU5wI,OAAO8tF,aAAa+iD,IA5G8BhB,EAAS5iI,OAAO4iI,EAASphJ,OAAS,EAAGkhJ,GAAYI,EAAU9iI,OAAO8iI,EAAUthJ,OAAS,EAAGkhJ,GAmDvL,IACsBY,EAAQC,EAAKC,EAEhCzxI,EACA0xI,EACAC,EAGAC,EACAC,EACAC,EAjDH,IACgBhB,EAASE,EAAUC,EAChCE,EACAE,EACAC,EAjVGS,CA6DN,SACczE,OAOX0E,EACAC,EAAGC,EAAGC,EAAGC,EAAG9iE,EAGZ+iE,EACAC,EAXAC,EAAMjF,EAAG39F,IACT6iG,EAAOlF,EAAGjiG,IACVr0C,EAAI,QACJy7I,EAAa,UACbxV,EAAK,MAILyV,EAASC,GAASJ,GAClBK,EAAUD,GAASH,GAIvBF,EAAa7uI,KAAKqI,OAAO0mI,EAAO,KAAO,GAAK,EAG/B,MAATA,IACFF,EAAa,IAIXC,GAAO,IAAQA,EAAM,IAAQC,GAAQ,GAAOA,EAAO,KACrDF,EAAa,IAIXC,GAAO,IAAQA,EAAM,KACnBC,GAAQ,GAAOA,EAAO,EACxBF,EAAa,GAENE,GAAQ,GAAOA,EAAO,GAC7BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,GAC9BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,KAC9BF,EAAa,KAOjBD,EAAgBM,GAHgB,GAAlBL,EAAa,GAAS,IAAM,GAK1CN,EAAmBS,GAAe,EAAIA,GAEtCR,EAAIj7I,EAAIyM,KAAK8W,KAAK,EAAIk4H,EAAahvI,KAAKC,IAAIgvI,GAAUjvI,KAAKC,IAAIgvI,IAC/DR,EAAIzuI,KAAKyqC,IAAIwkG,GAAUjvI,KAAKyqC,IAAIwkG,GAChCP,EAAIH,EAAkBvuI,KAAKD,IAAIkvI,GAAUjvI,KAAKD,IAAIkvI,GAClDN,EAAI3uI,KAAKD,IAAIkvI,IAAWE,EAAUP,GAElC/iE,EAAIt4E,IAAM,EAAIy7I,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,KAAOC,GAAU,EAAID,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,GAAKA,EAAaA,EAAaA,EAAa,MAAQhvI,KAAKC,IAAI,EAAIgvI,IAAW,GAAKD,EAAaA,EAAa,IAAM,GAAKA,EAAaA,EAAaA,EAAa,MAAQhvI,KAAKC,IAAI,EAAIgvI,GAAW,GAAKD,EAAaA,EAAaA,EAAa,KAAQhvI,KAAKC,IAAI,EAAIgvI,QAEhbG,EAAc5V,EAAKgV,GAAKG,GAAK,EAAIF,EAAIC,GAAKC,EAAIA,EAAIA,EAAI,GAAO,EAAI,GAAKF,EAAIA,EAAIA,EAAI,GAAKC,EAAI,GAAKH,GAAmBI,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAS,IAEhJU,EAAe7V,GAAM3tD,EAAI2iE,EAAIxuI,KAAKyqC,IAAIwkG,IAAWN,EAAIA,EAAI,GAAK,EAAIF,EAAI,EAAIC,EAAI,EAAIA,EAAIA,GAAKC,EAAIA,EAAIA,EAAIA,EAAI,IAAQ,GAAK,GAAKF,EAAIA,EAAIA,EAAI,IAAMC,EAAI,IAAMH,GAAmBI,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,MACpMG,EAAM,IACRO,GAAe,YAKf9B,SAAUvtI,KAAK2P,MAAM0/H,GACrBhC,QAASrtI,KAAK2P,MAAMy/H,GACpB5B,WAAYqB,EACZpB,WAAY6B,GAAoBR,IAlIpBS,CAAO,CACnBrjG,IAAK29F,EAAG,GACRjiG,IAAKiiG,EAAG,KACNqD,YAmBGD,GAAUJ,OACb5rC,EAAO6rC,GAAQ/rH,GAAO8rH,EAAKE,uBAC3B9rC,EAAK/0D,KAAO+0D,EAAKr5D,IAAG,CACdq5D,EAAKr5D,IAAKq5D,EAAK/0D,OAEhB+0D,EAAK7iF,KAAO6iF,EAAK5nD,OAAS,GAAI4nD,EAAKt4E,IAAMs4E,EAAK+rC,QAAU,GAQhE,SACMkC,GAAS13H,UACRA,GAAOxX,KAAKiM,GAAK,KASxB,SACMujI,GAASC,UACCA,EAAMzvI,KAAKiM,GAApB,IAoGP,SACM6gI,GAAQK,OAEXkC,EAAclC,EAAII,SAClB6B,EAAajC,EAAIE,QACjBI,EAAaN,EAAIM,WACjBD,EAAaL,EAAIK,cAEjBA,EAAa,GAAKA,EAAa,GAAE,OAC5B,SAMLe,EAEAmB,EAAIC,EAAIC,EAAIC,EAAIC,EAChBC,EACAC,EAAIC,EAPJzW,EAAK,MACLjmI,EAAI,QACJy7I,EAAa,UAEbhwI,GAAM,EAAIgB,KAAK8W,KAAK,aAAoB,EAAI9W,KAAK8W,KAAK,YAMtDlX,EAAIwvI,EAAa,IACjBvvI,EAAIwvI,EAMJ5B,EAAU,MACZ5tI,GAAK,KAKPkwI,EAAgC,GAAlBvC,EAAa,GAAS,IAAM,EAI1Ce,EAAmBS,oBAKnBiB,GAFAD,EADInwI,EAAI25H,EACF,oBAEU,EAAIx6H,EAAK,EAAI,GAAKA,EAAKA,EAAKA,EAAK,IAAMgB,KAAKC,IAAI,EAAI+vI,IAAO,GAAKhxI,EAAKA,EAAK,GAAK,GAAKA,EAAKA,EAAKA,EAAKA,EAAK,IAAMgB,KAAKC,IAAI,EAAI+vI,GAAO,IAAMhxI,EAAKA,EAAKA,EAAK,GAAMgB,KAAKC,IAAI,EAAI+vI,GAG1LN,EAAKn8I,EAAIyM,KAAK8W,KAAK,EAAIk4H,EAAahvI,KAAKC,IAAIgwI,GAAWjwI,KAAKC,IAAIgwI,IACjEN,EAAK3vI,KAAKyqC,IAAIwlG,GAAWjwI,KAAKyqC,IAAIwlG,GAClCL,EAAKrB,EAAkBvuI,KAAKD,IAAIkwI,GAAWjwI,KAAKD,IAAIkwI,GACpDJ,EAAM,UAADt8I,EAAuByM,KAAKuX,IAAI,EAAIy3H,EAAahvI,KAAKC,IAAIgwI,GAAWjwI,KAAKC,IAAIgwI,GAAU,KAC7FH,EAAIlwI,GAAK8vI,EAAKlW,OAEVttF,EAAM+jG,EAAWP,EAAK1vI,KAAKyqC,IAAIwlG,GAAWJ,GAAOC,EAAIA,EAAI,GAAK,EAAI,EAAIH,EAAK,GAAKC,EAAK,EAAIA,EAAKA,EAAK,EAAIrB,GAAmBuB,EAAIA,EAAIA,EAAIA,EAAI,IAAM,GAAK,GAAKH,EAAK,IAAMC,EAAK,GAAKD,EAAKA,EAAK,mBAAwB,EAAIC,EAAKA,GAAME,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAC5P5jG,EAAMsjG,GAAStjG,OAKX7+C,EAHAu6C,GAAOkoG,GAAK,EAAI,EAAIH,EAAKC,GAAME,EAAIA,EAAIA,EAAI,GAAK,EAAI,EAAIF,EAAK,GAAKD,EAAK,EAAIC,EAAKA,EAAK,EAAIrB,EAAkB,GAAKoB,EAAKA,GAAMG,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAO9vI,KAAKD,IAAIkwI,MACnKroG,EAAMmoG,EAAaP,GAAS5nG,GAGxBulG,EAAID,SAAQ,KACVvmD,EAAWmmD,GAAO,CACpBS,SAAUJ,EAAII,SAAWJ,EAAID,SAC7BG,QAASF,EAAIE,QAAUF,EAAID,SAC3BO,WAAYN,EAAIM,WAChBD,WAAYL,EAAIK,aAElBngJ,EAAM,CACJs7B,IAAKg+D,EAASz6C,IACdmN,MAAOstC,EAAS/+C,IAChBolG,OAAQ9gG,EACR9tB,KAAMwpB,QAIRv6C,EAAM,CACJ6+C,IAAKA,EACLtE,IAAKA,UAGFv6C,EAUN,SACMiiJ,GAAoBpjG,OAGvBgkG,EAAgB,WAEf,IAAMhkG,GAASA,GAAO,GACzBgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,GAC7BgkG,EAAgB,IAER,GAAKhkG,GAASA,GAAO,EAC7BgkG,EAAgB,IAER,EAAIhkG,GAASA,GAAO,EAC5BgkG,EAAgB,IAER,EAAIhkG,GAASA,IAAO,EAC5BgkG,EAAgB,KAER,EAAKhkG,GAASA,IAAO,GAC7BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,GAC9BgkG,EAAgB,KAER,GAAMhkG,GAASA,IAAO,KAC9BgkG,EAAgB,KAEXA,EA2CN,SACMvC,GAAkB5hJ,OACrB2hJ,EAAU3hJ,EApYI,SAqYF,IAAZ2hJ,IACFA,EAtYgB,GAyYXA,EAsFN,SACM3sH,GAAOovH,MAEVA,GAAoC,IAAtBA,EAAWnkJ,OAAY,KAAA,2CAQrCokJ,EAJApkJ,EAASmkJ,EAAWnkJ,OAEpBqkJ,EAAO,KACPC,EAAE,GAEFvkJ,EAAI,WAGU8e,KAAKulI,EAAWD,EAAWt4H,OAAO9rB,KAAC,IAC/CA,GAAK,EAAC,KAAA,kCACmCokJ,EAE7CG,GAAMF,EACNrkJ,QAGEyhJ,EAAajjI,SAAS+lI,EAAI,OAEpB,IAANvkJ,GAAWA,EAAI,EAAIC,yCAGsBmkJ,MAGzC1C,EAAa0C,EAAWt4H,OAAO9rB,QAG/B0hJ,GAAU,KAAqB,MAAVA,GAAgC,MAAVA,GAAsBA,GAAU,KAAqB,MAAVA,GAAgC,MAAVA,EAAkB,KAAA,yBAC9FA,EAAU,iBAAsB0C,EAGpEE,EAAOF,EAAWj/C,UAAUnlG,EAAGA,GAAK,WAEhC4R,EAAMgwI,GAAkBH,GAExB+C,EAoDH,SACyB7wI,EAAG/B,OAGzB6yI,EAASnE,GAA0Bx2E,WAAWl4D,EAAM,GACpD8yI,EAAe,IACfC,GAAe,OAEZF,IAAW9wI,EAAEm2D,WAAW,IAAC,MAC9B26E,IACehE,IACbgE,IAEEA,IAAW/D,IACb+D,IAEEA,EAASvI,GAAC,IACRyI,EAAY,KAAA,kBACahxI,EAE7B8wI,EAASjE,GACTmE,GAAe,EAEjBD,GAAgB,WAGXA,EA9EQE,CAAmBN,EAAKx4H,OAAO,GAAIla,GAC9CizI,EA+FH,SAC0Bt1I,EAAGqC,MAE1BrC,EAAC,IAAM,KAAA,oCACoCA,MAK3Cu1I,EAASvE,GAAuBz2E,WAAWl4D,EAAM,GACjDmzI,EAAgB,EAChBJ,GAAe,OAEZG,IAAWv1I,EAAEu6D,WAAW,IAAC,MAC9Bg7E,IACerE,IACbqE,IAEEA,IAAWpE,IACboE,IAIEA,EAASnE,GAAC,IACRgE,EAAY,KAAA,kBACap1I,EAE7Bu1I,EAAStE,GACTmE,GAAe,EAEjBI,GAAiB,WAGZA,EAhISC,CAAoBV,EAAKx4H,OAAO,GAAIla,GAM7CizI,EAAYI,GAAevD,IAChCmD,GAAa,QAIXK,EAAYjlJ,EAASD,KAErBklJ,EAAY,GAAM,EAAC,KAAA,oKACwJd,MAO3Ke,EAAeC,EAAkBC,EAJjCC,EAAMJ,EAAY,EAElBK,EAAa,EACbC,EAAc,SAEdF,EAAM,IACRH,EAAgB,IAAWlxI,KAAKuX,IAAI,GAAI85H,GACxCF,EAAmBhB,EAAWj/C,UAAUnlG,EAAGA,EAAIslJ,GAC/CC,EAAavjH,WAAWojH,GAAoBD,EAC5CE,EAAoBjB,EAAWj/C,UAAUnlG,EAAIslJ,GAC7CE,EAAcxjH,WAAWqjH,GAAqBF,IAO9C7D,QAJQiE,EAAaf,EAKrBhD,SAJSgE,EAAcX,EAKvBnD,WAAYA,EACZD,WAAYA,EACZN,SAAUgE,GAsGX,SACMF,GAAevD,OAClBF,SACIE,WAENF,EAAW,mBAGXA,EAAW,kBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,gBAGXA,EAAW,kBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,mBAGXA,EAAW,kBAGXA,EAAW,mBAGXA,GAAW,KAETA,GAAY,EAAG,OACVA,+BAG0BE,WAK5B+D,GAAM5xI,EAAGC,EAAGwtC,wBACGmkG,IAAK,OAAA,IACdA,GAAM5xI,EAAGC,EAAGwtC,MAErBpzC,MAAM4B,QAAQ+D,QACXA,EAAIA,EAAE,QACNC,EAAID,EAAE,QACNytC,EAAIztC,EAAE,IAAM,UACD,iBAADA,OACVA,EAAIA,EAAEA,OACNC,EAAID,EAAEC,OACNwtC,EAAIztC,EAAEytC,GAAK,UACC,iBAADztC,QAA0B,IAADC,EAAiB,KACtDu+B,EAASx+B,EAAE2B,MAAK,UACf3B,EAAImuB,WAAWqQ,EAAO,GAAI,SAC1Bv+B,EAAIkuB,WAAWqQ,EAAO,GAAI,SAC1BiP,EAAItf,WAAWqQ,EAAO,GAAI,KAAO,YAEjCx+B,EAAIA,OACJC,EAAIA,OACJwtC,EAAIA,GAAK,EAEhB/wB,QAAQC,KAAI,+DAGdi1H,GAAMC,SAAQ,SAAYC,cACbF,GAAMvE,GAAUyE,KAE7BF,GAAMlhJ,UAAUqhJ,OAAM,SAAYzE,UACzBN,GAAS,MAAOhtI,OAAQC,GAAIqtI,QAKjC0E,GAAM,QACNC,GAAM,UACNC,GAAM,gBASNC,GAAO,SAAYrS,OACjBsS,EAAE,GACNA,EAAG,GAfK,EAeMtS,GAdN,IAckBA,GAAMkS,GAAMlS,GAAMmS,GAAMnS,EAAKoS,MACvDE,EAAG,GAAKtS,GAXA,IAWYA,GAAMkS,GAAMlS,GAAMmS,GAAMnS,EAAKoS,UAC7CpmI,EAAIg0H,EAAKA,SACbsS,EAAG,GAAKtmI,GAZA,OAYWg0H,GAXX,oBACA,oBAUuBA,IAC/Bh0H,GAAKg0H,EACLsS,EAAG,GAAKtmI,GAXA,kBACA,oBAUWg0H,GACnBsS,EAAG,GAAKtmI,EAAIg0H,EAVJ,YAWDsS,GAGLC,GAAO,SAAYjT,EAAKkT,EAAMC,EAAMH,UACtCG,GAAQD,EACRA,GAAQA,EACAF,EAAG,GAAKhT,EAAMmT,GAAQH,EAAG,GAAKE,GAAQF,EAAG,GAAKE,GAAQF,EAAG,GAAKE,EAAOF,EAAG,OAK9EI,GAAW,SAAYC,EAAK3S,EAAIsS,WAC9BjmI,EAAI,GAAK,EAAI2zH,GACbV,EAAMqT,EACDtmJ,EALI,GAKUA,IAAKA,EAAC,KACvBke,EAAIjK,KAAKC,IAAI++H,GACbtzH,EAAI,EAAIg0H,EAAKz1H,EAAIA,KAIrB+0H,GADAtzH,GAAKumI,GAAQjT,EAAK/0H,EAAGjK,KAAKD,IAAIi/H,GAAMgT,GAAMK,IAAQ3mI,EAAI1L,KAAK8W,KAAKpL,IAAMK,EAElE/L,KAAK0F,IAAIgG,GAAK0qH,EAAK,OACd4I,SAIJA,OAkKLsT,GAAK,CACP7S,qBA5JK94H,QAAiB/T,IAAfxC,KAAQuW,GAAgBvW,KAAQuW,GAAK,OACvCI,QAAiBnU,IAAfxC,KAAQ2W,GAAgB3W,KAAQ2W,GAAK,OACvC6xH,WAAuBhmI,IAAlBxC,KAAQwoI,MAAmBxoI,KAAQwoI,MAAQ,OAChDL,UAAqB3lI,IAAjBxC,KAAQmoI,KAAkBnoI,KAAQmoI,KAAO,OAEzCmH,UACFsS,GAAKD,GAAO3hJ,KAAMsvI,SAClB6S,IAAMN,GAAO7hJ,KAAMmoI,KAAMv4H,KAAKC,IAAG7P,KAAMmoI,MAAOv4H,KAAKD,IAAG3P,KAAMmoI,MAAInoI,KAAQ4hJ,MAsJ/E1qG,QA/IE,SACeyhC,OAKb61D,EACAh/H,EAAGC,EALH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAER2yI,EAAY1T,EAAWl3F,EAAGx3C,KAAQwoI,OAGlC6Z,EAAUzyI,KAAKC,IAAIisC,GACnBwmG,EAAU1yI,KAAKD,IAAImsC,WAEbwzF,QA+BJiT,EAAKD,EAAUF,EACfI,EAAM5yI,KAAKuX,IAAIo7H,EAAI,GACnBnzI,EAACpP,KAAQ+1I,IAAMnmI,KAAKuX,IAAIm7H,EAAS,GACjCG,EAAK7yI,KAAKuX,IAAI/X,EAAG,GACjBszI,EAAK9yI,KAAK0F,IAAIgtI,GAAWtc,EAAQp2H,KAAKyqC,IAAIyB,GAAO,EACjDxgC,EAAI1L,KAAKuX,IAAIu7H,EAAI,GACjB3T,EAAKn/H,KAAKuX,IAAI7L,EAAG,GACrBkzH,EAAM,EAACxuI,KAAQsvI,GAAK1/H,KAAKuX,IAAIk7H,EAAS,GACtCE,GAAU3yI,KAAK8W,KAAK8nH,OAChBmU,EAAKd,GAAQ/lG,EAAKumG,EAASC,EAAOtiJ,KAAO4hJ,IAE7CpyI,EAACxP,KAAQmD,GAACnD,KAASopI,GAAKmZ,GAAM,EAC5BC,EAAM,GAAK,EAAIlnI,EAAIlM,EACnBozI,EAAM,IAAM,EAAI,GAAKlnI,EAAIyzH,EAAK,GAAK3/H,EAAI,GAAKkM,EAAIlM,EAChDozI,EAAM,IAAM,GAAK,IAAMzT,EAAKA,EAAKzzH,EAAI,IAAMA,OAACtb,KACvCuW,GAEP9G,EAACzP,KAAQmD,GAACnD,KAASopI,IAAMuZ,EAAE3iJ,KAAQmiJ,IACjCE,EAAUD,EAAYG,EAAK,GAAK,EAChCC,EAAM,IAAM,EAAIlnI,EAAI,EAAIlM,EAAI,EAAIqzI,EAChCD,EAAM,IAAM,GAAKzT,EAAK,GAAKzzH,EAAI,IAAMlM,EAAI,IAAMkM,EAAIlM,EACnDozI,EAAM,IAAM,KAAO,IAAMzT,EAAKA,EAAKzzH,EAAI,KAAOA,QAACtb,KAC1C2W,OArDG,KACNvT,EAAIk/I,EAAU1yI,KAAKC,IAAIuyI,MAEtBxyI,KAAK0F,IAAI1F,KAAK0F,IAAIlS,GAAK,GAAM4iI,EAAK,OAC7B,MAGRx2H,EAAI,GAAGxP,KAAQmD,EAACnD,KAAQopI,GAAKx5H,KAAKwL,KAAK,EAAIhY,IAAM,EAAIA,IAACpD,KAAUuW,GAChE9G,EAAI6yI,EAAU1yI,KAAKD,IAAIyyI,GAAaxyI,KAAK8W,KAAK,EAAI9W,KAAKuX,IAAI/jB,EAAG,KAC9DA,EAAIwM,KAAK0F,IAAI7F,KAEJ,EAAC,IACHrM,EAAI,EAAK4iI,EAAK,OACT,GAGRv2H,EAAI,OAINA,EAAIG,KAAK+lF,KAAKlmF,GAGZqsC,EAAM,IACRrsC,GAAKA,GAGPA,EAACzP,KAAQmD,EAACnD,KAAQopI,IAAM35H,EAACzP,KAAQmoI,MAAInoI,KAAS2W,UA6BlDgiE,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EAECkpE,GA0EPxhC,QArEE,SACewhC,OACb61D,EAAKI,EACL9yF,EAAKtE,EACLhoC,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,KAAO,EAACvW,KAAQmD,GAChCsM,GAAKkpE,EAAElpE,EAACzP,KAAQ2W,KAAO,EAAC3W,KAAQmD,WAE1BmsI,MAoBRd,EAAGxuI,KAAQmiJ,IAAM1yI,EAACzP,KAAQopI,GAC1BwF,EAAMoT,GAAYxT,EAAGxuI,KAAOsvI,GAAEtvI,KAAO4hJ,IAEjChyI,KAAK0F,IAAIs5H,GAAO7I,EAAO,KACrBsc,EAAUzyI,KAAKC,IAAI++H,GACnB0T,EAAU1yI,KAAKD,IAAIi/H,GACnBgU,EAAUhzI,KAAK0F,IAAIgtI,GAAWtc,EAAQp2H,KAAKyqC,IAAIu0F,GAAO,EACtDx/H,EAACpP,KAAQ+1I,IAAMnmI,KAAKuX,IAAIm7H,EAAS,GACjCG,EAAK7yI,KAAKuX,IAAI/X,EAAG,GACjBkM,EAAI1L,KAAKuX,IAAIy7H,EAAS,GACtB7T,EAAKn/H,KAAKuX,IAAI7L,EAAG,GACrBkzH,EAAM,EAACxuI,KAAQsvI,GAAK1/H,KAAKuX,IAAIk7H,EAAS,OAClChzI,EAAIG,EAAII,KAAK8W,KAAK8nH,GAAGxuI,KAASopI,GAC9ByZ,EAAKjzI,KAAKuX,IAAI9X,EAAG,GAGrBysC,EAAM8yF,GAFNJ,GAAYoU,GAEOC,GAAM,EAAC7iJ,KAAQsvI,IAAO,IAAO,EAC9CuT,EAAK,IAAM,EAAI,EAAIvnI,EAAI,EAAIlM,EAAIkM,EAAIlM,EAAI,EAAIqzI,EAC3CI,EAAK,IAAM,GAAK,GAAKvnI,EAAI,IAAMlM,EAAIkM,EAAI,GAAKyzH,EAAK,GAAK3/H,EACtDyzI,EAAK,IAAM,KAAO,KAAOvnI,EAAI,KAAOyzH,EAAK,KAAOA,EAAKzzH,MAEvDk8B,EAAMk3F,EAAU1uI,KAAMwoI,MAASn5H,GAAK,EAClCwzI,EAAK,GAAK,EAAI,EAAIvnI,EAAIlM,EACtByzI,EAAK,IAAM,EAAI,GAAKvnI,EAAI,GAAKyzH,EAAK,EAAI3/H,EAAIkM,EAAI,EAAIlM,EAClDyzI,EAAK,IAAM,GAAK,IAAMvnI,EAAI,KAAOyzH,EAAK,IAAMA,EAAKzzH,MAAQgnI,QAG3DxmG,EAAMiqF,EAAU0I,EAAKh/H,GACrB+nC,EAAM,MAhDE,KACNjoC,EAAIK,KAAKuL,IAAI3L,EAACxP,KAAQopI,IACtBpvH,EAAI,IAAOzK,EAAI,EAAIA,GACnBuzI,EAAI9iJ,KAAQmoI,KAAO14H,EAACzP,KAAQopI,GAC5Bt6G,EAAIlf,KAAKD,IAAImzI,GACjBtU,EAAM5+H,KAAK8W,MAAM,EAAI9W,KAAKuX,IAAI2H,EAAG,KAAO,EAAIlf,KAAKuX,IAAInN,EAAG,KACxD8hC,EAAMlsC,KAAKmsC,KAAKyyF,GAEZ/+H,EAAI,IACNqsC,GAAOA,GAIPtE,EADS,IAANx9B,GAAmB,IAAN8U,EACV,EAGA4/G,EAAW9+H,KAAKyrC,MAAMrhC,EAAG8U,GAAC9uB,KAASwoI,cAoC7C7vD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EAEC68B,GAQP42D,MALS,yDAQPwT,GAAI,SAAYvzI,OACduK,EAAInK,KAAKuL,IAAI3L,UACjBuK,GAAKA,EAAI,EAAIA,GAAK,GAIhBipI,GAAK,SAAYxzI,EAAGC,GACtBD,EAAII,KAAK0F,IAAI9F,GACbC,EAAIG,KAAK0F,IAAI7F,OACTtM,EAAIyM,KAAK4F,IAAIhG,EAAGC,GAChBrM,EAAIwM,KAAK2F,IAAI/F,EAAGC,IAAMtM,GAAQ,UAE3BA,EAAIyM,KAAK8W,KAAK,EAAI9W,KAAKuX,IAAI/jB,EAAG,KAUnC6/I,GAAM,SAAYzzI,OAChBC,EAAIG,KAAK0F,IAAI9F,UACjBC,EATQ,SAAYD,OAChBC,EAAI,EAAID,EACRytC,EAAIxtC,EAAI,SAEC,IAANwtC,EAAUztC,EAAIA,EAAII,KAAKwL,IAAI3L,GAAKwtC,EAKnCimG,CAAOzzI,GAAK,EAAIA,GAAKuzI,GAAM,EAAGvzI,GAAK,KAEhCD,EAAI,GAAKC,EAAIA,GAGlB0zI,GAAI,SAAYC,EAAIC,WAKlBv0H,EAJAw0H,EAAS,EAAI1zI,KAAKD,IAAI,EAAI0zI,GAC1B1nJ,EAAIynJ,EAAGxnJ,OAAS,EAChB68E,EAAK2qE,EAAGznJ,GACRq9E,EAAK,IAGAr9E,GAAK,GACZmzB,EAAUw0H,EAAS7qE,EAAdO,EAAmBoqE,EAAGznJ,GAC3Bq9E,EAAKP,EACLA,EAAK3pD,SAGCu0H,EAAIv0H,EAAIlf,KAAKC,IAAI,EAAIwzI,IAyB3BE,GAAW,SAAYH,EAAII,EAAOC,WAYhCC,EACAC,EAZAC,EAAYh0I,KAAKC,IAAI2zI,GACrBK,EAAYj0I,KAAKD,IAAI6zI,GACrBM,EAAaf,GAAKU,GAClBM,EAVE,SAAYv0I,OACduK,EAAInK,KAAKuL,IAAI3L,UACZuK,EAAI,EAAIA,GAAK,EAQDW,CAAK+oI,GAClB1pI,EAAI,EAAI8pI,EAAYE,EACpBpoJ,GAAI,EAAKioJ,EAAYE,EACrB98I,EAAIo8I,EAAGxnJ,OAAS,EAChBooJ,EAAKZ,EAAGp8I,GACRi9I,EAAM,EACNC,EAAM,EACN5vE,EAAK,IAIAttE,GAAK,GACZ08I,EAAMQ,EACNP,EAAMM,EAGND,EAAYjqI,GAFZmqI,EAAMF,GAEAN,EAAgB/nJ,GADtBsoJ,EAAM3vE,GAC0B8uE,EAAGp8I,GACnCstE,EAAY34E,EAAIuoJ,EAAVP,EAAgB5pI,EAAIkqI,UAG5BlqI,EAAI6pI,EAAYG,GAGJC,GAFZroJ,EAAIkoJ,EAAYC,GAEKxvE,EAAIv6D,EAAIu6D,EAAK34E,EAAIqoJ,QAgKpCG,GAAM,CACR9U,yBA1JUlF,SAAW38G,MAAKxtB,KAAMsvI,KAAEtvI,KAAUsvI,IAAM,GAAC,MAAA,IACvCtzI,MAAK,2IAERmuI,SAEP+X,GAAM7S,KAAKrlI,MAAKhK,WACXk3C,QAAUgrG,GAAMhrG,aAChBC,QAAU+qG,GAAM/qG,cAGlB5gC,QAAiB/T,IAAfxC,KAAQuW,GAAgBvW,KAAQuW,GAAK,OACvCI,QAAiBnU,IAAfxC,KAAQ2W,GAAgB3W,KAAQ2W,GAAK,OACvC6xH,WAAuBhmI,IAAlBxC,KAAQwoI,MAAmBxoI,KAAQwoI,MAAQ,OAChDL,UAAqB3lI,IAAjBxC,KAAQmoI,KAAkBnoI,KAAQmoI,KAAO,OAE7Cic,IAAG,QACHC,IAAG,QACHC,IAAG,QACHC,IAAG,OAEJh1I,EAACvP,KAAQsvI,IAAM,EAAI1/H,KAAK8W,KAAK,EAAC1mB,KAAQsvI,KACtCpkI,EAAIqE,GAAK,EAAIA,GACbi1I,EAAKt5I,OAEJk5I,IAAI,GAAKl5I,GAAK,EAAIA,IAAK,EAAK,EAAIA,GAAUA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,IAAK,KAAQ,OAAjD,UACrCm5I,IAAI,GAAKn5I,GAAUA,GAAM,EAAI,EAAIA,GAAM,EAAI,EAAIA,IAAK,GAAM,GAAKA,GAAK,GAAK,GAAKA,GAAK,KAAO,UAA5E,GAEnBs5I,GAAUt5I,OACLk5I,IAAI,GAAKI,GAAM,EAAI,EAAIt5I,GAAcA,IAAK,IAAO,GAAKA,GAAK,KAAO,IAAMA,GAAK,KAAO,OAAxD,WAC5Bm5I,IAAI,GAAKG,GAAM,EAAI,EAAIt5I,IAAK,GAAM,GAAKA,IAAM,GAAM,EAAIA,GAAK,IAAM,IAAMA,IAAK,KAAQ,SAE1Fs5I,GAAUt5I,OACLk5I,IAAI,GAAKI,GAAM,GAAK,GAAKt5I,IAAK,IAAO,GAAKA,IAAK,KAAQ,IAAMA,GAAK,MAAQ,cAC1Em5I,IAAI,GAAKG,IAAM,GAAM,GAAKt5I,GAAK,GAAK,GAAKA,GAAK,IAAQA,IAAK,MAAS,SAEzEs5I,GAAUt5I,OACLk5I,IAAI,GAAKI,GAAM,KAAO,IAAMt5I,IAAK,IAAO,GAAKA,IAAK,OAAU,cAC5Dm5I,IAAI,GAAKG,GAAM,KAAO,IAAMt5I,GAAeA,IAAM,MAAS,OAAzB,MAEtCs5I,GAAUt5I,OACLk5I,IAAI,GAAKI,GAAM,KAAO,IAAMt5I,IAAK,OAAU,YAC3Cm5I,IAAI,GAAKG,IAAM,IAAO,IAAMt5I,GAAK,OAAS,QAE/Cs5I,GAAUt5I,OACLk5I,IAAI,GAAKI,GAAM,OAAS,YACxBH,IAAI,GAAKG,GAAM,OAAS,QAE7BA,EAAK50I,KAAKuX,IAAIjc,EAAG,QACZu5I,GAAEzkJ,KAAQopI,IAAM,EAAIl+H,IAAM,EAAIs5I,GAAM,IAAQA,GAAM,EAAI,GAAKA,EAAK,YAEhEF,IAAI,GAAKp5I,GAAYA,GAAM,EAAI,EAAIA,IAAK,GAAM,GAAKA,GAAM,EAAI,IAAMA,GAAK,GAAK,IAAMA,IAAK,MAAS,YAAnF,SACdq5I,IAAI,GAAKr5I,GAAK,GAAMA,IAAK,EAAK,EAAIA,GAAK,MAASA,GAAK,GAAK,IAAMA,IAAK,IAAO,IAAMA,GAAK,KAAO,iBAE9Fo5I,IAAI,GAAKE,IAAM,EAAK,GAAKt5I,IAAK,EAAK,GAAKA,GAAK,IAAM,KAAOA,IAAK,GAAM,IAAMA,GAAK,QAAU,kBAC1Fq5I,IAAI,GAAKC,GAAM,GAAK,GAAKt5I,GAAcA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,IAAK,QAAW,WAA5D,KAEnCs5I,GAAUt5I,OACLo5I,IAAI,GAAKE,IAAM,GAAM,IAAMt5I,GAAK,GAAK,IAAMA,GAAK,IAAM,KAAOA,IAAK,KAAQ,eAC1Eq5I,IAAI,GAAKC,GAAM,GAAK,IAAMt5I,IAAK,IAAO,IAAMA,GAAK,MAAQ,MAAQA,GAAK,OAAS,WAEpFs5I,GAAUt5I,OACLo5I,IAAI,GAAKE,IAAM,KAAQ,OAASt5I,GAAK,GAAK,IAAMA,GAAK,OAAS,gBAC9Dq5I,IAAI,GAAKC,GAAM,MAAQ,OAASt5I,IAAK,IAAO,IAAMA,GAAK,QAAU,WAEtEs5I,GAAUt5I,OACLo5I,IAAI,GAAKE,IAAM,KAAQ,OAASt5I,GAAK,OAAS,eAC9Cq5I,IAAI,GAAKC,GAAM,MAAQ,OAAa,kBAALt5I,GAEpCs5I,GAAUt5I,OACLo5I,IAAI,IAAW,mBAANE,OACTD,IAAI,GAAW,kBAANC,MAEVE,EAAIvB,GAAInjJ,KAAMqkJ,IAAGrkJ,KAAOmoI,WACvBwc,IAAE3kJ,KAASykJ,IAAMC,EAjIf,SAAYtB,EAAII,WAKnBQ,EAJAjqI,EAAI,EAAInK,KAAKD,IAAI6zI,GACjB7nJ,EAAIynJ,EAAGxnJ,OAAS,EAChBsoJ,EAAMd,EAAGznJ,GACT+nJ,EAAM,IAGD/nJ,GAAK,GACZqoJ,EAAYjqI,EAAImqI,EAAVR,EAAgBN,EAAGznJ,GACzB+nJ,EAAMQ,EACNA,EAAMF,SAGDp0I,KAAKC,IAAI2zI,GAASQ,EAoHCY,CAAK5kJ,KAAMukJ,IAAK,EAAIG,KAkF9CxtG,iBA/EiByhC,OACbksE,EAAKnW,EAAW/1D,EAAEnpE,EAACxP,KAAQwoI,OAC3Bsc,EAAKnsE,EAAElpE,EAEXq1I,EAAK3B,GAAInjJ,KAAMqkJ,IAAKS,OAChBC,EAASn1I,KAAKC,IAAIi1I,GAClBE,EAASp1I,KAAKD,IAAIm1I,GAClBG,EAASr1I,KAAKC,IAAIg1I,GAClBK,EAASt1I,KAAKD,IAAIk1I,GAEtBC,EAAKl1I,KAAKyrC,MAAM0pG,EAAQG,EAASF,GACjCH,EAAKj1I,KAAKyrC,MAAM4pG,EAASD,EAAQhC,GAAM+B,EAAQC,EAASE,IACxDL,EAAK5B,GAAOrzI,KAAKyqC,IAAIwqG,QAOjBr1I,EACAC,EANAnE,EAAMi4I,GAAWvjJ,KAAMukJ,IAAK,EAAIO,EAAI,EAAID,UAE5CC,GAAUx5I,EAAI,GACdu5I,GAAUv5I,EAAI,GAKVsE,KAAK0F,IAAIuvI,IAAO,gBAClBr1I,EAACxP,KAAQmD,GAACnD,KAASykJ,GAAKI,GAAE7kJ,KAASuW,GACnC9G,EAACzP,KAAQmD,GAACnD,KAASykJ,GAAKK,EAAE9kJ,KAAQ2kJ,IAAE3kJ,KAAS2W,KAG7CnH,EAAIwF,EAAAA,EACJvF,EAAIuF,EAAAA,GAGN2jE,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EAECkpE,GA8CPxhC,iBA3CiBwhC,OAObnhC,EACAsE,EAPA+oG,GAAMlsE,EAAEnpE,EAACxP,KAAQuW,KAAO,EAACvW,KAAQmD,GACjC2hJ,GAAMnsE,EAAElpE,EAACzP,KAAQ2W,KAAO,EAAC3W,KAAQmD,MAErC2hJ,GAAMA,EAAE9kJ,KAAQ2kJ,IAAE3kJ,KAASykJ,GAC3BI,GAAO7kJ,KAAQykJ,GAKX70I,KAAK0F,IAAIuvI,IAAO,eAAc,KAC5Bv5I,EAAMi4I,GAAWvjJ,KAAMskJ,IAAK,EAAIQ,EAAI,EAAID,GAE5CC,GAAUx5I,EAAI,GACdu5I,GAAUv5I,EAAI,GACdu5I,EAAKj1I,KAAK4qC,KAAKuoG,GAAK8B,QAEhBE,EAASn1I,KAAKC,IAAIi1I,GAClBE,EAASp1I,KAAKD,IAAIm1I,GAClBG,EAASr1I,KAAKC,IAAIg1I,GAClBK,EAASt1I,KAAKD,IAAIk1I,GAEtBC,EAAKl1I,KAAKyrC,MAAM0pG,EAASG,EAAQlC,GAAMiC,EAAQC,EAASF,IACxDH,EAAKj1I,KAAKyrC,MAAM4pG,EAAQC,EAASF,GAEjCxtG,EAAMk3F,EAAWmW,EAAE7kJ,KAAQwoI,OAC3B1sF,EAAMqnG,GAAInjJ,KAAMokJ,IAAKU,QAGrBttG,EAAMxiC,EAAAA,EACN8mC,EAAM9mC,EAAAA,SAGR2jE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EAEC68B,GAQP42D,MALS,kIAuCPwN,GAAG,CACL1N,oBAjBI9F,EAfS,SAAYA,EAAM/xF,WAClBh1C,IAAT+mI,EAAkB,KACpBA,EAAO35H,KAAKqI,MAAoC,IAA7By2H,EAAWl3F,GAAO5nC,KAAKiM,IAAWjM,KAAKiM,IAAM,GAErD,EAAC,OACH,KACE0tH,EAAO,GAAE,OACX,UAGJA,EAKI4b,CAAWnlJ,KAAMupI,KAAIvpI,KAAOwoI,eAC1BhmI,IAAT+mI,EAAkB,MAAA,IACVvtI,MAAK,yBAEZmsI,KAAO,OACPK,OAAW,EAAI54H,KAAK0F,IAAIi0H,GAAS,KAAOtD,OACxC1vH,GAAK,SACLI,GAAE3W,KAAQypI,SAAW,IAAW,OAChCL,GAAK,MAEV+a,GAAO9U,KAAKrlI,MAAKhK,WACZk3C,QAAUitG,GAAOjtG,aACjBC,QAAUgtG,GAAOhtG,SAMtBo4F,MAHS,+CAIT6V,UArBW,UAwBTC,GAAI,SAAYC,EAAOnqI,UACjBvL,KAAKuX,KAAK,EAAIm+H,IAAU,EAAIA,GAAQnqI,QA8C1CoqI,GAAK,CACPlW,oBA1CIyS,EAAOlyI,KAAKC,IAAG7P,KAAMmoI,MACrB4Z,EAAOnyI,KAAKD,IAAG3P,KAAMmoI,MACzB4Z,GAAQA,OACHyD,GAAK51I,KAAK8W,KAAK,EAAC1mB,KAAQsvI,KAAO,EAACtvI,KAAQsvI,GAAKwS,EAAOA,QACpDxD,EAAI1uI,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAKyS,EAAOA,GAAQ,EAAC/hJ,KAAQsvI,UACpDmW,MAAQ71I,KAAKmsC,KAAK+lG,EAAI9hJ,KAAQs+I,QAC9BoH,OAAS,GAAG1lJ,KAAQs+I,EAACt+I,KAAQsP,OAC7Bq2I,EAAI/1I,KAAKyqC,IAAI,GAAGr6C,KAAQylJ,MAAQtf,IAAWv2H,KAAKuX,IAAIvX,KAAKyqC,IAAI,GAAGr6C,KAAQmoI,KAAOhC,GAAMnmI,KAAQs+I,GAAK+G,GAAIrlJ,KAAMsP,EAAIwyI,EAAI9hJ,KAAO0lJ,UAoChIxuG,iBAjCiByhC,OACbnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,SAEZkpE,EAAElpE,EAAI,EAAIG,KAAK4qC,KAAIx6C,KAAM2lJ,EAAI/1I,KAAKuX,IAAIvX,KAAKyqC,IAAI,GAAMyB,EAAMqqF,GAAMnmI,KAAQs+I,GAAK+G,GAAIrlJ,KAAMsP,EAAIM,KAAKC,IAAIisC,GAAG97C,KAAQ0lJ,SAAW3f,EAC3HptD,EAAEnpE,EAACxP,KAAQs+I,EAAI9mG,EACRmhC,GA4BPxhC,iBAzBiBwhC,WAEbnhC,EAAMmhC,EAAEnpE,EAACxP,KAAQs+I,EACjBxiG,EAAM68B,EAAElpE,EACR05C,EAAMv5C,KAAKuX,IAAIvX,KAAKyqC,IAAI,GAAMyB,EAAMqqF,GAAMnmI,KAAS2lJ,EAAG,EAAC3lJ,KAAQs+I,GAC1D3iJ,EA1BM,GA0BUA,EAAI,IAC3BmgD,EAAM,EAAIlsC,KAAK4qC,KAAK2O,EAAMk8F,GAAIrlJ,KAAMsP,EAAIM,KAAKC,IAAI8oE,EAAElpE,IAAI,GAAKzP,KAAQsP,IAAMy2H,IACtEn2H,KAAK0F,IAAIwmC,EAAM68B,EAAElpE,GANT,UAIoB9T,EAKhCg9E,EAAElpE,EAAIqsC,EAEgB,OACnBngD,GAGLg9E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAJE,MAYT42D,MALS,eA+DPqW,GAAM,CACRvW,gBAvDAkW,GAAMlW,KAAKrlI,MAAKhK,WACNwlJ,UAGLK,MAAQj2I,KAAKC,IAAG7P,KAAMylJ,YACtBK,MAAQl2I,KAAKD,IAAG3P,KAAMylJ,YACtBM,GAAK,EAAC/lJ,KAAQwlJ,QACTz6F,QAAK/qD,KACR+qD,MAAK,uCAgDZ7T,iBA5CiByhC,OACbqtE,EAAMC,EAAMC,EAAMvqI,SACtBg9D,EAAEnpE,EAAIk/H,EAAW/1D,EAAEnpE,EAACxP,KAAQwoI,OAC5B+c,GAAMruG,QAAQltC,MAAKhK,KAAA,CAAQ24E,IAC3BqtE,EAAOp2I,KAAKC,IAAI8oE,EAAElpE,GAClBw2I,EAAOr2I,KAAKD,IAAIgpE,EAAElpE,GAClBy2I,EAAOt2I,KAAKD,IAAIgpE,EAAEnpE,GAClBmM,EAAC3b,KAAQopI,GAAEppI,KAAQ+lJ,IAAM,EAAC/lJ,KAAQ6lJ,MAAQG,EAAIhmJ,KAAQ8lJ,MAAQG,EAAOC,GACrEvtE,EAAEnpE,EAAImM,EAAIsqI,EAAOr2I,KAAKC,IAAI8oE,EAAEnpE,GAC5BmpE,EAAElpE,EAAIkM,GAAC3b,KAAS8lJ,MAAQE,EAAIhmJ,KAAQ6lJ,MAAQI,EAAOC,GACnDvtE,EAAEnpE,EAACxP,KAAQmD,EAAIw1E,EAAEnpE,EAACxP,KAAQuW,GAC1BoiE,EAAElpE,EAACzP,KAAQmD,EAAIw1E,EAAElpE,EAACzP,KAAQ2W,GACnBgiE,GAiCPxhC,iBA9BiBwhC,OACbqtE,EAAMC,EAAMzuG,EAAKsE,EAAKqqG,KAC1BxtE,EAAEnpE,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,IAAEvW,KAASmD,EAC7Bw1E,EAAElpE,GAAKkpE,EAAElpE,EAACzP,KAAQ2W,IAAE3W,KAASmD,EAE7Bw1E,EAAEnpE,GAACxP,KAASopI,GACZzwD,EAAElpE,GAACzP,KAASopI,GACP+c,EAAMv2I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GAAC,KACpCL,EAAI,EAAIQ,KAAKyrC,MAAM8qG,EAAGnmJ,KAAO+lJ,IACjCC,EAAOp2I,KAAKC,IAAIT,GAChB62I,EAAOr2I,KAAKD,IAAIP,GAChB0sC,EAAMlsC,KAAKmsC,KAAKkqG,EAAIjmJ,KAAQ6lJ,MAAQltE,EAAElpE,EAAIu2I,EAAIhmJ,KAAQ8lJ,MAAQK,GAC9D3uG,EAAM5nC,KAAKyrC,MAAMs9B,EAAEnpE,EAAIw2I,EAAMG,EAAGnmJ,KAAQ8lJ,MAAQG,EAAOttE,EAAElpE,EAACzP,KAAQ6lJ,MAAQG,QAG1ElqG,EAAG97C,KAAQylJ,MACXjuG,EAAM,SAGRmhC,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACNypG,GAAMpuG,QAAQntC,MAAKhK,KAAA,CAAQ24E,IAC3BA,EAAEnpE,EAAIk/H,EAAW/1D,EAAEnpE,EAACxP,KAAQwoI,OACrB7vD,GAQP42D,MALS,oJAuKP6W,GAAK,CACP/W,qBA1JKgX,QAAUz2I,KAAKD,IAAG3P,KAAMmoI,WACxBme,QAAU12I,KAAKC,IAAG7P,KAAMmoI,WACpBuE,OACS,SAAPtD,KAAa57G,MAAKxtB,KAAMsoI,SAAW14H,KAAK0F,IAAGtV,KAAMqmJ,UAAYrgB,IAAKhmI,KACpEopI,GAAK,IAAO,EAAIqF,EAAIzuI,KAAMmoI,MAAQv4H,KAAKC,IAAG7P,KAAMsoI,WAInD14H,KAAK0F,IAAGtV,KAAMqmJ,UAAYrgB,SACnBmC,KAAO,OAGTqG,IAAM,OAKNA,KAAM,QAGV+X,KAAO32I,KAAK8W,KAAK9W,KAAKuX,IAAI,EAACnnB,KAAQsP,EAAG,EAACtP,KAAQsP,GAAKM,KAAKuX,IAAI,EAACnnB,KAAQsP,EAAG,EAACtP,KAAQsP,IACvE,SAAP85H,KAAa57G,MAAKxtB,KAAMsoI,SAAW14H,KAAK0F,IAAGtV,KAAMqmJ,UAAYrgB,IAAKhmI,KACpEopI,GAAK,GAAGppI,KAAQumJ,KAAOnY,EAAKpuI,KAAMsP,EAAGM,KAAKC,IAAG7P,KAAMsoI,QAAS14H,KAAKD,IAAG3P,KAAMsoI,SAAWqG,EAAK3uI,KAAMsP,EAACtP,KAAOwuI,IAAGxuI,KAAQsoI,OAAMtoI,KAAOwuI,IAAM5+H,KAAKC,IAAG7P,KAAMsoI,eAEtJke,IAAMpY,EAAKpuI,KAAMsP,EAACtP,KAAOsmJ,QAAOtmJ,KAAOqmJ,cACvCI,GAAK,EAAI72I,KAAK4qC,KAAIx6C,KAAM0mJ,MAAK1mJ,KAAMmoI,KAAInoI,KAAOsmJ,QAAOtmJ,KAAOsP,IAAMy2H,OAClE4gB,MAAQ/2I,KAAKD,IAAG3P,KAAMymJ,SACtBG,MAAQh3I,KAAKC,IAAG7P,KAAMymJ,MAgI7BvvG,iBA3HiByhC,OAKb4lE,EAAG5G,EAAGkP,EAAMC,EAAM/X,EAAIgY,EAJtBvvG,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EACRu3I,EAASp3I,KAAKC,IAAIisC,GAClBmrG,EAASr3I,KAAKD,IAAImsC,GAElBorG,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,cAE7B54H,KAAK0F,IAAI1F,KAAK0F,IAAIkiC,EAAGx3C,KAAQwoI,OAAS54H,KAAKiM,KAAOmqH,GAASp2H,KAAK0F,IAAIwmC,EAAG97C,KAAQmoI,OAASnC,GAG1FrtD,EAAEnpE,EAAIo0C,IACN+0B,EAAElpE,EAAIm0C,IACC+0B,QAEA+zD,QAEP6R,EAAI,EAACv+I,KAAQopI,IAAM,EAACppI,KAAQsmJ,QAAUU,EAAMhnJ,KAAQqmJ,QAAUY,EAASr3I,KAAKD,IAAIu3I,IAChFvuE,EAAEnpE,EAACxP,KAAQmD,EAAIo7I,EAAI0I,EAASr3I,KAAKC,IAAIq3I,GAAIlnJ,KAASuW,GAClDoiE,EAAElpE,EAACzP,KAAQmD,EAAIo7I,GAACv+I,KAASqmJ,QAAUW,EAAMhnJ,KAAQsmJ,QAAUW,EAASr3I,KAAKD,IAAIu3I,IAAIlnJ,KAAU2W,GACpFgiE,IAGPg/D,EAAI,EAAI/nI,KAAK4qC,KAAIx6C,KAAM0mJ,MAAM5qG,EAAKkrG,EAAMhnJ,KAAOsP,IAAMy2H,EACrD+gB,EAAOl3I,KAAKD,IAAIgoI,GAChBkP,EAAOj3I,KAAKC,IAAI8nI,GACZ/nI,KAAK0F,IAAGtV,KAAMqmJ,UAAYrgB,GAC5B+I,EAAKJ,EAAK3uI,KAAMsP,EAAGwsC,EAAG97C,KAAQwuI,IAAGxuI,KAAOwuI,IAAMwY,GAC9CD,EAAK,EAAC/mJ,KAAQmD,EAACnD,KAAQopI,GAAK2F,EAAE/uI,KAAQumJ,KACtC5tE,EAAEnpE,EAACxP,KAAQuW,GAAKwwI,EAAKn3I,KAAKC,IAAI2nC,EAAGx3C,KAAQwoI,OACzC7vD,EAAElpE,EAACzP,KAAQ2W,GAAE3W,KAAQwuI,IAAMuY,EAAKn3I,KAAKD,IAAI6nC,EAAGx3C,KAAQwoI,OAE7C7vD,IAEA/oE,KAAK0F,IAAGtV,KAAMsmJ,SAAWtgB,GAGhCuY,EAAI,EAACv+I,KAAQmD,EAACnD,KAAQopI,IAAM,EAAI0d,EAAOl3I,KAAKD,IAAIu3I,IAChDvuE,EAAElpE,EAAI8uI,EAAIsI,IAKVtI,EAAI,EAACv+I,KAAQmD,EAACnD,KAAQopI,GAAEppI,KAAQwmJ,KAAGxmJ,KAAS2mJ,OAAS,EAAC3mJ,KAAQ4mJ,MAAQC,EAAI7mJ,KAAQ2mJ,MAAQG,EAAOl3I,KAAKD,IAAIu3I,KAC1GvuE,EAAElpE,EAAI8uI,GAACv+I,KAAS2mJ,MAAQE,EAAI7mJ,KAAQ4mJ,MAAQE,EAAOl3I,KAAKD,IAAIu3I,IAAIlnJ,KAAU2W,IAE5EgiE,EAAEnpE,EAAI+uI,EAAIuI,EAAOl3I,KAAKC,IAAIq3I,GAAIlnJ,KAASuW,GAGlCoiE,KA2EPxhC,iBAvEiBwhC,OAGbnhC,EAAKsE,EAAKizF,EAAIoY,EAAIC,EAFtBzuE,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,OAERowI,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,WAC9Bi9H,OAAM,KACTt9H,EAAI,EAAIQ,KAAK4qC,KAAKusG,GAAM,EAAC/mJ,KAAQmD,EAACnD,KAAQopI,YAC9C5xF,EAAGx3C,KAAQwoI,MACX1sF,EAAG97C,KAAQmoI,KACP4e,GAAM/gB,GACRrtD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,IAET78B,EAAMlsC,KAAKmsC,KAAKnsC,KAAKD,IAAIP,GAACpP,KAASsmJ,QAAU3tE,EAAElpE,EAAIG,KAAKC,IAAIT,GAACpP,KAASqmJ,QAAUU,GAG5EvvG,EAFA5nC,KAAK0F,IAAGtV,KAAMqmJ,SAAWrgB,OAClBmC,KAAO,EACRuG,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,GAAG,EAAMmpE,EAAElpE,IAGhDi/H,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,EAAGmpE,EAAElpE,IAI5Ci/H,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,EAAII,KAAKC,IAAIT,GAAI23I,EAAE/mJ,KAAQqmJ,QAAUz2I,KAAKD,IAAIP,GAAKupE,EAAElpE,EAACzP,KAAQsmJ,QAAU12I,KAAKC,IAAIT,KAE9HupE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,MAGH/oE,KAAK0F,IAAGtV,KAAMqmJ,UAAYrgB,EAAK,IAC7B+gB,GAAM/gB,SACRlqF,EAAG97C,KAAQmoI,KACX3wF,EAAGx3C,KAAQwoI,MACX7vD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EAEC68B,EAETA,EAAEnpE,GAACxP,KAASwuI,IACZ71D,EAAElpE,GAACzP,KAASwuI,IACZO,EAAKgY,EAAE/mJ,KAAQumJ,MAAQ,EAACvmJ,KAAQmD,EAACnD,KAAQopI,IACzCttF,EAAG97C,KAAQwuI,IAAMM,EAAK9uI,KAAMsP,EAAGy/H,GAC/Bv3F,EAAGx3C,KAAQwuI,IAAME,EAAU1uI,KAAMwuI,IAAGxuI,KAAQwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,GAAG,EAAMmpE,EAAElpE,SAG5E03I,EAAK,EAAIv3I,KAAK4qC,KAAKusG,EAAE/mJ,KAAQ2mJ,OAAS,EAAC3mJ,KAAQmD,EAACnD,KAAQopI,GAAEppI,KAAQwmJ,MAClEhvG,EAAGx3C,KAAQwoI,MACPue,GAAM/gB,EACRohB,EAAGpnJ,KAAQymJ,IAGXW,EAAMx3I,KAAKmsC,KAAKnsC,KAAKD,IAAIw3I,GAAEnnJ,KAAS4mJ,MAAQjuE,EAAElpE,EAAIG,KAAKC,IAAIs3I,GAAEnnJ,KAAS2mJ,MAAQI,GAC9EvvG,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,EAAII,KAAKC,IAAIs3I,GAAKJ,EAAE/mJ,KAAQ2mJ,MAAQ/2I,KAAKD,IAAIw3I,GAAMxuE,EAAElpE,EAACzP,KAAQ4mJ,MAAQh3I,KAAKC,IAAIs3I,MAE5HrrG,GAAM,EAAKgzF,EAAK9uI,KAAMsP,EAAGM,KAAKyqC,IAAI,IAAO0rF,EAAUqhB,YAGvDzuE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EAGC68B,GASP42D,MALS,uEAMTmX,eApKaW,EAAM/Y,EAAQgZ,UAC3BhZ,GAAUgZ,EACF13I,KAAKyqC,IAAI,IAAO0rF,EAAUshB,IAASz3I,KAAKuX,KAAK,EAAImnH,IAAW,EAAIA,GAAS,GAAMgZ,SAqPrFC,GAAM,CACRlY,KA3EE,eAGEmY,EAAIxnJ,KAAQmoI,UACXsf,QAAOznJ,KAAQwoI,UAChBkf,EAAU93I,KAAKC,IAAI23I,GACnBG,EAAa3nJ,KAAQmD,EAErBykJ,EAAa,EADT5nJ,KAAQioI,GAEZ/4H,EAAK,EAAI04I,EAAah4I,KAAKuX,IAAIygI,EAAY,GAC3Ct4I,EAACtP,KAAQsP,EAAIM,KAAK8W,KAAKxX,QACtB24I,EAAC7nJ,KAAQopI,GAAKue,EAAgB/3I,KAAK8W,KAAK,EAAIxX,IAAO,EAAIA,EAAKU,KAAKuX,IAAIugI,EAAS,SAC9EhmD,MAAQ9xF,KAAK8W,KAAK,EAAIxX,GAAM,EAAIA,GAAMU,KAAKuX,IAAIvX,KAAKD,IAAI63I,GAAO,SAC/DM,GAAKl4I,KAAKmsC,KAAK2rG,EAAO1nJ,KAAQ0hG,WAC/BqmD,EAAKn4I,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,EAAC7b,KAAQ8nJ,GAAK,IAC/CE,EAAKp4I,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,EAAI2rI,EAAO,IAC5CS,EAAKr4I,KAAKwL,KAAK,EAAI9L,EAAIo4I,IAAY,EAAIp4I,EAAIo4I,SAC1C/B,EAAIoC,EAAE/nJ,KAAQ0hG,MAAQsmD,EAAEhoJ,KAAQ0hG,MAAQpyF,EAAI,EAAI24I,GA2DrD/wG,iBAxDiByhC,OACbuvE,EAAMt4I,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,EAAI88D,EAAElpE,EAAI,IAC5C04I,EAAGnoJ,KAAQsP,EAAI,EAAIM,KAAKwL,KAAK,EAACpb,KAAQsP,EAAIM,KAAKC,IAAI8oE,EAAElpE,KAAO,EAACzP,KAAQsP,EAAIM,KAAKC,IAAI8oE,EAAElpE,KACpF24I,GAACpoJ,KAAS0hG,OAASwmD,EAAMC,GAAGnoJ,KAAS2lJ,EAGrCviJ,EAAI,GAAKwM,KAAK4qC,KAAK5qC,KAAKuL,IAAIitI,IAAMx4I,KAAKiM,GAAK,GAG5CwsI,EAACroJ,KAAQ0hG,OAAS/oB,EAAEnpE,EAACxP,KAAQynJ,SAG7Ba,EAAO14I,KAAK4qC,KAAK5qC,KAAKC,IAAIw4I,IAAMz4I,KAAKC,IAAG7P,KAAM8nJ,IAAMl4I,KAAKyqC,IAAIj3C,GAAKwM,KAAKD,IAAG3P,KAAM8nJ,IAAMl4I,KAAKD,IAAI04I,KAE/FE,EAAO34I,KAAKmsC,KAAKnsC,KAAKD,IAAG3P,KAAM8nJ,IAAMl4I,KAAKC,IAAIzM,GAAKwM,KAAKC,IAAG7P,KAAM8nJ,IAAMl4I,KAAKD,IAAIvM,GAAKwM,KAAKD,IAAI04I,WAElG1vE,EAAElpE,EAACzP,KAAQ6nJ,EAAI,EAAIj4I,KAAKwL,KAAK,EAAIxL,KAAKC,IAAI04I,KAAU,EAAI34I,KAAKC,IAAI04I,KAAIvoJ,KAAW2W,GAChFgiE,EAAEnpE,EAACxP,KAAQ6nJ,EAAIS,EAAItoJ,KAAQuW,GACpBoiE,GAuCPxhC,iBApCiBwhC,WACbi/D,EAAIj/D,EAAEnpE,EAACxP,KAAQuW,GACfohI,EAAIh/D,EAAElpE,EAACzP,KAAQ2W,GAEf2xI,EAAO1Q,EAAC53I,KAAQ6nJ,EAChBU,EAAO,GAAK34I,KAAK4qC,KAAK5qC,KAAKuL,IAAIw8H,EAAC33I,KAAQ6nJ,IAAMj4I,KAAKiM,GAAK,GAExDzY,EAAIwM,KAAKmsC,KAAKnsC,KAAKD,IAAG3P,KAAM8nJ,IAAMl4I,KAAKC,IAAI04I,GAAQ34I,KAAKC,IAAG7P,KAAM8nJ,IAAMl4I,KAAKD,IAAI44I,GAAQ34I,KAAKD,IAAI24I,IACjGD,EAAIz4I,KAAK4qC,KAAK5qC,KAAKC,IAAIy4I,IAAS14I,KAAKD,IAAG3P,KAAM8nJ,IAAMl4I,KAAKD,IAAI24I,GAAQ14I,KAAKC,IAAG7P,KAAM8nJ,IAAMl4I,KAAKyqC,IAAIkuG,KAElGC,EAAMxoJ,KAAQynJ,QAAUY,EAACroJ,KAAQ0hG,MAEjC0mD,EAAI,EACJK,EAAMrlJ,EACNslJ,GAAU,IACVC,EAAY,EACT/4I,KAAK0F,IAAImzI,EAAMC,GAAW,MAAS,MAClCC,EAAY,UAKlBP,EAAI,EAACpoJ,KAAQ0hG,OAAS9xF,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,EAAIzY,EAAI,IAACpD,KAAU2lJ,GAAC3lJ,KAASsP,EAAIM,KAAKwL,IAAIxL,KAAKyqC,IAAIzqC,KAAKiM,GAAK,EAAIjM,KAAKmsC,KAAI/7C,KAAMsP,EAAIM,KAAKC,IAAI44I,IAAQ,IACvJC,EAAUD,EACVA,EAAM,EAAI74I,KAAK4qC,KAAK5qC,KAAKuL,IAAIitI,IAAMx4I,KAAKiM,GAAK,SAG/C88D,EAAEnpE,EAAIg5I,EACN7vE,EAAElpE,EAAIg5I,EACC9vE,GAQP42D,MALS,YAQPqZ,GAAM,SAoONC,GAAK,CACPxZ,KA1N8C,eAE1Cb,EAAKK,EAAKia,EAAQpJ,EAAGqJ,EAAGC,EAAGC,EAAGC,EAAQvwE,EAAGwwE,EAC3CC,EAZavS,EAEXwS,EAS4CxgB,EAAQ,EAC9CygB,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAU,OAIjEC,QAdDP,EAAoC,iBAFzBxS,EAgBM72I,MAdS6vD,WAA0Bn0D,OAAOD,KAAKo7I,EAAEhnF,YAAY,GAAKgnF,EAAEhnF,uBAErEgnF,GAAC,WAAgBA,IAAkD,IAHnE,6EAGuC9rI,QAAQs+I,SAa9DQ,OAAM,WAAW7pJ,SAElB8pJ,GAAM,YACC9pJ,OACT8pJ,GAAM,OAGJC,GAAM,8BACgB/pJ,OACxB+pJ,GAAM,GAGJD,IACFH,EAAO3pJ,KAAQ0hG,OAGbqoD,IACFlhB,EAAK7oI,KAAS8oI,qBAAuB7C,GAGnC6jB,GAAOC,EACTT,EAAItpJ,KAAQgpI,cAEZugB,EAAIvpJ,KAAQ0oI,MACZ+gB,EAAIzpJ,KAAQi7C,KACZuuG,EAAIxpJ,KAAQ4oI,MACZ8gB,EAAI1pJ,KAAQk7C,KAERtrC,KAAK0F,IAAIm0I,EAAOC,IAASd,KAAQpa,EAAM5+H,KAAK0F,IAAIm0I,KAAUb,IAC1Dh5I,KAAK0F,IAAIk5H,EAAMzI,IAAY6iB,IAAOh5I,KAAK0F,IAAI1F,KAAK0F,IAAGtV,KAAMmoI,MAAQpC,IAAY6iB,IAC7Eh5I,KAAK0F,IAAI1F,KAAK0F,IAAIo0I,GAAQ3jB,IAAY6iB,GAAG,MAAA,IACjC5sJ,UAIVguJ,EAAS,EAAGhqJ,KAAQsvI,GACxBT,EAAMj/H,KAAK8W,KAAKsjI,GAEZp6I,KAAK0F,IAAGtV,KAAMmoI,MAAQnC,GACxBkjB,EAASt5I,KAAKC,IAAG7P,KAAMmoI,MACvB2gB,EAASl5I,KAAKD,IAAG3P,KAAMmoI,MACvBqG,EAAM,EAACxuI,KAAQsvI,GAAK4Z,EAASA,OACxB7F,EAAIyF,EAASA,OACbzF,EAAIzzI,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAEtvI,KAAQqjJ,EAACrjJ,KAAQqjJ,EAAI2G,QAC9C7N,EAACn8I,KAAQqjJ,EAACrjJ,KAAQopI,GAAKyF,EAAML,GAElCua,GADArJ,EAAC1/I,KAAQqjJ,EAAIxU,GAAOia,EAASl5I,KAAK8W,KAAK8nH,KAC/BkR,EAAG,IAEF,EACPqJ,EAAI,GAEJA,EAAIn5I,KAAK8W,KAAKqiI,QACL5gB,KAAO,IACd4gB,GAAKA,SAIJkB,EAAIlB,GAAKrJ,OACTuK,GAAKr6I,KAAKuX,IAAIwnH,EAAK3uI,KAAMsP,EAACtP,KAAOmoI,KAAM+gB,GAAMlpJ,KAAQqjJ,UAErDA,EAAI,EAAIxU,OACRsN,EAACn8I,KAAQopI,QACT6gB,EAAIvK,EAAIqJ,EAAI,GAGfe,GAAOC,GACLD,GACFV,EAASx5I,KAAKmsC,KAAKnsC,KAAKC,IAAI85I,GAAWjK,GAClCqK,IACHlhB,EAAQ8gB,KAGVP,EAASvgB,EACT8gB,EAAU/5I,KAAKmsC,KAAK2jG,EAAI9vI,KAAKC,IAAIu5I,UAE9Bc,KAAOZ,EAAO15I,KAAKmsC,KAAK,IAAOgtG,EAAI,EAAIA,GAAKn5I,KAAKyqC,IAAI+uG,IAAMppJ,KAAUqjJ,IAE1E2F,EAAIp5I,KAAKuX,IAAIwnH,EAAK3uI,KAAMsP,EAAGm6I,EAAM75I,KAAKC,IAAI45I,IAAIzpJ,KAASqjJ,GACvD4F,EAAIr5I,KAAKuX,IAAIwnH,EAAK3uI,KAAMsP,EAAGo6I,EAAM95I,KAAKC,IAAI65I,IAAI1pJ,KAASqjJ,GACvD0F,EAAC/oJ,KAAQiqJ,EAAIjB,EACbrwE,GAAKswE,EAAID,IAAMC,EAAID,GAEnBG,IADAA,EAACnpJ,KAAQiqJ,EAACjqJ,KAAQiqJ,GACThB,EAAID,IAAMG,EAAIF,EAAID,IAC3Bxa,EAAM+a,EAAOC,IAEF55I,KAAKu6I,GACdX,GAAOpjB,EACEoI,EAAM5+H,KAAKu6I,KACpBX,GAAQpjB,QAGL8jB,KAAOxb,EAAW,IAAO6a,EAAOC,GAAQ55I,KAAK4qC,KAAK2uG,EAAIv5I,KAAKyqC,IAAI,GAAGr6C,KAAQqjJ,GAAKkG,EAAOC,IAAS7wE,GAAC34E,KAASqjJ,GAC9G+F,EAASx5I,KAAK4qC,KAAK,EAAI5qC,KAAKC,IAAG7P,KAAMqjJ,EAAI3U,EAAW6a,EAAIvpJ,KAAQkqJ,QAAUnB,EAAI,EAAIA,IAClFlgB,EAAQ8gB,EAAU/5I,KAAKmsC,KAAK2jG,EAAI9vI,KAAKC,IAAIu5I,UAGtCgB,OAASx6I,KAAKC,IAAIu5I,QAClBiB,OAASz6I,KAAKD,IAAIy5I,QAClBkB,OAAS16I,KAAKC,IAAIg5H,QAClB0hB,OAAS36I,KAAKD,IAAIk5H,QAElB2hB,GAAK,EAACxqJ,KAAQqjJ,OACdoH,IAAGzqJ,KAAQm8I,EAACn8I,KAAQwqJ,QACpBE,IAAM,EAAC1qJ,KAAQyqJ,SACXb,OAAM5pJ,KACR2qJ,IAAM,QAENA,IAAM/6I,KAAK0F,IAAGtV,KAAMyqJ,IAAM76I,KAAK4qC,KAAK5qC,KAAK8W,KAAKg5H,EAAIA,EAAI,GAAK9vI,KAAKD,IAAIg6I,UAEhExhB,KAAO,IAACnoI,KACV2qJ,KAAG3qJ,KAAU2qJ,MAItB5B,EAAI,GAAMK,OACLwB,SAAQ5qJ,KAAQyqJ,IAAM76I,KAAKwL,IAAIxL,KAAKyqC,IAAI8rF,EAAS4iB,SACjD8B,SAAQ7qJ,KAAQyqJ,IAAM76I,KAAKwL,IAAIxL,KAAKyqC,IAAI8rF,EAAS4iB,KA+FtD7xG,QA1F8D,SAC7CyhC,OAEbyvE,EAAG/J,EAAGyM,EAAGC,EAAGC,EAAGlI,EAAMpqE,EAAG8C,EADxBxtC,EAAM,MAEV2qC,EAAEnpE,EAAImpE,EAAEnpE,EAACxP,KAAQkqJ,KAEbt6I,KAAK0F,IAAI1F,KAAK0F,IAAIqjE,EAAElpE,GAAKs2H,GAAWC,EAAK,IAI3CoiB,EAAI,KAHJ4C,EAAChrJ,KAAQiqJ,EAAIr6I,KAAKuX,IAAIwnH,EAAK3uI,KAAMsP,EAAGqpE,EAAElpE,EAAGG,KAAKC,IAAI8oE,EAAElpE,IAACzP,KAASqjJ,KAE9DP,EAAO,EAAIkI,IAEX3M,EAAI,IAAO2M,EAAIlI,GACfiI,EAAIn7I,KAAKC,IAAG7P,KAAMqjJ,EAAI1qE,EAAEnpE,GACxBs7I,GAAK1C,EAACpoJ,KAAQoqJ,OAASW,EAAC/qJ,KAAQqqJ,QAAUhM,EAEtCzuI,KAAK0F,IAAI1F,KAAK0F,IAAIw1I,GAAK,GAAO9kB,EAAK,MAAA,IAC3BhqI,MAGZw/E,EAAI,GAAGx7E,KAAQyqJ,IAAM76I,KAAKwL,KAAK,EAAI0vI,IAAI,EAAIA,IAC3ChI,EAAOlzI,KAAKD,IAAG3P,KAAMqjJ,EAAI1qE,EAAEnpE,GAGzBkpE,EADE9oE,KAAK0F,IAAIwtI,GAAQ8F,GAClB5oJ,KAAQm8I,EAAIxjE,EAAEnpE,EAEdxP,KAAQyqJ,IAAM76I,KAAKyrC,MAAO+sG,EAACpoJ,KAAQqqJ,OAASU,EAAC/qJ,KAAQoqJ,OAAStH,QAGjEtnE,EAAI7C,EAAElpE,EAAI,EAACzP,KAAQ4qJ,SAAQ5qJ,KAAQ6qJ,SACnCnyE,EAAC14E,KAAQyqJ,IAAM9xE,EAAElpE,cAGVo6I,QACP77G,EAAOx+B,EAAIkpE,EACX1qC,EAAOv+B,EAAI+rE,IAEX9C,GAAC14E,KAAS2qJ,IACV38G,EAAOx+B,EAAIgsE,EAACx7E,KAAQuqJ,OAAS7xE,EAAC14E,KAAQsqJ,OACtCt8G,EAAOv+B,EAAIipE,EAAC14E,KAAQuqJ,OAAS/uE,EAACx7E,KAAQsqJ,QAGxCt8G,EAAOx+B,EAACxP,KAASmD,EAAI6qC,EAAOx+B,EAACxP,KAAQuW,GACrCy3B,EAAOv+B,EAACzP,KAASmD,EAAI6qC,EAAOv+B,EAACzP,KAAQ2W,GAE9Bq3B,GA+CPmJ,iBA5CiBwhC,OACbD,EAAG8C,EAAGyvE,EAAIC,EAAIC,EAAIC,EAAIC,EACtBr9G,EAAM,MAEV2qC,EAAEnpE,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,KAAO,EAAGvW,KAAQmD,GACpCw1E,EAAElpE,GAAKkpE,EAAElpE,EAACzP,KAAQ2W,KAAO,EAAG3W,KAAQmD,QAE3B0mJ,QACPruE,EAAI7C,EAAElpE,EACNipE,EAAIC,EAAEnpE,IAENgsE,EAAI7C,EAAEnpE,EAACxP,KAAQuqJ,OAAS5xE,EAAElpE,EAACzP,KAAQsqJ,OACnC5xE,EAAIC,EAAElpE,EAACzP,KAAQuqJ,OAAS5xE,EAAEnpE,EAACxP,KAAQsqJ,OAAMtqJ,KAAQ2qJ,KAInDO,EAAK,KADLD,EAAKr7I,KAAKuL,KAAGnb,KAAO0qJ,IAAMlvE,IACT,EAAIyvE,GACrBE,EAAK,IAAOF,EAAK,EAAIA,GAErBI,IADAD,EAAKx7I,KAAKC,IAAG7P,KAAM0qJ,IAAMhyE,IACjB14E,KAAQqqJ,OAASa,EAAElrJ,KAAQoqJ,QAAUe,EAEzCv7I,KAAK0F,IAAI1F,KAAK0F,IAAI+1I,GAAM,GAAKrlB,EAC/Bh4F,EAAOx+B,EAAI,EACXw+B,EAAOv+B,EAAI47I,EAAK,GAAKtlB,EAAUA,UAE/B/3F,EAAOv+B,EAACzP,KAAQiqJ,EAAIr6I,KAAK8W,MAAM,EAAI2kI,IAAO,EAAIA,IAC9Cr9G,EAAOv+B,EAAIq/H,EAAK9uI,KAAMsP,EAAGM,KAAKuX,IAAI6mB,EAAOv+B,EAAG,EAACzP,KAAQqjJ,IAEjDr1G,EAAOv+B,IAAMuF,EAAAA,EAAQ,MAAA,IACbhZ,MAGZgyC,EAAOx+B,GAACxP,KAASwqJ,GAAK56I,KAAKyrC,MAAO6vG,EAAElrJ,KAAQqqJ,OAASe,EAAEprJ,KAAQoqJ,OAASx6I,KAAKD,IAAG3P,KAAM0qJ,IAAMhyE,WAG9F1qC,EAAOx+B,GAACxP,KAASkqJ,KAEVl8G,GAQPuhG,MALU,mOA8IR+b,GAAG,CACLjc,wBA3HUn0F,OAAIl7C,KACPk7C,KAAIl7C,KAAQi7C,WAETmuF,KAAEppI,KACLopI,GAAK,QAEP7yH,GAAEvW,KAAQuW,IAAM,OAChBI,GAAE3W,KAAQ2W,IAAM,IAEjB/G,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,QAIlC8c,EAAI9iJ,KAAQoD,EAACpD,KAAQmD,OACpBmM,EAAIM,KAAK8W,KAAK,EAAIo8H,EAAOA,OAE1ByI,EAAO37I,KAAKC,IAAG7P,KAAMi7C,MACrBuwG,EAAO57I,KAAKD,IAAG3P,KAAMi7C,MACrBurG,EAAMpY,EAAKpuI,KAAMsP,EAAGi8I,EAAMC,GAC1BC,EAAM9c,EAAK3uI,KAAMsP,EAACtP,KAAOi7C,KAAMswG,GAE/BG,EAAO97I,KAAKC,IAAG7P,KAAMk7C,MACrBywG,EAAO/7I,KAAKD,IAAG3P,KAAMk7C,MACrB0wG,EAAMxd,EAAKpuI,KAAMsP,EAAGo8I,EAAMC,GAC1BE,EAAMld,EAAK3uI,KAAMsP,EAACtP,KAAOk7C,KAAMwwG,GAE/BI,EAAMnd,EAAK3uI,KAAMsP,EAACtP,KAAOmoI,KAAMv4H,KAAKC,IAAG7P,KAAMmoI,OAE7Cv4H,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,EAAKhmI,KACpC+rJ,GAAKn8I,KAAKwL,IAAIorI,EAAMoF,GAAOh8I,KAAKwL,IAAIqwI,EAAMI,QAG1CE,GAAKR,EAER/9H,MAAKxtB,KAAM+rJ,MAAE/rJ,KACV+rJ,GAAKR,QAEPS,GAAKxF,GAAGxmJ,KAAS+rJ,GAAKn8I,KAAKuX,IAAIskI,EAAGzrJ,KAAO+rJ,UACzChF,GAAE/mJ,KAAQmD,EAACnD,KAAQgsJ,GAAKp8I,KAAKuX,IAAI2kI,EAAG9rJ,KAAO+rJ,SACtChhG,QAAK/qD,KACR+qD,MAAK,6BAoFZ7T,iBA9EiByhC,OAEbnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAGRG,KAAK0F,IAAI,EAAI1F,KAAK0F,IAAIwmC,GAAOlsC,KAAKiM,KAAOmqH,IAC3ClqF,EAAM2yF,EAAK3yF,IAAQiqF,EAAU,YAI3BgJ,EAAIkd,EADJzd,EAAM5+H,KAAK0F,IAAI1F,KAAK0F,IAAIwmC,GAAOiqF,MAE/ByI,EAAMxI,EACR+I,EAAKJ,EAAK3uI,KAAMsP,EAAGwsC,EAAKlsC,KAAKC,IAAIisC,IACjCmwG,EAAGjsJ,KAAQmD,EAACnD,KAAQgsJ,GAAKp8I,KAAKuX,IAAI4nH,EAAE/uI,KAAO+rJ,aAG3Cvd,EAAM1yF,EAAG97C,KAAQ+rJ,KACN,EAAC,OACH,KAETE,EAAM,MAEJ1uG,EAAKv9C,KAAQ+rJ,GAAKrd,EAAWl3F,EAAGx3C,KAAQwoI,cAC5C7vD,EAAEnpE,EAACxP,KAAQopI,IAAM6iB,EAAMr8I,KAAKC,IAAI0tC,IAAKv9C,KAAUuW,GAC/CoiE,EAAElpE,EAACzP,KAAQopI,IAAEppI,KAAS+mJ,GAAKkF,EAAMr8I,KAAKD,IAAI4tC,IAAKv9C,KAAU2W,GAElDgiE,GAoDPxhC,iBA/CiBwhC,OAEbszE,EAAKzd,EAAKO,EACVjzF,EAAKtE,EACLhoC,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,IAAEvW,KAASopI,GAC3B35H,EAACzP,KAAS+mJ,IAAMpuE,EAAElpE,EAACzP,KAAQ2W,IAAE3W,KAASopI,QACjC2iB,GAAK,GACZE,EAAMr8I,KAAK8W,KAAKlX,EAAIA,EAAIC,EAAIA,GAC5B++H,EAAM,IAGNyd,GAAOr8I,KAAK8W,KAAKlX,EAAIA,EAAIC,EAAIA,GAC7B++H,GAAM,OAEJjxF,EAAQ,KACA,IAAR0uG,IACF1uG,EAAQ3tC,KAAKyrC,MAAOmzF,EAAMh/H,EAAKg/H,EAAM/+H,IAE1B,IAARw8I,GAASjsJ,KAAW+rJ,GAAK,MAC5Bvd,EAAM,EAACxuI,KAAQ+rJ,GACfhd,EAAKn/H,KAAKuX,IAAK8kI,GAAGjsJ,KAASmD,EAACnD,KAAQgsJ,IAAMxd,IAE9B,QADZ1yF,EAAMgzF,EAAK9uI,KAAMsP,EAAGy/H,IACH,OACR,UAITjzF,GAAOiqF,SAETvuF,EAAMk3F,EAAWnxF,EAAKv9C,KAAQ+rJ,GAAE/rJ,KAAQwoI,OAExC7vD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAeP42D,MAZU,mJAiHR2c,GAAM,CACR7c,qBAlGKlsI,EAAI,iBACJmsI,GAAK,sBACLhgI,EAAIM,KAAK8W,KAAI1mB,KAAMsvI,SACdnH,OAAInoI,KACPmoI,KAAO,uBAEJK,QAAKxoI,KACRwoI,MAAQ,mBAEyBxoI,KAC9BopI,KAAEppI,KACLopI,GAAK,YAEP+iB,IAAM,sBACNC,IAAM,EAACpsJ,KAAQmsJ,SACfE,IAAGrsJ,KAAQmoI,UACXj5H,GAAElP,KAAQsvI,QACVhgI,EAAIM,KAAK8W,KAAI1mB,KAAMkP,SACnBo9I,KAAO18I,KAAK8W,KAAK,EAAC1mB,KAASkP,GAAKU,KAAKuX,IAAIvX,KAAKD,IAAG3P,KAAMqsJ,KAAM,IAAO,EAACrsJ,KAAQkP,UAC7Eq9I,GAAK,sBACLl4B,GAAKzkH,KAAKmsC,KAAKnsC,KAAKC,IAAG7P,KAAMqsJ,KAAGrsJ,KAASssJ,WACzCtyI,EAAIpK,KAAKuX,KAAK,EAACnnB,KAAQsP,EAAIM,KAAKC,IAAG7P,KAAMqsJ,OAAS,EAACrsJ,KAAQsP,EAAIM,KAAKC,IAAG7P,KAAMqsJ,MAAGrsJ,KAASssJ,KAAItsJ,KAAQsP,EAAI,QACzGqM,EAAI/L,KAAKyqC,IAAGr6C,KAAMq0H,GAAK,EAACr0H,KAAQmsJ,KAAOv8I,KAAKuX,IAAIvX,KAAKyqC,IAAGr6C,KAAMqsJ,IAAM,EAACrsJ,KAAQmsJ,KAAGnsJ,KAAQssJ,MAAItsJ,KAASga,OACrG+tI,GAAE/nJ,KAAQopI,QACVojB,GAAExsJ,KAAQmD,EAAIyM,KAAK8W,KAAK,EAAC1mB,KAAQkP,KAAO,EAAClP,KAAQkP,GAAKU,KAAKuX,IAAIvX,KAAKC,IAAG7P,KAAMqsJ,KAAM,SACnFI,GAAK,sBACLvhJ,EAAI0E,KAAKC,IAAG7P,KAAMysJ,SAClBC,IAAG1sJ,KAAQ+nJ,GAAE/nJ,KAAQwsJ,GAAK58I,KAAKyqC,IAAGr6C,KAAMysJ,SACxCE,GAAE3sJ,KAAQosJ,IAAGpsJ,KAAQusJ,IAuE1Br1G,QAlEsD,SACpCyhC,OACdi0E,EAAKl0E,EAAGm0E,EAAQhzI,EAAGxK,EAAGy9I,EAAKC,EAC3Bv1G,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EACR2yI,EAAY1T,EAAWl3F,EAAGx3C,KAAQwoI,cAEtCokB,EAAMh9I,KAAKuX,KAAM,EAACnnB,KAAQsP,EAAIM,KAAKC,IAAIisC,KAAS,EAAC97C,KAAQsP,EAAIM,KAAKC,IAAIisC,IAAG97C,KAAWssJ,KAAItsJ,KAAQsP,EAAI,GACpGopE,EAAI,GAAK9oE,KAAK4qC,KAAIx6C,KAAM2b,EAAI/L,KAAKuX,IAAIvX,KAAKyqC,IAAIyB,EAAM,EAAC97C,KAAQmsJ,KAAGnsJ,KAAQssJ,MAAQM,GAAG5sJ,KAASmsJ,KAC5FU,GAAUzK,EAASpiJ,KAAQssJ,KAC3BzyI,EAAIjK,KAAKmsC,KAAKnsC,KAAKD,IAAG3P,KAAM2sJ,IAAM/8I,KAAKC,IAAI6oE,GAAK9oE,KAAKC,IAAG7P,KAAM2sJ,IAAM/8I,KAAKD,IAAI+oE,GAAK9oE,KAAKD,IAAIk9I,IAC3Fx9I,EAAIO,KAAKmsC,KAAKnsC,KAAKD,IAAI+oE,GAAK9oE,KAAKC,IAAIg9I,GAAUj9I,KAAKD,IAAIkK,IACxDizI,EAAG9sJ,KAAQkL,EAAImE,EACf09I,EAAE/sJ,KAAQ0sJ,IAAM98I,KAAKuX,IAAIvX,KAAKyqC,IAAGr6C,KAAMysJ,GAAK,EAACzsJ,KAAQmsJ,KAAGnsJ,KAAQkL,GAAK0E,KAAKuX,IAAIvX,KAAKyqC,IAAIxgC,EAAI,EAAC7Z,KAAQmsJ,KAAGnsJ,KAAQkL,GAC/GytE,EAAElpE,EAAIs9I,EAAKn9I,KAAKD,IAAIm9I,GAAO,EAC3Bn0E,EAAEnpE,EAAIu9I,EAAKn9I,KAAKC,IAAIi9I,GAAO,OAEjBE,QACRr0E,EAAElpE,IAAK,EACPkpE,EAAEnpE,IAAK,GAEDmpE,GA8CRxhC,QA3C6B,SACXwhC,OACdD,EAAGm0E,EAAQhzI,EAAGxK,EAAQ09I,EAAIE,EAC1BC,EAIA5hJ,EAAMqtE,EAAEnpE,EACZmpE,EAAEnpE,EAAImpE,EAAElpE,EACRkpE,EAAElpE,EAAInE,OACI0hJ,QACRr0E,EAAElpE,IAAK,EACPkpE,EAAEnpE,IAAK,GAETu9I,EAAKn9I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GAEnCJ,EADMO,KAAKyrC,MAAMs9B,EAAElpE,EAAGkpE,EAAEnpE,GACdI,KAAKC,IAAG7P,KAAMysJ,IACxB5yI,EAAI,GAAKjK,KAAK4qC,KAAK5qC,KAAKuX,IAAGnnB,KAAM0sJ,IAAMK,EAAI,EAAC/sJ,KAAQkL,GAAK0E,KAAKyqC,IAAGr6C,KAAMysJ,GAAK,EAACzsJ,KAAQmsJ,MAAGnsJ,KAAUmsJ,KAClGzzE,EAAI9oE,KAAKmsC,KAAKnsC,KAAKD,IAAG3P,KAAM2sJ,IAAM/8I,KAAKC,IAAIgK,GAAKjK,KAAKC,IAAG7P,KAAM2sJ,IAAM/8I,KAAKD,IAAIkK,GAAKjK,KAAKD,IAAIN,IAC3Fw9I,EAASj9I,KAAKmsC,KAAKnsC,KAAKD,IAAIkK,GAAKjK,KAAKC,IAAIR,GAAKO,KAAKD,IAAI+oE,IACxDC,EAAEnpE,EAACxP,KAAQwoI,MAAQqkB,EAAM7sJ,KAAQssJ,KACjCW,EAAMv0E,EACNw0E,EAAK,MACDzV,EAAO,KAET9+D,EAAElpE,EAAI,GAAKG,KAAK4qC,KAAK5qC,KAAKuX,IAAGnnB,KAAM2b,GAAG,EAAG3b,KAAQssJ,MAAQ18I,KAAKuX,IAAIvX,KAAKyqC,IAAIq+B,EAAI,EAAC14E,KAAQmsJ,KAAM,EAACnsJ,KAAQssJ,MAAQ18I,KAAKuX,KAAK,EAACnnB,KAAQsP,EAAIM,KAAKC,IAAIo9I,KAAS,EAACjtJ,KAAQsP,EAAIM,KAAKC,IAAIo9I,IAAGjtJ,KAASsP,EAAI,IAACtP,KAAUmsJ,KACrMv8I,KAAK0F,IAAI23I,EAAMt0E,EAAElpE,GAAK,QACxBy9I,EAAK,GAEPD,EAAMt0E,EAAElpE,EACRgoI,GAAQ,QACM,IAAPyV,GAAYzV,EAAO,WACxBA,GAAQ,GACH,KAGD9+D,GAQR42D,MALU,qBAQR4d,GAAI,SAAYC,EAAIx+I,EAAIM,EAAI2rE,EAAI+zD,UAC1Bwe,EAAKxe,EAAMhgI,EAAKgB,KAAKC,IAAI,EAAI++H,GAAO1/H,EAAKU,KAAKC,IAAI,EAAI++H,GAAO/zD,EAAKjrE,KAAKC,IAAI,EAAI++H,IAGrFye,GAAI,SAAY79I,UACV,EAAI,IAAOA,GAAK,EAAIA,EAAI,IAAM,EAAI,KAAOA,KAG/C89I,GAAI,SAAY99I,SACV,KAAQA,GAAK,EAAI,IAAOA,GAAK,EAAI,OAAUA,KAGjD+9I,GAAI,SAAY/9I,SACV,UAAaA,EAAIA,GAAK,EAAI,IAAOA,IAGvCg+I,GAAI,SAAYh+I,UACVA,EAAIA,EAAIA,GAAK,GAAK,OAGxBi+I,GAAE,SAAYtqJ,EAAGmM,EAAGg/H,OAClBwU,EAAOxzI,EAAIg/H,SACRnrI,EAAIyM,KAAK8W,KAAK,EAAIo8H,EAAOA,IAG9B4K,GAAU,SAAYl+I,UAChBI,KAAK0F,IAAI9F,GAAKu2H,EAAWv2H,EAAKA,EAAKi/H,EAAKj/H,GAAKI,KAAKiM,IAGxD8xI,GAAK,SAAYhL,EAAIyK,EAAIx+I,EAAIM,EAAI2rE,OAC/B+zD,EACAI,EAEJJ,EAAM+T,EAAKyK,UACFzxJ,EAAI,EAAGA,EAAI,GAAIA,OAEtBizI,GADAI,GAAQ2T,GAAMyK,EAAKxe,EAAMhgI,EAAKgB,KAAKC,IAAI,EAAI++H,GAAO1/H,EAAKU,KAAKC,IAAI,EAAI++H,GAAO/zD,EAAKjrE,KAAKC,IAAI,EAAI++H,MAAUwe,EAAK,EAAIx+I,EAAKgB,KAAKD,IAAI,EAAIi/H,GAAO,EAAI1/H,EAAKU,KAAKD,IAAI,EAAIi/H,GAAO,EAAI/zD,EAAKjrE,KAAKD,IAAI,EAAIi/H,IAExLh/H,KAAK0F,IAAI05H,IAAS,MAAY,OACzBJ,SAKJhrF,SA8FLgqG,GAAI,CACNve,qBA3FU3C,cACH0gB,GAAKC,GAAIrtJ,KAAMsvI,SACf1gI,GAAK0+I,GAAIttJ,KAAMsvI,SACfpgI,GAAKq+I,GAAIvtJ,KAAMsvI,SACfz0D,GAAK2yE,GAAIxtJ,KAAMsvI,SACf6S,IAAGniJ,KAAQmD,EAAIgqJ,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAE76E,KAAOmoI,QAuFpEjxF,QAlFyE,SACvDyhC,GAGK,IACnBnpE,EAAGC,EACHo+I,EAAMl1E,EAAEnpE,EACRo/H,EAAMj2D,EAAElpE,KACZo+I,EAAMnf,EAAWmf,EAAG7tJ,KAAQwoI,YAEnBkE,OACPl9H,EAACxP,KAAQmD,EAAIyM,KAAKmsC,KAAKnsC,KAAKD,IAAIi/H,GAAOh/H,KAAKC,IAAIg+I,IAChDp+I,EAACzP,KAAQmD,GAAKyM,KAAKyrC,MAAMzrC,KAAKyqC,IAAIu0F,GAAMh/H,KAAKD,IAAIk+I,IAAG7tJ,KAAUmoI,eAI1DmG,EAAS1+H,KAAKC,IAAI++H,GAClBL,EAAS3+H,KAAKD,IAAIi/H,GAClBkf,EAAKL,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAAGg/H,GACxByf,EAAKn+I,KAAKyqC,IAAIu0F,GAAOh/H,KAAKyqC,IAAIu0F,GAC9B2T,EAAKsL,EAAMj+I,KAAKD,IAAIi/H,GACpBof,EAAMzL,EAAKA,EACX0L,EAAEjuJ,KAAQsvI,GAAKf,EAASA,GAAU,EAACvuI,KAAQsvI,IAG/C9/H,EAAIs+I,EAAKvL,GAAM,EAAIyL,EAAMD,GAAM,EAAI,GAAK,EAAIA,EAAK,EAAIE,GAAMD,EAAM,MACjEv+I,EAHMzP,KAAQmD,EAAIgqJ,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAI+zD,GAGrD5uI,KAAQmiJ,IAAM2L,EAAKxf,EAASC,EAASyf,GAAO,IAAO,EAAID,EAAK,EAAIE,GAAMD,EAAM,WAKpFr1E,EAAEnpE,EAAIA,EAACxP,KAAQuW,GACfoiE,EAAElpE,EAAIA,EAACzP,KAAQ2W,GACRgiE,GAkDPxhC,QA9CmB,SACDwhC,GAClBA,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,OAGRi4H,EAAKif,EAFLr+I,EAAImpE,EAAEnpE,EAACxP,KAAQmD,EACfsM,EAAIkpE,EAAElpE,EAACzP,KAAQmD,UAGVupI,OAAM,KACT1uC,EAAKvuF,EAACzP,KAAQmoI,KAClByG,EAAMh/H,KAAKmsC,KAAKnsC,KAAKC,IAAImuF,GAAMpuF,KAAKD,IAAIH,IACxCq+I,EAAMj+I,KAAKyrC,MAAMzrC,KAAKyqC,IAAI7qC,GAAII,KAAKD,IAAIquF,SAGxB,IACXkwD,EAAGluJ,KAAQmiJ,IAAGniJ,KAAQmD,EAAIsM,EAC1Bg6I,EAAOkE,GAAMO,EAAGluJ,KAAOotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,OAClDjrE,KAAK0F,IAAI1F,KAAK0F,IAAIm0I,GAAQ1jB,IAAYC,SACxCrtD,EAAEnpE,EAACxP,KAAQwoI,MACX7vD,EAAElpE,EAAIs2H,EACFt2H,EAAI,IACNkpE,EAAElpE,IAAK,GAEFkpE,MAELw1E,EAAMV,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAAGM,KAAKC,IAAI45I,IAElC2E,EAAMD,EAAMA,EAAMA,EAAGnuJ,KAAQmD,EAACnD,KAAQmD,GAAK,EAACnD,KAAQsvI,IACpD+e,EAAMz+I,KAAKuX,IAAIvX,KAAKyqC,IAAIovG,GAAO,GAC/B6E,EAAK9+I,EAACxP,KAAQmD,EAAIgrJ,EAClBI,EAAMD,EAAKA,EACf1f,EAAM6a,EAAO0E,EAAMv+I,KAAKyqC,IAAIovG,GAAQ2E,EAAME,EAAKA,GAAM,IAAO,EAAI,EAAID,GAAOC,EAAKA,EAAK,IACrFT,EAAMS,GAAM,EAAIC,GAAOF,EAAM,GAAK,EAAI,EAAIA,GAAOA,EAAME,EAAM,KAAO3+I,KAAKD,IAAI85I,UAI/E9wE,EAAEnpE,EAAIk/H,EAAWmf,EAAG7tJ,KAAQwoI,OAC5B7vD,EAAElpE,EAAIi+I,GAAW9e,GACVj2D,GASP42D,MALU,sCAQRif,GAAK,SAAYngB,EAAQC,OACvBE,SACAH,EAAS,MAEF,EAAIA,EAASA,IAAWC,GAAU,GAD3CE,EAAMH,EAASC,GACsCE,GAAQ,GAAMH,EAAUz+H,KAAKwL,KAAK,EAAIozH,IAAQ,EAAIA,KAG/F,EAAIF,GAiQ+B,IAC3CmgB,GAAM,kBAENC,GAAM,mBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,kBACNC,GAAM,wBAsBNC,GAAI,CACN1f,KA9QwD,eAalDf,EAXFhzH,EAAI1L,KAAK0F,IAAGtV,KAAMmoI,SAClBv4H,KAAK0F,IAAIgG,EAAIyqH,GAAWC,EAAKhmI,KAC1BowE,KAAIpwE,KAAQmoI,KAAO,EAACnoI,KAAQgvJ,OAAMhvJ,KAAQivJ,OAExCr/I,KAAK0F,IAAIgG,GAAK0qH,EAAKhmI,KACrBowE,KAAIpwE,KAAQkvJ,WAGZ9+E,KAAIpwE,KAAQmvJ,WAEV7f,GAAK,cAGP8f,GAAKZ,GAAKxuJ,KAAMsP,EAAG,QACnB+/I,IAAM,IAAO,EAACrvJ,KAAQsvI,SACtBggB,aAwOQhgB,OACXh0H,EACAi0I,EAAG,UACPA,EAAI,GAAKjgB,EAAKmf,GACdnzI,EAAIg0H,EAAKA,EACTigB,EAAI,IAAMj0I,EAAIozI,GACda,EAAI,GAAKj0I,EAAIszI,GACbtzI,GAAKg0H,EACLigB,EAAI,IAAMj0I,EAAIqzI,GACdY,EAAI,IAAMj0I,EAAIuzI,GACdU,EAAI,GAAKj0I,EAAIwzI,GACNS,EAnPMC,CAAOxvJ,KAAMsvI,SACXl/D,gBACH6+E,iBAGAD,YACHhxD,GAAK,kBAEFkxD,WACHO,GAAK7/I,KAAK8W,KAAK,GAAG1mB,KAAQovJ,SAC1BpxD,GAAK,EAACh+F,KAAQyvJ,QACdC,IAAM,OACNC,IAAM,GAAG3vJ,KAAQovJ,mBAEdD,WACHM,GAAK7/I,KAAK8W,KAAK,GAAG1mB,KAAQovJ,IAC/B9gB,EAAS1+H,KAAKC,IAAG7P,KAAMmoI,WAClBynB,MAAQpB,GAAKxuJ,KAAMsP,EAAGg/H,GAAMtuI,KAASovJ,QACrCS,MAAQjgJ,KAAK8W,KAAK,EAAC1mB,KAAQ4vJ,MAAK5vJ,KAAQ4vJ,YACxC5xD,GAAKpuF,KAAKD,IAAG3P,KAAMmoI,OAASv4H,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAKhB,EAASA,GAAMtuI,KAASyvJ,GAAEzvJ,KAAQ6vJ,YACtFF,KAAG3vJ,KAAS0vJ,IAAG1vJ,KAAQyvJ,IAAEzvJ,KAASg+F,QAClC0xD,KAAG1vJ,KAASg+F,aAKV5tB,OAAIpwE,KAAUmvJ,aAChBjG,OAASt5I,KAAKC,IAAG7P,KAAMmoI,WACvB2gB,OAASl5I,KAAKD,IAAG3P,KAAMmoI,QAkOhCjxF,QA5NyE,SACvDyhC,GAGK,IACnBnpE,EAAGC,EAAGqgJ,EAAQC,EAAQzhB,EAAQ0hB,EAAGC,EAAMC,EAAM9sJ,EAAGmrI,EAChDsf,EAAMl1E,EAAEnpE,EACRo/H,EAAMj2D,EAAElpE,KAEZo+I,EAAMnf,EAAWmf,EAAG7tJ,KAAQwoI,YACnBkE,WACP4B,EAAS1+H,KAAKC,IAAI++H,GAClBL,EAAS3+H,KAAKD,IAAIi/H,GAClBkhB,EAASlgJ,KAAKD,IAAIk+I,QACTz9E,OAAIpwE,KAAUmvJ,OAAKnvJ,KAASowE,OAAIpwE,KAAUkvJ,MAAK,KACtDz/I,EAACzP,KAASowE,OAAIpwE,KAAUkvJ,MAAS,EAAI3gB,EAASuhB,EAAS,EAAC9vJ,KAAQkpJ,OAAS5a,EAAMtuI,KAAQ8oJ,OAASva,EAASuhB,IAChG9pB,EAAK,OACL,KAGTx2H,GADAC,EAAIG,KAAK8W,KAAK,EAAIjX,IACV8+H,EAAS3+H,KAAKC,IAAIg+I,GAC1Bp+I,GAACzP,KAAUowE,OAAIpwE,KAAUkvJ,MAAS5gB,EAAMtuI,KAAQ8oJ,OAASxa,EAAMtuI,KAAQkpJ,OAAS3a,EAASuhB,eAE7E1/E,OAAIpwE,KAAUivJ,QAAMjvJ,KAASowE,OAAIpwE,KAAUgvJ,OAAM,SACpD5+E,OAAIpwE,KAAUivJ,SACrBa,GAAUA,GAERlgJ,KAAK0F,IAAIs5H,EAAG5uI,KAAQmoI,MAAQnC,EAAK,OAC5B,KAETv2H,EAAI02H,EAAe,GAANyI,EAEbp/H,GADAC,EAAI,GAACzP,KAAUowE,OAAIpwE,KAAUgvJ,OAAUp/I,KAAKD,IAAIF,GAAKG,KAAKC,IAAIJ,KACtDG,KAAKC,IAAIg+I,GACjBp+I,GAAKqgJ,eAIPG,EAAO,EACPC,EAAO,EACP9sJ,EAAI,EACJ0sJ,EAASlgJ,KAAKD,IAAIk+I,GAClBkC,EAASngJ,KAAKC,IAAIg+I,GAClBvf,EAAS1+H,KAAKC,IAAI++H,GAClBohB,EAAIxB,GAAKxuJ,KAAMsP,EAAGg/H,QACTl+D,OAAIpwE,KAAUmvJ,OAAKnvJ,KAASowE,OAAIpwE,KAAUkvJ,QACjDe,EAAOD,EAAChwJ,KAAQovJ,GAChBc,EAAOtgJ,KAAK8W,KAAK,EAAIupI,EAAOA,SAEjB7/E,gBACH++E,MACR/rJ,EAAI,EAACpD,KAAQ4vJ,MAAQK,EAAIjwJ,KAAQ6vJ,MAAQK,EAAOJ,kBAExCZ,MACR9rJ,EAAI,EAAI8sJ,EAAOJ,kBAEPb,OACR7rJ,EAAI2iI,EAAU6I,EACdohB,EAAChwJ,KAAQovJ,GAAKY,kBAENhB,OACR5rJ,EAAIwrI,EAAM7I,EACViqB,EAAChwJ,KAAQovJ,GAAKY,KAGZpgJ,KAAK0F,IAAIlS,GAAK4iI,EAAK,OACd,iBAEI51D,gBACH++E,gBACAD,MACR9rJ,EAAIwM,KAAK8W,KAAK,EAAItjB,GAEhBqM,OADO2gE,OAAIpwE,KAAUmvJ,MACpBnvJ,KAAQ2vJ,IAAMvsJ,GAACpD,KAAS6vJ,MAAQI,EAAIjwJ,KAAQ4vJ,MAAQM,EAAOJ,IAGvD1sJ,EAAIwM,KAAK8W,KAAK,GAAK,EAAIwpI,EAAOJ,KAAYG,EAAIjwJ,KAAQ2vJ,IAE7DngJ,EAACxP,KAAQ0vJ,IAAMtsJ,EAAI8sJ,EAAOH,kBAElBd,iBACAD,OACJgB,GAAK,GACPxgJ,GAAKpM,EAAIwM,KAAK8W,KAAKspI,IAAMD,EACzBtgJ,EAAIqgJ,GAAM9vJ,KAAUowE,OAAIpwE,KAAUgvJ,OAAU5rJ,GAAKA,IAGjDoM,EAAIC,EAAI,UAMdkpE,EAAEnpE,EAACxP,KAAQmD,EAAIqM,EAACxP,KAAQuW,GACxBoiE,EAAElpE,EAACzP,KAAQmD,EAAIsM,EAACzP,KAAQ2W,GACjBgiE,GA+HPxhC,QA3HmB,SACDwhC,GAClBA,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,OAGRk3I,EAAKjf,EAAKuhB,EAAKC,EAAKJ,EAAG7J,EAAKrzB,EA4GjBu9B,EAAMd,EACjBj0I,EA/GA9L,EAAImpE,EAAEnpE,EAACxP,KAAQmD,EACfsM,EAAIkpE,EAAElpE,EAACzP,KAAQmD,UAEVupI,OAAM,KAEXqa,EADEuJ,EAAO,EACLC,EAAO,MAGb3hB,EAAW,IADXmY,EAAKn3I,KAAK8W,KAAKlX,EAAIA,EAAIC,EAAIA,KAEjB,EAAC,OACF,YAETm/H,EAAM,EAAIh/H,KAAKmsC,KAAK6yF,QACXx+D,OAAIpwE,KAAUmvJ,OAAKnvJ,KAASowE,OAAIpwE,KAAUkvJ,QACjDqB,EAAO3gJ,KAAKC,IAAI++H,GAChB0hB,EAAO1gJ,KAAKD,IAAIi/H,SAELx+D,gBACH8+E,MACRtgB,EAAOh/H,KAAK0F,IAAIyxI,IAAO/gB,EAAS,EAAIp2H,KAAKmsC,KAAKtsC,EAAI8gJ,EAAOxJ,GACzDv3I,GAAK+gJ,EACL9gJ,EAAI6gJ,EAAOvJ,kBAEHoI,MACRvgB,EAAOh/H,KAAK0F,IAAIyxI,IAAO/gB,EAAKhmI,KAASmoI,KAAOv4H,KAAKmsC,KAAKu0G,EAAItwJ,KAAQkpJ,OAASz5I,EAAI8gJ,EAAIvwJ,KAAQ8oJ,OAAS/B,GACpGv3I,GAAK+gJ,EAAIvwJ,KAAQ8oJ,OACjBr5I,GAAK6gJ,EAAO1gJ,KAAKC,IAAI++H,GAAG5uI,KAASkpJ,QAAUnC,kBAEnCkI,OACRx/I,GAAKA,EACLm/H,EAAM7I,EAAU6I,kBAERogB,OACRpgB,GAAO7I,EAGT8nB,EAAa,IAANp+I,GAAOzP,KAAUowE,OAAIpwE,KAAUkvJ,OAAKlvJ,KAASowE,OAAIpwE,KAAUmvJ,MAAcv/I,KAAKyrC,MAAM7rC,EAAGC,GAAlB,UAG5EqjH,EAAK,OACI1iD,OAAIpwE,KAAUmvJ,OAAKnvJ,KAASowE,OAAIpwE,KAAUkvJ,MAAK,IACtD1/I,GAACxP,KAASg+F,GACVvuF,GAACzP,KAASg+F,IACVmoD,EAAMv2I,KAAK8W,KAAKlX,EAAIA,EAAIC,EAAIA,IAClBu2H,SACRrtD,EAAEnpE,EAACxP,KAAQwoI,MACX7vD,EAAElpE,EAACzP,KAAQmoI,KACJxvD,EAETy3E,EAAM,EAAIxgJ,KAAKmsC,KAAK,GAAMoqG,EAAGnmJ,KAAQyvJ,IACrCU,EAAMvgJ,KAAKD,IAAIygJ,GACf5gJ,GAAM4gJ,EAAMxgJ,KAAKC,IAAIugJ,QACZhgF,OAAIpwE,KAAUmvJ,OACrBr8B,EAAKq9B,EAAGnwJ,KAAQ4vJ,MAAQngJ,EAAI2gJ,EAAGpwJ,KAAQ6vJ,MAAQ1J,EAC/C6J,EAAChwJ,KAAQovJ,GAAKt8B,EACdrjH,EAAI02I,EAAGnmJ,KAAQ6vJ,MAAQM,EAAM1gJ,EAACzP,KAAQ4vJ,MAAQQ,IAG9Ct9B,EAAKrjH,EAAI2gJ,EAAMjK,EACf6J,EAAChwJ,KAAQovJ,GAAKt8B,EACdrjH,EAAI02I,EAAMgK,gBAGA//E,OAAIpwE,KAAUivJ,QAAMjvJ,KAASowE,OAAIpwE,KAAUgvJ,OAAM,SACpD5+E,OAAIpwE,KAAUivJ,SACrBx/I,GAAKA,KAEPugJ,EAAKxgJ,EAAIA,EAAIC,EAAIA,UAEfkpE,EAAEnpE,EAACxP,KAAQwoI,MACX7vD,EAAElpE,EAACzP,KAAQmoI,KACJxvD,EAETm6C,EAAK,EAAIk9B,EAAChwJ,KAAQovJ,QACTh/E,OAAIpwE,KAAUgvJ,SACrBl8B,GAAMA,GAGV+6B,EAAMj+I,KAAKyrC,MAAM7rC,EAAGC,GAgCP4gJ,EA/BCzgJ,KAAKmsC,KAAK+2E,GA+BLy8B,EA/BOvvJ,KAAQsvJ,IAgChCh0I,EAAI+0I,EAAOA,EAhCbzhB,EAiCMyhB,EAAOd,EAAI,GAAK3/I,KAAKC,IAAIyL,GAAKi0I,EAAI,GAAK3/I,KAAKC,IAAIyL,EAAIA,GAAKi0I,EAAI,GAAK3/I,KAAKC,IAAIyL,EAAIA,EAAIA,UA9B3Fq9D,EAAEnpE,EAAIk/H,EAAU1uI,KAAMwoI,MAAQqlB,GAC9Bl1E,EAAElpE,EAAIm/H,EACCj2D,GAoCP42D,MALU,uEAMVyf,OAzRW,EA0RXC,OAxRW,EAyRXC,MAxRU,EAyRVC,MAxRU,GA2RRqB,GAAK,SAAYhhJ,UACfI,KAAK0F,IAAI9F,GAAK,IAChBA,EAAKA,EAAI,EAAK,GAAI,GAEbI,KAAKmsC,KAAKvsC,QAuHfihJ,GAAG,CACLphB,gBAnHIz/H,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,SAGjC8c,KAAI9iJ,KAAQoD,EAACpD,KAAQmD,OACrBmsI,GAAK,EAAI1/H,KAAKuX,IAAGnnB,KAAM8iJ,KAAM,QAC7BjoE,GAAKjrE,KAAK8W,KAAI1mB,KAAMsvI,SAEpBohB,OAAS9gJ,KAAKC,IAAG7P,KAAMi7C,WACvB01G,OAAS/gJ,KAAKD,IAAG3P,KAAMi7C,WACvBq9B,GAAEt4E,KAAQ0wJ,YACVliB,IAAGxuI,KAAQ0wJ,YACXlK,IAAMpY,EAAKpuI,KAAM66E,GAAE76E,KAAO0wJ,OAAM1wJ,KAAO2wJ,aACvCC,IAAMpC,GAAKxuJ,KAAM66E,GAAE76E,KAAO0wJ,OAAM1wJ,KAAO2wJ,aAEvCD,OAAS9gJ,KAAKC,IAAG7P,KAAMk7C,WACvBy1G,OAAS/gJ,KAAKD,IAAG3P,KAAMk7C,WACvBq9B,GAAEv4E,KAAQ0wJ,YACV9E,IAAMxd,EAAKpuI,KAAM66E,GAAE76E,KAAO0wJ,OAAM1wJ,KAAO2wJ,aACvCE,IAAMrC,GAAKxuJ,KAAM66E,GAAE76E,KAAO0wJ,OAAM1wJ,KAAO2wJ,aAEvCD,OAAS9gJ,KAAKC,IAAG7P,KAAMmoI,WACvBwoB,OAAS/gJ,KAAKD,IAAG3P,KAAMmoI,WACvB2oB,GAAE9wJ,KAAQ0wJ,YACVK,IAAMvC,GAAKxuJ,KAAM66E,GAAE76E,KAAO0wJ,OAAM1wJ,KAAO2wJ,QAExC/gJ,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,EAAKhmI,KACpCgxJ,KAAGhxJ,KAASwmJ,IAAGxmJ,KAAQwmJ,IAAGxmJ,KAAQ4rJ,IAAG5rJ,KAAQ4rJ,MAAG5rJ,KAAU6wJ,IAAG7wJ,KAAQ4wJ,UAGrEI,IAAGhxJ,KAAQwuI,SAEbp/H,EAACpP,KAAQwmJ,IAAGxmJ,KAAQwmJ,IAAGxmJ,KAAQgxJ,IAAGhxJ,KAAQ4wJ,SAC1C7J,GAAE/mJ,KAAQmD,EAAIyM,KAAK8W,KAAI1mB,KAAMoP,EAACpP,KAAQgxJ,IAAGhxJ,KAAQ+wJ,KAAG/wJ,KAASgxJ,MAoFlE95G,QAhFqE,SACnDyhC,OAEdnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,OAEP4yI,QAAUzyI,KAAKC,IAAIisC,QACnBwmG,QAAU1yI,KAAKD,IAAImsC,OAEpBigF,EAAKyyB,GAAKxuJ,KAAM66E,GAAE76E,KAAOqiJ,QAAOriJ,KAAOsiJ,SACvC2J,EAAGjsJ,KAAQmD,EAAIyM,KAAK8W,KAAI1mB,KAAMoP,EAACpP,KAAQgxJ,IAAMj1B,GAAE/7H,KAASgxJ,IACxDzzG,EAAKv9C,KAAQgxJ,IAAMtiB,EAAWl3F,EAAGx3C,KAAQwoI,OACzCh5H,EAAIy8I,EAAMr8I,KAAKC,IAAI0tC,GAAKv9C,KAASuW,GACjC9G,EAACzP,KAAQ+mJ,GAAKkF,EAAMr8I,KAAKD,IAAI4tC,GAAKv9C,KAAS2W,UAE/CgiE,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GAgEPxhC,iBA7DkBwhC,OACdszE,EAAKlwB,EAAIyS,EAAKjxF,EAAO/F,EAAKsE,SAE9B68B,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,EAACzP,KAAQ+mJ,GAAKpuE,EAAElpE,EAACzP,KAAQ2W,QAClBq6I,KAAO,GACd/E,EAAMr8I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACpC++H,EAAM,IAGNyd,GAAOr8I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACrC++H,GAAM,GAERjxF,EAAQ,EACI,IAAR0uG,IACF1uG,EAAQ3tC,KAAKyrC,MAAMmzF,EAAM71D,EAAEnpE,EAAGg/H,EAAM71D,EAAElpE,IAExC++H,EAAMyd,EAAGjsJ,KAAQgxJ,IAAGhxJ,KAAQmD,OACnBupI,OACP5wF,EAAMlsC,KAAKmsC,MAAI/7C,KAAOoP,EAAIo/H,EAAMA,IAAQ,EAACxuI,KAAQgxJ,OAGjDj1B,GAAE/7H,KAASoP,EAAIo/H,EAAMA,GAAGxuI,KAASgxJ,IACjCl1G,EAAG97C,KAAQixJ,MAAKjxJ,KAAM66E,GAAIkhD,IAG5BvkF,EAAMk3F,EAAWnxF,EAAKv9C,KAAQgxJ,IAAGhxJ,KAAQwoI,OACzC7vD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAiCP42D,MALU,2CAMV0hB,MA7B2C,SAC9B5iB,EAAQtS,OACjBuS,EAAgBE,EAAKK,EAAKG,EAC1BJ,EAAM4hB,GAAM,GAAMz0B,MAClBsS,EAASrI,EAAK,OACT4I,UAGLsiB,EAAS7iB,EAASA,EACb1yI,EAAI,EAAGA,GAAK,GAAIA,OAMvBizI,GADAI,EAAO,IADPH,EAAM,GADNL,EAAMH,GAFNC,EAAS1+H,KAAKC,IAAI++H,KAGFJ,GACGK,EAHVj/H,KAAKD,IAAIi/H,IAGiB7S,GAAM,EAAIm1B,GAAU5iB,EAASO,EAAM,GAAMR,EAASz+H,KAAKwL,KAAK,EAAIozH,IAAQ,EAAIA,KAE3G5+H,KAAK0F,IAAI05H,IAAS,KAAI,OACjBJ,SAGJ,WA0GLuiB,GAAI,CACN9hB,KA1FE,WAIqDrvI,KAClDoxJ,QAAUxhJ,KAAKC,IAAG7P,KAAMmoI,WACxBkpB,QAAUzhJ,KAAKD,IAAG3P,KAAMmoI,WAExBmpB,cAAgB,IAAItxJ,KAAQmD,OAC5BqiJ,GAAK,GAkFVtuG,QA9EuD,SACrCyhC,OACd21D,EAAQC,EACR2Y,EACAqK,EAEAv3I,EACAxK,EAAGC,EACH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,SAGZy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,OAE7B8F,EAAS1+H,KAAKC,IAAIisC,GAClByyF,EAAS3+H,KAAKD,IAAImsC,GAElBy1G,EAAS3hJ,KAAKD,IAAIu3I,GAEZ,GADNltI,EAACha,KAAQoxJ,QAAU9iB,EAAMtuI,KAAQqxJ,QAAU9iB,EAASgjB,GAE3C,GAAO3hJ,KAAK0F,IAAI0E,IAAMgsH,GAC7Bx2H,EAACxP,KAAQuW,GAFL,EAEOvW,KAAQmD,EAAUorI,EAAS3+H,KAAKC,IAAIq3I,GAAQltI,EACvDvK,EAACzP,KAAQ2W,GAHL,EAGO3W,KAAQmD,GAAOnD,KAASqxJ,QAAU/iB,EAAMtuI,KAAQoxJ,QAAU7iB,EAASgjB,GAAUv3I,IAWxFxK,EAACxP,KAAQuW,GAAEvW,KAAQsxJ,cAAgB/iB,EAAS3+H,KAAKC,IAAIq3I,GACrDz3I,EAACzP,KAAQ2W,GAAE3W,KAAQsxJ,eAAatxJ,KAASqxJ,QAAU/iB,EAAMtuI,KAAQoxJ,QAAU7iB,EAASgjB,IAGtF54E,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GAwCPxhC,iBArCkBwhC,OACdouE,EACAf,EAAMC,EACN72I,EACAooC,EAAKsE,SAIT68B,EAAEnpE,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,IAAEvW,KAASmD,EAC7Bw1E,EAAElpE,GAAKkpE,EAAElpE,EAACzP,KAAQ2W,IAAE3W,KAASmD,EAE7Bw1E,EAAEnpE,GAACxP,KAASopI,GACZzwD,EAAElpE,GAACzP,KAASopI,IAEP2d,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,KACtCL,EAAIQ,KAAKyrC,MAAM0rG,EAAE/mJ,KAAOwlJ,IACxBQ,EAAOp2I,KAAKC,IAAIT,GAChB62I,EAAOr2I,KAAKD,IAAIP,GAEhB0sC,EAAM00G,GAAMvK,EAAIjmJ,KAAQoxJ,QAAWz4E,EAAElpE,EAAIu2I,EAAIhmJ,KAAQqxJ,QAAWtK,GAChEvvG,EAAM5nC,KAAKyrC,MAAMs9B,EAAEnpE,EAAIw2I,EAAMe,EAAE/mJ,KAAQqxJ,QAAUpL,EAAOttE,EAAElpE,EAACzP,KAAQoxJ,QAAUpL,GAC7ExuG,EAAMk3F,EAAU1uI,KAAMwoI,MAAQhxF,KAG9BsE,EAAG97C,KAAQylJ,MACXjuG,EAAM,GAGRmhC,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,cAkGRiiB,GAAG,CACLniB,KAvDA,gBAGU3C,SAAM1sI,KACTopI,GAAKgF,EAAKpuI,KAAMsP,EAAGM,KAAKC,IAAG7P,KAAMsoI,QAAS14H,KAAKD,IAAG3P,KAAMsoI,WAoD/DpxF,QA/CgE,SAC9CyhC,OAGdnpE,EAAGC,EAFH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAIRy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,eACxBkE,OACPl9H,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAAI+jJ,EAAOt3I,KAAKD,IAAG3P,KAAMsoI,QAC5C74H,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAAIyM,KAAKC,IAAIisC,GAAOlsC,KAAKD,IAAG3P,KAAMsoI,iBAGjDvM,EAAKyyB,GAAKxuJ,KAAMsP,EAAGM,KAAKC,IAAIisC,IAChCtsC,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAACnD,KAAQopI,GAAK8d,EACjCz3I,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAAI44H,EAAK,GAAG/7H,KAAQopI,UAGzCzwD,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GA4BPxhC,QAxBgE,SAC9CwhC,OAGdnhC,EAAKsE,SAFT68B,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,QAGH+1H,QACPl1F,EAAMk3F,EAAU1uI,KAAMwoI,MAAS7vD,EAAEnpE,EAACxP,KAAQmD,EAAKyM,KAAKD,IAAG3P,KAAMsoI,SAC7DxsF,EAAMlsC,KAAKmsC,KAAM48B,EAAElpE,EAACzP,KAAQmD,EAAKyM,KAAKD,IAAG3P,KAAMsoI,WAG/CxsF,EAhFM,SAAYuyF,EAAQ2hB,OACxBlN,EAAO,GAAK,EAAIzU,EAASA,IAAW,EAAIA,GAAUz+H,KAAKwL,KAAK,EAAIizH,IAAW,EAAIA,OAC/Ez+H,KAAK0F,IAAI1F,KAAK0F,IAAI06I,GAAKlN,GAAQ,YAC7BkN,EAAI,GACE,EAAKjqB,EAGNA,UAKPiJ,EACAqT,EACAC,EACA9T,EAJAI,EAAMh/H,KAAKmsC,KAAK,GAAMi0G,GAKjBr0J,EAAI,EAAGA,EAAI,GAAIA,OACtB0mJ,EAAUzyI,KAAKC,IAAI++H,GACnB0T,EAAU1yI,KAAKD,IAAIi/H,GACnBJ,EAAMH,EAASgU,EAEfzT,GADAI,EAAOp/H,KAAKuX,IAAI,EAAIqnH,EAAMA,EAAK,IAAM,EAAI8T,IAAY0N,GAAK,EAAI3hB,EAASA,GAAUgU,GAAW,EAAI7T,EAAMA,GAAO,GAAMH,EAASz+H,KAAKwL,KAAK,EAAIozH,IAAQ,EAAIA,KAElJ5+H,KAAK0F,IAAI05H,IAAS,MAAY,OACzBJ,SAKJhrF,IAoDC6tG,CAAMzxJ,KAAMsP,EAAG,EAAIqpE,EAAElpE,EAACzP,KAAQopI,GAAEppI,KAAQmD,GAC9Cq0C,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ7vD,EAAEnpE,GAACxP,KAASmD,EAACnD,KAAQopI,MAGrDzwD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,aA+CRmiB,GAAG,CACLriB,qBAtCK94H,GAAEvW,KAAQuW,IAAM,OAChBI,GAAE3W,KAAQ2W,IAAM,OAChBwxH,KAAInoI,KAAQmoI,MAAQ,OACpBK,MAAKxoI,KAAQwoI,OAAS,OACtBF,OAAMtoI,KAAQsoI,QAAU,OACxBv9E,MAAK/qD,KAAQ+qD,OAAK,6CAElBy6F,GAAK51I,KAAKD,IAAG3P,KAAMsoI,SAgCxBpxF,iBA3BkByhC,OAEdnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAERy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,OAC7BmpB,EAAOjE,GAAW5xG,EAAG97C,KAAQmoI,aACjCxvD,EAAEnpE,EAACxP,KAAQuW,GAAEvW,KAASmD,EAAI+jJ,EAAIlnJ,KAAQwlJ,GACtC7sE,EAAElpE,EAACzP,KAAQ2W,GAAE3W,KAASmD,EAAIwuJ,EACnBh5E,GAmBPxhC,iBAdkBwhC,OAEdnpE,EAAImpE,EAAEnpE,EACNC,EAAIkpE,EAAElpE,SAEVkpE,EAAEnpE,EAAIk/H,EAAU1uI,KAAMwoI,OAAUh5H,EAACxP,KAAQuW,KAAEvW,KAAUmD,EAACnD,KAAQwlJ,KAC9D7sE,EAAElpE,EAAIi+I,GAAU1tJ,KAAMmoI,MAAS14H,EAACzP,KAAQ2W,IAAE3W,KAAUmD,GAC7Cw1E,GAQP42D,MALU,yDA+HRqiB,GAAI,CACNviB,gBApHuDrvI,KAClD8iJ,KAAI9iJ,KAAQoD,EAACpD,KAAQmD,OACrBmsI,GAAK,EAAI1/H,KAAKuX,IAAGnnB,KAAM8iJ,KAAM,QAC7BxzI,EAAIM,KAAK8W,KAAI1mB,KAAMsvI,SACnB8d,GAAKC,GAAIrtJ,KAAMsvI,SACf1gI,GAAK0+I,GAAIttJ,KAAMsvI,SACfpgI,GAAKq+I,GAAIvtJ,KAAMsvI,SACfz0D,GAAK2yE,GAAIxtJ,KAAMsvI,SACf6S,IAAGniJ,KAAQmD,EAAIgqJ,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAE76E,KAAOmoI,OA6GlEjxF,QAzGuD,SACrCyhC,OAGdnpE,EAAGC,EAAGnD,EAFNkrC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAERy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,UACjCl8H,EAAK46I,EAAOt3I,KAAKC,IAAIisC,QACZ4wF,OACH98H,KAAK0F,IAAIwmC,IAAQkqF,GACnBx2H,EAACxP,KAAQmD,EAAI+jJ,EACbz3I,GAAI,EAAEzP,KAAQmD,EAACnD,KAAQmoI,OAGvB34H,EAACxP,KAAQmD,EAAIyM,KAAKC,IAAIvD,GAAMsD,KAAKyqC,IAAIyB,GACrCrsC,EAACzP,KAAQmD,GAAKuqJ,GAAW5xG,EAAG97C,KAAQmoI,OAAS,EAAIv4H,KAAKD,IAAIrD,IAAOsD,KAAKyqC,IAAIyB,aAIxElsC,KAAK0F,IAAIwmC,IAAQkqF,EACnBx2H,EAACxP,KAAQmD,EAAI+jJ,EACbz3I,GAAI,EAAEzP,KAAQmiJ,aAGV2L,EAAKL,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAAGM,KAAKC,IAAIisC,IAAQlsC,KAAKyqC,IAAIyB,GACtDtsC,EAAIs+I,EAAKl+I,KAAKC,IAAIvD,GAClBmD,EAACzP,KAAQmD,EAAIgqJ,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAI/+B,GAAG97C,KAASmiJ,IAAM2L,GAAM,EAAIl+I,KAAKD,IAAIrD,WAI/FqsE,EAAEnpE,EAAIA,EAACxP,KAAQuW,GACfoiE,EAAElpE,EAAIA,EAACzP,KAAQ2W,GACRgiE,GA2EPxhC,QAvEmB,SACDwhC,OACdnhC,EAAKsE,EAAKtsC,EAAGC,EAAG9T,EAChB4mJ,EAAIsP,EACJjjB,EAAKI,KACTx/H,EAAImpE,EAAEnpE,EAACxP,KAAQuW,GACf9G,EAAIkpE,EAAElpE,EAACzP,KAAQ2W,QAEN+1H,UACH98H,KAAK0F,IAAI7F,EAACzP,KAAQmD,EAACnD,KAAQmoI,OAASnC,EACtCxuF,EAAMk3F,EAAWl/H,EAACxP,KAAQmD,EAACnD,KAAQwoI,OACnC1sF,EAAM,WAMFg2G,MAHJvP,EAAEviJ,KAAQmoI,KAAO14H,EAACzP,KAAQmD,EAC1B0uJ,EAAKriJ,EAAIA,EAACxP,KAAQmD,EAACnD,KAAQmD,EAAIo/I,EAAKA,EACpC3T,EAAM2T,EAED5mJ,EArEM,GAqEUA,IAAKA,KAGxBizI,GADAI,GAAO,GAAMuT,GAAM3T,GADnBkjB,EAASliJ,KAAKyqC,IAAIu0F,IACgB,GAAKA,EAAM,IAAOA,EAAMA,EAAMijB,GAAMC,KAAYljB,EAAM2T,GAAMuP,EAAS,GAEnGliJ,KAAK0F,IAAI05H,IAAShJ,EAAK,CACzBlqF,EAAM8yF,QAIVp3F,EAAMk3F,EAAU1uI,KAAMwoI,MAAS54H,KAAKmsC,KAAKvsC,EAAII,KAAKyqC,IAAIu0F,GAAG5uI,KAASmD,GAAMyM,KAAKC,IAAIisC,YAI/ElsC,KAAK0F,IAAI7F,EAACzP,KAAQmiJ,MAAQnc,EAC5BlqF,EAAM,EACNtE,EAAMk3F,EAAU1uI,KAAMwoI,MAAQh5H,EAACxP,KAAQmD,YAOnC8qJ,EAAI8D,EAAKC,EAAMC,EACfzjB,MAJJ+T,GAAEviJ,KAASmiJ,IAAM1yI,GAACzP,KAASmD,EAC3B0uJ,EAAKriJ,EAAIA,EAACxP,KAAQmD,EAACnD,KAAQmD,EAAIo/I,EAAKA,EACpC3T,EAAM2T,EAGD5mJ,EA7FM,GA6FUA,IAAKA,KACxB6yI,EAAGxuI,KAAQsP,EAAIM,KAAKC,IAAI++H,GACxBqf,EAAKr+I,KAAK8W,KAAK,EAAI8nH,EAAMA,GAAO5+H,KAAKyqC,IAAIu0F,GACzCmjB,EAAG/xJ,KAAQmD,EAAIgqJ,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAI+zD,GACxDojB,EAAIhyJ,KAAQotJ,GAAK,EAACptJ,KAAQ4O,GAAKgB,KAAKD,IAAI,EAAIi/H,GAAO,EAAC5uI,KAAQkP,GAAKU,KAAKD,IAAI,EAAIi/H,GAAO,EAAC5uI,KAAQ66E,GAAKjrE,KAAKD,IAAI,EAAIi/H,GAGhHA,GADAI,GAAQuT,GAAM0L,GADdgE,EAAKF,EAAG/xJ,KAAQmD,GACQ,GAAK8uJ,EAAK,GAAMhE,GAAMgE,EAAKA,EAAKJ,KAAE7xJ,KAAWsvI,GAAK1/H,KAAKC,IAAI,EAAI++H,IAAQqjB,EAAKA,EAAKJ,EAAK,EAAItP,EAAK0P,IAAO,EAAIhE,IAAO1L,EAAK0P,IAAOhE,EAAK+D,EAAO,EAAIpiJ,KAAKC,IAAI,EAAI++H,IAAQojB,GAEtLpiJ,KAAK0F,IAAI05H,IAAShJ,EAAK,CACzBlqF,EAAM8yF,QAMVqf,EAAKr+I,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAK1/H,KAAKuX,IAAIvX,KAAKC,IAAIisC,GAAM,IAAMlsC,KAAKyqC,IAAIyB,GACpEtE,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKmsC,KAAKvsC,EAAIy+I,EAAEjuJ,KAAQmD,GAAKyM,KAAKC,IAAIisC,WAIxE68B,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,0BAkOR2iB,GAAI,CACN7iB,KA9MC,gBAII8M,EAAC,QACDA,EAAE,GAAK,iBACPA,EAAE,IAAK,iBACPA,EAAE,GAAK,gBACPA,EAAE,IAAK,eACPA,EAAE,GAAK,cACPA,EAAE,IAAK,cACPA,EAAE,GAAK,cACPA,EAAE,IAAK,aACPA,EAAE,GAAK,WACPA,EAAE,KAAM,WAERgW,KAAI,QACJC,KAAI,QACJD,KAAK,GAAK,iBACVC,KAAK,GAAK,OACVD,KAAK,GAAK,gBACVC,KAAK,GAAK,gBACVD,KAAK,IAAK,gBACVC,KAAK,GAAK,eACVD,KAAK,IAAK,eACVC,KAAK,GAAK,eACVD,KAAK,IAAK,eACVC,KAAK,IAAK,eACVD,KAAK,IAAK,cACVC,KAAK,IAAK,eAEVC,KAAI,QACJC,KAAI,QACJD,KAAK,GAAK,kBACVC,KAAK,GAAK,OACVD,KAAK,IAAK,gBACVC,KAAK,IAAK,gBACVD,KAAK,GAAK,gBACVC,KAAK,IAAK,gBACVD,KAAK,IAAK,eACVC,KAAK,GAAK,eACVD,KAAK,GAAK,gBACVC,KAAK,GAAK,gBACVD,KAAK,GAAK,eACVC,KAAK,GAAK,eAEV5S,EAAC,QACDA,EAAE,GAAK,kBACPA,EAAE,GAAK,iBACPA,EAAE,IAAK,eACPA,EAAE,IAAK,cACPA,EAAE,IAAK,cACPA,EAAE,GAAK,aACPA,EAAE,GAAK,WACPA,EAAE,GAAK,YACPA,EAAE,IAAK,OAwJZxoG,QAlJE,SACgByhC,OACdztE,EACAssC,EAAMmhC,EAAEnpE,EAGR+iJ,EAFM55E,EAAElpE,EAEOzP,KAAQmoI,KACvBia,EAAY5qG,EAAGx3C,KAAQwoI,MAIvBgqB,EAAQD,EAAYzsB,EAAa,KACjC2sB,EAAWrQ,EACXsQ,EAAU,EAEVC,EAAQ,MACPznJ,EAAI,EAAGA,GAAK,GAAIA,IACnBwnJ,GAAoBF,EACpBG,GAAa3yJ,KAAQm8I,EAAEjxI,GAAKwnJ,MAW1BE,EAPAC,EAAQF,EACRG,EAAQL,EAGRM,EAAU,EACVC,EAAU,EAIVC,EAAO,EACPC,EAAO,MACNhoJ,EAAI,EAAGA,GAAK,EAAGA,IAElB0nJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVK,EAAOA,EAAIjzJ,KAAQmyJ,KAAKjnJ,GAAK6nJ,EAAO/yJ,KAAQoyJ,KAAKlnJ,GAAK8nJ,EACtDE,EAAOA,EAAIlzJ,KAAQoyJ,KAAKlnJ,GAAK6nJ,EAAO/yJ,KAAQmyJ,KAAKjnJ,GAAK8nJ,SAIxDr6E,EAAEnpE,EAAK0jJ,EAAIlzJ,KAAQmD,EAACnD,KAASuW,GAC7BoiE,EAAElpE,EAAKwjJ,EAAIjzJ,KAAQmD,EAACnD,KAAS2W,GAEtBgiE,GAqGPxhC,QAhGE,SACgBwhC,OACdztE,EAeAioJ,EAdA3jJ,EAAImpE,EAAEnpE,EACNC,EAAIkpE,EAAElpE,EAEN2jJ,EAAU5jJ,EAACxP,KAAQuW,GAInB08I,GAHUxjJ,EAACzP,KAAQ2W,IAGL3W,KAAQmD,EACtB+vJ,EAAOE,EAAOpzJ,KAAQmD,EAGtBkwJ,EAAS,EACTC,EAAS,EAITT,EAAQ,EACRC,EAAQ,MACP5nJ,EAAI,EAAGA,GAAK,EAAGA,IAElBioJ,EAAUG,EAASL,EAAOI,EAASH,EACnCG,EAFUA,EAASJ,EAAOK,EAASJ,EAGnCI,EAASH,EACTN,EAAQA,EAAK7yJ,KAAQqyJ,KAAKnnJ,GAAKmoJ,EAAMrzJ,KAAQsyJ,KAAKpnJ,GAAKooJ,EACvDR,EAAQA,EAAK9yJ,KAAQsyJ,KAAKpnJ,GAAKmoJ,EAAMrzJ,KAAQqyJ,KAAKnnJ,GAAKooJ,UAOhD33J,EAAI,EAAGA,EAACqE,KAAQuzJ,WAAY53J,IAAC,KAIhCi3J,EAHAG,EAAUF,EACVG,EAAUF,EAIVU,EAASP,EACTQ,EAASP,MACRhoJ,EAAI,EAAGA,GAAK,EAAGA,IAElB0nJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVY,IAAmBtoJ,EAAI,IAAClL,KAAUmyJ,KAAKjnJ,GAAK6nJ,EAAO/yJ,KAAQoyJ,KAAKlnJ,GAAK8nJ,GACrES,IAAmBvoJ,EAAI,IAAClL,KAAUoyJ,KAAKlnJ,GAAK6nJ,EAAO/yJ,KAAQmyJ,KAAKjnJ,GAAK8nJ,GAGvED,EAAU,EACVC,EAAU,MACNU,EAAM1zJ,KAAQmyJ,KAAK,GACnBwB,EAAM3zJ,KAAQoyJ,KAAK,OAClBlnJ,EAAI,EAAGA,GAAK,EAAGA,IAElB0nJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVc,GAAkBxoJ,GAAClL,KAASmyJ,KAAKjnJ,GAAK6nJ,EAAO/yJ,KAAQoyJ,KAAKlnJ,GAAK8nJ,GAC/DW,GAAkBzoJ,GAAClL,KAASoyJ,KAAKlnJ,GAAK6nJ,EAAO/yJ,KAAQmyJ,KAAKjnJ,GAAK8nJ,OAI7DY,EAAOF,EAASA,EAASC,EAASA,EACtCd,GAASW,EAASE,EAASD,EAASE,GAAUC,EAC9Cd,GAASW,EAASC,EAASF,EAASG,GAAUC,MAI5CjB,EAAQE,EACRJ,EAAWK,EACXe,EAAU,EAEVrB,EAAQ,MACPtnJ,EAAI,EAAGA,GAAK,EAAGA,IAClB2oJ,GAAoBlB,EACpBH,GAAaxyJ,KAAQ0/I,EAAEx0I,GAAK2oJ,MAK1B/3G,EAAG97C,KAAQmoI,KAAQqqB,EAAQ1sB,EAAa,IACxCtuF,EAAGx3C,KAAQwoI,MAAQiqB,SAEvB95E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EAEC68B,GAQP42D,MALU,qCAoDRukB,GAAI,CACNzkB,KArC6C,aAsC7Cn4F,QAhCgE,SAC9CyhC,OACdnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAGRy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,OAC7Bh5H,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAAI+jJ,EACvBz3I,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAAIyM,KAAKwL,IAAIxL,KAAKyqC,IAAKzqC,KAAKiM,GAAK,EAAMigC,EAAM,MAAS,YAE7E68B,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GAqBPxhC,QAjBgE,SAC9CwhC,GAClBA,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,OAER6gC,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ7vD,EAAEnpE,EAACxP,KAAQmD,GACzC24C,EAAM,KAAOlsC,KAAK4qC,KAAK5qC,KAAKuL,IAAI,GAAMw9D,EAAElpE,EAACzP,KAAQmD,IAAMyM,KAAKiM,GAAK,UAErE88D,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,mCA2GRwkB,GAAI,CACN1kB,gBAjGqDrvI,KAG3C0sI,aAIHxhI,EAAI,OACJ1D,EAAI,OACJ8nI,GAAK,OACL0kB,IAAMpkJ,KAAK8W,MAAI1mB,KAAOwH,EAAI,GAACxH,KAASkL,QACpC+oJ,IAAGj0J,KAAQg0J,KAAGh0J,KAASwH,EAAI,IARlBxH,KACT4hJ,GAAKD,GAAO3hJ,KAAMsvI,KA8FzBp4F,QAjFuD,SACrCyhC,OACdnpE,EAAGC,EACH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,KAGZ+nC,EAAMk3F,EAAWl3F,EAAGx3C,KAAQwoI,YAEnBkE,OAAM,SACHllI,UAIJmU,EAAC3b,KAAQkL,EAAI0E,KAAKC,IAAIisC,GACjBngD,EAnCE,GAmCcA,IAAKA,EAAC,KACzBovJ,GAAC/qJ,KAASwH,EAAIs0C,EAAMlsC,KAAKC,IAAIisC,GAAOngC,IAAC3b,KAAUwH,EAAIoI,KAAKD,IAAImsC,OAChEA,GAAOivG,EACHn7I,KAAK0F,IAAIy1I,GAAK/kB,EAAK,WAPzBlqF,EAAiB,IAAd97C,KAAQkL,EAAU0E,KAAKmsC,KAAI/7C,KAAMkL,EAAI0E,KAAKC,IAAIisC,IAAQA,EAY3DtsC,EAACxP,KAAQmD,EAACnD,KAAQi0J,IAAMz8G,GAAGx3C,KAASwH,EAAIoI,KAAKD,IAAImsC,IACjDrsC,EAACzP,KAAQmD,EAACnD,KAAQg0J,IAAMl4G,WAKpBjiC,EAAIjK,KAAKC,IAAIisC,GACb1sC,EAAIQ,KAAKD,IAAImsC,GACjBrsC,EAACzP,KAAQmD,EAAI0+I,GAAQ/lG,EAAKjiC,EAAGzK,EAACpP,KAAO4hJ,IACrCpyI,EAACxP,KAAQmD,EAAIq0C,EAAMpoC,EAAIQ,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAKz1H,EAAIA,UAGrD8+D,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GA6CPxhC,iBA1CkBwhC,OACd78B,EAAKgnG,EAAMtrG,EAAK39B,SAEpB8+D,EAAEnpE,GAACxP,KAASuW,GACZihC,EAAMmhC,EAAEnpE,EAACxP,KAAQmD,EACjBw1E,EAAElpE,GAACzP,KAAS2W,GACZmlC,EAAM68B,EAAElpE,EAACzP,KAAQmD,OAERupI,QACP5wF,GAAG97C,KAASg0J,IACZx8G,GAASx3C,KAASi0J,KAAGj0J,KAASwH,EAAIoI,KAAKD,IAAImsC,SAClCt0C,EACPs0C,EAAM00G,IAAKxwJ,KAAOwH,EAAIs0C,EAAMlsC,KAAKC,IAAIisC,IAAG97C,KAAUkL,GAEhC,SAANA,IACZ4wC,EAAM00G,GAAM5gJ,KAAKC,IAAIisC,GAAG97C,KAASkL,IAEnCssC,EAAMk3F,EAAWl3F,EAAGx3C,KAAQwoI,OAC5B1sF,EAAM4xG,GAAW5xG,KAGjBA,EAAMkmG,GAAYrpE,EAAElpE,EAACzP,KAAQmD,EAACnD,KAAOsvI,GAAEtvI,KAAO4hJ,KAC9C/nI,EAAIjK,KAAK0F,IAAIwmC,IACLiqF,GACNlsH,EAAIjK,KAAKC,IAAIisC,GACbgnG,EAAI9iJ,KAAQwoI,MAAQ7vD,EAAEnpE,EAAII,KAAK8W,KAAK,EAAC1mB,KAAQsvI,GAAKz1H,EAAIA,IAAC7Z,KAAUmD,EAAIyM,KAAKD,IAAImsC,IAE9EtE,EAAMk3F,EAAWoU,IAETjpI,EAAImsH,EAASD,IACrBvuF,EAAGx3C,KAAQwoI,QAGf7vD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,2BAmFR2kB,GAAI,CACN7kB,kBACAn4F,QA3EwD,SACtCyhC,GAYyC,IATpC,IACnBnhC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAER2yI,EAAY1T,EAAWl3F,EAAGx3C,KAAQwoI,OAClCjrF,EAAQzB,EACR0yF,EAAM5+H,KAAKiM,GAAKjM,KAAKC,IAAIisC,KAIlB,KACLq4G,IAAgB52G,EAAQ3tC,KAAKC,IAAI0tC,GAASixF,IAAQ,EAAI5+H,KAAKD,IAAI4tC,OACnEA,GAAS42G,EACLvkJ,KAAK0F,IAAI6+I,GAAenuB,EAAK,MAInCzoF,GAAS,EAKL3tC,KAAKiM,GAAK,EAAIjM,KAAK0F,IAAIwmC,GAAOkqF,IAChCoc,EAAY,OAEV5yI,EAAI,cAAcxP,KAAQmD,EAAIi/I,EAAYxyI,KAAKD,IAAI4tC,GAAKv9C,KAASuW,GACjE9G,EAAI,gBAAezP,KAAQmD,EAAIyM,KAAKC,IAAI0tC,GAAKv9C,KAAS2W,UAE1DgiE,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GA0CPxhC,iBAvCkBwhC,OACdp7B,EACA0kG,EAIJtpE,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,GACZsrI,EAAMtpE,EAAElpE,GAAK,gBAAezP,KAAQmD,GAKhCyM,KAAK0F,IAAI2sI,GAAO,gBAClBA,EAAM,eAER1kG,EAAQ3tC,KAAKmsC,KAAKkmG,OACdzqG,EAAMk3F,EAAU1uI,KAAMwoI,MAAS7vD,EAAEnpE,GAAK,cAAcxP,KAAQmD,EAAIyM,KAAKD,IAAI4tC,KACzE/F,GAAQ5nC,KAAKiM,KACf27B,GAAO5nC,KAAKiM,IAEV27B,EAAM5nC,KAAKiM,KACb27B,EAAM5nC,KAAKiM,IAEbomI,GAAO,EAAI1kG,EAAQ3tC,KAAKC,IAAI,EAAI0tC,IAAU3tC,KAAKiM,GAC3CjM,KAAK0F,IAAI2sI,GAAO,IAClBA,EAAM,OAEJnmG,EAAMlsC,KAAKmsC,KAAKkmG,UAEpBtpE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,0BA4GR6kB,GAAI,CACN/kB,gBAhGIz/H,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,SAGjC9qF,KAAIl7C,KAAQk7C,MAAIl7C,KAASi7C,UACzB6nG,KAAI9iJ,KAAQoD,EAACpD,KAAQmD,OACrBmsI,GAAK,EAAI1/H,KAAKuX,IAAGnnB,KAAM8iJ,KAAM,QAC7BxzI,EAAIM,KAAK8W,KAAI1mB,KAAMsvI,SACnB8d,GAAKC,GAAIrtJ,KAAMsvI,SACf1gI,GAAK0+I,GAAIttJ,KAAMsvI,SACfpgI,GAAKq+I,GAAIvtJ,KAAMsvI,SACfz0D,GAAK2yE,GAAIxtJ,KAAMsvI,SAEfhB,OAAS1+H,KAAKC,IAAG7P,KAAMi7C,WACvBszF,OAAS3+H,KAAKD,IAAG3P,KAAMi7C,WAEvBurG,IAAMpY,EAAKpuI,KAAMsP,EAACtP,KAAOsuI,OAAMtuI,KAAOuuI,aACtC2f,IAAMf,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAE76E,KAAOi7C,MAErDrrC,KAAK0F,IAAGtV,KAAMi7C,KAAIj7C,KAAQk7C,MAAQ8qF,EAAKhmI,KACpC+rJ,GAAE/rJ,KAAQsuI,aAGVA,OAAS1+H,KAAKC,IAAG7P,KAAMk7C,WACvBqzF,OAAS3+H,KAAKD,IAAG3P,KAAMk7C,WACvB0wG,IAAMxd,EAAKpuI,KAAMsP,EAACtP,KAAOsuI,OAAMtuI,KAAOuuI,aACtC8lB,IAAMlH,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAE76E,KAAOk7C,WACpD6wG,IAAE/rJ,KAASwmJ,IAAGxmJ,KAAQ4rJ,MAAG5rJ,KAAUq0J,IAAGr0J,KAAQkuJ,WAEhDl0I,EAACha,KAAQkuJ,IAAGluJ,KAAQwmJ,IAAGxmJ,KAAQ+rJ,QAC/B5J,IAAMgL,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAE76E,KAAOmoI,WACpD4e,GAAE/mJ,KAAQmD,GAACnD,KAASga,EAACha,KAAQmiJ,OAmElCjrG,QA/D6D,SAC3CyhC,OAGdszE,EAFAz0G,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAIW,GAAAzP,KACd0sI,OACPuf,EAAGjsJ,KAAQmD,GAACnD,KAASga,EAAI8hC,YAGrB6mG,EAAKwK,GAAIntJ,KAAMotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,GAAI/+B,GAClDmwG,EAAGjsJ,KAAQmD,GAACnD,KAASga,EAAI2oI,OAEvBplG,EAAKv9C,KAAQ+rJ,GAAKrd,EAAWl3F,EAAGx3C,KAAQwoI,OACxCh5H,EAACxP,KAAQuW,GAAK01I,EAAMr8I,KAAKC,IAAI0tC,GAC7B9tC,EAACzP,KAAQ2W,GAAE3W,KAAQ+mJ,GAAKkF,EAAMr8I,KAAKD,IAAI4tC,UAC3Co7B,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GA4CPxhC,QAxCmB,SACDwhC,OAGd61D,EAAKyd,EAAKnwG,EAAKtE,EAFnBmhC,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,EAACzP,KAAQ+mJ,GAAKpuE,EAAElpE,EAACzP,KAAQ2W,QAElBo1I,IAAM,GACbE,EAAMr8I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACpC++H,EAAM,IAGNyd,GAAOr8I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACrC++H,GAAM,OAEJjxF,EAAQ,KACA,IAAR0uG,IACF1uG,EAAQ3tC,KAAKyrC,MAAMmzF,EAAM71D,EAAEnpE,EAAGg/H,EAAM71D,EAAElpE,SAG/Bi9H,cACPl1F,EAAMk3F,EAAU1uI,KAAMwoI,MAAQjrF,EAAKv9C,KAAQ+rJ,IAC3CjwG,EAAM4xG,GAAU1tJ,KAAMga,EAAIiyI,EAAGjsJ,KAAQmD,GACrCw1E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,MAGHgqE,EAAE3iJ,KAAQga,EAAIiyI,EAAGjsJ,KAAQmD,SAC7B24C,EAAM6xG,GAAMhL,EAAE3iJ,KAAOotJ,GAAEptJ,KAAO4O,GAAE5O,KAAOkP,GAAElP,KAAO66E,IAChDrjC,EAAMk3F,EAAU1uI,KAAMwoI,MAAQjrF,EAAKv9C,KAAQ+rJ,IAC3CpzE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAUT42D,MALU,kCA6HR+kB,GAAK,CACPjlB,KArH0C,gBAGrCwY,EAAC7nJ,KAAQmD,GAmHd+zC,iBAhHkByhC,OAQdnpE,EAAGC,EANH+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EAIRy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,OAG7B54H,KAAK0F,IAAIwmC,IAAQkqF,IACnBx2H,EAACxP,KAAQuW,GAAEvW,KAAQ6nJ,EAAIX,EACvBz3I,EAACzP,KAAQ2W,QAEP4mC,EAAQizG,GAAM,EAAI5gJ,KAAK0F,IAAIwmC,EAAMlsC,KAAKiM,MACrCjM,KAAK0F,IAAI4xI,IAASlhB,GAAWp2H,KAAK0F,IAAI1F,KAAK0F,IAAIwmC,GAAOiqF,IAAYC,KACrEx2H,EAACxP,KAAQuW,GAEP9G,EADEqsC,GAAO,EACR97C,KAAQ2W,GAAK/G,KAAKiM,GAAE7b,KAAQ6nJ,EAAIj4I,KAAKyqC,IAAI,GAAMkD,GAG/Cv9C,KAAQ2W,GAAK/G,KAAKiM,GAAE7b,KAAQ6nJ,GAAKj4I,KAAKyqC,IAAI,GAAMkD,QAIjDglG,EAAK,GAAM3yI,KAAK0F,IAAK1F,KAAKiM,GAAKqrI,EAASA,EAAOt3I,KAAKiM,IACpDmyI,EAAMzL,EAAKA,EACXgS,EAAQ3kJ,KAAKC,IAAI0tC,GACjBi3G,EAAQ5kJ,KAAKD,IAAI4tC,GAEjBvjC,EAAIw6I,GAASD,EAAQC,EAAQ,GAC7BC,EAAMz6I,EAAIA,EACVxS,EAAIwS,GAAK,EAAIu6I,EAAQ,GACrBG,EAAMltJ,EAAIA,EACVgnI,EAAM5+H,KAAKiM,GAAE7b,KAAQ6nJ,GAAKtF,GAAMvoI,EAAI06I,GAAO9kJ,KAAK8W,KAAKsnI,GAAOh0I,EAAI06I,IAAQ16I,EAAI06I,IAAQA,EAAM1G,IAAQyG,EAAMC,MAAUA,EAAM1G,GACxH9G,EAAO,IACT1Y,GAAOA,GAETh/H,EAACxP,KAAQuW,GAAKi4H,MAEVwhB,EAAIhC,EAAMh0I,SACdw0H,EAAM5+H,KAAKiM,GAAE7b,KAAQ6nJ,GAAKrgJ,EAAIwoJ,EAAIzN,EAAK3yI,KAAK8W,MAAMguI,EAAM1G,IAAQA,EAAM,GAAKgC,EAAIA,KAAO0E,EAAM1G,GAG1Fv+I,EAFEqsC,GAAO,EAER97C,KAAQ2W,GAAK63H,EAIbxuI,KAAQ2W,GAAK63H,EAEhB71D,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GA6DPxhC,QAzD2D,SACzCwhC,OACdnhC,EAAKsE,EACL64G,EAAIC,EAAIC,EAAKnmJ,EAAIM,EAAI4rE,EACrBpsE,EACAgsE,EACAg0D,EACAsmB,SAKJn8E,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,GACZ63H,EAAM5+H,KAAKiM,GAAE7b,KAAQ6nJ,EAGrBgN,GAFAF,EAAKh8E,EAAEnpE,EAAIg/H,GAEAmmB,GADXC,EAAKj8E,EAAElpE,EAAI++H,GACUomB,EAOrBpmB,EAAQ,GAHJomB,EAAKA,GADTh6E,GAAK,GAFLlsE,GAAMkB,KAAK0F,IAAIs/I,IAAO,EAAIC,IAEX,EAAI,EAAID,EAAKA,EAAKC,EAAMA,IACnB,GAFpB7lJ,EAAKN,EAAK,EAAIkmJ,EAAKA,EAAKD,EAAKA,GAEA3lJ,EAAKA,EAAK4rE,EAAKA,EAAKA,EAAK,EAAIlsE,EAAKM,EAAK4rE,EAAKA,GAAM,KAC/EpsE,GAAME,EAAKM,EAAKA,EAAK,EAAI4rE,GAAMA,IAC/BJ,EAAK,EAAI5qE,KAAK8W,MAAMlY,EAAK,IAErBoB,KAAK0F,IAAIk5H,GAAO,IAEhBA,EADEA,GAAO,EACH,GAGA,GAGVsmB,EAAMllJ,KAAK+lF,KAAK64C,GAAO,EAErB1yF,EADE68B,EAAElpE,GAAK,IACD+qE,EAAK5qE,KAAKD,IAAImlJ,EAAMllJ,KAAKiM,GAAK,GAAK7M,EAAK,EAAI4rE,GAAMhrE,KAAKiM,MAGtD2+D,EAAK5qE,KAAKD,IAAImlJ,EAAMllJ,KAAKiM,GAAK,GAAK7M,EAAK,EAAI4rE,GAAMhrE,KAAKiM,GAIhE27B,EADE5nC,KAAK0F,IAAIq/I,GAAM3uB,EACdhmI,KAAQwoI,MAGLkG,EAAU1uI,KAAMwoI,MAAQ54H,KAAKiM,IAAMg5I,EAAM,EAAIjlJ,KAAK8W,KAAK,EAAI,GAAKiuI,EAAKA,EAAKC,EAAKA,GAAMC,EAAMA,IAAQ,EAAIF,GAG/Gh8E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAQP42D,MALU,mDAoMRwlB,GAAI,CACN1lB,qBA5LK2lB,QAAUplJ,KAAKC,IAAG7P,KAAMmoI,WACxB8sB,QAAUrlJ,KAAKD,IAAG3P,KAAMmoI,OA4L7BjxF,iBAzLkByhC,OAMdy0E,EAAIx+I,EAAIM,EAAI2rE,EAAIq6E,EAAKC,EAAIrD,EAAQsD,EAAKC,EAAIC,EAAKC,EAAIC,EAAGxM,EAAGyM,EAAIC,EAAItmJ,EAAGumJ,EAAIC,EAAO/7I,EAAGmP,EAAI6sI,EAAIC,EAL1Ft+G,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,EACR6+H,EAAS1+H,KAAKC,IAAI8oE,EAAElpE,GACpB8+H,EAAS3+H,KAAKD,IAAIgpE,EAAElpE,GACpBy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,mBAExBkE,OACH98H,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAEhCrtD,EAAEnpE,EAACxP,KAAQuW,GAAEvW,KAAQmD,GAAK4iI,EAAUjqF,GAAOlsC,KAAKC,IAAIq3I,GACpDvuE,EAAElpE,EAACzP,KAAQ2W,GAAE3W,KAAQmD,GAAK4iI,EAAUjqF,GAAOlsC,KAAKD,IAAIu3I,GAC7CvuE,GAEA/oE,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAErCrtD,EAAEnpE,EAACxP,KAAQuW,GAAEvW,KAAQmD,GAAK4iI,EAAUjqF,GAAOlsC,KAAKC,IAAIq3I,GACpDvuE,EAAElpE,EAACzP,KAAQ2W,GAAE3W,KAAQmD,GAAK4iI,EAAUjqF,GAAOlsC,KAAKD,IAAIu3I,GAC7CvuE,IAIPi9E,EAAK51J,KAAQg1J,QAAU1mB,EAAMtuI,KAAQi1J,QAAU1mB,EAAS3+H,KAAKD,IAAIu3I,GAEjEyO,GADAvmJ,EAAIQ,KAAK+lF,KAAKigE,IACLxmJ,EAAIQ,KAAKC,IAAIT,GAAK,EAC3BupE,EAAEnpE,EAACxP,KAAQuW,GAAEvW,KAAQmD,EAAIwyJ,EAAKpnB,EAAS3+H,KAAKC,IAAIq3I,GAChDvuE,EAAElpE,EAACzP,KAAQ2W,GAAE3W,KAAQmD,EAAIwyJ,GAAE31J,KAASi1J,QAAU3mB,EAAMtuI,KAAQg1J,QAAUzmB,EAAS3+H,KAAKD,IAAIu3I,IACjFvuE,IAITy0E,EAAKC,GAAIrtJ,KAAMsvI,IACf1gI,EAAK0+I,GAAIttJ,KAAMsvI,IACfpgI,EAAKq+I,GAAIvtJ,KAAMsvI,IACfz0D,EAAK2yE,GAAIxtJ,KAAMsvI,IACX1/H,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAEhCkvB,EAAGl1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAIkrD,GACpCovB,EAAEn1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAI/+B,GACnC68B,EAAEnpE,EAACxP,KAAQuW,IAAM2+I,EAAMC,GAAMvlJ,KAAKC,IAAIq3I,GACtCvuE,EAAElpE,EAACzP,KAAQ2W,IAAMu+I,EAAMC,GAAMvlJ,KAAKD,IAAIu3I,GAC/BvuE,GAEA/oE,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAErCkvB,EAAGl1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAIkrD,GACpCovB,EAAEn1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAI/+B,GACnC68B,EAAEnpE,EAACxP,KAAQuW,IAAM2+I,EAAMC,GAAMvlJ,KAAKC,IAAIq3I,GACtCvuE,EAAElpE,EAACzP,KAAQ2W,IAAMu+I,EAAMC,GAAMvlJ,KAAKD,IAAIu3I,GAC/BvuE,IAIPm5E,EAASxjB,EAASC,EAClB6mB,EAAM3H,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAACtP,KAAOg1J,SAC9BK,EAAK5H,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAAGg/H,GACxBgnB,EAAM1lJ,KAAK4qC,MAAM,EAACx6C,KAAQsvI,IAAMwiB,EAAM9xJ,KAAQsvI,GAAK8lB,EAAGp1J,KAAQg1J,SAAWK,EAAK9mB,IAG5E10H,EADS,KADX07I,EAAK3lJ,KAAKyrC,MAAMzrC,KAAKC,IAAIq3I,GAAIlnJ,KAAQi1J,QAAUrlJ,KAAKyqC,IAAIi7G,GAAGt1J,KAASg1J,QAAUplJ,KAAKD,IAAIu3I,KAEjFt3I,KAAKmsC,KAAI/7C,KAAMi1J,QAAUrlJ,KAAKC,IAAIylJ,GAAGt1J,KAASg1J,QAAUplJ,KAAKD,IAAI2lJ,IAE9D1lJ,KAAK0F,IAAI1F,KAAK0F,IAAIigJ,GAAM3lJ,KAAKiM,KAAOmqH,GACtCp2H,KAAKmsC,KAAI/7C,KAAMi1J,QAAUrlJ,KAAKC,IAAIylJ,GAAGt1J,KAASg1J,QAAUplJ,KAAKD,IAAI2lJ,IAGlE1lJ,KAAKmsC,KAAKnsC,KAAKC,IAAIq3I,GAAQt3I,KAAKD,IAAI2lJ,GAAO1lJ,KAAKC,IAAI0lJ,IAE1DC,EAACx1J,KAAQsP,EAACtP,KAAQg1J,QAAUplJ,KAAK8W,KAAK,EAAC1mB,KAAQsvI,IAQ/ClgI,EAAIgmJ,EAAMv7I,GAAK,GAJfmP,EAAKnP,EAAIA,IADT67I,GAFA1M,EAAChpJ,KAAQsP,EAACtP,KAAQi1J,QAAUrlJ,KAAKD,IAAI4lJ,GAAM3lJ,KAAK8W,KAAK,EAAC1mB,KAAQsvI,KAErD0Z,IAKqB,EAAI0M,GAAM,GAHxCG,EAAK7sI,EAAKnP,GAGuC,GANjD47I,EAAKD,EAAIxM,IAMkD,EAAI,EAAI0M,IAFnEI,EAAKD,EAAKh8I,GAEoE,KAAO67I,GAAM,EAAI,EAAIA,GAAM,EAAIF,EAAIA,GAAK,EAAI,EAAIE,IADzHI,EAAKj8I,EACgI,GAAK47I,GAC/I98E,EAAEnpE,EAACxP,KAAQuW,GAAKnH,EAAIQ,KAAKC,IAAI0lJ,GAC7B58E,EAAElpE,EAACzP,KAAQ2W,GAAKvH,EAAIQ,KAAKD,IAAI4lJ,GACtB58E,KA4GXxhC,iBArGkBwhC,OAGdouE,EAAI9pG,EAAGszG,EAAMD,EAAM94G,EAAKsE,EAAK0yF,EAAK4e,EAAIx+I,EAAIM,EAAI2rE,EAAIq6E,EAAQ5V,EAAIgW,EAAKC,EAAIQ,EAAOzqJ,EAAKizI,EAAG8E,EAAG3D,EAAGsW,EAAIjN,EAAGkN,KAFvGt9E,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,QAEH+1H,OAAM,KACbqa,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,IACzB,EAAIs2H,EAAO/lI,KAAQmD,EAAC,cAG9B85C,EAAI8pG,EAAE/mJ,KAAQmD,EAEdotJ,EAAO3gJ,KAAKC,IAAIotC,GAChBqzG,EAAO1gJ,KAAKD,IAAIstC,GAEhBzF,EAAGx3C,KAAQwoI,MACP54H,KAAK0F,IAAIyxI,IAAO/gB,EAClBlqF,EAAG97C,KAAQmoI,MAGXrsF,EAAM00G,GAAMF,EAAItwJ,KAAQg1J,QAAWr8E,EAAElpE,EAAI8gJ,EAAIvwJ,KAAQi1J,QAAWlO,GAChEvY,EAAM5+H,KAAK0F,IAAGtV,KAAMmoI,MAAQpC,EAGxBvuF,EAFA5nC,KAAK0F,IAAIk5H,IAAQxI,OACVmC,MAAQ,EACTuG,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,GAAKmpE,EAAElpE,IAG5Ci/H,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,OAAOs9B,EAAEnpE,EAAGmpE,EAAElpE,IAW7Ci/H,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,EAAI+gJ,EAAMxJ,EAAE/mJ,KAAQi1J,QAAU3E,EAAO33E,EAAElpE,EAACzP,KAAQg1J,QAAUzE,KAIzG53E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,SAGPy0E,EAAKC,GAAIrtJ,KAAMsvI,IACf1gI,EAAK0+I,GAAIttJ,KAAMsvI,IACfpgI,EAAKq+I,GAAIvtJ,KAAMsvI,IACfz0D,EAAK2yE,GAAIxtJ,KAAMsvI,IACX1/H,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAEhCkvB,EAAGl1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAIkrD,GACpCghB,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GAEnCqsC,EAAM6xG,IADFuH,EAAMnO,GACG/mJ,KAAQmD,EAAGiqJ,EAAIx+I,EAAIM,EAAI2rE,GACpCrjC,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,GAAG,EAAMmpE,EAAElpE,IACtDkpE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,GAEA/oE,KAAK0F,IAAGtV,KAAMg1J,QAAU,IAAMhvB,GAErCkvB,EAAGl1J,KAAQmD,EAAIgqJ,GAAKC,EAAIx+I,EAAIM,EAAI2rE,EAAIkrD,GACpCghB,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GAGnCqsC,EAAM6xG,IAFF5G,EAAKmO,GAEIl1J,KAAQmD,EAAGiqJ,EAAIx+I,EAAIM,EAAI2rE,GACpCrjC,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,EAAGmpE,EAAElpE,IAChDkpE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,IAIPouE,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACnC8lJ,EAAK3lJ,KAAKyrC,MAAMs9B,EAAEnpE,EAAGmpE,EAAElpE,GACvB6vI,EAAKmO,GAAEztJ,KAAMmD,EAACnD,KAAOsP,EAACtP,KAAOg1J,SAC7Be,EAAQnmJ,KAAKD,IAAI4lJ,GAEjBhX,IADAjzI,EAAGtL,KAAQsP,EAACtP,KAAQi1J,QAAUc,GACnBzqJ,GAAO,EAACtL,KAAQsvI,IAC3B+T,EAAI,EAACrjJ,KAAQsvI,IAAM,EAAIiP,GAACv+I,KAASg1J,QAAOh1J,KAAQi1J,QAAUc,GAAS,EAAC/1J,KAAQsvI,IAG5EyZ,EAAI,EAAIxK,GADRyX,GADAtW,EAAIqH,EAAKzH,GACAf,GAAK,EAAIA,GAAK3uI,KAAKuX,IAAIu4H,EAAG,GAAK,EAAI2D,GAAK,EAAI,EAAI9E,GAAK3uI,KAAKuX,IAAIu4H,EAAG,GAAK,IAC9DsW,EAAK,EAAItW,EAAIsW,EAAKA,EAAKA,EAAK,EAC7CV,EAAM1lJ,KAAKmsC,KAAI/7C,KAAMg1J,QAAUplJ,KAAKD,IAAIqmJ,GAAEh2J,KAASi1J,QAAUrlJ,KAAKC,IAAImmJ,GAAMD,GAC5Ev+G,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKmsC,KAAKnsC,KAAKC,IAAI0lJ,GAAM3lJ,KAAKC,IAAImmJ,GAAMpmJ,KAAKD,IAAI2lJ,KAC/EW,EAASrmJ,KAAKC,IAAIylJ,GAClBx5G,EAAMlsC,KAAKyrC,OAAO46G,EAAMj2J,KAAQsvI,GAAKyZ,EAAC/oJ,KAAQg1J,SAAWplJ,KAAKyqC,IAAIi7G,GAAMW,GAAU,EAACj2J,KAAQsvI,KAC3F32D,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,IAWX42D,MALU,sCAyFR2mB,GAAK,CACP7mB,gBA9EuDrvI,KAClDoxJ,QAAUxhJ,KAAKC,IAAG7P,KAAMmoI,WACxBkpB,QAAUzhJ,KAAKD,IAAG3P,KAAMmoI,OA6E7BjxF,QAzEuD,SACrCyhC,OACd21D,EAAQC,EACR2Y,EACAqK,EAEAv3I,EAAGxK,EAAGC,EACN+nC,EAAMmhC,EAAEnpE,EACRssC,EAAM68B,EAAElpE,SAGZy3I,EAAOxY,EAAWl3F,EAAGx3C,KAAQwoI,OAE7B8F,EAAS1+H,KAAKC,IAAIisC,GAClByyF,EAAS3+H,KAAKD,IAAImsC,GAElBy1G,EAAS3hJ,KAAKD,IAAIu3I,GAEZ,IADNltI,EAACha,KAAQoxJ,QAAU9iB,EAAMtuI,KAAQqxJ,QAAU9iB,EAASgjB,GAE3C,GAAO3hJ,KAAK0F,IAAI0E,IAAMgsH,KAC7Bx2H,EAFI,EAEHxP,KAAQmD,EAAUorI,EAAS3+H,KAAKC,IAAIq3I,GACrCz3I,EAACzP,KAAQ2W,GAHL,EAGO3W,KAAQmD,GAAOnD,KAASqxJ,QAAU/iB,EAAMtuI,KAAQoxJ,QAAU7iB,EAASgjB,IAEhF54E,EAAEnpE,EAAIA,EACNmpE,EAAElpE,EAAIA,EACCkpE,GAiDPxhC,iBA9CkBwhC,OACdouE,EACA9pG,EACAszG,EAAMD,EACN9hB,EACAh3F,EAAKsE,SAGT68B,EAAEnpE,GAACxP,KAASuW,GACZoiE,EAAElpE,GAACzP,KAAS2W,GACZowI,EAAKn3I,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,GACnCwtC,EAAIuzG,GAAMzJ,EAAE/mJ,KAAQmD,GAEpBotJ,EAAO3gJ,KAAKC,IAAIotC,GAChBqzG,EAAO1gJ,KAAKD,IAAIstC,GAEhBzF,EAAGx3C,KAAQwoI,MACP54H,KAAK0F,IAAIyxI,IAAO/gB,GAClBlqF,EAAG97C,KAAQmoI,KACXxvD,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,IAET78B,EAAM00G,GAAMF,EAAItwJ,KAAQoxJ,QAAWz4E,EAAElpE,EAAI8gJ,EAAIvwJ,KAAQqxJ,QAAWtK,GAChEvY,EAAM5+H,KAAK0F,IAAGtV,KAAMmoI,MAAQpC,EACxBn2H,KAAK0F,IAAIk5H,IAAQxI,GAEjBxuF,OADO2wF,MAAQ,EACTuG,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAMs9B,EAAEnpE,GAAKmpE,EAAElpE,IAG5Ci/H,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,OAAOs9B,EAAEnpE,EAAGmpE,EAAElpE,IAEnDkpE,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,IAETnhC,EAAMk3F,EAAU1uI,KAAMwoI,MAAQ54H,KAAKyrC,MAAOs9B,EAAEnpE,EAAI+gJ,EAAOxJ,EAAE/mJ,KAAQqxJ,QAAUf,EAAO33E,EAAElpE,EAACzP,KAAQoxJ,QAAUb,IACvG53E,EAAEnpE,EAAIgoC,EACNmhC,EAAElpE,EAAIqsC,EACC68B,KAQP42D,MALU,WAYR4mB,GACO,EADPA,GAEO,EAFPA,GAGM,EAHNA,GAIM,EAJNA,GAKK,EALLA,GAMQ,EAGRC,GACQ,EADRA,GAEQ,EAFRA,GAGQ,EAHRA,GAIQ,EAkTwB,SAC3BC,GAAyBznB,EAAKn/H,EAAGD,EAAGkG,OACvC6nC,SACAqxF,EAAM5I,GACRtwH,EAAK/M,MAAQytJ,GACb74G,EAAQ,IAERA,EAAQ3tC,KAAKyrC,MAAM5rC,EAAGD,GAClBI,KAAK0F,IAAIioC,IAAU4oF,EACrBzwH,EAAK/M,MAAQytJ,GACJ74G,EAAQ4oF,GAAU5oF,GAASwoF,EAAUI,GAC9CzwH,EAAK/M,MAAQytJ,GACb74G,GAASwoF,GACAxoF,EAAQwoF,EAAUI,GAAU5oF,KAAWwoF,EAAUI,IAC1DzwH,EAAK/M,MAAQytJ,GACb74G,EAASA,GAAS,EAAMA,EAAQ8oF,EAAM9oF,EAAQ8oF,IAE9C3wH,EAAK/M,MAAQytJ,GACb74G,GAASwoF,IAGNxoF,EAGkC,SAClC+4G,GAAqB9+G,EAAKtiC,OAC7BqhJ,EAAO/+G,EAAMtiC,SACbqhJ,GAAQlwB,EACVkwB,GAAQnwB,EACCmwB,GAAQlwB,IACjBkwB,GAAQnwB,GAEHmwB,MAILC,GAAG,CACLnnB,qBAlVK94H,GAAEvW,KAAQuW,IAAM,OAChBI,GAAE3W,KAAQ2W,IAAM,OAChBwxH,KAAInoI,KAAQmoI,MAAQ,OACpBK,MAAKxoI,KAAQwoI,OAAS,OACtBF,OAAMtoI,KAAQsoI,QAAU,OACxBv9E,MAAK/qD,KAAQ+qD,OAAK,mCAEqC/qD,KACnDmoI,MAAQpC,EAAUI,EAAS,EAAGnmI,KAChCy2J,KAAON,QACEhuB,QAAUpC,EAAUI,EAAS,GAAGnmI,KACzCy2J,KAAON,GACHvmJ,KAAK0F,IAAGtV,KAAMwoI,QAAUrC,EAAMnmI,KAClCy2J,KAAON,GACHvmJ,KAAK0F,IAAGtV,KAAMwoI,QAAUzC,EAAUI,EAAMnmI,KAC5Cy2J,KAAIz2J,KAAQwoI,MAAQ,EAAM2tB,GAAkBA,QAE5CM,KAAON,GAKE,IADUn2J,KACjBsvI,UACFonB,YAAc,GAAC12J,KAASmD,EAACnD,KAAQoD,GAACpD,KAASmD,OAC3CwzJ,oBAAmB32J,KAAQ02J,YAAW12J,KAAQ02J,cA2TrDx/G,iBArTkByhC,OAEd78B,EAAKtE,EACL+F,EAAOqxF,EACPtzH,EAAGskI,EAHHgX,EAAE,CAAIpnJ,EAAG,EAAGC,EAAG,GAKfiG,EAAI,CAAI/M,MAAO,MAGnBgwE,EAAEnpE,GAACxP,KAASwoI,MAMV1sF,EADc,IADU97C,KACjBsvI,GACD1/H,KAAK4qC,KAAIx6C,KAAM22J,oBAAsB/mJ,KAAKyqC,IAAIs+B,EAAElpE,IAEhDkpE,EAAElpE,EAQV+nC,EAAMmhC,EAAEnpE,OACCinJ,OAASN,GAChBvnB,EAAM7I,EAAUjqF,EACZtE,GAAO2uF,GAAU3uF,GAAOuuF,EAAUI,GACpCzwH,EAAK/M,MAAQytJ,GACb74G,EAAQ/F,EAAMuuF,GACLvuF,EAAMuuF,EAAUI,GAAU3uF,KAASuuF,EAAUI,IACtDzwH,EAAK/M,MAAQytJ,GACb74G,EAAS/F,EAAM,EAAMA,EAAM6uF,EAAM7uF,EAAM6uF,GAC9B7uF,IAAQuuF,EAAUI,IAAW3uF,IAAQ2uF,GAC9CzwH,EAAK/M,MAAQytJ,GACb74G,EAAQ/F,EAAMuuF,IAEdrwH,EAAK/M,MAAQytJ,GACb74G,EAAQ/F,gBAEIi/G,OAASN,GACvBvnB,EAAM7I,EAAUjqF,EACZtE,GAAO2uF,GAAU3uF,GAAOuuF,EAAUI,GACpCzwH,EAAK/M,MAAQytJ,GACb74G,GAAS/F,EAAMuuF,GACNvuF,EAAM2uF,GAAU3uF,IAAQ2uF,GACjCzwH,EAAK/M,MAAQytJ,GACb74G,GAAS/F,GACAA,GAAO2uF,GAAU3uF,KAASuuF,EAAUI,IAC7CzwH,EAAK/M,MAAQytJ,GACb74G,GAAS/F,EAAMuuF,IAEfrwH,EAAK/M,MAAQytJ,GACb74G,EAAS/F,EAAM,GAAOA,EAAM6uF,GAAO7uF,EAAM6uF,YAGvC2pB,EAAGj2I,EAAGF,EACNmtI,EAAQC,EACR4P,OAEKJ,OAASN,GAChB3+G,EAAM8+G,GAAqB9+G,GAAMuuF,QACnB0wB,OAASN,GACvB3+G,EAAM8+G,GAAqB9+G,GAAM6uF,QACnBowB,OAASN,KACvB3+G,EAAM8+G,GAAqB9+G,GAAMuuF,IAEnCihB,EAASp3I,KAAKC,IAAIisC,GAClBmrG,EAASr3I,KAAKD,IAAImsC,GAClB+6G,EAASjnJ,KAAKC,IAAI2nC,GAElBw4G,EAAI/I,EADKr3I,KAAKD,IAAI6nC,GAElBz9B,EAAIktI,EAAS4P,EACbh9I,EAAImtI,OAEKyP,OAASN,GAEhB54G,EAAQ84G,GADRznB,EAAMh/H,KAAK+lF,KAAKq6D,GACsBn2I,EAAGE,EAAGrE,QAC9B+gJ,OAASN,GAEvB54G,EAAQ84G,GADRznB,EAAMh/H,KAAK+lF,KAAK57E,GACsBF,GAAIm2I,EAAGt6I,QAC/B+gJ,OAASN,GAEvB54G,EAAQ84G,GADRznB,EAAMh/H,KAAK+lF,MAAMq6D,GACqBn2I,GAAIE,EAAGrE,QAC/B+gJ,OAASN,GAEvB54G,EAAQ84G,GADRznB,EAAMh/H,KAAK+lF,MAAM57E,GACqBF,EAAGm2I,EAAGt6I,IAG5Ck5H,EAAMrxF,EAAQ,EACd7nC,EAAK/M,MAAQytJ,WAOjBxW,EAAKhwI,KAAK4qC,KAAM,GAAK6rF,GAAQ9oF,EAAQ3tC,KAAK+lF,KAAK/lF,KAAKC,IAAI0tC,GAAS3tC,KAAKD,IAAIw2H,IAAWJ,IACrFzqH,EAAI1L,KAAK8W,MAAM,EAAI9W,KAAKD,IAAIi/H,KAASh/H,KAAKD,IAAIiwI,GAAMhwI,KAAKD,IAAIiwI,KAAQ,EAAIhwI,KAAKD,IAAIC,KAAK4qC,KAAK,EAAI5qC,KAAKD,IAAI4tC,OAGrG7nC,EAAK/M,QAAUytJ,GACjBxW,GAAM7Z,EACGrwH,EAAK/M,QAAUytJ,GACxBxW,GAAMvZ,EACG3wH,EAAK/M,QAAUytJ,KACxBxW,GAAM,IAAMvZ,GAIduwB,EAAGpnJ,EAAI8L,EAAI1L,KAAKD,IAAIiwI,GACpBgX,EAAGnnJ,EAAI6L,EAAI1L,KAAKC,IAAI+vI,GACpBgX,EAAGpnJ,EAAIonJ,EAAGpnJ,EAACxP,KAAQmD,EAACnD,KAAQuW,GAC5BqgJ,EAAGnnJ,EAAImnJ,EAAGnnJ,EAACzP,KAAQmD,EAACnD,KAAQ2W,GAE5BgiE,EAAEnpE,EAAIonJ,EAAGpnJ,EACTmpE,EAAElpE,EAAImnJ,EAAGnnJ,EACFkpE,GAgMPxhC,iBA3LkBwhC,OAEdinE,EAAIkX,EAAIC,EAAOC,EACfC,EAAU15G,EAAOgxF,EAAQK,EACzBtzH,EA8HE47I,EACApF,EAAQqF,EAlIVC,EAAE,CAAIvJ,IAAK,EAAGjf,IAAK,GAInBl5H,EAAI,CAAI/M,MAAO,GA2CW,GAxC9BgwE,EAAEnpE,GAAKmpE,EAAEnpE,EAACxP,KAAQuW,IAAEvW,KAASmD,EAC7Bw1E,EAAElpE,GAAKkpE,EAAElpE,EAACzP,KAAQ2W,IAAE3W,KAASmD,EAI7B2zJ,EAAKlnJ,KAAK4qC,KAAK5qC,KAAK8W,KAAKiyD,EAAEnpE,EAAImpE,EAAEnpE,EAAImpE,EAAElpE,EAAIkpE,EAAElpE,IAC7CmwI,EAAKhwI,KAAKyrC,MAAMs9B,EAAElpE,EAAGkpE,EAAEnpE,GACnBmpE,EAAEnpE,GAAK,GAAOmpE,EAAEnpE,GAAKI,KAAK0F,IAAIqjE,EAAElpE,GAClCiG,EAAK/M,MAAQytJ,GACJz9E,EAAElpE,GAAK,GAAOkpE,EAAElpE,GAAKG,KAAK0F,IAAIqjE,EAAEnpE,IACzCkG,EAAK/M,MAAQytJ,GACbxW,GAAM7Z,GACGptD,EAAEnpE,EAAI,IAAQmpE,EAAEnpE,GAAKI,KAAK0F,IAAIqjE,EAAElpE,IACzCiG,EAAK/M,MAAQytJ,GACbxW,EAAMA,EAAK,EAAMA,EAAKvZ,EAAMuZ,EAAKvZ,IAEjC3wH,EAAK/M,MAAQytJ,GACbxW,GAAM7Z,GAQRzqH,EAAK+qH,EAAM,GAAMz2H,KAAKyqC,IAAIulG,GAC1BqX,EAAWrnJ,KAAKC,IAAIyL,IAAM1L,KAAKD,IAAI2L,GAAM,EAAI1L,KAAK8W,KAAK,IACvD62B,EAAQ3tC,KAAK4qC,KAAKy8G,IAGlB1oB,EAAS,GAFTwoB,EAAQnnJ,KAAKD,IAAIiwI,IAEImX,GADrBC,EAAQpnJ,KAAKyqC,IAAIy8G,IACoBE,GAAS,EAAIpnJ,KAAKD,IAAIC,KAAK4qC,KAAK,EAAI5qC,KAAKD,IAAI4tC,QACrE,EACXgxF,GAAS,EACAA,EAAS,IAClBA,EAAS,GAMmBvuI,KACrBy2J,OAASN,GAChBvnB,EAAMh/H,KAAK+lF,KAAK44C,GAChB6oB,EAAGxoB,IAAM7I,EAAU6I,EACfl5H,EAAK/M,QAAUytJ,GACjBgB,EAAGvJ,IAAMtwG,EAAQwoF,EACRrwH,EAAK/M,QAAUytJ,GACxBgB,EAAGvJ,IAAOtwG,EAAQ,EAAMA,EAAQ8oF,EAAM9oF,EAAQ8oF,EACrC3wH,EAAK/M,QAAUytJ,GACxBgB,EAAGvJ,IAAMtwG,EAAQwoF,EAEjBqxB,EAAGvJ,IAAMtwG,eAEGk5G,OAASN,GACvBvnB,EAAMh/H,KAAK+lF,KAAK44C,GAChB6oB,EAAGxoB,IAAMA,EAAM7I,EACXrwH,EAAK/M,QAAUytJ,GACjBgB,EAAGvJ,KAAOtwG,EAAQwoF,EACTrwH,EAAK/M,QAAUytJ,GACxBgB,EAAGvJ,KAAOtwG,EACD7nC,EAAK/M,QAAUytJ,GACxBgB,EAAGvJ,KAAOtwG,EAAQwoF,EAElBqxB,EAAGvJ,IAAOtwG,EAAQ,GAAOA,EAAQ8oF,GAAO9oF,EAAQ8oF,OAGc,IAC5D2pB,EAAGj2I,EAAGF,EAEVyB,GADA00I,EAAIzhB,GACIyhB,EAQNj2I,GAFFuB,IAJEzB,EADEyB,GAAK,EACH,EAEA1L,KAAK8W,KAAK,EAAIpL,GAAK1L,KAAKC,IAAI0tC,IAEzB1jC,IACA,EACH,EAEAjK,KAAK8W,KAAK,EAAIpL,GAGhB5F,EAAK/M,QAAUytJ,IACjB96I,EAAIvB,EACJA,GAAKF,EACLA,EAAIyB,GACK5F,EAAK/M,QAAUytJ,IACxBr8I,GAAKA,EACLF,GAAKA,GACInE,EAAK/M,QAAUytJ,KACxB96I,EAAIvB,EACJA,EAAIF,EACJA,GAAKyB,GAEuCtb,KACrCy2J,OAASN,IAChB76I,EAAI00I,EACJA,GAAKj2I,EACLA,EAAIuB,QACUm7I,OAASN,IACvBnG,GAAKA,EACLj2I,GAAKA,QACS08I,OAASN,KACvB76I,EAAI00I,EACJA,EAAIj2I,EACJA,GAAKuB,GAGP87I,EAAGxoB,IAAMh/H,KAAK+lF,MAAM97E,GAAKksH,EACzBqxB,EAAGvJ,IAAMj+I,KAAKyrC,MAAMthC,EAAGi2I,QACdyG,OAASN,GAChBiB,EAAGvJ,IAAMyI,GAAqBc,EAAGvJ,KAAM9nB,QACzB0wB,OAASN,GACvBiB,EAAGvJ,IAAMyI,GAAqBc,EAAGvJ,KAAMxnB,QACzBowB,OAASN,KACvBiB,EAAGvJ,IAAMyI,GAAqBc,EAAGvJ,KAAM9nB,WAM3B,IADA/lI,KACPsvI,KAGP4nB,EAAeE,EAAGxoB,IAAM,EAAI,EAAI,EAChCkjB,EAASliJ,KAAKyqC,IAAI+8G,EAAGxoB,KACrBuoB,EAAEn3J,KAAQoD,EAAIwM,KAAK8W,KAAKorI,EAASA,EAAM9xJ,KAAQ22J,qBAC/CS,EAAGxoB,IAAMh/H,KAAK4qC,KAAK5qC,KAAK8W,KAAI1mB,KAAMmD,EAACnD,KAAQmD,EAAIg0J,EAAKA,IAAEn3J,KAAU02J,YAAcS,IAC1ED,IACFE,EAAGxoB,KAAOwoB,EAAGxoB,MAIjBwoB,EAAGvJ,KAAG7tJ,KAASwoI,MACf7vD,EAAEnpE,EAAI4nJ,EAAGvJ,IACTl1E,EAAElpE,EAAI2nJ,EAAGxoB,IACFj2D,GA4CP42D,MALU,+EAYR8nB,GAAO,EACN,EAAQ,WAAY,WAAc,YAClC,OAAQ,WAAc,UAAa,YACnC,OAAQ,UAAa,YAAc,aACnC,KAAQ,WAAa,SAAa,YAClC,OAAQ,WAAa,YAAc,aACnC,MAAQ,WAAa,WAAc,YACnC,KAAQ,WAAa,WAAc,aACnC,OAAQ,WAAa,YAAc,YACnC,OAAQ,WAAa,SAAa,aAClC,OAAQ,WAAa,YAAc,aACnC,OAAQ,WAAa,UAAc,aACnC,MAAQ,WAAa,WAAc,aACnC,OAAQ,WAAa,WAAc,aACnC,OAAQ,WAAa,UAAa,aAClC,OAAQ,WAAa,YAAc,YACnC,OAAQ,WAAa,UAAc,aACnC,OAAQ,QAAW,WAAa,aAChC,OAAQ,UAAa,OAAU,aAC/B,OAAQ,UAAa,UAAa,aAGnCC,GAAO,GACN,WAAc,MAAQ,YAAa,aACnC,KAAQ,OAAQ,WAAc,cAC9B,KAAQ,MAAQ,YAAa,aAC7B,KAAQ,UAAW,WAAc,aACjC,KAAQ,SAAW,YAAa,UAChC,IAAQ,UAAW,WAAc,aACjC,KAAQ,SAAW,YAAa,aAChC,KAAQ,UAAW,YAAc,aACjC,MAAQ,UAAW,YAAc,aACjC,MAAQ,UAAW,YAAc,aACjC,MAAQ,UAAW,YAAc,aACjC,MAAQ,SAAU,YAAc,aAChC,MAAQ,UAAW,YAAc,aACjC,MAAQ,UAAW,YAAc,aACjC,MAAQ,UAAW,UAAa,aAChC,MAAQ,WAAY,UAAa,UACjC,MAAQ,WAAY,WAAc,YAClC,MAAQ,WAAY,QAAW,YAC/B,EAAQ,WAAY,WAAc,YAGnCC,GAAM,MACNC,GAAM,OACNhY,GAAKtZ,EAAI,EAETuxB,GAAQ,GAERC,GAAS,SAAYC,EAAOnoJ,UACrBmoJ,EAAM,GAAKnoJ,GAAKmoJ,EAAM,GAAKnoJ,GAAKmoJ,EAAM,GAAKnoJ,EAAImoJ,EAAM,UAiG5DC,GAAK,CACPvoB,qBA9EO94H,GAAEvW,KAAQuW,IAAM,OAChBI,GAAE3W,KAAQ2W,IAAM,OAChB6xH,MAAKxoI,KAAQwoI,OAAS,OACtB8G,GAAK,OACLvkF,MAAK/qD,KAAQ+qD,OAAK,YA2EzB7T,iBAxEkBuiG,OACZjiG,EAAMk3F,EAAW+K,EAAGjqI,EAACxP,KAAQwoI,OAE7BwG,EAAOp/H,KAAK0F,IAAImkI,EAAGhqI,GACnB9T,EAAIiU,KAAKqI,MAAM+2H,EAAOwQ,IACtB7jJ,EAAI,EACJA,EAAI,EACGA,GAAK87J,KACZ97J,EAAI87J,QAGJb,EAAE,CACFpnJ,EAAGkoJ,GAAUL,GAAQ17J,GAFzBqzI,EAAO9I,GAAO8I,EAzCR,mBAyCqBrzI,IAEU67C,EACjC/nC,EAAGioJ,GAAUJ,GAAQ37J,GAAIqzI,WAEzByK,EAAGhqI,EAAI,IACPmnJ,EAAGnnJ,GAAKmnJ,EAAGnnJ,GAGfmnJ,EAAGpnJ,EAAIonJ,EAAGpnJ,EAACxP,KAAQmD,EAAIo0J,GAAGv3J,KAAQuW,GAClCqgJ,EAAGnnJ,EAAImnJ,EAAGnnJ,EAACzP,KAAQmD,EAAIq0J,GAAGx3J,KAAQ2W,GAC3BigJ,GAoDTz/G,iBAjDkBy/G,OACZnd,EAAE,CACFjqI,GAAIonJ,EAAGpnJ,EAACxP,KAAQuW,KAAEvW,KAAUmD,EAAIo0J,IAChC9nJ,EAAGG,KAAK0F,IAAIshJ,EAAGnnJ,EAACzP,KAAQ2W,KAAE3W,KAAUmD,EAAIq0J,QAGxC/d,EAAGhqI,GAAK,EACRgqI,EAAGjqI,GAAK6nJ,GAAQI,IAAO,GACvBhe,EAAGhqI,EAAImnJ,EAAGnnJ,EAAI,GAAKs2H,EAAUA,WAGzBpqI,EAAIiU,KAAKqI,MAAMwhI,EAAGhqI,EAAIgoJ,QACtB97J,EAAI,EACJA,EAAI,EACGA,GAAK87J,KACZ97J,EAAI87J,SAGAH,GAAQ37J,GAAG,GAAK89I,EAAGhqI,IACjB9T,YACK27J,GAAQ37J,EAAE,GAAG,IAAM89I,EAAGhqI,WAC3B9T,MAMNg8J,EAAQL,GAAQ37J,GAChB2f,EAAI,GAAKm+H,EAAGhqI,EAAIkoJ,EAAM,KAAOL,GAAQ37J,EAAE,GAAG,GAAKg8J,EAAM,IAEzDr8I,WA1EgBu8I,EAAM5jB,EAAO6jB,EAASC,WACtCvoJ,EAAIykI,EACD8jB,IAASA,EAAK,KACbC,EAAMH,EAAKroJ,MACfA,GAAKwoJ,EACDpoJ,KAAK0F,IAAI0iJ,GAAOF,EAAO,aAIxBtoJ,EAiECyoJ,EAAc,SAAUzoJ,UAChBkoJ,GAAUC,EAAOnoJ,GAAKiqI,EAAGhqI,GA/EhC,SAAYkoJ,EAAOnoJ,UACrBmoJ,EAAM,GAAKnoJ,GAAK,EAAImoJ,EAAM,GAAS,EAAJnoJ,EAAQmoJ,EAAM,IA8ENO,CAAUP,EAAOnoJ,KACxD8L,EAAG0qH,EAAO,KAEbyT,EAAGjqI,GAAKkoJ,GAAUL,GAAQ17J,GAAI2f,GAC9Bm+H,EAAGhqI,GAAK,EAAI9T,EAAI2f,GAAK2qH,EACjB2wB,EAAGnnJ,EAAI,IACPgqI,EAAGhqI,GAAKgqI,EAAGhqI,UAInBgqI,EAAGjqI,EAAIk/H,EAAW+K,EAAGjqI,EAACxP,KAAQwoI,OACvBiR,GAQTlK,MALU,0BAwBR4oB,GAAO,CACP9oB,qBAhBKj+H,KAAI,WAiBT8lC,iBAbgByhC,UACJy9D,EAAqBz9D,EAAC34E,KAAOsvI,GAAEtvI,KAAOmD,IAalDg0C,iBATgBwhC,UACJi+D,EAAqBj+D,EAAC34E,KAAOsvI,GAAEtvI,KAAOmD,EAACnD,KAAOoD,IAS1DmsI,MALQ,iDAQRn/D,GACM,EADNA,GAEM,EAFNA,GAGK,EAHLA,GAIK,EAGLwrD,GAAM,CACR9sG,EAAC,CAAQo+G,IAAK,IAAQ/jF,KAAK,GAC3BivG,IAAG,CAAMlrB,IAAK,EAAG/jF,KAAK,EAAMpiC,SAAS,GACrCsxI,KAAI,CAAKnrB,IAAK,EAAG/jF,KAAK,EAAMpiC,SAAS,GACrCyhH,MAAK,CAAI0E,IAAK,EAAG/jF,KAAK,GACtBg/E,KAAI,CAAK+E,IAAK,EAAG/jF,KAAK,QA0JWw8E,GAP/B2yB,GAAK,CACPjpB,mBAhJA3zI,OAAOD,KAAKmgI,IAAQr0H,QAAO,SAAWoxE,WACnB,SAADA,GAAkB34E,KAC3B24E,GAAKijD,GAAOjjD,GAAGu0D,YACXtR,GAAOjjD,GAAGxvB,KAAO37B,MAAKxtB,KAAM24E,IAAC,MAAA,IAC5B38E,MAAK,4CAA+C28E,EAAC,MAAQ34E,KAAQ24E,IACtEijD,GAAOjjD,GAAGxvB,MAAGnpD,KACjB24E,GAAKh7C,WAAU39B,KAAM24E,KAExBijD,GAAOjjD,GAAG5xD,UAAO/mB,KACd24E,GAAC34E,KAAS24E,GAAKstD,IAEtBhlI,KAAIjB,OAEF4P,KAAK0F,IAAK1F,KAAK0F,IAAGtV,KAAMmoI,MAAQpC,GAAYC,EAAKhmI,KAC9CowE,KAAIpwE,KAAQmoI,KAAO,EAAI/3D,GAAcA,GACjCxgE,KAAK0F,IAAGtV,KAAMmoI,MAAQnC,EAAKhmI,KAC/BowE,KAAOA,SAEPA,KAAOA,QACP84E,OAASt5I,KAAKC,IAAG7P,KAAMmoI,WACvB2gB,OAASl5I,KAAKD,IAAG3P,KAAMmoI,YAGzBowB,IAAGv4J,KAAQ8uB,EAAC9uB,KAAQmD,OAEhBo1J,KAAO,GAACv4J,KAASu4J,IAAM,KAAI,MAAA,IACxBv8J,MAAK,uBAGZ28E,EAAI,EAAC34E,KAAQu4J,SACbC,GAAK,EAACx4J,KAAQ24E,OACdF,GAAK,EAACz4E,KAAQu4J,SACdE,OAAKz4J,KAAS24E,EAAI,GAAC34E,KAASy4E,QAC5B62D,GAAK,MAENopB,EAAK14J,KAAQq4J,KACbxvB,EAAK7oI,KAAQo4J,SACZO,GAAK/oJ,KAAKD,IAAIk5H,QACd+vB,GAAKhpJ,KAAKC,IAAIg5H,QACdgwB,GAAKjpJ,KAAKD,IAAI+oJ,QACdI,GAAKlpJ,KAAKC,IAAI6oJ,IAyGnBxhH,iBAtGkByhC,GAClBA,EAAEnpE,GAACxP,KAASwoI,UAIRh5H,EAAGC,EAkCHspJ,EAAIC,EArCJ1qB,EAAS1+H,KAAKC,IAAI8oE,EAAElpE,GACpB8+H,EAAS3+H,KAAKD,IAAIgpE,EAAElpE,GACpBqgJ,EAASlgJ,KAAKD,IAAIgpE,EAAEnpE,eAEX4gE,WACNA,GACH3gE,EAACzP,KAAQkpJ,OAAS5a,EAAMtuI,KAAQ8oJ,OAASva,EAASuhB,aAE/C1/E,GACH3gE,EAAI8+H,EAASuhB,aAEV1/E,GACH3gE,GAAK6+H,aAEFl+D,GACH3gE,EAAI6+H,SAIR9+H,GADAC,EAACzP,KAAQu4J,KAAGv4J,KAAS24E,EAAIlpE,IACjB8+H,EAAS3+H,KAAKC,IAAI8oE,EAAEnpE,QAEf4gE,WACNA,GACH3gE,GAACzP,KAAS8oJ,OAASxa,EAAMtuI,KAAQkpJ,OAAS3a,EAASuhB,aAEhD1/E,GACH3gE,GAAK6+H,aAEFl+D,GACH3gE,IAAO8+H,EAASuhB,aAEb1/E,GACH3gE,GAAK8+H,EAASuhB,SAOlBkJ,EAAK,IADLD,EAAKtpJ,EAACzP,KAAQ24J,GAAKnpJ,EAACxP,KAAQ44J,IAChB54J,KAAQ84J,GAAE94J,KAAQy4E,GAAEz4E,KAAQ64J,IACxCrpJ,GAAKA,EAACxP,KAAQ24J,GAAKlpJ,EAACzP,KAAQ44J,IAAE54J,KAAS64J,GAAKG,EAC5CvpJ,EAAIspJ,EAAKC,EAETrgF,EAAEnpE,EAAIA,EAACxP,KAAQmD,EACfw1E,EAAElpE,EAAIA,EAACzP,KAAQmD,EACRw1E,GAwDPxhC,iBArDkBwhC,GAClBA,EAAEnpE,GAACxP,KAASmD,EACZw1E,EAAElpE,GAACzP,KAASmD,MAIR81J,EAAIC,EAAIH,EAHRh/I,EAAC,CAAKvK,EAAGmpE,EAAEnpE,EAAGC,EAAGkpE,EAAElpE,GAIvBspJ,EAAK,GAAC/4J,KAASu4J,IAAM5/E,EAAElpE,EAACzP,KAAQ84J,IAChCG,EAAEj5J,KAAQu4J,IAAM5/E,EAAEnpE,EAAIupJ,EACtBG,EAAEl5J,KAAQu4J,IAAM5/E,EAAElpE,EAACzP,KAAQ64J,GAAKE,EAChCpgF,EAAEnpE,EAAIypJ,EAAEj5J,KAAQ24J,GAAKO,EAAEl5J,KAAQ44J,GAC/BjgF,EAAElpE,EAAIypJ,EAAEl5J,KAAQ24J,GAAKM,EAAEj5J,KAAQ44J,OAE3B7R,EAAK/D,GAAMrqE,EAAEnpE,EAAGmpE,EAAElpE,MAClBG,KAAK0F,IAAIyxI,GAAM/gB,EACjBjsH,EAAEvK,EAAI,EACNuK,EAAEtK,EAAIkpE,EAAElpE,WAEJ6gJ,EAAMC,SACVA,EAAO,EAAIxJ,EAAKA,EAAE/mJ,KAAQy4J,MAC1BlI,GAAIvwJ,KAAS24E,EAAI/oE,KAAK8W,KAAK6pI,KAAIvwJ,KAAWu4J,IAAMxR,EAAKA,EAAE/mJ,KAAQu4J,KAC/DjI,EAAO1gJ,KAAK8W,KAAK,EAAI6pI,EAAOA,QACfngF,WACNA,GACHr2D,EAAEtK,EAAIG,KAAKmsC,KAAKu0G,EAAItwJ,KAAQkpJ,OAASvwE,EAAElpE,EAAI8gJ,EAAIvwJ,KAAQ8oJ,OAAS/B,GAChEpuE,EAAElpE,GAAK6gJ,EAAItwJ,KAAQkpJ,OAASt5I,KAAKC,IAAIkK,EAAEtK,IAAMs3I,EAC7CpuE,EAAEnpE,GAAK+gJ,EAAIvwJ,KAAQ8oJ,kBAEhB14E,GACHr2D,EAAEtK,EAAIG,KAAKmsC,KAAK48B,EAAElpE,EAAI8gJ,EAAOxJ,GAC7BpuE,EAAElpE,EAAI6gJ,EAAOvJ,EACbpuE,EAAEnpE,GAAK+gJ,aAEJngF,GACHr2D,EAAEtK,EAAIG,KAAKmsC,KAAKu0G,GAChB33E,EAAElpE,GAAKkpE,EAAElpE,aAEN2gE,GACHr2D,EAAEtK,GAAKG,KAAKmsC,KAAKu0G,GAGrBv2I,EAAEvK,EAAII,KAAKyrC,MAAMs9B,EAAEnpE,EAAGmpE,EAAElpE,UAG1BkpE,EAAEnpE,EAAIuK,EAAEvK,EAACxP,KAAQwoI,MACjB7vD,EAAElpE,EAAIsK,EAAEtK,EACDkpE,GAQP42D,MALU,uCAuCZsM,GAAQsd,aAAY,QACpBtd,GAAQud,KAAO1gH,EACfmjG,GAAQvO,MAAK,IAAOuO,GAAQud,KAAI,SAChCvd,GAAQuF,MAAQA,GAChBvF,GAAQV,QAAUA,GAClBU,GAAQ5/I,KAAOA,EACf4/I,GAAQwd,QAvkLL,SACcvwJ,EAAK/D,OAChBjG,EAAI,IAAOw6J,SAASv0J,GACpBuvI,WA4CsBx1I,OACtBy6J,EAAUz6J,EAAKi2I,SAAS,GAAG,MACf,KAAZwkB,EAAc,OACT,EAGO,MADhBA,EAAUz6J,EAAKi2I,SAAS,GAAG,KAEzB7oH,QAAQC,KAAI,4EAEP,EArDcqtI,CAAmB16J,GACpC26J,WAuDc36J,EAAMw1I,UAEtBilB,QAASz6J,EAAKi2I,SAAS,EAAGT,GAC1BolB,eAAgB56J,EAAKi2I,SAAS,GAAIT,GAClCqlB,UAAW76J,EAAKi2I,SAAS,GAAIT,GAC7BslB,UAAW5lB,EAAal1I,EAAM,GAAI,IAAQ0+H,OAC1Cq8B,kBAAmB/6J,EAAK01I,WAAW,IAAKF,GACxCwlB,kBAAmBh7J,EAAK01I,WAAW,IAAKF,GACxCylB,gBAAiBj7J,EAAK01I,WAAW,IAAKF,GACtC0lB,gBAAiBl7J,EAAK01I,WAAW,IAAKF,IAhE3B2lB,CAAWn7J,EAAMw1I,GAC1BmlB,EAAOE,UAAY,GACrBztI,QAAQ9Q,IAAG,2FAGT8+I,EAAO,CAAIT,OAAQA,EAAQngB,kBAmEXx6I,EAAM26J,EAAQnlB,WAC9B6lB,EAAa,IACbhkB,EAAK,GACAx6I,EAAI,EAAGA,EAAI89J,EAAOE,UAAWh+J,IAAC,KACjCy+J,EAAY/lB,EAAev1I,EAAMq7J,EAAY7lB,GAC7Ct6B,EAAQg7B,EAAcl2I,EAAMq7J,EAAYC,EAAW9lB,GACnD+lB,EAAiBzqJ,KAAK2P,MACxB,GAAK66I,EAAUzlB,eAAiBylB,EAAU1lB,gBAAkB0lB,EAAUvlB,mBACpEylB,EAAiB1qJ,KAAK2P,MACxB,GAAK66I,EAAU3lB,cAAgB2lB,EAAU7lB,eAAiB6lB,EAAUxlB,kBAEtEuB,EAAMlyI,KAAI,CACRw1I,GAAE,CAAG3F,EAAiBsmB,EAAU1lB,gBAAiBZ,EAAiBsmB,EAAU7lB,gBAC5EiF,IAAG,CAAG1F,EAAiBsmB,EAAUvlB,mBAAoBf,EAAiBsmB,EAAUxlB,mBAChF8E,IAAG,CAAG2gB,EAAgBC,GACtB30H,MAAOy0H,EAAUtlB,cACjBuF,IAAKnG,EAASl6B,YAGXm8B,EAvFQokB,CAAaz7J,EAAM26J,EAAQnlB,WAE1Cd,EAAe1qI,GAAOoxJ,EACfA,GA6jLTre,GAAQxtI,UAAYA,GACpBwtI,GAAQU,KAAOA,GACfV,GAAQz1B,QAAO,SAxCoBuf,GAyCfkW,IAxCZud,KAAK5jH,YAAY3vB,IAAIq8H,IAC3Bvc,GAAMyzB,KAAK5jH,YAAY3vB,IAAIs+H,IAC3Bxe,GAAMyzB,KAAK5jH,YAAY3vB,IAAIk3H,IAC3BpX,GAAMyzB,KAAK5jH,YAAY3vB,IAAI+/H,IAC3BjgB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIugI,IAC3BzgB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI0hI,IAC3B5hB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIgjI,IAC3BljB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIylI,IAC3B3lB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIqmI,IAC3BvmB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI+nI,IAC3BjoB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIkpI,IAC3BppB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI4qI,IAC3B9qB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIsrI,IAC3BxrB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI2rI,IAC3B7rB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI6rI,IAC3B/rB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI+rI,IAC3BjsB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIqsI,IAC3BvsB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIiuI,IAC3BnuB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIkuI,IAC3BpuB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIquI,IAC3BvuB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIuuI,IAC3BzuB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIyuI,IAC3B3uB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIkvI,IAC3BpvB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIqwI,IAC3BvwB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI2wI,IAC3B7wB,GAAMyzB,KAAK5jH,YAAY3vB,IAAI+xI,IAC3BjyB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIsyI,IAC3BxyB,GAAMyzB,KAAK5jH,YAAY3vB,IAAIyyI,IAetBzc,mHCt/NR3yI,EAAAF,OAAAzN,EAAA,YAAA,IAAAi/J,EAAAj+J,6xGCcA2M,EAAAF,OAAAzN,EAAA,WAAA,IACak/J,0qBAAAA,EAAQ9iE,OAIlBh8F,EAAG6pE,EAHDvoB,EAAI06C,EAAU,GACd+iE,EAAM,IAAO7wJ,MAAMozC,GACrB09G,EAAO,GAAM19G,EAAI,MAEhBthD,EAAI,EAAGA,EAAIshD,IAAKthD,EAEnB6pE,EAAW,GACPmyB,EAAU,GAAKgjE,IACjBn1F,GAAY,GAEVmyB,EAAU,GAAKgjE,IACjBn1F,GAAY,GAEdk1F,EAAO/+J,GAAKwR,OAAO8tF,aAAaz1B,GAChCm1F,IAAS,SAEJD,EAAOlqJ,KAAI,IAQjB,IAsEHoqJ,EAAA,SAAAv7J,GAGK,SACHw7J,EAAY19J,OAAZqD,EAAAR,KACQ86J,OAA0Bt4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,OAEpDt6J,EAAAnB,EAAAU,KAAAC,KAAA,CACE4Z,UAAWzc,EAAQyc,UACnBlc,YAAW,YACXqoH,eAAgB5oH,EAAQ4oH,eACxBiE,QAAQ,EACRrsH,WAAUs7B,EAAA98B,IAAA,aACV6pH,2BAA4B7oH,EAAQ6oH,2BACpC3mG,MAAKzb,EAAArH,QAAcqpB,QACnBsgG,iBAAkB/oH,EAAQ+oH,iBAC1BnE,eAAgB+4C,EAAQ,EAAI,EAC5Bl9J,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,oBAOjB82C,OAASD,EAMdt6J,EAAKw6J,cAA+Bx4J,IAApBrF,EAAQ89J,QAAwB99J,EAAQ89J,QAAO,QAM/Dz6J,EAAK06J,cAA+B14J,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,SAAU,EAMlE5d,EAAK26J,QAAUh+J,EAAQ2L,IAMvBtI,EAAK46J,YAAcj+J,EAAQk+J,eAErBp9J,EAAG,yDAEPuC,EAAK46J,YAAW,iDAEhB56J,EAAK26J,QAAO,MAEZ36J,EAAKw6J,wBAGL/8J,EACAuC,EAAK86J,8BAA8Br6J,KAAKT,QACxCgC,EAAS,kBA9DQvC,EAAA46J,EAAAx7J,GAyErBw7J,EAAA36J,UAAAq7J,UAAS,uBACKJ,SASdN,EAAA36J,UAAAs7J,cAAa,uBACCJ,aAMdP,EAAA36J,UAAAo7J,8BAA6B,SAACv+J,MAEH,KAAvBA,EAAS0+J,YACiB,MAA1B1+J,EAAS2+J,mBACwB,oBAAjC3+J,EAAS4+J,0BACuB,GAAhC5+J,EAAS6+J,aAAahgK,QACuB,GAA7CmB,EAAS6+J,aAAa,GAAGC,UAAUjgK,YAM/ByiI,EAAWthI,EAAS6+J,aAAa,GAAGC,UAAU,GAC9Cz9I,GAA2B,GAApBpe,KAAQk7J,SAAiB78B,EAASy9B,QAAO97J,KAAQk7J,SAExDxjH,EAAgB13C,KAAQ24B,gBACxB3kB,EAAMi3G,EAAAqN,qBAAwB5gF,GAC9BhqC,EAAK1N,KAAQ+6J,OAAS,EAAI,EAC1B/iC,EACJqG,EAAS09B,YAAc19B,EAAS29B,YAC5B39B,EAAS09B,WAAaruJ,EAAK,CAC1B2wH,EAAS09B,WAAaruJ,EAAO2wH,EAAS29B,YAActuJ,GAErDosC,EAAQmxE,EAAAmN,UAAA,CACZpkH,OAAQA,EACRmK,QAASkgH,EAAS49B,QAClB79I,QAASA,EACT45G,SAAUA,SAEPl+E,SAAWA,MAEVmhH,EAAOj7J,KAAQg7J,SACfF,EAAK96J,KAAQ+6J,eACdp0C,gBAAed,EAAAe,2BAClByX,EAAS69B,mBAAmB37J,KAAG,SAAW47J,GACU,IAC5CC,EAAgB,CAAI,EAAG,EAAG,GAC1BC,EAAWh+B,EAASg+B,SACvB10I,QAAO,cAAgBw0I,GACvBx0I,QAAO,YAAcszI,mBAQZtjE,EAAW1jE,EAAYt2B,MAC1Bg6F,oBAIDA,EAAU,GACVA,EAAU,GACVA,EAAU,GACVykE,OAEEn+J,EAAMo+J,SACNvB,IACF78J,GAAG,yBAEEA,EAAI0pB,QAAO,YAAc8yI,EAAQ2B,UAO9C/9B,EAASi+B,iBAAgB,KACrBC,EAAStjI,EAAAwb,4BAAAxb,EAAA98B,IAAA,aACY6D,KACpB24B,sBAGF64E,gBAAe,SACRrvG,OACF5E,EAAY,GACZ8F,EAAYlB,EAAWkB,UACvBm5J,EAAQx8J,KAAQ+3H,cAChB96E,EAAIu/G,EAAS7qD,kBACjBtuG,EAAUoC,WAAUzF,KACf8hH,YAMD5iH,EAJYs9J,EAASj5C,yBACzBlgH,EAAUrE,OACVi+C,GAEqB,UACvBohF,EAASi+B,iBAAiB/7J,KAAG,SAAWk8J,WAClCC,GAAe,EACbC,EAAgBF,EAAgBE,cAC7BhhK,EAAI,EAAG6H,EAAKm5J,EAAc/gK,OAAQD,EAAI6H,IAAM7H,EAAC,KAC9CihK,EAAeD,EAAchhK,MAEjCuD,GAAQ09J,EAAaX,SACrB/8J,GAAQ09J,EAAad,QAAO,KAEtBjrD,EAAO+rD,EAAa/rD,KACpBgsD,EAAc,CAAIhsD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAClDisD,EAAMn2J,EAAAmN,eAAkB+oJ,EAAgBN,mBAC/BO,EAAQ36J,EAAW6R,QAAM,CACtC0oJ,GAAe,UAKjBA,GACFn/J,EAAa0G,KAAKw4J,EAAgB/yG,gBAItCnsD,EAAa0G,KA9QF,gIA+QJ1G,GACP0D,KAAIjB,YAILyxG,SAAQ7tG,EAAArH,QAAasH,iBA7GnB4tG,SAAQ7tG,EAAArH,QAAa8nB,QA+GhCw2I,EAjNA,sBAmNeD,0WCpTZ1xJ,EAAAF,OAAAzN,EAAA,SAAA,IACawhK,IAdb,IAAAjsJ,EAAA7V,EAAA,sBAca8hK,EAAM9+J,EAAKwG,EAAUu4J,EAAaC,OAC1CC,EAAS/7J,SAASC,cAAa,UAC/B0H,EAAG,OAASgI,EAAA/D,OAAUtI,YACnB04J,WACAtsI,OAAO/nB,GACdo0J,EAAOv6J,WAAWC,YAAYs6J,GAEhCA,EAAOE,OAAQ,EACfF,EAAOvkJ,IACL1a,IACqB,GAApBA,EAAI8M,QAAO,KAAW,IAAM,MAC5BkyJ,GAAiB,YAAc,IAEhCn0J,MACIu0J,EAAQ9/H,YAAU,WACtB4/H,IACIH,GACFA,MAED,KACHnsI,OAAO/nB,GAAG,SAAc/D,GACtBg3B,aAAashI,GACbF,IACA14J,EAASM,IAEX5D,SAASm8J,qBAAoB,QAAS,GAAG9jJ,YAAY0jJ,suBCGvDK,EAAA,SAAAl+J,GAGK,SACHm+J,EAAYrgK,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrB0gB,aAA6B5b,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,QAAU,GAC3DD,QAAShhB,EAAQghB,QACjBxgB,WAAYR,EAAQQ,WACpBsmH,WAAY9mH,EAAQ8mH,WACpBrmH,MAAOT,EAAQS,qBAOjB4C,EAAKi9J,SAAWtgK,EAAQugK,QAMxBl9J,EAAKm9J,OAASxgK,EAAQoD,KAAG,GAMzBC,EAAKo9J,QAAUzgK,EAAQuqH,QAAM,GAM7BlnH,EAAKq9J,eAAc,GAEnBr9J,EAAKs9J,0BAxCa79J,EAAAu9J,EAAAn+J,GAgDpBm+J,EAAAt9J,UAAA69J,UAAS,uBACKH,SASdJ,EAAAt9J,UAAA89J,aAAY,SAACt2C,iBACCk2C,QAASl2C,QAChBo2C,kBAUPN,EAAAt9J,UAAA+9J,UAAS,SAACv2C,QACHk2C,QAAUl2C,GAAM,QAChBo2C,kBAOPN,EAAAt9J,UAAA49J,eAAc,eACNI,EAAY/iK,KAAK2vH,UAAS9qH,KAAM49J,iBAC7BC,eAAeK,QACjBC,eAAcn+J,KAAM69J,eAAeK,aAGtCE,EAAM,WAAap+J,KAAQy9J,SAAQ,6BAE9BE,SACPS,GAAM,UAAap+J,KAAQ29J,YAGvBU,EAAM,IAAOjsD,eACnBisD,EAAO7hJ,iBAAgB,OACfxc,KACDs+J,oBAAoBr9J,KAAIjB,KAAOk+J,IAEtCG,EAAO7hJ,iBAAgB,QAAQxc,KAAOu+J,iBAAiBt9J,KAAIjB,OAC3Dq+J,EAAOhsD,KAAI,OAAS+rD,GACpBC,EAAOG,iBAAgB,eAAe,oBACtCH,EAAOtrD,KAAK53G,KAAK2vH,UAAS9qH,KAAM49J,YAUlCJ,EAAAt9J,UAAAo+J,oBAAmB,SAACJ,EAAW36I,OACvB86I,EAAwC96I,EAAM1kB,WAE/Cw/J,EAAO7rD,QAAW6rD,EAAO7rD,QAAU,KAAO6rD,EAAO7rD,OAAS,IAAG,KAC5Dz1G,OAAQ,MAEVA,EAA4C5B,KAAKC,MAC/CijK,EAAO5rD,oBAEFvb,oBACFua,SAAQ7tG,EAAArH,QAAa8nB,YAGvB85I,eAAephK,QACf8gK,eAAeK,GAAanhK,OAC5B00G,SAAQ7tG,EAAArH,QAAasH,iBAErB4tG,SAAQ7tG,EAAArH,QAAa8nB,QAQ9Bm5I,EAAAt9J,UAAAq+J,iBAAgB,SAACh7I,QACVkuF,SAAQ7tG,EAAArH,QAAa8nB,QAQ5Bm5I,EAAAt9J,UAAAi+J,eAAc,SAACp5J,OACP05J,EAAQ,WAEZ15J,EAAK25J,QAAQC,MAAK,IACf3+J,KACEy9J,SAAQ,eAEb14J,EAAK65J,aAAY,wBAEdtuD,OAAOmuD,IAEhBjB,EA1JA,sBA4JeD,+uBCnIfsB,EAAA,SAAAx/J,GAGK,SACHy/J,EAAYtnI,OACJr6B,EAAUq6B,GAAW,GACrB75B,OACmB6E,IAAvBrF,EAAQQ,WAA2BR,EAAQQ,WAAU,YAEjDm8C,OACiBt3C,IAArBrF,EAAQ28C,SACJ38C,EAAQ28C,SAAQmxE,EAAAmN,UAAA,CAEdpkH,OAAMi3G,EAAAqN,qBAAuB36H,GAC7BugB,cAAe/gB,EAAQ+gB,cACvBE,QAASjhB,EAAQihB,QACjBD,QAAShhB,EAAQghB,QACjB65G,SAAU76H,EAAQ66H,kBAG1B34H,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBiE,OAAQ7sH,EAAQ6sH,OAChBrsH,WAAYA,EACZqoH,2BAA4B7oH,EAAQ6oH,2BACpClsE,SAAUA,EACVosE,iBAAkB/oH,EAAQ+oH,iBAC1BnE,eAAgB5kH,EAAQ4kH,eACxB4E,gBAAiBxpH,EAAQwpH,gBACzB1oH,IAAKd,EAAQc,IACb2nH,KAAMzoH,EAAQyoH,KACdhoH,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,WACpB5S,wBAAyBl0G,EAAQk0G,wBACjCyQ,WAAY3kH,EAAQ2kH,0BArCR7hH,EAAA6+J,EAAAz/J,GAwClBy/J,EAxCA,sBA0CeD,i+BCtDfE,EAAA,SAAA1/J,GAGK,SACH2/J,EAAY7hK,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBK,MAAOT,EAAQS,qBAOjB4C,EAAKiF,gBAAajD,EAMlBhC,EAAK0lB,cAAgC1jB,IAArBrF,EAAQ+oB,SAAyB/oB,EAAQ+oB,SAAW,GAMpE1lB,EAAKyuG,YAAc9xG,EAAQ8xG,aAAe,EAM1CzuG,EAAKy+J,mBAAqB,EAM1Bz+J,EAAKm3B,SAAQ,GAObn3B,EAAK6sE,iBACHlwE,EAAQkwE,kBAAgB,SACdpnE,OACFC,EAAWD,EAAQ88D,8BAClB78D,EAASwnC,WAAOC,EAAApxC,QAAmBs2C,MAAO,IAC1C3sC,GAOX1F,EAAKhE,OAAS,KAEdgE,EAAK0+J,cAAgB1+J,EAAK0vG,QAAQjvG,KAAKT,GAEvCA,EAAK2+J,eAAe3+J,EAAK0lB,SAAU1lB,EAAKyuG,aACxCzuG,EAAK3C,UAAUV,EAAQX,QAAU,eA9DfyD,EAAA++J,EAAA3/J,GAsEpB2/J,EAAA9+J,UAAAuY,MAAK,SAACu1F,QACCr2E,SAAS/7B,OAAS,EACvByD,EAAAa,UAAMuY,MAAK1Y,KAAAC,KAACguG,IAQdgxD,EAAA9+J,UAAAo2C,YAAW,uBACGpwB,UAQd84I,EAAA9+J,UAAAgH,UAAS,uBACK1K,QAQdwiK,EAAA9+J,UAAAwmF,aAAY,SAAC1yE,EAAQvO,EAAY9H,QAC1BnB,OAAOkqF,aAAa1yE,EAAQvO,EAAY9H,GACzC8H,IAAUzF,KAAUyF,kBACjBA,WAAaA,OACbyqG,YAST8uD,EAAA9+J,UAAAk/J,YAAW,SAACl5I,QACLi5I,eAAej5I,EAAQlmB,KAAOivG,cASrC+vD,EAAA9+J,UAAAm/J,eAAc,SAACpwD,QACRkwD,eAAcn/J,KAAMkmB,SAAU+oF,IAQrC+vD,EAAA9+J,UAAAo/J,eAAc,uBACArwD,aAQd+vD,EAAA9+J,UAAArC,UAAS,SAACrB,QACCA,QAAMwD,KACRxD,OAAOomB,oBAAmB7f,EAAAxG,QAAWkhB,OAAMzd,KAAOk/J,oBAEpD1iK,OAASA,EACVA,GACFA,EAAOggB,iBAAgBzZ,EAAAxG,QAAWkhB,OAAMzd,KAAOk/J,oBAE5ChvD,WAMP8uD,EAAA9+J,UAAAgwG,QAAO,gBACAz3F,aACA8mJ,eACAn1F,YAAWpqE,KAAM23B,WAQxBqnI,EAAA9+J,UAAAi/J,eAAc,SAACj5I,EAAU+oF,OACjBx/D,EACS,IAAbvpB,EAAiB,EAAItW,KAAK2F,IAAI05F,EAAa/oF,GAAYA,EACnD1I,EACJ0I,IAAQlmB,KAAUkmB,UAAQlmB,KAASi/J,qBAAuBxvH,OACvDvpB,SAAWA,OACX+oF,YAAcA,OACdgwD,mBAAqBxvH,EACtBjyB,GAAOxd,KACJkwG,WAOT8uD,EAAA9+J,UAAAq/J,QAAO,mBACmB/8J,SAAfiD,YAAwBzF,KAAUxD,eAGrCwX,EAAMrN,EAAAkL,cACN2tJ,EAAWx/J,KAAQkmB,SAAQlmB,KAAQyF,WACnCkyB,EAAQ33B,KAAQxD,OAAOkhB,cAGvB+hJ,EAAS,GAEN9jK,EAAI,EAAG6H,EAAKm0B,EAAS/7B,OAAQD,EAAI6H,EAAI7H,IAAC,KACvCsK,EAAU0xB,EAASh8B,iBACZsK,KAAYw5J,GAAS,KAC1Bv5J,EAAQlG,KAAQqtE,iBAAiBpnE,MACnCC,EAAQ,KACJiB,EAAcjB,EAASq1C,gDACAp0C,EAAa6M,YACnCA,EAAQwrJ,EAAaxrJ,OAEtB0rJ,EAAS1/J,KAAQxD,OACpBuqF,oBAAoB/yE,GACpBk3B,QAAM,SAAWy0H,OACVvwD,EAAGt+F,EAAA/D,OAAU4yJ,WACfvwD,KAAOqwD,KAGXA,EAAUrwD,IAAO,GACV,WAENz3E,SAAS1zB,KAAIjE,KAAM4/J,cAAcF,EAAW1rJ,QAYzDgrJ,EAAA9+J,UAAA0/J,cAAa,SAACjoI,EAAU3jB,WAChByrD,EAAQ,CAAI,EAAG,GACZ9jE,EAAIg8B,EAAS/7B,OAAS,EAAGD,GAAK,IAAKA,EAAC,KACrCs9G,EAAQj5G,KAAQqtE,iBAAiB11C,EAASh8B,IAC5Cs9G,EAAQ7yG,EAAAyf,IACI45C,EAAUw5C,EAAS19D,kBAEjC5jB,EAAShsB,OAAOhQ,EAAG,WAGP8jE,EAAU,EAAI9nC,EAAS/7B,YACjCikK,EAAYl5J,EAAAmM,UAAakB,GACzBy7B,EAAKzvC,KAAQi/J,mBACb/4J,EAAQ,IAAAynE,EAAApxE,QAAA,CACZkjE,EAAS,IAAM,EAAIhwB,GAASowH,EAAa,GAAKpwH,EAC9CgwB,EAAS,IAAM,EAAIhwB,GAASowH,EAAa,GAAKpwH,IAE1C8vH,EAAO,IAAA/uF,EAAAj0E,QAAe2J,UAC5Bq5J,EAAQhyJ,IAAG,WAAaoqB,GAAU,GAC3B4nI,GAEXP,EAnPA,sBAqPeD,ylCC7PZ,SAEMe,EAAiBC,UACjBA,EAAWtmG,eAAc,KAAK,CAAGumG,sBAAuB,KAO9D,IACHC,EAAA,SAAA5gK,GAKK,SACH6gK,EAAY1oI,OAAZh3B,EAAAR,KAIQ7C,EAAUq6B,GAAW,GAEvB2oI,EAAUhjK,EAAQc,KAAG,GACzBkiK,GAEGA,EAAQ36E,YAAW,OAAU26E,EAAQvkK,OAAS,GAAY,KAAPukK,EAAO,GAAA,QAGvD/5C,EAAUjpH,EAAQipH,SAAOg6C,EAAAC,SAAaC,SACtC3mC,EAAQx8H,EAAQw8H,OAAK,GACrBn0H,EAAOrI,EAAQqI,cAEXhD,MAARgD,GACEqE,MAAM4B,QAAQjG,IACC,GAAfA,EAAK5J,SACJ4xB,MAAMhoB,EAAK,KACZA,EAAK,GAAK,IACTgoB,MAAMhoB,EAAK,KACZA,EAAK,GAAK,EACZ,QA+BE+2H,EAAWC,EAAYp+G,EA7BrBzf,EAAQ6G,EAAK,GACblE,EAASkE,EAAK,GACdwyH,EAAW76H,EAAQ66H,SACnBjW,EAAiB5kH,EAAQ4kH,gBAAkB,EAC3C5jH,EAAShB,EAAQgB,QAAM,MACvBoiK,EACJpjK,EAAQojK,UACPpjK,EAAQipH,SAAOg6C,EAAAC,SAAaG,SAAQ,SAAW,WAC9C/4H,EAActqC,EAAQsqC,aAAW,GAC/Bg5H,EAAWtjK,EAAQsjK,UAAQ,GAC3BzsJ,EAAS7W,EAAQ6W,QAAM,CAAK,GAAI1S,EAAQ3C,EAAO,GAE/C+hK,EACKl+J,MAATm3H,GAAsB9vH,MAAM4B,QAAQkuH,IAAUA,EAAM/9H,OAAS,EACzD+kK,OACSn+J,IAAbw1H,IACiB,iBAARA,GACP39G,OAAOumJ,UAAU5oC,IACjBA,EAAW,GACVnuH,MAAM4B,QAAQusH,IAAaA,EAASp8H,OAAS,GAC5CilK,EACQr+J,MAAZi+J,GACA52J,MAAM4B,QAAQg1J,KAAQn3J,EAAAsB,SACZ61J,EAAQ,eAAcn3J,EAAAsB,SAAc61J,EAAQ,kBAAen3J,EAAAsB,SAC3D61J,EAAQ,aAAYn3J,EAAAsB,SACnB61J,EAAQ,YAAWn3J,EAAAsB,SACnB61J,EAAQ,YAAWn3J,EAAAsB,SACnB61J,EAAQ,iBAIrBh5H,EAAYvkC,MAAI,SAAWC,EAAGC,UACrBA,EAAID,KAGTw9J,GAAuBE,KACTr+J,MAAZw1H,IAEe,iBAARA,GACP39G,OAAOumJ,UAAU5oC,IACjBA,EAAW,GAEXuE,EAAYvE,EACZwE,EAAaxE,GACJnuH,MAAM4B,QAAQusH,IAAaA,EAASp8H,OAAS,KAEjC,GAAnBo8H,EAASp8H,QACO4G,MAAfw1H,EAAS,IAAmB39G,OAAOumJ,UAAU5oC,EAAS,OAEvDuE,EAAYvE,EAAS,GACrBwE,EAAaxE,EAAS,IAED,GAAnBA,EAASp8H,SAETye,OAAOumJ,UAAU5oC,EAAS,KAC1B39G,OAAOumJ,UAAU5oC,EAAS,KAE1BuE,EAAYvE,EAAS,GACrBwE,EAAaxE,EAAS,IAEPx1H,MAAfw1H,EAAS,IACT39G,OAAOumJ,UAAU5oC,EAAS,MAE1BuE,EAAYvE,EAAS,GACrBwE,EAAaxE,EAAS,YAKZx1H,IAAd+5H,QAA0C/5H,IAAfg6H,IAC7BD,EAASrqF,EAAAC,kBACTqqF,EAAUtqF,EAAAC,mBAEc,GAAtB1K,EAAY7rC,eAKLD,EAJTyiB,EAAUxO,KAAK4F,IACb5F,KAAK0X,KAAK1X,KAAKwL,IAAIzc,EAAQ49H,GAAa3sH,KAAKukD,KAC7CvkD,KAAK0X,KAAK1X,KAAKwL,IAAI9Z,EAASk7H,GAAc5sH,KAAKukD,MAE3Bx4D,GAAK,EAAGA,IAC5B8rC,EAAYxjC,KAAK2L,KAAKuX,IAAI,EAAGxrB,aAGzBmlK,EAAiBlxJ,KAAK4F,IAAGxL,MAAR4F,KAAY63B,GAEnCrpB,EAAUxO,KAAK2P,MAAM3P,KAAKwL,IAAI0lJ,GAAkBlxJ,KAAKukD,aAIvDooE,EAAY59H,EACZ69H,EAAal7H,EACbmmC,EAAW,GACPi5H,EAAmB,CAKrB/mC,EAAMz2H,MAAI,SAAWC,EAAGC,UACfD,EAAE,GAAKC,EAAE,MAElBgb,GAAU,MACJ2iJ,EAAiB,OACdplK,EAAI,EAAGA,EAAIg+H,EAAM/9H,OAAQD,IAAC,KAC3B8J,EAAa9G,EAAQg7H,EAAMh+H,GAAG,GAElC8rC,EAAY7rC,OAAS,GACrB6rC,EAAYA,EAAY7rC,OAAS,IAAM6J,EAEvCs7J,EAAkB98J,KAAKtI,IAGzB8rC,EAAYxjC,KAAKwB,GACjB2Y,QAEE2iJ,EAAkBnlK,OAAS,EAAC,IACrBD,EAAI,EAAGA,EAAIolK,EAAkBnlK,OAAQD,IAC5Cg+H,EAAMhuH,OAAOo1J,EAAkBplK,GAAKA,EAAG,QAK3C8rC,EAAYxjC,KAAK,GACjB01H,EAAM11H,KAAI,CAAEtF,EAAO2C,IACnB8c,EAAU,MAIR07B,EAAQ,IAAAknH,EAAAzkK,QAAA,CACZy7H,SAAQ,CAAGuE,EAAWC,GACtBxoH,OAAQA,EACRo8E,OAAMzpF,EAAA4M,WAAaS,GACnByzB,YAAaA,IAuGTw5H,EAAaC,EAAAC,WAAclgK,KAC/B,KAAI27B,EAAAwsB,OACG4uE,GAAY,KAAKz3H,KAAG,SAAW6gK,UAC7BA,EAAOr/C,aAIlBvhH,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtB8zG,wBAAyBl0G,EAAQk0G,wBACjCz3F,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpBqoH,2BAA4B7oH,EAAQ6oH,2BACpC3mG,MAAOliB,EAAQkiB,MACf4mG,UAAWg7C,EACXnnH,SAAUA,EACVioE,eAAgB5kH,EAAQ4kH,eACxB4E,gBAvHmB,SAAahvB,EAAW1jE,EAAYt2B,OACnD0jK,EAAaC,EACXpiK,EAAOy4F,EAAU,QACnBz4F,EAAOkf,QAGLmjJ,EAAQ5pE,EAAU,GACtB6pE,EAAQ7pE,EAAU,GAClBjqF,EAAQ+5B,EAAYvoC,aAEVsD,IAAV++J,QACU/+J,IAAVg/J,QACUh/J,IAAVkL,GACA6zJ,EAAQ,GACR3xJ,KAAK0X,KAAK3oB,EAAQ+O,EAAQ6uH,IAAcglC,GACxCC,EAAQ,GACR5xJ,KAAK0X,KAAKhmB,EAASoM,EAAQ8uH,IAAeglC,OAIxCX,GAA2BF,EAAmB,KAC1Cc,EAAUF,EAAQhlC,EAAY7uH,EAClCg0J,EAAUF,EAAQhlC,EAAa9uH,EAC7Bi0J,EAAUplC,EAAY7uH,EACxBk0J,EAAUplC,EAAa9uH,EACvBm0J,EAAQtlC,EACRulC,EAAQtlC,KACNilC,EAAUE,EAAUhjK,IACtBgjK,EAAUhjK,EAAQ8iK,GAEhBC,EAAUE,EAAUtgK,IACtBsgK,EAAUtgK,EAASogK,GAEjBD,EAAUllC,EAAY7uH,EAAQ/O,IAChCkjK,EAAQjyJ,KAAKqI,OAAOtZ,EAAQ8iK,EAAU/zJ,EAAQ,GAAKA,IAEjDg0J,EAAUllC,EAAa9uH,EAAQpM,IACjCwgK,EAAQlyJ,KAAKqI,OAAO3W,EAASogK,EAAUh0J,EAAQ,GAAKA,IAGzC,GAAX+zJ,GACAE,GAAWhjK,GACA,GAAX+iK,GACAE,GAAWtgK,EAGX+/J,EAAW,gBAEVR,GAAuBv3J,EAAAsB,SACf61J,EAAQ,cAEjBY,EAAcI,EAAO,IAASC,EAAO,IAASC,EAAO,IAASC,qBAC5CnB,EAAQ,eAAe,CAKzCY,EAAW,OAJEvB,EAAkB2B,EAAU9iK,EAAS,KAIvB,IAHlBmhK,EAAkB4B,EAAUpgK,EAAU,KAGP,IAF/Bw+J,EAAkB6B,EAAUhjK,EAAS,KAEO,IAD5CmhK,EAAkB8B,EAAUtgK,EAAU,KAI/C8kH,GAAOg6C,EAAAC,SAAa0B,UAClBlB,IAAuBv3J,EAAAsB,SAAa61J,EAAQ,aAGpCI,GAAuBv3J,EAAAsB,SAAa61J,EAAQ,WACtDa,EAAYO,EAAK,eACCpB,EAAQ,WAC1Ba,EAAS,IAASQ,aACArB,EAAQ,YAC1Ba,EAAYO,EAAK,IAASC,aACRrB,EAAQ,eAC1Ba,EAAS,OAAYxB,EAAiB,IAAMpyJ,IAR5C4zJ,EAAYO,EAAK,IAASC,UAW5BT,EAAW,OACPX,EAAmB,KACfsB,EAAcroC,EAAMz6H,GAAM,GAC9B+iK,EAAetoC,EAAMz6H,GAAM,GAGzBoiK,EAFAl7C,GAAOg6C,EAAAC,SAAa0B,SAClBC,GAAerjK,GAASsjK,GAAgB3gK,EACjC,MAEG0gK,EAAW,IAASC,EAG9BD,GAAerjK,EACR,OAEGqjK,EAAW,SAI3BV,EAAYl7C,GAAOg6C,EAAAC,SAAa0B,SAAQ,MAAQ,cAIlD5B,EAAUkB,EAAW,IAASC,EAAS,MAAWf,EAAO,IAASpiK,KAwBpE8lH,WAAY9mH,EAAQ8mH,oBAMjBnC,WAAa3kH,EAAQ2kH,oBAlSX7hH,EAAAigK,EAAA7gK,GAoSnB6gK,EApSA,sBAsSeD,sbChWZ,MAAA/tH,EAAAj3C,EAAA,+vBAgBGinK,EACG,UADHA,EAEK,YAGXC,EAAA,SAAA9iK,GASK,SACH+iK,EACEpqC,EACArgC,EACAt4E,EACA1G,EACAjb,EACAwoH,EACA1uF,OAPFh3B,EASEnB,EAAAU,KAAAC,KAAM23F,EAAWt4E,EAAO1G,EAAKjb,EAAawoH,EAAkB1uF,IAAWx3B,YAMvEQ,EAAK6hK,cAAgB,KAKrB7hK,EAAK+4H,UAAYvB,WA9BW/3H,EAAAmiK,EAAA/iK,GAqC9B+iK,EAAAliK,UAAAu8E,SAAQ,mBACG4lF,cAAa,OAAAriK,KACRqiK,kBAERlmF,EAAQ98E,EAAAa,UAAMu8E,SAAQ18E,KAAAC,cACnBqf,OAAKukB,EAAArnC,QAAcsnC,OAAM,KAC1Bm0F,EAAQh4H,KAAQu5H,aAClBp9C,EAAMx9E,OAASq5H,EAAS,IAAM77C,EAAM76E,QAAU02H,EAAS,eACpDqqC,cAAgBlmF,EACdA,MAED1yD,EAAOyE,EAAAC,sBAAyB6pG,EAAS,GAAIA,EAAS,WAC5DvuG,EAAQ4F,UAAU8sD,EAAO,EAAG,QACvBkmF,cAAgB54I,EAAQ+F,OACtB/F,EAAQ+F,cAGV2sD,GAGbimF,EAzDA,YAwGAE,EAAA,SAAAjjK,GAGK,SACHkjK,EAAY/qI,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,EAEVhyB,EAAOrI,EAAQqI,KACfg9J,OAC4BhgK,IAAhCrF,EAAQqlK,oBACJrlK,EAAQqlK,oBACRN,EAEAngD,EAAiB5kH,EAAQ4kH,gBAAkB,EAC3Cg6C,EAAav2J,EAAK,GAClBw2J,EAAcx2J,EAAK,GACnBi9J,EAAe,GACfzqC,EAAW76H,EAAQ66H,UAAQ9lF,EAAAC,kBAC7BuwH,EAAiC1qC,EAAWjW,SAExCygD,QACDN,OAEDnG,EAAa2G,GACb1G,EAAc0G,GAEdD,EAAgBx+J,KAAI,CAClB2L,KAAK0X,KAAKy0I,EAAa2G,GACvB9yJ,KAAK0X,KAAK00I,EAAc0G,KAE1BA,GAAkCA,aAGjCR,UACCvjK,EAAQo9J,EACRz6J,EAAS06J,EAEXr9J,EAAQ+jK,GACRphK,EAASohK,GAETD,EAAgBx+J,KAAI,CAClB2L,KAAK0X,KAAK3oB,EAAQ+jK,GAClB9yJ,KAAK0X,KAAKhmB,EAASohK,KAErB/jK,IAAU,EACV2C,IAAW,0BAIN,EAAO,IAIlBmhK,EAAgBx+J,KAAI,CAAE,EAAG,IACzBw+J,EAAgBr3E,kBAEV3jD,EAAW,CAAIs6E,GACf4gD,EAAiB,CAAI,GAClBhnK,EAAI,EAAG6H,EAAKi/J,EAAgB7mK,OAAQD,EAAI6H,EAAI7H,IACnD8rC,EAAYxjC,KAAK89G,GAAkBpmH,GACnCgnK,EAAkB1+J,KAChBw+J,EAAgB9mK,EAAI,GAAG,GAAK8mK,EAAgB9mK,EAAI,GAAG,GACjDgnK,EAAkBhnK,EAAI,IAG5B8rC,EAAY2jD,cAENtxC,EAAQ,IAAAknH,EAAAzkK,QAAA,CACZy7H,SAAUA,EACVhkH,OAAQ7W,EAAQ6W,QAAM,CAAK,GAAIgoJ,EAAaD,EAAY,GACxDt0H,YAAaA,IAGXxpC,EAAMd,EAAQc,IAEhBA,IAC8B,GAA9BA,EAAI8M,QAAO,iBACmB,GAA9B9M,EAAI8M,QAAO,iBAEX9M,GAAG,mCAEC2nH,EAAIC,EAAAC,UAAa7nH,GAEnBs+H,EAAYvE,EAAWjW,MAwCrB4E,EAAed,EAAAe,2BACnBhB,EAAKrlH,KApCJ,SACyBmnB,mBAQdiwE,EAAW1jE,EAAYt2B,MAC1Bg6F,OAGGuiC,EAAaviC,EAAU,GACvBwiC,EAAaxiC,EAAU,GACvByiC,EAAaziC,EAAU,GACvBirE,EACJzoC,EAAaC,EAAaqoC,EAAgBvoC,GAAY,GAGlD3S,EAAY,GACX2S,IACAC,IACAC,YACQwoC,YACF,cANTA,EAAYD,EAAkBzoC,IAAeqC,EAAa,WAQvD70G,EAASC,QAAO,eAAA,SAA0BngB,EAAGmxE,UAC3C4uC,EAAa5uC,YAWxBkqF,EAAmBV,EAAWlhK,KAClC,KAAI27B,EAAAwsB,OACG4uE,EAAWjW,KAGpBvhH,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpBokH,eAAgBA,EAChBiE,2BAA4B7oH,EAAQ6oH,2BACpCC,UAAW48C,EACX/oH,SAAUA,EACV6sE,gBAAiBA,EACjB1C,WAAY9mH,EAAQ8mH,oBAMjBnC,WAAa3kH,EAAQ2kH,eAUpBghD,EAAcn8C,EAJJ7sE,EAASygF,kCAAiC5zH,EAAAmM,UAC9CgnC,EAASrzC,aACnBghC,EAAYA,EAAY7rC,OAAS,IAEU,EAAG,MAC1CugF,EAAK,IAAOzrD,aAClByrD,EAAM3/D,iBAAgB,QACb,WAEL+/G,EAAYvE,OACPx6G,WACLvc,KAAKT,IAET27E,EAAMxjE,IAAMmqJ,WAxKM7iK,EAAAsiK,EAAAljK,GA0KtBkjK,EA1KA,sBA4KeD,2cCzPFjC,kIAAAA,EAAQ,CACnBG,SAAQ,WACRF,SAAQ,WACRyB,SAAQ,YASJgB,EAAmB,GACzBA,EAAoB1C,EAASG,UAAQ,QAC3B,CACNC,SAAQ,GACRz2F,QAAO,GACPg5F,UAAS,mBAEH,CACNvC,SAAQ,+CACRz2F,QAAO,QACPg5F,UAAS,mBAEH,CACNvC,SAAQ,2FASRz2F,QAAO,cACPg5F,UAAS,sCAGbD,EAAoB1C,EAASC,UAAQ,QAC3B,CACNG,SAAQ,GACRz2F,QAAO,QACPg5F,UAAS,oBAEH,CACNvC,SAAQ,+CACRz2F,QAAO,QACPg5F,UAAS,oBAEH,CACNvC,SAAQ,+GAURz2F,QAAO,cACPg5F,UAAS,wBAGbD,EAAoB1C,EAAS0B,UAAQ,QAC3B,CACNtB,SAAQ,GACRz2F,QAAO,QACPg5F,UAAS,oBAEH,CACNvC,SAAQ,6DACRz2F,QAAO,QACPg5F,UAAS,oBAEH,CACNvC,SAAQ,0GAURz2F,QAAO,cACPg5F,UAAS,cAGbD,EAA0B,KAAA,MAClB,CACJtC,SAAQ,GACRz2F,QAAO,GACPg5F,UAAS,SAIPC,EAAmB,+FACnBC,EAAmB,8DACnBC,EAAmB,mFAgJnBC,EAAgB,GACtBA,EAAiB/C,EAASG,mBA/IO6C,OAC3BC,EAAeD,EAASE,kDAEP/gK,IAAjB8gK,IACFA,EAAeP,EAAoB1C,EAASG,UAAkB,SAG9DviK,SACgCuE,IAA9B6gK,EAASG,UAAS,YACdhhK,EACA6gK,EAASG,UAAS,OAAQ77I,QAAO,uBAAA,IACvC84I,SAAU6C,EAAa7C,SACvBz2F,QAAOy5F,EAAAA,EAAA,GACFH,EAAat5F,SAAO,MACQxnE,IAA/B6gK,EAASG,UAAUx5F,QAAqB,GAEpCq5F,EAASG,UAAUx5F,UAEzBg5F,UAASS,EAAAA,EAAA,GACJH,EAAaN,WAAS,MACQxgK,IAAjC6gK,EAASG,UAAUR,UAAuB,GAEtCK,EAASG,UAAUR,YAEzBv7H,YAAa47H,EAASG,UAAUE,cAChC1rC,cACoCx1H,IAAlC6gK,EAASG,UAAUG,gBACoBnhK,IAAnC6gK,EAASG,UAAUI,YAAyB,CACzCP,EAASG,UAAUG,WAAYN,EAASG,UAAUI,cAClDP,EAASG,UAAUG,WAAYN,EAASG,UAAUG,YACnBnhK,MAAlC6gK,EAASG,UAAUI,YAAwB,CAC1CP,EAASG,UAAUI,YAAaP,EAASG,UAAUI,kBACpDphK,IAgHV4gK,EAAiB/C,EAASC,mBA5GO+C,OACzBC,EAAeD,EAASE,sCAC5BM,EACEh6J,MAAM4B,QAAQ43J,EAASG,UAAUM,UACjCT,EAASG,UAAUM,QAAQloK,OAAS,EACtCmoK,EACEF,GAAqBR,EAASG,UAAUM,QAAQ,GAAGrD,SAC/C4C,EAASG,UAAUM,QAAQ,GAAGrD,SAAQ,GAE5CuD,EACEH,GAAqBR,EAASG,UAAUM,QAAQ,GAAG95F,QAC/Cq5F,EAASG,UAAUM,QAAQ,GAAG95F,QAAO,GAE3Ci6F,EACEJ,GAAqBR,EAASG,UAAUM,QAAQ,GAAGd,UAC/CK,EAASG,UAAUM,QAAQ,GAAGd,UAAS,UAG7C/kK,IAAKolK,EAASG,UAAS,OAAQ77I,QAAO,uBAAA,IACtCgyG,WAC+Bn3H,IAA7B6gK,EAASG,UAAU7pC,WACfn3H,EACA6gK,EAASG,UAAU7pC,MAAMp5H,KAAG,SAAWiF,UAC7BA,EAAK7G,MAAO6G,EAAKlE,WAEjC02H,cAC+Bx1H,IAA7B6gK,EAASG,UAAU9rE,WACfl1F,EAAS,CAEP6gK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,UAC9BA,EAAK96B,SACX,GACH0kK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,eACdj3B,IAAhBi3B,EAAKn4B,OAAuBm4B,EAAK96B,MAAQ86B,EAAKn4B,UACpD,IAEXmmC,iBAC+BjlC,IAA7B6gK,EAASG,UAAU9rE,WACfl1F,EACA6gK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,UAC9BA,EAAKyqI,gBACX,GACTzD,SAAQgD,EAAAA,EAAA,GAAMH,EAAa7C,UAAasD,GACxC/5F,QAAOy5F,EAAAA,EAAA,GAAMH,EAAat5F,SAAYg6F,GACtChB,UAASS,EAAAA,EAAA,GAAMH,EAAaN,WAAciB,KAiE9Cb,EAAiB/C,EAAS0B,mBA7DOsB,OACzBC,EAAeD,EAASE,sCAC5Bv5F,OACsCxnE,IAApC6gK,EAASG,UAAUW,aACfb,EAAat5F,QACdy5F,EAAAA,EAAA,GAAKH,EAAat5F,SAAYq5F,EAASG,UAAUW,cACtDC,OAC0C5hK,IAAxC6gK,EAASG,UAAUa,kBACnBx6J,MAAM4B,QAAQ43J,EAASG,UAAUa,mBACjChB,EAASG,UAAUa,iBAAiBzoK,OAAS,EACzCynK,EAASG,UAAUa,iBAChBn5H,QAAM,SAAW/sC,yCACuBA,MAExC4pI,QAAM,SAAWu8B,EAAKnmK,eACNqE,IAAR8hK,GAAiBh7J,EAAAsB,SAAao/D,EAAS7rE,GAC1CA,EACAmmK,SACH9hK,QACLA,SAENvE,IAAKolK,EAASG,UAAc,GAC5B7pC,WAC+Bn3H,IAA7B6gK,EAASG,UAAU7pC,WACfn3H,EACA6gK,EAASG,UAAU7pC,MAAMp5H,KAAG,SAAWiF,UAC7BA,EAAK7G,MAAO6G,EAAKlE,WAEjC02H,cAC+Bx1H,IAA7B6gK,EAASG,UAAU9rE,WACfl1F,EAAS,CAEP6gK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,UAC9BA,EAAK96B,SACX,GACH0kK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,UAC9BA,EAAKn4B,UACX,IAEXmmC,iBAC+BjlC,IAA7B6gK,EAASG,UAAU9rE,WACfl1F,EACA6gK,EAASG,UAAU9rE,MAAMn3F,KAAG,SAAWk5B,UAC9BA,EAAKyqI,gBACX,GACTzD,cACuCj+J,IAArC6gK,EAASG,UAAUe,cACfjB,EAAa7C,SACdgD,EAAAA,EAAA,GAAKH,EAAa7C,UAAa4C,EAASG,UAAUe,eACvDv6F,QAASA,EACTg5F,eACwCxgK,IAAtC6gK,EAASG,UAAUgB,eACflB,EAAaN,UACdS,EAAAA,EAAA,GAAKH,EAAaN,WAAcK,EAASG,UAAUgB,gBACxDJ,gBAAiBA,IAelB,IACHK,EAAA,WAIK,SACHC,EAAYlB,QACLmB,aAAanB,UAQpBkB,EAAAxkK,UAAAykK,aAAY,SAACnB,GACqBxjK,KACzBwjK,UADa,iBAATA,EACQroK,KAAKC,MAAMooK,GAEXA,GAQrBkB,EAAAxkK,UAAA0kK,mBAAkB,mBACOpiK,SAAdghK,eAGL/5I,EAAOzpB,KAAQwjK,UAAS,aAAW,gBACrB,iBAAP/5I,IACTA,EAAO,CAAIA,YAEJ9tB,EAAI,EAAGA,EAAI8tB,EAAQ7tB,OAAQD,IAAC,OAC3B8tB,EAAQ9tB,2HAGL0kK,EAASG,8DAETH,EAASC,8DAETD,EAAS0B,qCAIT8C,mCAAmCxE,EAASG,WAAQxgK,KACpDwjK,UAAUsB,WAAU,OAElBzE,EAASG,mBAMjB,EAAO,MAQhBkE,EAAAxkK,UAAA2kK,mCAAkC,SAACz+C,WACV5jH,SAAdghK,gBAAsDhhK,IAA/BxC,KAASwjK,UAAUM,oBAGnCthK,IAAZ4jH,IACFA,EAAOpmH,KAAQ4kK,sBAETx+C,QACDi6C,EAASG,YACRyC,EAAoBxoJ,KAAIza,KAAMwjK,UAAUM,SAAO,OAAA9jK,KACrCwjK,UAAUM,mBAGrBzD,EAAS0B,YACRoB,EAAoB1oJ,KAAIza,KAAMwjK,UAAUM,SAAO,OAAA9jK,KACrCwjK,UAAUM,mBAGrBzD,EAASC,YAEmB,sBAAjBkD,UAAUM,SACtBZ,EAAoBzoJ,KAAIza,KAAMwjK,UAAUM,SAAO,OAAA9jK,KAEnCwjK,UAAUM,WAGtBj6J,MAAM4B,QAAOzL,KAAMwjK,UAAUM,UAAO9jK,KAC/BwjK,UAAUM,QAAQloK,OAAS,GACD,iBADEoE,KACrBwjK,UAAUM,QAAQ,IAC9BZ,EAAoBzoJ,KAAIza,KAAMwjK,UAAUM,QAAQ,IAAC,OAAA9jK,KAErCwjK,UAAUM,QAAQ,KAWtCY,EAAAxkK,UAAA6kK,8BAA6B,SAAC3+C,OACtB4+C,EAAehlK,KAAQ6kK,mCAAmCz+C,WACxC5jH,IAApBwiK,OAGEt6B,EAAQs6B,EAAgB56I,MAAK,kCAC5BvgB,MAAM4B,QAAQi/H,GAASA,EAAM,GAAG/iH,QAAO,QAAQ,SAAQnlB,IAOhEkiK,EAAAxkK,UAAAqjK,oCAAmC,mBACV/gK,SAAdghK,eAGHp9C,EAAOpmH,KAAQ4kK,qBACfl6B,EAAK1qI,KAAQ+kK,8BAA8B3+C,eACnC5jH,IAAVkoI,EACKq4B,EAA0B,KAAQ,KAEpCA,EAAoB38C,GAASskB,KAQtCg6B,EAAAxkK,UAAA+kK,qBAAoB,SAACC,OACb/nK,EAAU+nK,GAAoB,GAClC9+C,EAAOpmH,KAAQ4kK,6BACDpiK,IAAZ4jH,OAGE++C,OACQ3iK,IAAZ4jH,OAAwB5jH,EAAY4gK,EAAiBh9C,GAAOpmH,cACzCwC,IAAjB2iK,SAIFlnK,IAAKknK,EAAalnK,IAClBmoH,QAASA,EACT5gH,KAAI,MAAQg+J,UAAU7kK,WAAY6kK,UAAUliK,QAC5Cq4H,MAAOwrC,EAAaxrC,MACpBx7H,YACqBqE,IAAnBrF,EAAQgB,QAAoBmL,EAAAsB,SACnBu6J,EAAan7F,QAAS7sE,EAAQgB,QACnChB,EAAQgB,YACyBqE,IAAjC2iK,EAAaf,gBACbe,EAAaf,gBAAe,MAElC3D,SAAU0E,EAAa1E,SACvBF,QACEpjK,EAAQojK,SAAOj3J,EAAAsB,SAAau6J,EAAanC,UAAW7lK,EAAQojK,SACxDpjK,EAAQojK,QAAOj3J,EAAAsB,SACNu6J,EAAanC,UAAS,UAAU,SACjC,UAEdv7H,YAAa59B,MAAM4B,QAAQ05J,EAAa19H,aACpC09H,EAAa19H,YAAYvkC,MAAI,SAAWC,EAAGC,UAClCA,EAAID,UAEbX,EACJw1H,SAAUmtC,EAAantC,YAG7B0sC,EA7KA,aA+KeD,8PChdFW,2CAyOVl8J,EAAAF,OAAAzN,EAAA,4BAAA,IACa8pK,IAzPb,MAAA9kJ,EAAAtlB,EAAA,8uBAeUmqK,EAAoB,CAM/BE,eAAc,iBAOdC,aAAY,eAOZC,eAAc,kBAQhBC,EAAA,SAAApmK,GAIK,SACHqmK,EAAYxjK,EAAMi6E,OAAlB37E,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAK27E,MAAQA,WAbqBl8E,EAAAylK,EAAArmK,GAetCqmK,EAfA,YAmCAC,EAAA,SAAAtmK,GAGK,SACHumK,EAAYzoK,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBI,WAAYR,EAAQQ,WACpB0hB,MAAOliB,EAAQkiB,qBAOjB7e,EAAKgnC,kBACqBhlC,IAAxBrF,EAAQsqC,YAA4BtqC,EAAQsqC,YAAc,KAM5DjnC,EAAKqlK,kBAAoB,KAMzBrlK,EAAKslK,qBAAuB,EAM5BtlK,EAAK8pH,iBACwB,IAA3BntH,EAAQ4oH,eAAwBwE,EAAAC,8BAA8BhoH,WAnC1CvC,EAAA2lK,EAAAvmK,GAyCxBumK,EAAA1lK,UAAAmsC,eAAc,uBACA7E,cAMdo+H,EAAA1lK,UAAAqxG,kBAAiB,uBACH+Y,iBAQds7C,EAAA1lK,UAAA6lK,sBAAqB,SAACtgK,WACX+hC,aAAY,KACbj7B,EAAGjD,EAAA0B,kBAAAhL,KAA0BwnC,aAAc/hC,EAAY,GAC7DA,EAAUzF,KAAQwnC,aAAaj7B,UAE1B9G,GAUTmgK,EAAA1lK,UAAAu8E,SAAQ,SAACzoE,EAAQvO,EAAYwuB,EAAYt2B,OACjC+5C,EAAgB13C,KAAQ24B,iDAG3B+e,GACA/5C,IAAUs7B,EAAAub,WACAkD,EAAkB/5C,YAOpBkoK,kBAAiB,SAEjBC,sBAAoB9lK,KAASoiB,eAAW6W,EAAAub,WAAAx0C,KAC7B6lK,kBAAkBltI,gBAAiBh7B,IAAUqC,KACxD6lK,kBAAkBr9H,iBAAmB/iC,GAAUkB,EAAAoD,OAAA/J,KACxC6lK,kBAAkBp/J,YAAauN,GAAM,OAAAhU,KAErC6lK,uBAETA,kBAAkBv9J,eAClBu9J,kBAAoB,iBAGtBA,kBAAiB,IAAAG,EAAAzpK,QACpBm7C,EACA/5C,EACAqW,EACAvO,EACAwuB,EAAU,SACA/f,EAAQ+xJ,EAAY/5C,eAChBg6C,iBACVhyJ,EACA+xJ,EACA/5C,EACAx0E,IAEFz2C,KAAIjB,MAAAA,KACDsqH,sBAEFw7C,qBAAoB9lK,KAAQoiB,mBAErByjJ,yBApCRnuH,IACF/5C,EAAa+5C,QAEHwuH,iBAAiBlyJ,EAAQvO,EAAYwuB,EAAYt2B,IA8CjEioK,EAAA1lK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,wBASjDioK,EAAA1lK,UAAAimK,kBAAiB,SAAC5iJ,OACV44D,EAAsD54D,EAAM1kB,cAC1Ds9E,EAAM7+D,2BACIsI,aACTkT,SAAU,OACVr2B,cAAa,IACZgjK,EAAiBL,EAAqBE,eAAgBnpF,yBAG9Ct4C,YACT/K,SAAU,OACVr2B,cAAa,IACZgjK,EAAiBL,EAAqBG,aAAcppF,yBAG5C93D,WACTyU,SAAU,OACVr2B,cAAa,IACZgjK,EAAiBL,EAAqBI,eAAgBrpF,MAOpEypF,EAnKA,qBA2KgBP,EAAyBlpF,EAAOxjE,GACIwjE,EAAMM,WAAY9jE,IAAMA,YAG7DgtJ,+ZC7PZ,MAAAzzH,EAAAj3C,EAAA,4sBAuBHmrK,EAAA,SAAA/mK,GAUK,SACHgnK,EACEjvH,EACAs2E,EACAa,EACAzkF,EACA7V,EACAqyI,EACAx4C,OAPFttH,EAAAR,KASQyuH,EAAkBr3E,EAAW3wC,YAC7B+nH,EAAkBd,EAAWjnH,YAE7BioH,EAAsBF,EAAe7nH,EAAAyM,gBACvBm7G,EAAcC,GAC9BD,EAEE3kF,EAAYjjC,EAAAmM,UAAa47G,GACzB7kF,EAAgB+kF,EAAAsE,0BACpB97E,EACAs2E,EACA9jF,EACAE,GAGIilF,EAAsB78E,EAAA88E,gBAEtByE,EAAa,IAAAvE,EAAA3yH,QACjB66C,EACAs2E,EACAgB,EACAD,EACA5kF,EAAmBklF,EACnBjlF,GAIIy8H,EAAcD,EADC7yC,EAAcrE,wBAGjCvlF,EACA5V,GAEI5U,EAAQknJ,EAAWxuE,EAAAx7F,QAAc4nC,KAAI4zD,EAAAx7F,QAAcunC,MACnD0iI,EAAmBD,EAAcA,EAAYvnF,gBAAkB,SAErEx+E,EAAAnB,EAAAU,KAAAC,KAAMuuH,EAAczkF,EAAkB08H,EAAkBnnJ,IAAKrf,MAMxDqwH,YAAc3C,EAMnBltH,EAAKiwH,iBAAmBhC,EAMxBjuH,EAAKyuH,eAAiBwE,EAMtBjzH,EAAKsmC,kBAAoBgD,EAMzBtpC,EAAKimK,cAAgBl4C,EAMrB/tH,EAAKkmK,aAAeH,EAMpB/lK,EAAKmmK,kBAAoBH,EAMzBhmK,EAAK8pH,gBAAkBwD,EAMvBttH,EAAKw9E,QAAU,KAMfx9E,EAAKomK,mBAAqB,cAnHJ3mK,EAAAomK,EAAAhnK,GAyHxBgnK,EAAAnmK,UAAAwC,gBAAe,gBACJ2c,OAAK04E,EAAAx7F,QAAeqpB,SAAO5lB,KAC7B6mK,kBAEPxnK,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAMvBqmK,EAAAnmK,UAAAu8E,SAAQ,uBACMuB,SAMdqoF,EAAAnmK,UAAAy4B,cAAa,uBACC03F,aAMdg2C,EAAAnmK,UAAAsvH,WAAU,eACF7rH,EAAW3D,KAAQ0mK,aAAappJ,cAClC3Z,GAAWo0F,EAAAx7F,QAAesnC,OAAM,KAC5BllC,EAAKgI,EAAAC,SAAA5G,KAAiBymK,eAAazmK,KAAS8mC,kBAC5CxlC,EAAMqF,EAAAuM,UAAAlT,KAAkBymK,eAAazmK,KAAS8mC,uBAE/Ck3C,QAAO4wC,EAAA5qH,OACVrF,EACA2C,EAAMtB,KACD2mK,kBAAiB3mK,KACjB0mK,aAAal+H,gBAAaxoC,KAC1BywH,iBAAgBzwH,KAChB8mC,kBAAiB9mC,KACjBymK,cAAazmK,KACbivH,eAAc,EAGfj7G,OAAMhU,KAAO0mK,aAAajgK,YAC1B01E,MAAKn8E,KAAO0mK,aAAajqF,aAG7B,OACAj6E,EAASxC,KACJsqH,sBAGJjrG,MAAQ1b,OACR6Z,WAMP6oJ,EAAAnmK,UAAAkkC,KAAI,mBACO/kB,OAAK04E,EAAAx7F,QAAe4nC,KAAI,MAC1B9kB,MAAK04E,EAAAx7F,QAAcqpB,aACnBpI,cAEC7Z,EAAW3D,KAAQ0mK,aAAappJ,WAClC3Z,GAAWo0F,EAAAx7F,QAAesnC,QAAUlgC,GAAWo0F,EAAAx7F,QAAe8nB,MAAKrkB,KAChEwvH,mBAEAo3C,mBAAkBlmK,EAAAC,OAAAX,KAChB0mK,aAAY3jK,EAAAxG,QACPkhB,QAAM,SACNnO,OACFw3J,EAAW9mK,KAAQ0mK,aAAappJ,WAEpCwpJ,GAAW/uE,EAAAx7F,QAAesnC,QAC1BijI,GAAW/uE,EAAAx7F,QAAe8nB,aAErBwiJ,uBACAr3C,2BAKNk3C,aAAatiI,UAQxBiiI,EAAAnmK,UAAA2mK,gBAAe,gCAE4CD,yBAEpDA,mBAAqB,MAE9BP,EAxNA,sBA0NeD,+gCCjMfW,EAAA,SAAA1nK,GAGK,SACH2nK,EAAYxvI,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBwoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpB8pC,YAAatqC,EAAQsqC,qBAOlBk/D,kBACqBnkG,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAM5D8C,EAAKu6J,YAA2Bv4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,MAMpDt6J,EAAKqrG,KAAO1uG,EAAQc,IAMpBuC,EAAKmoG,wBAC2BnmG,IAA9BrF,EAAQurG,kBACJvrG,EAAQurG,kBAAiBT,EAAAo9D,yBAO/B7kK,EAAKymK,QAAU9pK,EAAQy+H,QAAM,GAM7Bp7H,EAAK07E,OAAS,KAMd17E,EAAK+9E,WAAU,CAAI,EAAG,GAMtB/9E,EAAK2iF,kBAAoB,EAMzB3iF,EAAK0mK,YAA2B1kK,IAAlBrF,EAAQsyC,MAAsBtyC,EAAQsyC,MAAQ,aAtElCxvC,EAAA+mK,EAAA3nK,GA+E5B2nK,EAAA9mK,UAAAinK,UAAS,uBACKF,SAUdD,EAAA9mK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,WAC7B6E,SAATqpG,KAAkB,OAClB,KAGTpmG,EAAUzF,KAAQ+lK,sBAAsBtgK,GACxCwuB,EAAUj0B,KAAQ+6J,OAAS9mI,EAAa,MAElCkoD,EAAKn8E,KAAQk8E,UAEjBC,GAAKn8E,KACAmjF,mBAAiBnjF,KAASoiB,eAC/B+5D,EAAM3zC,iBAAmB/iC,GACzB02E,EAAM6C,iBAAmB/qD,GAAUttB,EAAA+K,eACpByqE,EAAM11E,YAAauN,GAAM,OAEjCmoE,MAGHy/C,EAAM,GACP,eACK,qBACO,YAEVA,EAAM57H,KAAOinK,aAGdt4H,IADN36B,EAASA,EAAO3N,SACQ,GAAK2N,EAAO,IAAM,EACpC46B,GAAW56B,EAAO,GAAKA,EAAO,IAAM,KACvB,QAAVkzJ,OAAW,KACZ9wE,EAASp2F,KAASknK,OAAMvgK,EAAAC,SAAYoN,GAAW,EAC/CqiF,EAAUr2F,KAASknK,OAAMvgK,EAAAuM,UAAac,GAAW,EACvDA,EAAO,GAAK26B,EAAUynD,EACtBpiF,EAAO,GAAK46B,EAAUynD,EACtBriF,EAAO,GAAK26B,EAAUynD,EACtBpiF,EAAO,GAAK46B,EAAUynD,MAGlB+wE,EAAkB3hK,EAAawuB,EAG/Bt1B,EAAQiR,KAAK0X,KAAI3gB,EAAAC,SAAUoN,GAAUozJ,GACrC9lK,EAASsO,KAAK0X,KAAI3gB,EAAAuM,UAAWc,GAAUozJ,GAG7CpzJ,EAAO,GAAK26B,EAAWy4H,EAAkBzoK,EAAS,EAClDqV,EAAO,GAAK26B,EAAWy4H,EAAkBzoK,EAAS,EAClDqV,EAAO,GAAK46B,EAAWw4H,EAAkB9lK,EAAU,EACnD0S,EAAO,GAAK46B,EAAWw4H,EAAkB9lK,EAAU,OAE9Ci9E,WAAW,GAAK5/E,OAChB4/E,WAAW,GAAKj9E,MAEfrD,EAAG+B,KAAQqnK,eACfrzJ,EAAMhU,KACDu+E,WACLtqD,EACAt2B,EACAi+H,eAGG1/C,OAAM,IAAAorF,EAAA/qK,QACTyX,EACAvO,EACAwuB,EACAh2B,EAAG+B,KACE2mG,aAAY3mG,KACZ2oG,yBAGFxlB,kBAAiBnjF,KAAQoiB,mBAEzB85D,OAAO1/D,iBAAgBzZ,EAAAxG,QAChBkhB,OAAMzd,KACXmmK,kBAAkBllK,KAAIjB,YAGjBk8E,QAQd8qF,EAAA9mK,UAAAqnK,qBAAoB,uBACN5+D,oBAYdq+D,EAAA9mK,UAAAmnK,eAAc,SAACrzJ,EAAQxO,EAAMyuB,EAAYt2B,EAAYi+H,OAE7C4rC,EAAO7pK,EAAW43C,UAAUpkC,MAAK,KAAMutB,MAE7Ck9F,EAAa,KAAIp2H,EAAK,GAAC,IAAUA,EAAK,GACtCo2H,EAAa,KAAI5nH,EAAOxD,KAAI,KAC5BorH,EAAe,OAAI4rC,EACnB5rC,EAAgB,QAAI4rC,EACpB5rC,EAAY,IAAIhsH,KAAK2P,MAAM,GAAK0U,OAE1Bh2B,EAAG+B,KAAQ6rG,KAEX47D,EAAcxpK,EACjB0pB,QAAO,gBAAA,oBACPA,QAAO,kBAAA,kCACN8/I,GAAexpK,GAAGkQ,EAAAsC,QACb,EAAO,mBAEIg3J,EAAa7rC,IAQnCorC,EAAA9mK,UAAAovG,OAAM,uBACQzD,MAQdm7D,EAAA9mK,UAAAwnK,qBAAoB,SAACh/D,QACdxsB,OAAS,UACTysB,mBAAqBD,OACrBlrF,WAQPwpJ,EAAA9mK,UAAAowG,OAAM,SAACryG,GACDA,GAAG+B,KAAS6rG,YACTA,KAAO5tG,OACPi+E,OAAS,UACT1+D,YASTwpJ,EAAA9mK,UAAAynK,aAAY,SAAC/rC,iBACCqrC,QAASrrC,QAChB1/C,OAAS,UACT1+D,WAETwpJ,EA5PA,sBA8PeD,+3BC5Pfa,EAAA,SAAAvoK,GAGK,SACHwoK,EAAYrwI,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBwoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpB8pC,YAAatqC,EAAQsqC,YACrBpoB,MAAOliB,EAAQkiB,eAOZyoJ,gBAAkB3qK,EAAQ4qK,eAM/BvnK,EAAKw9E,QAAU,KAMfx9E,EAAK2iF,kBAAoB,EAMzB3iF,EAAK0mK,YAA2B1kK,IAAlBrF,EAAQsyC,MAAsBtyC,EAAQsyC,MAAQ,aArChCxvC,EAAA4nK,EAAAxoK,GA+C9BwoK,EAAA3nK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,GAC/C8H,EAAUzF,KAAQ+lK,sBAAsBtgK,OAEpC+pB,EAAMxvB,KAAQg+E,WAEhBxuD,GAAMxvB,KACDmjF,mBAAiBnjF,KAASoiB,eAC/BoN,EAAOgZ,iBAAmB/iC,GAC1B+pB,EAAOwvD,iBAAmB/qD,GAAUttB,EAAA+K,eACrB8d,EAAO/oB,YAAauN,GAAM,OAElCwb,EAGTxb,EAASA,EAAO3N,0BACA2N,EAAMhU,KAAOknK,YAGvB1hK,EAAI,CAFCmB,EAAAC,SAAYoN,GAAUvO,EAEXwuB,EADVttB,EAAAuM,UAAac,GAAUvO,EACQwuB,GAErC+zI,EAAahoK,KAAQ8nK,gBAAgB/nK,KAAIC,KAE7CgU,EACAvO,EACAwuB,EACAzuB,EACA7H,UAEEqqK,IACFx4I,EAAM,IAAAy4I,EAAA1rK,QAAmByX,EAAQvO,EAAYwuB,EAAY+zI,SAEtDhqF,QAAUxuD,OACV2zD,kBAAiBnjF,KAAQoiB,cAEvBoN,GAEXq4I,EAnFA,sBAqFeD,iPCvIZ,MAAAM,EAAAjtK,EAAA,uhBAaHktK,EAAA,SAAA9oK,GAQK,SACH+oK,EAAYp0J,EAAQvO,EAAYwuB,EAAYzE,EAAQ64I,OAApD7nK,EAAAR,KACQqf,OACW7c,IAAf6lK,EAAwBtwE,EAAAx7F,QAAc4nC,KAAI4zD,EAAAx7F,QAAcsnC,cAE1DrjC,EAAAnB,EAAAU,KAAAC,KAAMgU,EAAQvO,EAAYwuB,EAAY5U,IAAKrf,MAOtC2rG,aAAyBnpG,IAAf6lK,EAA2BA,EAAa,KAMvD7nK,EAAKw9E,QAAUxuD,EAMfhvB,EAAK8nK,OAAS,cAhCQroK,EAAAmoK,EAAA/oK,GAuCxB+oK,EAAAloK,UAAAqoK,SAAQ,uBACMD,QAQdF,EAAAloK,UAAAsoK,YAAW,SAACtxE,GACNA,QACGoxE,OAASpxE,OACT73E,MAAK04E,EAAAx7F,QAAc8nB,YAEnBhF,MAAK04E,EAAAx7F,QAAcsnC,YAErBrmB,WAMP4qJ,EAAAloK,UAAAkkC,KAAI,gBACO/kB,OAAK04E,EAAAx7F,QAAe4nC,YACtB9kB,MAAK04E,EAAAx7F,QAAcqpB,aACnBpI,eACAmuF,QAAO3rG,KAAMwoK,YAAYvnK,KAAIjB,SAOtCooK,EAAAloK,UAAAu8E,SAAQ,uBACMuB,SAEhBoqF,EA3EA,sBA6EeD,+1BC/CfM,EAAA,SAAAppK,GAGK,SACHqpK,EAAYvrK,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACE+lH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpB8pC,YAAatqC,EAAQsqC,2BAOvBjnC,EAAKmmG,kBACqBnkG,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAM5D8C,EAAKmoK,iBACoBnmK,IAAvBrF,EAAQyrK,WAA2BzrK,EAAQyrK,WAAa,GAM1DpoK,EAAKymK,QAAU9pK,EAAQy+H,QAAM,GAM7Bp7H,EAAKqrG,KAAO1uG,EAAQc,IAMpBuC,EAAKmoG,wBAC2BnmG,IAA9BrF,EAAQurG,kBACJvrG,EAAQurG,kBAAiBT,EAAAo9D,yBAO/B7kK,EAAKu6J,YAA2Bv4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,MAMpDt6J,EAAKg5C,oBACuBh3C,IAA1BrF,EAAQ84C,cAA8B94C,EAAQ84C,cAAgB,EAMhEz1C,EAAK0mK,YAA2B1kK,IAAlBrF,EAAQsyC,MAAsBtyC,EAAQsyC,MAAQ,EAM5DjvC,EAAKqoK,iBACoBrmK,IAAvBrF,EAAQ2rK,YAA2B3rK,EAAQ2rK,WAM7CtoK,EAAK07E,OAAS,KAMd17E,EAAK2iF,kBAAoB,WAlFDljF,EAAAyoK,EAAArpK,GA2F1BqpK,EAAAxoK,UAAAinK,UAAS,uBACKF,SAUdyB,EAAAxoK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,GAC/C8H,EAAUzF,KAAQ+lK,sBAAsBtgK,GACxCwuB,EAAUj0B,KAAQ+6J,OAAS9mI,EAAa,MAEpCkoD,EAAKn8E,KAAQk8E,UAEfC,GAAKn8E,KACAmjF,mBAAiBnjF,KAASoiB,eAC/B+5D,EAAM3zC,iBAAmB/iC,GACzB02E,EAAM6C,iBAAmB/qD,GAAUttB,EAAA+K,eACpByqE,EAAM11E,YAAauN,GAAM,OAEjCmoE,EAGU,QAAV+qF,SACPlzJ,EAASA,EAAO3N,0BACA2N,EAAMhU,KAAOknK,aAIzB1hK,EAAI,CAFCmB,EAAAC,SAAYoN,GAAUvO,EAEXwuB,EADVttB,EAAAuM,UAAac,GAAUvO,EACQwuB,WAEzBzxB,SAATqpG,KAAkB,KACnBwwD,EAAQr8J,KAAQsvG,OAAMtvG,KACrB6rG,KAAI7rG,KACJinK,QACLjzJ,EACAxO,EACA7H,IAEFw+E,EAAK,IAAAmrF,EAAA/qK,QACHyX,EACAvO,EACAwuB,EACAooI,EAAQr8J,KACH2mG,aAAY3mG,KACZ2oG,qBAEDnsF,iBAAgBzZ,EAAAxG,QACVkhB,OAAMzd,KACXmmK,kBAAkBllK,KAAIjB,YAG7Bm8E,EAAQ,iBAELD,OAASC,OACTgH,kBAAiBnjF,KAAQoiB,cAEvB+5D,GAQTusF,EAAAxoK,UAAAqnK,qBAAoB,uBACN5+D,oBAQd+/D,EAAAxoK,UAAAynK,aAAY,SAAC/rC,iBACCqrC,QAASrrC,QAChBp+G,WAWPkrJ,EAAAxoK,UAAAovG,OAAM,SAAC6wD,EAASvkC,EAAQ5nH,EAAQxO,EAAM7H,OAC9B+P,EAuCP,SACesG,EAAQxO,EAAMywC,EAAe8iB,OACvCgwG,EAAIpiK,EAAAC,SAAYoN,GAChBg1J,EAAIriK,EAAAuM,UAAac,GACjBi1J,EAAOzjK,EAAK,GACZ0jK,EAAO1jK,EAAK,GACZ2jK,EAAM,MAASpwG,SACjBmwG,EAAOH,EAAOE,EAAOD,EACfD,EAAO9yH,GAAkBgzH,EAAOE,GAEhCH,EAAO/yH,GAAkBizH,EAAOC,GAjD1BxrF,CAAS3pE,EAAQxO,EAAIxF,KAAOw5C,eAAcx5C,KAAO2oK,aACzD3pK,EAAM2H,EAAAmM,UAAakB,GACnBo1J,EAAU,WACHppK,KAAO6oK,YAAW,4BACE,sBAEtB,eACD,iBACK,sCACP,kBACS7oK,KAAO2oK,4BACH/4J,KAAK2P,MAAM/Z,EAAK,qBACfoK,KAAK2P,MAAM/Z,EAAK,iBACpBkI,iBACE1O,EAAO,kBACPA,EAAO,oBAEpBoqK,EAAYxtC,kBACCukC,EAASiJ,IAQ/BV,EAAAxoK,UAAAwnK,qBAAoB,SAACh/D,QACdxsB,OAAS,UACTysB,mBAAqBD,OACrBlrF,WAETkrJ,EArNA,sBA2OeD,u/BCtPfY,EAAA,SAAAhqK,GAGK,SACHiqK,EAAYnsK,OAAZqD,EAAAR,KACQtC,OACoB8E,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAEJgrG,OACtBlmG,IAA9BrF,EAAQurG,kBACJvrG,EAAQurG,kBAAiBT,EAAAo9D,gCAGjC7kK,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBwoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAUs7B,EAAA98B,IAAgBgB,EAAQQ,qBAO/BkuG,KAAO1uG,EAAQc,IAMpBuC,EAAK+oK,aAAepsK,EAAQqsK,YAM5BhpK,EAAK07E,OAAM,IAAAorF,EAAA/qK,QACTiE,EAAK+oK,kBACL/mK,EACA,EACAhC,EAAKqrG,KACLnuG,EACAgrG,GAOFloG,EAAK+9E,WAAaphF,EAAQmjF,UAAYnjF,EAAQmjF,UAAY,KAE1D9/E,EAAK07E,OAAO1/D,iBAAgBzZ,EAAAxG,QAChBkhB,OACVjd,EAAK2lK,kBAAkBllK,KAAKT,aApDbP,EAAAqpK,EAAAjqK,GA6DnBiqK,EAAAppK,UAAAupK,eAAc,uBACAF,cAUdD,EAAAppK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,uBAChCqW,EAAMhU,KAAOk8E,OAAOz1E,aAASzG,KAC9Bk8E,OAEP,MAQTotF,EAAAppK,UAAAovG,OAAM,uBACQzD,MAMdy9D,EAAAppK,UAAAimK,kBAAiB,SAACroJ,WACPo+D,OAAO5+D,YAAQy6E,EAAAx7F,QAAiBsnC,OAAM,KACvC2lI,EAAWxpK,KAAQk8E,OAAOz1E,YAC1B01E,EAAKn8E,KAAQk8E,OAAOO,WACtBs/E,OAAU,EAAEC,OAAW,OAClBz9E,YACPw9E,EAAU/7J,KAAQu+E,WAAW,GAC7By9E,EAAWh8J,KAAQu+E,WAAW,KAE9Bw9E,EAAa5/E,EAAMx9E,MACnBq9J,EAAc7/E,EAAM76E,YAEhBmE,EAAUkB,EAAAuM,UAAas2J,GAAexN,EACtC0N,EAAc95J,KAAK0X,KAAI3gB,EAAAC,SAAU4iK,GAAe/jK,MAClDikK,GAAe3N,EAAU,KACrBtyI,EAAOyE,EAAAC,sBAAyBu7I,EAAa1N,YAC5CvyI,EAAOzpB,KAAOuxG,yBACf/hF,EAAS/F,EAAQ+F,OACvB/F,EAAQ4F,UACN8sD,EACA,EACA,EACA4/E,EACAC,EACA,EACA,EACAxsI,EAAO7wB,MACP6wB,EAAOluB,aAEJ46E,OAAOa,SAASvtD,IAGzBnwB,EAAAa,UAAMimK,kBAAiBpmK,KAAAC,KAAC8d,IAE5BwrJ,EA7HA,sBA+HeD,ynCCrITM,EAAyB,CAAI,IAAK,KAkCxCC,EAAA,SAAAvqK,GAGK,SACHwqK,EAAYryI,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBwoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpB8pC,YAAatqC,EAAQsqC,qBAOlBk/D,kBACqBnkG,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAc,KAM5D8C,EAAKqrG,KAAO1uG,EAAQc,IAMpBuC,EAAKmoG,wBAC2BnmG,IAA9BrF,EAAQurG,kBACJvrG,EAAQurG,kBAAiBT,EAAAo9D,yBAO/B7kK,EAAKymK,QAAU9pK,EAAQy+H,QAAM,GAM7Bp7H,EAAKspK,MAAO,EACZtpK,EAAKupK,aAMLvpK,EAAKwpK,YAA6E7sK,EAAQ8sK,WAM1FzpK,EAAKu6J,YAA2Bv4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,MAMpDt6J,EAAK07E,OAAS,KAMd17E,EAAK+9E,WAAU,CAAI,EAAG,GAMtB/9E,EAAK2iF,kBAAoB,EAMzB3iF,EAAK0mK,YAA2B1kK,IAAlBrF,EAAQsyC,MAAsBtyC,EAAQsyC,MAAQ,aAnFzCxvC,EAAA4pK,EAAAxqK,GAoGrBwqK,EAAA3pK,UAAAgqK,kBAAiB,SAACtkK,EAAYH,EAAY9H,EAAYi+H,WAClCp5H,SAATqpG,UAGHs+D,EAAalxI,EAAA98B,IAAiBwB,GAC9BysK,EAAmBpqK,KAAQ24B,gBAE7ByxI,GAAuBA,IAAwBD,IACjD1kK,EAAUmpH,EAAAsE,0BACRk3C,EACAD,EACAvkK,EACAH,GAEFG,EAAUqzB,EAAA5qB,UAAazI,EAAYukK,EAAeC,QAG9Cp2J,EAAMrN,EAAAsM,kBACVrN,EACAH,EACA,EACAkkK,GAGIP,EAAU,SACL,cACAl3H,EAAA6iF,4BACA,wBACD,yBACO,eACD/0H,KAAOinK,QAAgB,iBAEhCmC,EAAUppK,KAAOinK,QAASrrC,OAE3BpsH,EAAII,KAAKqI,OAAOrS,EAAW,GAAKoO,EAAO,IAAMvO,GAC7CgK,EAAIG,KAAKqI,OAAOjE,EAAO,GAAKpO,EAAW,IAAMH,UACnD2jK,EAAUppK,KAAM8pK,KAAI,IAAM,KAAUt6J,EACpC45J,EAAUppK,KAAM8pK,KAAI,IAAM,KAAUr6J,OAExB43J,eACVrzJ,EACA21J,EACA,EACAS,GAAuBD,EACvBf,KAkBJS,EAAA3pK,UAAAmqK,aAAY,SAAC5kK,EAAYm2H,WACLp5H,SAATqpG,UAIHu9D,EAAU,SACL,cACAl3H,EAAA6iF,4BACA,0BACD,qBAGKvyH,IAAXo5H,QAA4Cp5H,IAApBo5H,EAAc,MAAe,KACjDv/H,EAAM2D,KAAQinK,QAAQqD,aACLzgK,MAAM4B,QAAQpP,IAA6B,IAAlBA,EAAOT,QACrC,OAGlBwtK,EAAkB,MAAI/sK,UAGLmG,IAAfiD,EAAwB,KACpBw0D,EAAGj6D,KAAQ24B,gBAAa34B,KACrB24B,gBAAgBsZ,mBACrB,EAEJm3H,EAAkB,MAAK3jK,EAAaw0D,EADlB,sBAIbmvG,EAAYxtC,uBAE6B/vB,KAAOu9D,KASzDS,EAAA3pK,UAAAinK,UAAS,uBACKF,SAUd4C,EAAA3pK,UAAAgmK,iBAAgB,SAAClyJ,EAAQvO,EAAYwuB,EAAYt2B,WAC7B6E,SAATqpG,KAAkB,OAClB,KAGTpmG,EAAUzF,KAAQ+lK,sBAAsBtgK,GAEtB,GAAdwuB,GAAej0B,KAAW+6J,aAA+Bv4J,IAAzBxC,KAASgqK,cAC3C/1I,EAAa,OAGTmzI,EAAkB3hK,EAAawuB,EAE/Bj1B,EAAM2H,EAAAmM,UAAakB,GACnBooC,EAAYxsC,KAAK0X,KAAI3gB,EAAAC,SAAUoN,GAAUozJ,GACzC/qH,EAAazsC,KAAK0X,KAAI3gB,EAAAuM,UAAWc,GAAUozJ,GAC3CltD,EAAUvzG,EAAAsM,kBAAqBjU,EAAQooK,EAAiB,EAAC,CAC7DhrH,EACAC,IAEIkuH,EAAe36J,KAAK0X,KAAItnB,KACtBknK,OAAMvgK,EAAAC,SAAYoN,GAAWozJ,GAE/BoD,EAAgB56J,KAAK0X,KAAItnB,KACvBknK,OAAMvgK,EAAAuM,UAAac,GAAWozJ,GAEhCqD,EAAa9jK,EAAAsM,kBAAqBjU,EAAQooK,EAAiB,EAAC,CAChEmD,EACAC,IAGIruF,EAAKn8E,KAAQk8E,UAEjBC,GAAKn8E,KACAmjF,mBAAiBnjF,KAASoiB,eAC/B+5D,EAAM3zC,iBAAmB/iC,GACzB02E,EAAM6C,iBAAmB/qD,GAAUttB,EAAA+K,eACpByqE,EAAM11E,YAAayzG,GAAU,OAErC/9B,MAGHy/C,EAAM,SACD,cACA1pF,EAAA6iF,4BACA,gBACD,yBACO,YAEV6G,EAAM57H,KAAOinK,cAEf1oF,WAAW,GAAK3uE,KAAK2P,MAAK5Y,EAAAC,SAAU6jK,GAAiBrD,QACrD7oF,WAAW,GAAK3uE,KAAK2P,MAAK5Y,EAAAuM,UAAWu3J,GAAiBrD,OAErDnpK,EAAG+B,KAAQqnK,eACfoD,EAAazqK,KACRu+E,WACLtqD,EACAt2B,EACAi+H,eAGG1/C,OAAM,IAAAorF,EAAA/qK,QACTkuK,EACAhlK,EACAwuB,EACAh2B,EAAG+B,KACE2mG,aAAY3mG,KACZ2oG,yBAGFxlB,kBAAiBnjF,KAAQoiB,mBAEzB85D,OAAO1/D,iBAAgBzZ,EAAAxG,QAChBkhB,OAAMzd,KACXmmK,kBAAkBllK,KAAIjB,YAGjBk8E,QAQd2tF,EAAA3pK,UAAAqnK,qBAAoB,uBACN5+D,oBAYdkhE,EAAA3pK,UAAAmnK,eAAc,SAACrzJ,EAAQxO,EAAMyuB,EAAYt2B,EAAYi+H,oBAC9Bp5H,SAATqpG,KAAoB,GAEhC+vB,EAAM57H,KAAM8pK,KAAI,MAAQ,OAAYnsK,EAAW43C,qBAEjCv1C,KAASinK,UACrBrrC,EAAe,OAAA,IAGC,GAAd3nG,EAAe,OAAAj0B,KACJgqK,4BACQU,cACX3xG,EAAO,GAAK9kC,EAAa,GAAO,qBACd2nG,EACtBA,EAAuB,gBAAA,QAAe7iE,EAEtC6iE,EAAuB,eAAA,OAAa7iE,uBAGrB4xG,UACjB/uC,EAAuB,eAAI,GAAK3nG,uBAEf22I,+BACAC,KACjBjvC,EAAY,IAAI,GAAK3nG,0BAGd,EAAO,GAKpB2nG,EAAc,MAAIp2H,EAAK,GACvBo2H,EAAe,OAAIp2H,EAAK,OAGpBqrG,EADE33D,EAAkBv7C,EAAW+7C,4BAGjCm3D,OADOi5D,MAAmC,MAA3B5wH,EAAgB9+B,OAAO,EAAG,GACrC,CAAIpG,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAEzCA,EAET4nH,EAAa,KAAI/qB,EAAKrgG,KAAI,yBAEsBq7F,KAAO+vB,IAQzDiuC,EAAA3pK,UAAAovG,OAAM,uBACQzD,MAQdg+D,EAAA3pK,UAAAwnK,qBAAoB,SAACh/D,QACdxsB,OAAS,UACTysB,mBAAqBD,OACrBlrF,WAQPqsJ,EAAA3pK,UAAAowG,OAAM,SAACryG,GACDA,GAAG+B,KAAS6rG,YACTA,KAAO5tG,OACPi+E,OAAS,UACT1+D,YASTqsJ,EAAA3pK,UAAAynK,aAAY,SAAC/rC,iBACCqrC,QAASrrC,QAChBmuC,kBACA7tF,OAAS,UACT1+D,WAMPqsJ,EAAA3pK,UAAA6pK,WAAU,eACF3jD,EAAOpmH,KAAQinK,QAAiB,SAAA/0H,EAAA6iF,yBACjC+0C,KAAIviJ,EAAAqB,gBAAmBw9F,EAAO,QAAY,GAEnDyjD,EA3ZA,sBA6ZeD,qcC5cbgB,gBAAe,iBAKfF,UAAS,YAKTC,UAAS,YAKTE,KAAI,6MCjBOC,kfAAAA,EAAW,2GAmCxBC,EAAA,SAAA1rK,GAGK,SACH2rK,EAAYxzI,OAGNj6B,EAFEJ,EAAUq6B,GAAW,GAIzBj6B,OAD2BiF,IAAzBrF,EAAQI,aACKJ,EAAQI,aAEX,CAAIutK,OAGZptK,OACoB8E,IAAxBrF,EAAQO,YAA4BP,EAAQO,YAAW,YAEnDO,OACYuE,IAAhBrF,EAAQc,IACJd,EAAQc,IAAG,8DAGjBoB,EAAAU,KAAAC,KAAA,CACEzC,aAAcA,EACd8zG,yBAAyB,EACzBz3F,UAAWzc,EAAQyc,UACnBlc,YAAaA,EACbqoH,eAAgB5oH,EAAQ4oH,eACxB3nG,aAA6B5b,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,QAAU,GAC3D4rG,YAA2BxnH,IAAnBrF,EAAQ6sH,QAAuB7sH,EAAQ6sH,OAC/ChE,2BAA4B7oH,EAAQ6oH,2BACpCE,iBAAkB/oH,EAAQ+oH,iBAC1BjC,WAAY9mH,EAAQ8mH,WACpBhmH,IAAKA,EACLL,MAAOT,EAAQS,qBAlCHqC,EAAA+qK,EAAA3rK,GAqClB2rK,EArCA,sBAuCeD,4LCtDZ7hK,EAAAF,OAAAzN,EAAA,gBAAA,IACa0vK,4EAhCb,MAAA/lK,EAAAjK,EAAA,s/BAiBCiwK,GAAe,UAEbC,UAAU,GAAI,UACXC,GACPF,GAAe,MAGXzhJ,EAAUtoB,SAASC,cAAa,UAAWswB,WAAU,eAQ3Cu5I,EAAalmK,EAAMpG,EAAO2C,MACpC4pK,EAAY,OAAA,IACHC,UAAUpmK,EAAMpG,EAAO2C,OAE5Bs4F,EAAYnwE,EAAQ4hJ,gBAAgB1sK,EAAO2C,UACjDs4F,EAAU70F,KAAKwI,IAAIxI,GACZ60F,EAYR,SACM0xE,EAAaC,OAChBC,GAAqB,UAEnBL,UAAU,GAAI,UACXC,GACPI,GAAqB,WAGdC,EAAmB1mK,EAAMpG,EAAO2C,UACnCkqK,EAAkB,IACTL,UAAUpmK,EAAMpG,EAAO2C,IAE1ByD,KAAMA,EAAMpG,MAAOA,EAAO2C,OAAQA,mBAI7ByD,OAUXmf,EAAQ9gB,EARNsoK,EAAU3mK,EAAc,QACxB4mK,EAAO5mK,EAAW,KAClB6mK,EAAW7mK,EAAe,SAC1BpG,EAAQoG,EAAY,MACpBzD,EAASyD,EAAa,OAEtB8mK,EAAaH,EAAQ9vK,OACrBkwK,EAAWJ,EAAQ,GAAGK,cAGxBH,EAAQ,KACJI,EAAM,IAAOniK,MAAMgiK,OACpBzoK,EAAI,EAAGA,EAAIyoK,IAAczoK,EAC5B4oK,EAAO5oK,GAAKqoK,EAAkB,IACxBQ,kBAAkBP,EAAQtoK,IAC9BzE,EACA2C,GAGJ4iB,EAASqnJ,EAAUS,EAAQL,GAAM5mK,UAEjCmf,EAAM,IAAO+nJ,kBAAkBH,OACzBI,EAAM,IAAOriK,MAAMgiK,GACnBM,EAAM,IAAOtiK,MAAMgiK,OACpBzoK,EAAI,EAAGA,EAAIyoK,IAAczoK,EAC5B8oK,EAAO9oK,GAAC,IAAQ6oK,kBAAkBP,EAAQtoK,IAC1C+oK,EAAO/oK,GAAC,CAAK,EAAG,EAAG,EAAG,WAEfzH,EAAI,EAAGA,EAAImwK,EAAUnwK,GAAK,EAAC,SACzBqL,EAAI,EAAGA,EAAI6kK,IAAc7kK,EAAC,KAC3BgW,EAAQkvJ,EAAOllK,GACrBmlK,EAAOnlK,GAAG,GAAKgW,EAAMrhB,GACrBwwK,EAAOnlK,GAAG,GAAKgW,EAAMrhB,EAAI,GACzBwwK,EAAOnlK,GAAG,GAAKgW,EAAMrhB,EAAI,GACzBwwK,EAAOnlK,GAAG,GAAKgW,EAAMrhB,EAAI,OAErB4I,EAAQgnK,EAAUY,EAAQR,GAChCznJ,EAAOvoB,GAAK4I,EAAM,GAClB2f,EAAOvoB,EAAI,GAAK4I,EAAM,GACtB2f,EAAOvoB,EAAI,GAAK4I,EAAM,GACtB2f,EAAOvoB,EAAI,GAAK4I,EAAM,WAGnB2f,EAAO5S,QASf,SACM86J,EAAa1kD,EAAQ2kD,OAKtBj+I,EAJM1yB,OAAOD,KAAKisH,EAAO4kD,KAAG,IAAQ/rK,KAAG,SAAW6Q,gBACtCA,EAAI,MAAWs2G,EAAO4kD,IAAIl7J,GAAMlD,WAAQ,OAGxC2/D,OAAM,sBACCy9F,EAAap9J,WAAQ,KAC5Cw5G,EAAO6jD,UAAUr9J,+LAQbq+J,EAAI,IAAOC,KAAKp+I,EAAK,CAAGlsB,KAAI,oBAC5B1F,EAASiwK,IAAIC,gBAAgBH,GAC7BI,EAAM,IAAOC,OAAOpwK,UAC1BmwK,EAAOnwJ,iBAAgB,UAAY6vJ,GAC5BM,EA4CN,IACHE,EAAA,SAAAxtK,GAGK,SACHytK,EAAYplD,OAINqlD,EAJNvsK,EACEnB,EAAAU,KAAAC,OAAAA,KAEAQ,EAAKwsK,YAActlD,EAAOkkD,aASpBqB,EAAO,MANXF,EADqB,IAAnBrlD,EAAOqlD,QACC,EACDvsK,EAAKwsK,UACJ,EAEAtlD,EAAOqlD,SAAW,EAGnB,IAAA,IACApxK,EAAI,EAAGA,EAAIoxK,IAAWpxK,EAC7BsxK,EAAQtxK,GAAKywK,EAAa1kD,EAAQlnH,EAAK0sK,iBAAiBjsK,KAAKT,EAAM7E,SAGrEsxK,EAAQ,GAtDX,SACuBvlD,EAAQ2kD,OAC1Bc,EAAS7B,EAAa5jD,EAAO6jD,WAC/B6B,GAAa,SAEfC,YAAW,SAAYtoK,GACrBw4B,YAAU,WACJ6vI,GAGJf,EAAS,CAAEtnK,KAAI,CAAGuM,OAAQ67J,EAAOpoK,GAAO4mK,KAAM5mK,EAAW,UACxD,IAELuoK,UAAS,WACPF,GAAa,IAwCAG,CACX7lD,EACAlnH,EAAK0sK,iBAAiBjsK,KAAKT,EAAM,WAGrCA,EAAKgtK,SAAWP,EAChBzsK,EAAKitK,OAAM,GACXjtK,EAAKktK,gBAAkBhmD,EAAOimD,OAAS34J,EAAAA,EACvCxU,EAAKotK,SAAW,EAChBptK,EAAKqtK,YAAW,GAChBrtK,EAAKstK,KAAO,cAhCe7tK,EAAA6sK,EAAAztK,GA6C7BytK,EAAA5sK,UAAA6tK,QAAO,SAACC,EAAQrC,EAAMlnK,QACfwpK,SAAQ,CACXD,OAAQA,EACRrC,KAAMA,EACNlnK,SAAUA,SAEPypK,aAOPpB,EAAA5sK,UAAA+tK,SAAQ,SAACE,YACFV,OAAOxpK,KAAKkqK,QACLV,OAAO7xK,OAAMoE,KAAQ0tK,iBAAe1tK,KACzCytK,OAAOj8I,QAAQ/sB,SAAS,KAAM,OAOvCqoK,EAAA5sK,UAAAguK,UAAS,cACe,SAAbN,UAAc5tK,KAASytK,OAAO7xK,OAAS,EAAC,KACzCuyK,EAAGnuK,KAAQytK,OAAOj8I,aACnBs8I,KAAOK,MACNxvK,EAAQwvK,EAAIH,OAAO,GAAGrvK,MACtB2C,EAAS6sK,EAAIH,OAAO,GAAG1sK,OACvBoqK,EAAUyC,EAAIH,OAAOztK,KAAG,SAAW60C,UAChCA,EAAMrwC,KAAKuM,UAEdy7J,EAAO/sK,KAAQwtK,SAAS5xK,eACzBgyK,SAAWb,EACA,IAAZA,EAAa/sK,KACVwtK,SAAS,GAAGH,YAAW,CAExB3B,QAASA,EACTC,KAAMwC,EAAIxC,KACVC,SAAQ5rK,KAAOgtK,UACfruK,MAAOA,EACP2C,OAAQA,GAEVoqK,gBAGIv3F,EAASg6F,EAAIH,OAAO,GAAGjpK,KAAKnJ,OAC5B+rD,EAAgB,EAAI/3C,KAAK0X,KAAK6sD,EAAS,EAAI44F,GACxCpxK,EAAI,EAAGA,EAAIoxK,IAAWpxK,EAAC,SACxBuZ,EAASvZ,EAAIgsD,EACbymH,EAAM,GACHpnK,EAAI,EAAGsjC,EAAKohI,EAAQ9vK,OAAQoL,EAAIsjC,IAAMtjC,EAC7ConK,EAAOnqK,KAAKynK,EAAQ1kK,GAAGX,MAAM6O,EAAQA,EAASyyC,SAE3C6lH,SAAS7xK,GAAG0xK,YAAW,CAExB3B,QAAS0C,EACTzC,KAAMwC,EAAIxC,KACVC,SAAQ5rK,KAAOgtK,UACfruK,MAAOA,EACP2C,OAAQA,GAEV8sK,MAYVtB,EAAA5sK,UAAAgtK,iBAAgB,SAAC/gK,EAAOoX,QACblb,gBAGJwlK,YAAY1hK,GAASoX,EAAMxe,YACzB6oK,SACe,SAAbA,UAAc5tK,KAChBquK,gBAQTvB,EAAA5sK,UAAAmuK,YAAW,eAGLtpK,EAAM4mK,EAFJwC,EAAGnuK,KAAQ8tK,KACXf,EAAO/sK,KAAQwtK,SAAS5xK,UAEd,IAAZmxK,EACFhoK,EAAI,IAAOknK,kBAAiBjsK,KAAM6tK,YAAY,GAAW,QACzDlC,EAAI3rK,KAAQ6tK,YAAY,GAAS,cAE3BlgE,EAASwgE,EAAIH,OAAO,GAAGjpK,KAAKnJ,OAClCmJ,EAAI,IAAOknK,kBAAkBt+D,GAC7Bg+D,EAAI,IAAO9hK,MAAM8jG,WACXhmD,EAAgB,EAAI/3C,KAAK0X,KAAKqmF,EAAS,EAAIo/D,GACxCpxK,EAAI,EAAGA,EAAIoxK,IAAWpxK,EAAC,KACxB2V,EAAMtR,KAAQ6tK,YAAYlyK,GAAW,OACrCuZ,EAASvZ,EAAIgsD,EACnB5iD,EAAKwI,IAAG,IAAK0+J,kBAAkB36J,GAAS4D,GACxCy2J,EAAKhwK,GAACqE,KAAS6tK,YAAYlyK,GAAS,WAGnCmyK,KAAO,UACPD,YAAW,GAChBM,EAAI1pK,SACF,KACAwmK,EAAalmK,EAAMopK,EAAIH,OAAO,GAAGrvK,MAAOwvK,EAAIH,OAAO,GAAG1sK,QACtDqqK,QAEGuC,aAMPpB,EAAA5sK,UAAAwC,gBAAe,mBACJ/G,EAAI,EAAGA,EAACqE,KAAQwtK,SAAS5xK,SAAUD,EAACqE,KACtCwtK,SAAS7xK,GAAG2xK,iBAEdE,SAAS5xK,OAAS,GAE3BkxK,EA5KA,YAmMMwB,EAMY,mBANZA,EAaW,kBAOXC,EACC,QADDA,EAEC,QAQPC,EAAA,SAAAnvK,GAKK,SACHovK,EAAYvsK,EAAMC,EAAY4C,OAA9BvE,EACEnB,EAAAU,KAAAC,KAAMkC,IAAIlC,YAOVQ,EAAKwT,OAAS7R,EAAW6R,OAOzBxT,EAAKiF,WAAatD,EAAWkB,UAAUoC,WAAatD,EAAW8xB,WAQ/DzzB,EAAKuE,KAAOA,WA7BuB9E,EAAAwuK,EAAApvK,GA+BvCovK,EA/BA,YA8DAC,EAAA,SAAArvK,GAGK,SACHsvK,EAAYxxK,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACErC,WAAY,aAOd6C,EAAKouK,WAAa,KAMlBpuK,EAAKquK,oBACuBrsK,IAA1BrF,EAAQ2xK,cACJ3xK,EAAQ2xK,cACRP,EAMN/tK,EAAKuuK,cAA+BvsK,IAApBrF,EAAQ4vK,QAAwB5vK,EAAQ4vK,QAAU,EAMlEvsK,EAAKwuK,QAkXN,SACmBv/C,WACdltG,EAAMktG,EAAQ7zH,OACdS,EAAM,IAAOwN,MAAM0Y,GAChB5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EACzBU,EAAOV,GAAKszK,EAAYx/C,EAAQ9zH,WAE3BU,EAzXU6yK,CAAa/xK,EAAQsyH,iBAwWXpzH,EAtWnBmhB,EAAUhd,EAAKgd,QAAQvc,KAAKT,GACzB7E,EAAI,EAAG6H,EAAKhD,EAAKwuK,QAAQpzK,OAAQD,EAAI6H,IAAM7H,EAClD6E,EAAKwuK,QAAQrzK,GAAG6gB,iBAAgBzZ,EAAAxG,QAAWkhB,OAAQD,UAOrDhd,EAAKq1B,WAAU,IAAAC,EAAAv5B,SAAA,kBACN,IACNiE,EAAKgd,QAAQvc,KAAKT,IAOrBA,EAAK2uK,qBAOL3uK,EAAK4uK,qBAAuB,KAM5B5uK,EAAK2iF,kBAML3iF,EAAKk0B,YAAW,CACd+G,SAAS,EACTn2B,2BAA0BmqB,EAAAriB,SAC1B4vB,cAAe,KACfhpB,OAAQ,KACR7H,MAAO,EACPzI,WAAY,EACZT,kBA0TuB5G,EA1TemE,EAAKwuK,QA2TxC3yK,EAAOkE,KAAG,SAAWjD,UACnBA,EAAM8f,oBA3TX6W,WAAY,EACZ1uB,2BAA0BkqB,EAAAriB,SAC1BpF,oBAAmB,GACnBxC,KAAI,CAAG,EAAG,GACVm1B,UAAWn6B,EAAKq1B,WAChBuF,KAAM59B,KAAK82B,MACX2I,UAAS,GACT55B,UAAS,CACPqC,SAAU,GAEZq1B,UAAS,GACTmC,YAAW,IAGb18B,EAAKgxG,iBAAe,SAAWrvG,WACvB5E,EAAY,GAEZ4O,EAAQ,EAAGkjK,EAAOlyK,EAAQsyH,QAAQ7zH,OACtCuQ,EAAQkjK,IACNljK,EAAK,KAEDmjK,EAAgBnyK,EAAQsyH,QAAQtjH,GAKhCm/C,GAHJgkH,aAAaC,EAAAhzK,QACT+yK,EACAA,EAAcpoK,aACaqkD,qBACL,mBAAjBD,EAAgC,KACnCkkH,EAAoBlkH,EAAkBnpD,GAC5C5E,EAAa0G,KAAK+F,MAAMzM,EAAciyK,WAGX,IAAxBjyK,EAAa3B,OAAe2B,EAAe,aAG1BiF,IAAtBrF,EAAQouK,WACV/qK,EAAKivK,aAAatyK,EAAQouK,UAAWpuK,EAAQmvK,cArHxBrsK,EAAA0uK,EAAAtvK,GAgIzBsvK,EAAAzuK,UAAAuvK,aAAY,SAAClE,EAAWmE,QACbd,YAAU5uK,KACZ4uK,WAAWtmK,eAGbsmK,WAAU,IAAO/B,EAAS,CAC7BtB,UAAWA,EACXK,SAAQ5rK,KAAO6uK,iBAAmBN,EAClCZ,MAAO,EACPrB,IAAKoD,EACL3C,QAAO/sK,KAAO+uK,gBAEXvxJ,WAWPmxJ,EAAAzuK,UAAAyvK,kBAAiB,SAAC37J,EAAQvO,EAAY9H,OAC9BwE,EAAU5C,EAAAC,OAAA,QAETk1B,aAGPvyB,EAAWkB,UAAS9D,EAAAC,OAAA,GAElB2C,EAAWkB,eAGPrE,EAAM2H,EAAAmM,UAAakB,GAEzB7R,EAAW6R,OAASA,EAAO3N,QAC3BlE,EAAWqD,KAAK,GAAKoK,KAAK2P,MAAK5Y,EAAAC,SAAUoN,GAAUvO,GACnDtD,EAAWqD,KAAK,GAAKoK,KAAK2P,MAAK5Y,EAAAuM,UAAWc,GAAUvO,GACpDtD,EAAWi5B,KAAOpmB,EAAAA,MAEZ3R,EAAYlB,EAAWkB,iBAC7BA,EAAUrE,OAASA,EACnBqE,EAAU1F,WAAaA,EACvB0F,EAAUoC,WAAaA,EAChBtD,GAQTwsK,EAAAzuK,UAAA0vK,iBAAgB,mBACVC,GAAQ,EAEHl0K,EAAI,EAAG6H,EAAExD,KAAQgvK,QAAQpzK,OAAQD,EAAI6H,IAAM7H,KAC5CqE,KAAQgvK,QAAQrzK,GAAGuL,YACdoW,aAAQ1Z,EAAArH,QAAmBsH,MAAK,CACzCgsK,GAAQ,eAILA,GAUTlB,EAAAzuK,UAAAu8E,SAAQ,SAACzoE,EAAQvO,EAAYwuB,EAAYt2B,YAC7BiyK,mBAAgB,OACjB,SAGHztK,EAAUnC,KAAQ2vK,kBAAkB37J,EAAQvO,EAAY9H,WACzDwxK,qBAAuBhtK,OAGnBitK,qBAAoB,KACrBt5E,EAAkB91F,KAAQovK,qBAAqB5mI,gBAC/CsnI,EAAc9vK,KAAQovK,qBAAqB3oK,YAE/ChB,IAAeqwF,GAAkBnvF,EAAAoD,OACzBiK,EAAQ87J,KAAc9vK,KAEzBovK,qBAAuB,kBAKxBA,sBAAoBpvK,KACrBoiB,gBAAWpiB,KAAYmjF,mBAAiBnjF,KAExC+vK,kBAGP5tK,EAAWw4B,UAAUY,cAAc,GAAI,IAEnCp5B,EAAWs5B,SACba,sBAAqBt8B,KAAMwd,QAAQvc,KAAIjB,YAG7BovK,sBAOdT,EAAAzuK,UAAA6vK,gBAAe,mBACP5tK,EAAUnC,KAAQmvK,qBAClB5sJ,EAAGviB,KAAQgvK,QAAQpzK,OACnBo0K,EAAU,IAAOnmK,MAAM0Y,GACpB5mB,EAAI,EAAGA,EAAI4mB,IAAO5mB,EAAC,CAC1BwG,EAAWuB,WAAa/H,MAClBi+F,EAAY3C,EAAYj3F,KAAMgvK,QAAQrzK,GAAIwG,OAC5Cy3F,SACFo2E,EAAWr0K,GAAKi+F,MAMd70F,EAAI,QACLtC,cAAa,IACZ+rK,EAAkBF,EAAkCnsK,EAAY4C,SAEjE6pK,WAAWb,QACdiC,EACAjrK,EAAI/E,KACCiwK,kBAAkBhvK,KAAIjB,KAAOmC,KAYtCwsK,EAAAzuK,UAAA+vK,kBAAiB,SAAC9tK,EAAY+0F,EAAKhzE,EAAQnf,OACrCmyF,GAAQhzE,OAKNlQ,EAAS7R,EAAW6R,OACpBvO,EAAatD,EAAWkB,UAAUoC,cAEtCA,IAAUzF,KAAUmvK,qBAAqB9rK,UAAUoC,YAAUkB,EAAAoD,OACrDiK,EAAMhU,KAAOmvK,qBAAqBn7J,aAKxCk8J,UACKd,qBACPc,EAAOlwK,KAAQovK,qBAAqB3yF,WAAW/qD,WAAU,eAEnD/yB,EAAQiR,KAAK2P,MAAK5Y,EAAAC,SAAUoN,GAAUvO,GACtCnE,EAASsO,KAAK2P,MAAK5Y,EAAAuM,UAAWc,GAAUvO,GAC9CyqK,EAAOhiJ,EAAAC,sBAAyBxvB,EAAO2C,QAClC8tK,qBAAoB,IAAAnH,EAAA1rK,QACvByX,EACAvO,EACA,EACAyqK,EAAQ1gJ,QAGZ0gJ,EAAQ5nE,aAAapkF,EAAQ,EAAG,QAE3B1G,eACA2lE,kBAAiBnjF,KAAQoiB,mBAEzB3f,cAAa,IACZ+rK,EAAkBF,EAAiCnsK,EAAY4C,OAOvE4pK,EAAAzuK,UAAAgmK,iBAAgB,kBACP,MAGTyI,EAAAzuK,UAAAwC,gBAAe,gBACJksK,YAAU5uK,KACZ4uK,WAAWtmK,UAElBjJ,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAEzB2uK,EAtUA,YA6UAD,EAAaxuK,UAAUoI,QAMpB,IACC6nK,EAAgB,KAOjB,SACMl5E,EAAa35F,EAAO6E,OACrBi6E,EAAW9+E,EAAM0H,kBAClBo3E,EAAQ,MAAA,IACDpgF,MAAK,2BAA8BsB,OAG1C8+E,EAASx+D,aAAazb,GAAU,OAC5B,SAEHxD,EAAQwD,EAAWqD,KAAK,GACxBlE,EAASa,EAAWqD,KAAK,MACjB,IAAV7G,GAA0B,IAAX2C,EAAY,OACtB,SAGLyC,EADEpC,EAAYy6E,EAASv5E,YAAYV,EAAY,SAE/CR,IACFoC,EAAUpC,EAAU65D,qBAEhBz3D,aAAmBkyF,mBAAiB,MAAA,IAC9Bj6F,MAAK,iCAAoC+H,MAEjDA,EAAQpF,QAAUA,GAASoF,EAAQzC,SAAWA,SAChCyC,EAAQ2tB,WAAU,MACnBulE,aAAa,EAAG,EAAGt4F,EAAO2C,MAGtC6uK,OAGG3gJ,EAAS2gJ,EAAc3gJ,OACzBA,EAAO7wB,QAAUA,GAAS6wB,EAAOluB,SAAWA,EAC9C6uK,EAAajiJ,EAAAC,sBAAyBxvB,EAAO2C,GAE7C6uK,EAActrF,UAAU,EAAG,EAAGlmF,EAAO2C,QANvC6uK,EAAajiJ,EAAAC,sBAAyBxvB,EAAO2C,UAS/C6uK,EAAc9gJ,UAAUtrB,EAAS,EAAG,EAAGpF,EAAO2C,GACvC6uK,EAAcl5E,aAAa,EAAG,EAAGt4F,EAAO2C,GAgC9C,SACM2tK,EAAYmB,OAEf9yK,SACA8yK,aAAab,EAAAhzK,QACX6zK,aAAaC,EAAA9zK,QACfe,EAAK,IAAA0uH,EAAAzvH,QAAA,CAAkBC,OAAQ4zK,IACtBA,aAAa9I,EAAA/qK,UACtBe,EAAK,IAAA0oK,EAAAzpK,QAAA,CAAmBC,OAAQ4zK,KAGlC9yK,EAAQ8yK,EAEH9yK,YAGMoxK,4hBC34BZ,MAAA4B,EAAAr1K,EAAA,wiBAgBHs1K,EAAA,SAAAlxK,GAGK,SACHmxK,EAAYh5I,UACVn4B,EAAAU,KAAAC,KAAMw3B,IAAWx3B,YALIC,EAAAuwK,EAAAnxK,GAYvBmxK,EAAAtwK,UAAAC,eAAc,uCAGhBqwK,EAfA,sBAiBeD,6OCjCZ,MAAA1rK,EAAA5J,EAAA,seAyCHw1K,EAAA,SAAApxK,GAGK,SACHqxK,EAAYl5I,OACJr6B,EAAUq6B,GAAyB,UACzCn4B,EAAAU,KAAAC,KAAM7C,IAAO6C,YANYC,EAAAywK,EAAArxK,GAQ7BqxK,EARA,sBAUeD,8LCnDZ,MAAA5rK,EAAA5J,EAAA,2qBAgBH01K,EAAA,SAAAtxK,GAGK,SACHuxK,EAAYC,OAAZrwK,EACEnB,EAAAU,KAAAC,KAAM6wK,IAAU7wK,YAMhBQ,EAAK07E,OAAS,cAXqBj8E,EAAA2wK,EAAAvxK,GAiBrCuxK,EAAA1wK,UAAAu8E,SAAQ,uBACOP,OAAal8E,KAAQk8E,OAAOO,WAAnB,MAQxBm0F,EAAA1wK,UAAA0d,aAAY,SAACzb,OACLsB,EAAatB,EAAWc,iBAAiBd,EAAWuB,YACpDuwB,EAAa9xB,EAAW8xB,WACxB5wB,EAAYlB,EAAWkB,UACvBo+G,EAAiBp+G,EAAUoC,WAE3BqrK,EAAW9wK,KAAQmkF,WAAWj9E,YAE9B4zB,EAAQ34B,EAAW44B,UAErB+0I,EAAiB3tK,EAAW6R,eACNxR,IAAtBiB,EAAWuQ,SACb87J,EAAcnpK,EAAAyM,gBACZ08J,EAAc72I,EAAAgO,eACCxjC,EAAWuQ,OAAQ3Q,EAAU1F,eAK7Cm9B,EAAKE,EAAAz+B,QAAU0+B,aACfH,EAAKE,EAAAz+B,QAAU2+B,eAAWv0B,EAAA+M,QAClBo8J,MAELgB,EAAW,KACTnzK,EAAa0F,EAAU1F,iDAEnB+5C,EAAmBo5H,EAAYn4I,gBACjC+e,IACF/5C,EAAa+5C,OAGXykC,EAAQ20F,EAAYr0F,SACxBqzF,EACAruD,EACAxtF,EACAt2B,GAEEw+E,GAAKn8E,KAASg4F,UAAU7b,KAAKn8E,KAC1Bk8E,OAASC,aAGXD,OAAS,kBAIJA,QAShB00F,EAAA1wK,UAAA2C,YAAW,SAACV,EAAYtD,OAChBs9E,EAAKn8E,KAAQk8E,OACbstF,EAAcrtF,EAAM11E,YACpB2gK,EAAkBjrF,EAAM3zC,gBACxBuoI,EAAkB50F,EAAM6C,gBACxBv7E,EAAatB,EAAWc,iBAAiBd,EAAWuB,YACpDuwB,EAAa9xB,EAAW8xB,WACxB5wB,EAAYlB,EAAWkB,UACvBq+G,EAAar+G,EAAUrE,OACvByiH,EAAiBp+G,EAAUoC,WAC3BD,EAAOrD,EAAWqD,KAClBkI,EACHumB,EAAamzI,GAAoB3lD,EAAiBsvD,GAEjDpyK,EAAQiR,KAAK2P,MAAM/Z,EAAK,GAAKyuB,GAC7B3yB,EAASsO,KAAK2P,MAAM/Z,EAAK,GAAKyuB,GAC5BvuB,EAAWrC,EAAUqC,YACvBA,EAAQ,KACJsrK,EAAOphK,KAAK2P,MAAM3P,KAAK8W,KAAK/nB,EAAQA,EAAQ2C,EAASA,IAC3D3C,EAAQqyK,EACR1vK,EAAS0vK,iBAKJvsF,eACLtiF,EAAWqD,KAAK,GAAK,EACrBrD,EAAWqD,KAAK,GAAK,EACrB,EAAIyuB,EACJ,EAAIA,EACJvuB,GACC/G,EAAQ,GACR2C,EAAS,sBAEKkoB,sBAAqBxpB,KAAOykF,oBAEvCC,EAAe9jF,EAAAmrB,sBAAA/rB,KAA8BykF,qBAE9CX,aAAajlF,EAAQ6lF,EAAiBjhF,EAAWgb,aAEhDgL,EAAOzpB,KAAQypB,QACf+F,EAAS/F,EAAQ+F,OAEnBA,EAAO7wB,OAASA,GAAS6wB,EAAOluB,QAAUA,GAC5CkuB,EAAO7wB,MAAQA,EACf6wB,EAAOluB,OAASA,QACDsjF,iBACfn7D,EAAQo7D,UAAU,EAAG,EAAGlmF,EAAO2C,OAI7ByjF,GAAU,KACVthF,EAAWuQ,OAAM,KACbgxE,EAAW/rD,EAAAgO,eACfxjC,EAAWuQ,OACX3Q,EAAU1F,aAEZonF,GAAOp+E,EAAA+K,eACWszE,EAAa7iF,EAAW6R,SAAMrN,EAAA8M,WACnCuxE,EAAa7iF,EAAW6R,UAC1BhU,KACJilF,cAAcx7D,EAAStnB,EAAY6iF,OAItCwc,EAAMrlB,EAAMM,WAEZpuE,EAASohB,EAAA5hB,QAAA7N,KACR+1F,cACLp3F,EAAQ,EACR2C,EAAS,EACToM,EACAA,EACA,EACCqjK,GAAmBvH,EAAY,GAAK9nD,EAAW,IAAO0lD,EACtD2J,GAAmBrvD,EAAW,GAAK8nD,EAAY,IAAOpC,QAGpDtxE,mBAAsBsxE,EAAkBnzI,EAAc88I,MAErDjhK,EAAKzB,EAAU,GACf0B,EAAK1B,EAAU,GACf4iK,EAAKzvE,EAAI7iG,MAAQ0P,EAAU,GAC3B6iK,EAAK1vE,EAAIlgG,OAAS+M,EAAU,eAE3Bob,EAAOzpB,KAAOmkF,WAAWj9E,YAAYqqG,0BACvCzsB,UAAUr7D,EAAStnB,GACpB8uK,GAAM,IAAOC,GAAM,GAAG,KAClBzyJ,EAAUhb,EAAWgb,QACvB0yJ,OAAa,EACD,IAAZ1yJ,IACF0yJ,EAAanxK,KAAQypB,QAAQuF,iBACxBvF,QAAQuF,YAAcvQ,QAExBgL,QAAQ4F,UACXmyE,EACA,EACA,GACCA,EAAI7iG,OACJ6iG,EAAIlgG,OACLsO,KAAK2P,MAAMzP,GACXF,KAAK2P,MAAMxP,GACXH,KAAK2P,MAAM0xJ,GACXrhK,KAAK2P,MAAM2xJ,IAEG,IAAZzyJ,IAAaze,KACVypB,QAAQuF,YAAcmiJ,eAG1BjsF,WAAWz7D,EAAStnB,GAErB4iF,GACFt7D,EAAQ6F,UAGNo1D,IAAoBl1D,EAAOnxB,MAAMgQ,YACnCmhB,EAAOnxB,MAAMgQ,UAAYq2E,QAGf/iF,WAEhBivK,EAzMA,sBA2MeD,g4BClNTS,EAAY,6KAGHC,EAAAvG,aAOTwG,EAAW,SACN,CACP9lK,UAAS,MACTw+G,QAAQ,wBAEU,CAClBx+G,UAAS,MACTw+G,QAAQ,oBAEM,CACdx+G,UAAS,MACTw+G,QAAQ,mBAEK,CACbx+G,UAAS,MACTw+G,QAAQ,sBAEQ,CAChBx+G,UAAS,MACTw+G,QAAQ,SAEH,CACLx+G,UAAS,MACTw+G,QAAQ,kBAEI,CACZx+G,UAAS,MACTw+G,QAAQ,kBAEI,CACZx+G,UAAS,MACTw+G,QAAQ,iBAEG,CACXx+G,UAAS,MACTw+G,QAAQ,gBAEE,CACVx+G,UAAS,MACTw+G,QAAQ,cAEE,CACVx+G,UAAS,MACTw+G,QAAQ,IAONunD,EAAc,SACT,CACPpzJ,QAAS,EACTC,QAAS,UAEJ,CACLD,QAAS,EACTC,QAAS,eAEC,CACVD,QAAS,EACTC,QAAS,KA+BbozJ,EAAA,SAAAnyK,GAGK,SACHoyK,EAAYt0K,OACJxB,EAAIwB,EAAQG,MAAMyN,QAAO,KACzB2mK,GAAgB,GAAL/1K,EAAUwB,EAAQG,MAAQH,EAAQG,MAAM+I,MAAM,EAAG1K,GAC5Dg2K,EAAiBJ,EAAeG,GAEhCE,EAAcN,EAAYn0K,EAAQG,OAElCW,OACYuE,IAAhBrF,EAAQc,IACJd,EAAQc,IAAG,+CAEXd,EAAQG,MAAK,gBAEbs0K,EAAYpmK,iBAElBnM,EAAAU,KAAAC,KAAA,CACEzC,aAAc6zK,EACdx3J,UAAWzc,EAAQyc,UACnBlc,YAAW,YACXqoH,eAAgB5oH,EAAQ4oH,eACxB3nG,QACqB5b,MAAnBrF,EAAQihB,QAAuBjhB,EAAQihB,QAAUuzJ,EAAevzJ,QAClED,QACqB3b,MAAnBrF,EAAQghB,QAAuBhhB,EAAQghB,QAAUwzJ,EAAexzJ,QAClE6rG,OAAQ4nD,EAAY5nD,OACpBhE,2BAA4B7oH,EAAQ6oH,2BACpCE,iBAAkB/oH,EAAQ+oH,iBAC1BjC,WAAY9mH,EAAQ8mH,WACpBhmH,IAAKA,EACLL,MAAOT,EAAQS,qBAjCAqC,EAAAwxK,EAAApyK,GAoCrBoyK,EApCA,sBAsCeD,ozBCzFfK,EAAA,SAAAxyK,GAGK,SACHyyK,EAAYt6I,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAYR,EAAQQ,WACpBqoH,2BAA4B7oH,EAAQ6oH,2BACpClsE,SAAU38C,EAAQ28C,SAClBosE,iBAAkB/oH,EAAQ+oH,iBAC1BjoH,IAAKd,EAAQc,IACb2nH,KAAMzoH,EAAQyoH,KACdhoH,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,oBAOjBgjD,QAAU9pK,EAAQy+H,QAAM,GAM7Bp7H,EAAKu6J,YAA2Bv4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,MAMpDt6J,EAAKk5H,WAAU/yH,EAAAkL,cAEfrR,EAAKimH,OAAOjmH,EAAKuxK,6BAxCQ9xK,EAAA6xK,EAAAzyK,GA+C3ByyK,EAAA5xK,UAAA6xK,iBAAgB,eACVp2K,EAAI,EACFkR,EAAG,WACE/D,KAAG9I,KAASinK,QACrBp6J,EAAIlR,KAAOmN,EAAG,IAAM9I,KAAQinK,QAAQn+J,UAE/B+D,EAAI2D,KAAI,MASjBshK,EAAA5xK,UAAAinK,UAAS,uBACKF,SAad6K,EAAA5xK,UAAAmnK,eAAc,SACZ1vE,EACAqgC,EACAg6C,EACA/9I,EACAt2B,EACAi+H,OAEMhW,EAAI5lH,KAAQ4lH,QACbA,OAeD3nH,EAVEupK,EAAO7pK,EAAW43C,UAAUpkC,MAAK,KAAMutB,SAE7Ck9F,EAAa,KAAI5D,EAAS,GAAC,IAAUA,EAAS,GAC9C4D,EAAa,KAAIo2C,EAAWxhK,KAAI,KAChCorH,EAAe,OAAI4rC,EACnB5rC,EAAgB,QAAI4rC,EACpB5rC,EAAY,IAAIhsH,KAAK2P,MACnBq8G,EAAY,IAAIA,EAAY,IAAI3nG,EAAa,GAAKA,GAIjC,GAAf2xF,EAAKhqH,OACPqC,EAAM2nH,EAAK,QAGX3nH,EAAM2nH,EADKrrG,EAAAU,OAAAywG,EAAA4K,KAAwB3+B,GAAYiuB,EAAKhqH,aAIhD6rK,EAAcxpK,EACjB0pB,QAAO,gBAAA,oBACPA,QAAO,kBAAA,iDACU8/I,EAAa7rC,KAQnCk2C,EAAA5xK,UAAA8hH,kBAAiB,SAAC/tF,eACJ8mI,OAAS9mI,EAAa,GAQpC69I,EAAA5xK,UAAAynK,aAAY,SAAC/rC,iBACCqrC,QAASrrC,QAChBnV,OAAMzmH,KAAM+xK,qBAUnBD,EAAA5xK,UAAAymH,gBAAe,SAAChvB,EAAW1jE,EAAYt2B,OACjCm8C,EAAQ95C,KAAQ+3H,iBACfj+E,IACHA,EAAQ95C,KAAQ6hH,yBAAyBlkH,MAGvCm8C,EAASzN,iBAAiBzwC,QAAU+7F,EAAU,KAIhC,GAAd1jE,GAAej0B,KAAU+6J,SAC3B9mI,EAAa,OAGT+9I,EAAal4H,EAAS+3D,mBAAmBla,EAAS33F,KAAO05H,YAC3D1B,EAAQp7F,EAAAwsB,OAAUtP,EAAS41E,YAAY/3B,EAAU,IAAC33F,KAAS63H,SAE7C,GAAd5jG,IACF+jG,EAAQp7F,EAAAlvB,MAAasqH,EAAU/jG,EAAUj0B,KAAO63H,cAI5CuxC,EAAU,GACX,eACK,qBACO,mBAEVA,EAAUppK,KAAOinK,cAEZI,eACV1vE,EACAqgC,EACAg6C,EACA/9I,EACAt2B,EACAyrK,KAGN0I,EAlLA,sBAoLeD,k8BCvOfI,EAAA,SAAA5yK,GAKK,SACH6yK,EAAYv6E,EAAWqgC,EAAUh7H,OAAjCwD,EACEnB,EAAAU,KAAAC,KAAM23F,EAAS/zD,EAAArnC,QAAYsnC,SAAM7jC,YAMjCQ,EAAK+4H,UAAYvB,EAMjBx3H,EAAK87E,MAAQt/E,EAMbwD,EAAKw9E,QAAU,cAzBO/9E,EAAAiyK,EAAA7yK,GAgCxB6yK,EAAAhyK,UAAAu8E,SAAQ,mBACGuB,QAAO,OAAAh+E,KACFg+E,YAENg6C,EAAQh4H,KAAQu5H,UAChB9vG,EAAOyE,EAAAC,sBAAyB6pG,EAAS,GAAIA,EAAS,WAE5DvuG,EAAQ81D,YAAW,OACnB91D,EAAQ0oJ,WAAW,GAAK,GAAKn6C,EAAS,GAAK,GAAKA,EAAS,GAAK,IAE9DvuG,EAAQm3D,UAAS,OACjBn3D,EAAQ81D,YAAW,QACnB91D,EAAQypE,UAAS,SACjBzpE,EAAQoqE,aAAY,SACpBpqE,EAAQ0D,KAAI,kBACZ1D,EAAQo3D,UAAY,EACpBp3D,EAAQ06E,WAAUnkG,KACXs8E,MACL07C,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,IAEXvuG,EAAQ26E,SAAQpkG,KACTs8E,MACL07C,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,SAGNh6C,QAAUv0D,EAAQ+F,OAChB/F,EAAQ+F,QAInB0iJ,EAAAhyK,UAAAkkC,KAAI,aACN8tI,EAnEA,YA0FAE,EAAA,SAAA/yK,GAGK,SACHgzK,EAAY76I,OAIJr6B,EAAUq6B,GAAW,UAE3Bn4B,EAAAU,KAAAC,KAAA,CACEgqH,QAAQ,EACRrsH,WAAYR,EAAQQ,WACpBm8C,SAAU38C,EAAQ28C,SAClBl8C,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CkkH,WAAY3kH,EAAQ2kH,0BAfF7hH,EAAAoyK,EAAAhzK,GAyBtBgzK,EAAAnyK,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,OACNm0G,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,WAC5Bi7G,UAAUiB,YAAY/H,GAAY,OAAA5jH,KACA0qH,UAAUvuH,IAAIynH,OAEjDoU,EAAQp7F,EAAAwsB,OAAAppD,KAAe85C,SAAS41E,YAAYzyE,IAC5C06C,EAAS,CAAI16C,EAAGztC,EAAGC,GACnB6iK,EAAatyK,KAAQurH,+BAA+B5zB,GACtD36F,OAAI,EAENA,EADEs1K,EACE,KAEFA,EAAc,GAAC,MAEfA,EAAc,GAAC,MAEfA,EAAc,GAEZ,WAEA74I,EAAI,IAAOw4I,EAAYt6E,EAAWqgC,EAAUh7H,eAC7C0tH,UAAUn9G,IAAIq2G,EAAcnqF,GAC1BA,GAGb44I,EAlDA,sBAoDeD,8SClJZ,MAAAG,EAAAt3K,EAAA,ipBA6DHu3K,EAAA,SAAAnzK,GAGK,SACHozK,EAAYt1K,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtBqc,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBpoH,WAAUs7B,EAAA98B,IAAA,aACV6pH,2BAA4B7oH,EAAQ6oH,2BACpC3mG,MAAKzb,EAAArH,QAAcqpB,QACnBsgG,iBAAkB/oH,EAAQ+oH,iBAC1BtoH,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,sBAOtBzjH,EAAKkyK,UAAY,KAMjBlyK,EAAK+4H,UAAYp8H,EAAQ66H,SAErB76H,EAAQc,OACNd,EAAQ4/J,MAAK4V,EAAA5V,MAEb5/J,EAAQc,IACRuC,EAAKoyK,uBAAuB3xK,KAAKT,GACjCA,EAAKqyK,oBAAoB5xK,KAAKT,aAG1B69J,EAAM,IAAOjsD,eACnBisD,EAAO7hJ,iBAAgB,OAAShc,EAAKsyK,WAAW7xK,KAAKT,IACrD69J,EAAO7hJ,iBAAgB,QAAUhc,EAAKuyK,YAAY9xK,KAAKT,IACvD69J,EAAOhsD,KAAI,MAAQl1G,EAAQc,KAC3BogK,EAAOtrD,YAEA51G,EAAQ61K,SACjBxyK,EAAKoyK,uBAAuBz1K,EAAQ61K,oBAE7B,EAAO,oBA/CG/yK,EAAAwyK,EAAApzK,GAuDrBozK,EAAAvyK,UAAA4yK,WAAU,SAACvvJ,OACH86I,EAAwC96I,EAAM1kB,WAE/Cw/J,EAAO7rD,QAAW6rD,EAAO7rD,QAAU,KAAO6rD,EAAO7rD,OAAS,IAAG,KAC5Dz1G,OAAQ,MAEVA,EAAoC5B,KAAKC,MAAMijK,EAAO5rD,oBAC/Cvb,oBACF27E,2BAGFD,uBAAuB71K,aAEvB81K,uBAQTJ,EAAAvyK,UAAA6yK,YAAW,SAACxvJ,QACLsvJ,uBAOPJ,EAAAvyK,UAAA+yK,YAAW,uBACGP,WAOdD,EAAAvyK,UAAA0yK,uBAAsB,SAACI,OAIjBh/J,EAHEk/J,EAAkBj6I,EAAA98B,IAAA,aAElBu7C,EAAgB13C,KAAQ24B,wBAEHn2B,IAAvBwwK,EAAiB,OAAe,KAC5B3kK,EAAS4qB,EAAAwb,4BACby+H,EACAx7H,GAEF1jC,EAAMrN,EAAAmN,eAAkBk/J,EAAiB,OAAG3kK,OAGxC8kK,EAAUloD,EAAAqN,qBAAwB5gF,GAClCv5B,EAAU60J,EAAkB,SAAK,EACjC50J,EAAU40J,EAAkB,SAAK,GACjCl5H,EAAQmxE,EAAAmN,UAAA,CACZpkH,OAAQm/J,EACR/0J,QAASA,EACTD,QAASA,EACT65G,SAAQh4H,KAAOu5H,oBAEZz/E,SAAWA,OAEX6sE,gBAAed,EAAA2R,oBAAuBw7C,EAAgB,MAAGl5H,QAE9Bt3C,IAA5BwwK,EAAsB,cAAehzK,KAAUurD,kBAAe,KAC1D6nH,OAA+B5wK,IAAXwR,EAAuBA,EAASm/J,OACrD3hE,iBAAe,SAAWrvG,uBACdixK,EAAmBjxK,EAAW6R,QAAM,CACzCg/J,EAAsB,aAEzB,aAGNN,UAAYM,OACZvhE,SAAQ7tG,EAAArH,QAAasH,QAM5B4uK,EAAAvyK,UAAA2yK,oBAAmB,gBACZphE,SAAQ7tG,EAAArH,QAAa8nB,QAE9BouJ,EAzIA,sBA2IeD,+lCCjIfa,EAAA,SAAAh0K,GAGK,SACHi0K,EAAY97I,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,GAEnCokG,EAASz+H,EAAQy+H,QAAM,GAEvB23C,IAAW,gBAAoB33C,IAASA,EAAoB,mBAElEp7H,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtB8zG,wBAAyBl0G,EAAQk0G,wBACjCz3F,UAAWzc,EAAQyc,UACnBlc,YAAaP,EAAQO,YACrBqoH,eAAgB5oH,EAAQ4oH,eACxBiE,QAASupD,EACT51K,WAAYR,EAAQQ,WACpBqoH,2BAA4B7oH,EAAQ6oH,2BACpCC,UAAW9oH,EAAQ8oH,UACnBnsE,SAAU38C,EAAQ28C,SAClBosE,iBAAkB/oH,EAAQ+oH,iBAC1BjoH,IAAKd,EAAQc,IACb2nH,KAAMzoH,EAAQyoH,KACdhoH,WAAyB4E,IAAlBrF,EAAQS,OAAsBT,EAAQS,MAC7CqmH,WAAY9mH,EAAQ8mH,oBAOjB+J,aAA6BxrH,IAAnBrF,EAAQipF,OAAuBjpF,EAAQipF,OAAS,EAM/D5lF,EAAKymK,QAAUrrC,EAMfp7H,EAAKspK,MAAO,EAMZtpK,EAAKwpK,YAA6E7sK,EAAQ8sK,WAM1FzpK,EAAKu6J,YAA2Bv4J,IAAlBrF,EAAQ29J,OAAsB39J,EAAQ29J,MAMpDt6J,EAAKk5H,WAAU/yH,EAAAkL,cAEfrR,EAAKupK,aACLvpK,EAAKimH,OAAOjmH,EAAKuxK,6BAlEC9xK,EAAAqzK,EAAAj0K,GAmFpBi0K,EAAApzK,UAAAgqK,kBAAiB,SAACtkK,EAAYH,EAAY9H,EAAYi+H,OAC9CuuC,EAAalxI,EAAA98B,IAAiBwB,GAC9BysK,EAAmBpqK,KAAQ24B,gBAE7BmhB,EAAQ95C,KAAQ+3H,cACfj+E,IACHA,EAAQ95C,KAAQ6hH,yBAAyBsoD,QAGrCltH,EAAInD,EAAS63D,kBAAkBlsG,EAAUzF,KAAO8hH,YAChDnqB,EAAY79C,EAASypE,yBAAyB39G,EAAYq3C,QAE5DnD,EAASzN,iBAAiBzwC,QAAU+7F,EAAU,SAI9C/9D,EAAiBkgB,EAAStR,cAAcmvD,EAAU,IAClDq6E,EAAal4H,EAAS+3D,mBAAmBla,EAAS33F,KAAO05H,YACzD1B,EAAQp7F,EAAAwsB,OAAUtP,EAAS41E,YAAY/3B,EAAU,IAAC33F,KAAS63H,SAEzDzxC,EAAMpmF,KAAQguH,QACL,IAAX5nC,IACF4xC,EAAQp7F,EAAAtrB,OAAc0mH,EAAU5xC,EAAMpmF,KAAO63H,SAC7Cm6C,EAAUrrK,EAAA2K,OAAU0gK,EAAYp4I,EAAiBwsD,EAAQ4rF,IAGvD5H,GAAuBA,IAAwBD,IACjDvwI,EAAcg1F,EAAAsE,0BACZk3C,EACAD,EACAvkK,EACAg0B,GAEFo4I,EAAU/4I,EAAA0b,gBACRq9H,EACA7H,EACAC,GAEFxkK,EAAUqzB,EAAA5qB,UAAazI,EAAYukK,EAAeC,QAG9ChB,EAAU,SACL,cACAl3H,EAAA6iF,4BACA,wBACD,yBACO,eACD/0H,KAAOinK,QAAgB,iBAEhCmC,EAAUppK,KAAOinK,QAASrrC,OAE3BpsH,EAAII,KAAKqI,OAAOrS,EAAW,GAAKosK,EAAW,IAAMp4I,GACjDnqB,EAAIG,KAAKqI,OAAO+5J,EAAW,GAAKpsK,EAAW,IAAMg0B,UAEvDwvI,EAAUppK,KAAM8pK,KAAI,IAAM,KAAUt6J,EACpC45J,EAAUppK,KAAM8pK,KAAI,IAAM,KAAUr6J,OAExB43J,eACV1vE,EACAqgC,EACAg6C,EACA,EACA5H,GAAuBD,EACvBf,KAkBJkK,EAAApzK,UAAAmqK,aAAY,SAAC5kK,EAAYm2H,WACFp5H,SAAZojH,KAAK,QAIRwjD,EAAU,SACL,cACAl3H,EAAA6iF,4BACA,0BACD,qBAGKvyH,IAAXo5H,QAA4Cp5H,IAApBo5H,EAAc,MAAe,KACjDv/H,EAAM2D,KAAQinK,QAAQqD,aACLzgK,MAAM4B,QAAQpP,IAA6B,IAAlBA,EAAOT,QACrC,OAGlBwtK,EAAkB,MAAI/sK,UAGLmG,IAAfiD,EAAwB,KACpBw0D,EAAGj6D,KAAQ24B,gBAAa34B,KACrB24B,gBAAgBsZ,mBACrB,EAEJm3H,EAAkB,MAAK3jK,EAAaw0D,EADlB,sBAIbmvG,EAAYxtC,uBAE6BhW,KAAK,GAAKwjD,KAM5DkK,EAAApzK,UAAA2qH,UAAS,uBACKmD,SASdslD,EAAApzK,UAAAinK,UAAS,uBACKF,SAadqM,EAAApzK,UAAAmnK,eAAc,SACZ1vE,EACAqgC,EACAg6C,EACA/9I,EACAt2B,EACAi+H,OAEMhW,EAAI5lH,KAAQ4lH,QACbA,MAILgW,EAAc,MAAI5D,EAAS,GAC3B4D,EAAe,OAAI5D,EAAS,GAE5B4D,EAAM57H,KAAM8pK,KAAI,MAAQ,OAAYnsK,EAAW43C,qBAEjCv1C,KAASinK,UACrBrrC,EAAe,OAAA,IAGC,GAAd3nG,EAAe,OAAAj0B,KACJgqK,4BACQU,cACX3xG,EAAO,GAAK9kC,EAAa,GAAO,qBACd2nG,EACtBA,EAAuB,gBAAA,QAAe7iE,EAEtC6iE,EAAuB,eAAA,OAAa7iE,uBAGrB4xG,UACjB/uC,EAAuB,eAAI,GAAK3nG,uBAEf22I,+BACAC,KACjBjvC,EAAY,IAAI,GAAK3nG,0BAGd,EAAO,QAkBhBh2B,EAbEi7C,EAAkBv7C,EAAW+7C,qBAC7Bm3D,EAAOmhE,UACJlI,MAAmC,MAA3B5wH,EAAgB9+B,OAAO,EAAG,GAAU,KAC/C9O,OAAG,EACPA,EAAM0mK,EAAW,GACjBnhE,EAAK,GAAKmhE,EAAW,GACrBnhE,EAAK,GAAKvlG,EACVA,EAAM0mK,EAAW,GACjBnhE,EAAK,GAAKmhE,EAAW,GACrBnhE,EAAK,GAAKvlG,KAEZswH,EAAa,KAAI/qB,EAAKrgG,KAAI,KAGP,GAAfo1G,EAAKhqH,OACPqC,EAAM2nH,EAAK,QAGX3nH,EAAM2nH,EADKrrG,EAAAU,OAAAywG,EAAA4K,KAAwB3+B,GAAYiuB,EAAKhqH,+BAGlCqC,EAAK29H,KAQ3B03C,EAAApzK,UAAA8hH,kBAAiB,SAAC/tF,eACH8mI,aAA+Bv4J,IAAzBxC,KAASgqK,YAAgC/1I,EAAJ,GAO1Dq/I,EAAApzK,UAAA6xK,iBAAgB,eACVp2K,EAAI,EACFkR,EAAG,WACE/D,KAAG9I,KAASinK,QACrBp6J,EAAIlR,KAAOmN,EAAG,IAAM9I,KAAQinK,QAAQn+J,UAE/B+D,EAAI2D,KAAI,MAQjB8iK,EAAApzK,UAAAynK,aAAY,SAAC/rC,iBACCqrC,QAASrrC,QAChBmuC,kBACAtjD,OAAMzmH,KAAM+xK,qBAMnBuB,EAAApzK,UAAA6pK,WAAU,eACF3jD,EAAOpmH,KAAQinK,QAAiB,SAAA/0H,EAAA6iF,yBACjC+0C,KAAIviJ,EAAAqB,gBAAmBw9F,EAAO,QAAY,GAUjDktD,EAAApzK,UAAAymH,gBAAe,SAAChvB,EAAW1jE,EAAYt2B,OACjCm8C,EAAQ95C,KAAQ+3H,iBACfj+E,IACHA,EAAQ95C,KAAQ6hH,yBAAyBlkH,MAGvCm8C,EAASzN,iBAAiBzwC,QAAU+7F,EAAU,KAIhC,GAAd1jE,GAAej0B,KAAW+6J,aAA+Bv4J,IAAzBxC,KAASgqK,cAC3C/1I,EAAa,OAGT2F,EAAiBkgB,EAAStR,cAAcmvD,EAAU,IACpDq6E,EAAal4H,EAAS+3D,mBAAmBla,EAAS33F,KAAO05H,YACzD1B,EAAQp7F,EAAAwsB,OAAUtP,EAAS41E,YAAY/3B,EAAU,IAAC33F,KAAS63H,SAEzDzxC,EAAMpmF,KAAQguH,QACL,IAAX5nC,IACF4xC,EAAQp7F,EAAAtrB,OAAc0mH,EAAU5xC,EAAMpmF,KAAO63H,SAC7Cm6C,EAAUrrK,EAAA2K,OAAU0gK,EAAYp4I,EAAiBwsD,EAAQ4rF,IAGzC,GAAd/9I,IACF+jG,EAAQp7F,EAAAlvB,MAAasqH,EAAU/jG,EAAUj0B,KAAO63H,cAG5CuxC,EAAU,SACL,cACAl3H,EAAA6iF,4BACA,gBACD,yBACO,mBAEVq0C,EAAUppK,KAAOinK,cAEZI,eACV1vE,EACAqgC,EACAg6C,EACA/9I,EACAt2B,EACAyrK,KAGNkK,EAnYA,sBAqYeD,8zCC1bflR,EAAA,SAAA9iK,GAQK,SACH+iK,EAAYzqE,EAAWt4E,EAAO1G,EAAK3E,EAAQw/J,EAAYzW,OAAvDv8J,EACEnB,EAAAU,KAAAC,KAAM23F,EAAWt4E,IAAKrf,YAMtBQ,EAAKinG,KAAO9uF,EAMZnY,EAAKs4C,QAAU9kC,EAMfxT,EAAKizK,YAAcD,EAMnBhzK,EAAKkzK,MAAQ,KAMblzK,EAAKsuD,MAAQ,KAMbtuD,EAAKmzK,MAAQ,KAMbnzK,EAAKozK,OAAS7W,WApDc98J,EAAAmiK,EAAA/iK,GA2D9B+iK,EAAAliK,UAAAu8E,SAAQ,kBACC,MAQT2lF,EAAAliK,UAAA2zK,QAAO,SAACjuK,YACI8tK,QAAK1zK,KAAU8uD,MAAK,OACrB,SAEHglH,GACHluK,EAAW,GAAC5F,KAAS84C,QAAQ,KAAC94C,KAAW84C,QAAQ,GAAC94C,KAAS84C,QAAQ,IAChEi7H,GACHnuK,EAAW,GAAC5F,KAAS84C,QAAQ,KAAC94C,KAAW84C,QAAQ,GAAC94C,KAAS84C,QAAQ,IAEhE6kG,EAAG39I,KAAQ0zK,MAAM9jK,KAAKqI,OAAO,EAAI87J,GAAS/zK,KAAS0zK,MAAM93K,YAEjD,iBAAH+hJ,EAAgB,OAClB,SAGL1sI,EAAO0sI,EAAIl4E,WAAW71D,KAAKqI,MAAM67J,EAAYn2B,EAAI/hJ,SACjDqV,GAAQ,IACVA,IAEEA,GAAQ,IACVA,QAIElM,EAAO,SAFXkM,GAAQ,MAGAjR,KAAS8uD,MAAK,KACdhzD,EAAEkE,KAAQ8uD,MAAM79C,GAEpBlM,OADO4uK,OAAS73K,KAAEkE,KAAS2zK,MACvB3zK,KAAQ2zK,MAAM73K,GAEXA,SAGJiJ,GAWTq9J,EAAAliK,UAAA8zK,oBAAmB,SAACpuK,EAAYnB,EAAUwvK,QAC/B50J,OAAKukB,EAAArnC,QAAcunC,QAAyB,IAAhBmwI,QAC9B50J,MAAKukB,EAAArnC,QAAa4nC,iCAGX1mB,QAAM,SACNnO,GACR7K,EAAQzE,KAAM6zK,QAAQjuK,iBAIrBsuK,kBAEe,IAAhBD,EACF12I,WAAU,WAEN94B,EAAQzE,KAAM6zK,QAAQjuK,KACtB3E,KAAIjB,MACN,GAGFyE,EAAQzE,KAAM6zK,QAAQjuK,KAS5Bw8J,EAAAliK,UAAA0Y,OAAM,uBACQ6uF,MAMd26D,EAAAliK,UAAAi0K,aAAY,gBACL90J,MAAKukB,EAAArnC,QAAa8nB,WAClB7G,WAOP4kJ,EAAAliK,UAAAsoK,YAAW,SAAC/yB,QACLi+B,MAAQj+B,EAAW,UACnB3mF,MAAQ2mF,EAAW,UACnBk+B,MAAQl+B,EAAW,UAEnBp2H,MAAKukB,EAAArnC,QAAasnC,YAClBrmB,WAMP4kJ,EAAAliK,UAAAg0K,cAAa,mBACF70J,OAAKukB,EAAArnC,QAAc4nC,aACrB9kB,MAAKukB,EAAArnC,QAAaqpB,aACdguJ,OAAMjB,EAAA5V,MAAA/8J,KAENynG,KAAIznG,KACJwoK,YAAYvnK,KAAIjB,MAAAA,KAChBm0K,aAAalzK,KAAIjB,gBAGlBq+J,EAAM,IAAOjsD,eACnBisD,EAAO7hJ,iBAAgB,OAAOxc,KAAO8yK,WAAW7xK,KAAIjB,OACpDq+J,EAAO7hJ,iBAAgB,QAAQxc,KAAO+yK,YAAY9xK,KAAIjB,OACtDq+J,EAAOhsD,KAAI,MAAMryG,KAAOynG,MACxB42D,EAAOtrD,SASbqvD,EAAAliK,UAAA4yK,WAAU,SAACvvJ,OACH86I,EAAwC96I,EAAM1kB,WAE/Cw/J,EAAO7rD,QAAW6rD,EAAO7rD,QAAU,KAAO6rD,EAAO7rD,OAAS,IAAG,KAC5Dz1G,OAAQ,MAEVA,EAAwC5B,KAAKC,MAC3CijK,EAAO5rD,oBAEFvb,oBACFi9E,oBAGF3L,YAAYzrK,aAEZo3K,gBAQT/R,EAAAliK,UAAA6yK,YAAW,SAACxvJ,QACL4wJ,gBAKP/R,EAAAliK,UAAAkkC,KAAI,gBACOqvI,YAAWzzK,KACbk0K,qBAEAziE,SAAQ7tE,EAAArnC,QAAWunC,QAG9Bs+H,EArOA,YA4PAgS,EAAA,SAAA/0K,GAGK,SACHg1K,EAAYl3K,OAAZqD,EACEnB,EAAAU,KAAAC,KAAA,CACErC,WAAUs7B,EAAA98B,IAAA,aACVkjB,MAAKzb,EAAArH,QAAcqpB,mBAOrBplB,EAAKizK,iBACoBjxK,IAAvBrF,EAAQq2K,YAA2Br2K,EAAQq2K,WAM7ChzK,EAAK8zK,iBAAgBzuD,EAAAoV,oBAMrBz6H,EAAK+zK,eAAY/xK,EAMjBhC,EAAKozK,OAASz2K,EAAQ4/J,QAAS,EAE3B5/J,EAAQc,OACNuC,EAAKozK,OAAMjB,EAAA5V,MAEX5/J,EAAQc,IACRuC,EAAKoyK,uBAAuB3xK,KAAKT,GACjCA,EAAKqyK,oBAAoB5xK,KAAKT,aAG1B69J,EAAM,IAAOjsD,eACnBisD,EAAO7hJ,iBAAgB,OAAShc,EAAKsyK,WAAW7xK,KAAKT,IACrD69J,EAAO7hJ,iBAAgB,QAAUhc,EAAKuyK,YAAY9xK,KAAKT,IACvD69J,EAAOhsD,KAAI,MAAQl1G,EAAQc,KAC3BogK,EAAOtrD,YAEA51G,EAAQ61K,SACjBxyK,EAAKoyK,uBAAuBz1K,EAAQ61K,oBAE7B,EAAO,oBApDE/yK,EAAAo0K,EAAAh1K,GA4DpBg1K,EAAAn0K,UAAA4yK,WAAU,SAACvvJ,OACH86I,EAAwC96I,EAAM1kB,WAE/Cw/J,EAAO7rD,QAAW6rD,EAAO7rD,QAAU,KAAO6rD,EAAO7rD,OAAS,IAAG,KAC5Dz1G,OAAQ,MAEVA,EAA0D5B,KAAKC,MAC7DijK,EAAO5rD,oBAEFvb,oBACF27E,2BAGFD,uBAAuB71K,aAEvB81K,uBAQTwB,EAAAn0K,UAAA6yK,YAAW,SAACxvJ,QACLsvJ,uBAQPwB,EAAAn0K,UAAAs0K,YAAW,uBACGD,WAcdF,EAAAn0K,UAAAu0K,iCAAgC,SAC9B7uK,EACAH,EACAhB,EACAwvK,WAESn6H,SAAQ,KACTmD,EAACj9C,KAAQ85C,SAAS63D,kBAAkBlsG,EAAUzF,KAAO8hH,YACrDnqB,EAAS33F,KAAQ85C,SAASypE,yBAAyB39G,EAAYq3C,GAC3Dj9C,KAAoCuhH,QAC5C5pB,EAAU,GACVA,EAAU,GACVA,EAAU,GACV,EAAC33F,KACI24B,iBAEFq7I,oBAAoBpuK,EAAYnB,EAAUwvK,QAE3B,IAAhBA,EACF12I,YAAU,WACR94B,EAAS,QACR,GAEHA,EAAS,OAQf4vK,EAAAn0K,UAAA2yK,oBAAmB,gBACZphE,SAAQ7tG,EAAArH,QAAa8nB,QAQ5BgwJ,EAAAn0K,UAAA0yK,uBAAsB,SAACI,OAIjBh/J,EAHEk/J,EAAkBj6I,EAAA98B,IAAA,aAElBu7C,EAAgB13C,KAAQ24B,wBAEHn2B,IAAvBwwK,EAAiB,OAAe,KAC5B3kK,EAAS4qB,EAAAwb,4BACby+H,EACAx7H,GAEF1jC,EAAMrN,EAAAmN,eAAkBk/J,EAAiB,OAAG3kK,OAGxC8kK,EAAUloD,EAAAqN,qBAAwB5gF,GAClCv5B,EAAU60J,EAAkB,SAAK,EACjC50J,EAAU40J,EAAkB,SAAK,GACjCl5H,EAAQmxE,EAAAmN,UAAA,CACZpkH,OAAQm/J,EACR/0J,QAASA,EACTD,QAASA,SAEN27B,SAAWA,OAEXy6H,UAAYvB,EAAmB,aAE9B78B,EAAQ68B,EAAgB,SACzB78B,WAKAm+B,iBAAgBzuD,EAAA2R,oBAAuB2e,EAAOr8F,QAEnBt3C,IAA5BwwK,EAAsB,YAAe,KACjCI,OAA+B5wK,IAAXwR,EAAuBA,EAASm/J,OACrD3hE,iBAAe,SAAWrvG,uBACdixK,EAAmBjxK,EAAW6R,QAAM,CACzCg/J,EAAsB,aAEzB,aAINvhE,SAAQ7tG,EAAArH,QAAasH,iBAhBnB4tG,SAAQ7tG,EAAArH,QAAa8nB,QA2B9BgwJ,EAAAn0K,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,OACrBimH,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,WAC5Bi7G,UAAUiB,YAAY/H,GAAY,OAAA5jH,KAC7B0qH,UAAUvuH,IAAIynH,OAEpBjsB,EAAS,CAAI16C,EAAGztC,EAAGC,GACnB67G,EAAYtrH,KAAQurH,+BACxB5zB,EACAh6F,GAEI6tH,EAAOxrH,KAAQs0K,iBACnBhpD,EACAr3F,EACAt2B,GAEI87B,EAAI,IAAO0oI,EACfxqE,OACYn1F,IAAZgpH,EAAqB5nF,EAAArnC,QAAa4nC,KAAIP,EAAArnC,QAAaunC,WACvCthC,IAAZgpH,EAAwBA,EAAO,GAAAxrH,KAC1B85C,SAAS+3D,mBAAmBla,GAAS33F,KACrCyzK,YAAWzzK,KACX4zK,oBAEFlpD,UAAUn9G,IAAIq2G,EAAcnqF,GAC1BA,GAUX46I,EAAAn0K,UAAAglH,QAAO,SAACjoE,EAAGztC,EAAGC,OACNm0G,EAAY8H,EAAAY,UAAarvE,EAAGztC,EAAGC,QAC5Bi7G,UAAUiB,YAAY/H,IAAY5jH,KACpC0qH,UAAUvuH,IAAIynH,IAGzBywD,EAjPA,sBAmPeD,oeCQZlrK,EAAAF,OAAAzN,EAAA,uBAAA,IACam5K,u2BAzahBC,EAAA,SAAAt1K,GAGK,SACHu1K,EAAYz3K,OAAZqD,EAAAR,KACQrC,EAAaR,EAAQQ,YAAU,YAE/BqW,EAAS7W,EAAQ6W,QAAMi3G,EAAAqN,qBAAyB36H,GAEhDm8C,EACJ38C,EAAQ28C,UAAQmxE,EAAAmN,UAAA,CAEdpkH,OAAQA,EACRkK,cAAe/gB,EAAQ+gB,cACvBE,aAA6B5b,IAApBrF,EAAQihB,QAAwBjhB,EAAQihB,QAAU,GAC3DD,QAAShhB,EAAQghB,QACjB65G,SAAU76H,EAAQ66H,UAAY,aAGlCx3H,EAAAnB,EAAAU,KAAAC,KAAA,CACEzC,aAAcJ,EAAQI,aACtB8zG,wBAAyBl0G,EAAQk0G,wBACjCz3F,UAAWzc,EAAQyc,UACnBowG,QAAQ,EACRrsH,WAAYA,EACZ0hB,MAAOliB,EAAQkiB,MACfy6B,SAAUA,EACVosE,iBAAkB/oH,EAAQ+oH,iBACtB/oH,EAAQ+oH,iBACRwuD,EACJ/tD,gBAAiBxpH,EAAQwpH,gBACzB1oH,IAAKd,EAAQc,IACb2nH,KAAMzoH,EAAQyoH,KACdhoH,WAAyB4E,IAAlBrF,EAAQS,OAA6BT,EAAQS,MACpDqmH,WAAY9mH,EAAQ8mH,WACpBnC,gBAAmCt/G,IAAvBrF,EAAQ2kH,WAA2B,EAAI3kH,EAAQ2kH,oBAOxDlW,QAAUzuG,EAAQgB,OAAShB,EAAQgB,OAAS,KAKjDqC,EAAKq0K,cAAa,GAMlBr0K,EAAKs0K,gBAAe,IAAA3pD,EAAA5uH,QAAiBiE,EAAKkqH,UAAUU,eAMpD5qH,EAAKo4F,UAAgCp2F,MAApBrF,EAAQs7F,UAA+Bt7F,EAAQs7F,SAMhEj4F,EAAKylH,UAAY9oH,EAAQ8oH,UAAY9oH,EAAQ8oH,UAAS8uD,EAAAx4K,QAMtDiE,EAAKw0K,WAAU,YAvEM/0K,EAAA20K,EAAAv1K,GAsFvBu1K,EAAA10K,UAAA6mF,oBAAmB,SAAC/yE,OACZ2jB,EAAQ,GACR+yF,EAAS1qH,KAAQ0qH,aACM,IAAzBA,EAAUzmF,WAAgB,OACrBtM,MAEHslB,EAACyuE,EAAA6J,QAAW7K,EAAU4K,gBAAgB,GACtCx7E,EAAQ95C,KAAQ85C,gBACtB4wE,EAAUnjH,SAAO,SAAWkyB,MACtBA,EAAKk+D,UAAU,KAAO16C,GAAKxjB,EAAKnc,aAAQsmB,EAAArnC,QAAiBsnC,eAGvDoxI,EAAcx7I,EAAKy7I,iBAChBv5K,EAAI,EAAG6H,EAAKyxK,EAAYr5K,OAAQD,EAAI6H,IAAM7H,EAAC,KAC5Cw5K,EAAaF,EAAYt5K,GACzBg8F,EAAYw9E,EAAWx9E,0BACd3jF,EAAQ8lC,EAAS+3D,mBAAmBla,IAAS,KACpDy9E,EAAeD,EAAWz3J,iBAC5B03J,EAAY,IAAA,IACLpuK,EAAI,EAAGsjC,EAAK8qI,EAAax5K,OAAQoL,EAAIsjC,IAAMtjC,EAAC,KAC7CquK,EAAYD,EAAapuK,GACzBd,EAAWmvK,EAAUtyG,2BACZ/uD,EAAQ9N,EAASO,cAC9BkxB,EAAS1zB,KAAKoxK,SAOnB19I,GAMTi9I,EAAA10K,UAAAinF,YAAW,uBACGyR,WAOdg8E,EAAA10K,UAAAuY,MAAK,gBACEiyG,UAAUjyG,aACVq8J,gBAAgBr8J,SAOvBm8J,EAAA10K,UAAA4kH,YAAW,SAACnnH,EAAYs/B,GACtB59B,EAAAa,UAAM4kH,YAAW/kH,KAAAC,KAACrC,EAAYs/B,QACzB63I,gBAAgBhwD,YAAW,KASlC8vD,EAAA10K,UAAAg1K,eAAc,SAACjhJ,EAAYt2B,EAAY87B,OAC/B6xF,EAAe7xF,EAAKqyF,iBACpBhyE,EAAQ95C,KAAQ6hH,yBAAyBlkH,GACzCqW,EAAS8lC,EAAS+3D,mBAAmByZ,GACrCruE,EAAIquE,EAAa,GACjB7lH,EAAaq0C,EAAStR,cAAcyU,YAE7BjpC,GAASvO,EAAYuO,OAC5B43G,EAAc5rH,KAAQ85C,SACtB1B,EAAewzE,EAAenlH,YAChC2xC,GAAYzxC,EAAAyM,gBACEY,EAAQokC,EAAcpkC,OAMpCihK,EAAaxyD,EAAS6yD,EAJpBC,EAAU3pD,EAAeja,kBAAkBlsG,EAAY,GACvD0Y,EAAUytG,EAAehsG,aAEzB41J,EAAsB/7I,EAAKw7I,eAG/BO,GACAA,EAAoB55K,OAAS,GAC7B45K,EAAoB,GAAG79E,UAAU,KAAO49E,EAExCN,EAAcO,EACd/yD,GAAU,EACV6yD,EAAUC,OAEVN,EAAW,GACXK,EAAUC,EAAU,OAEhBD,EACF7yD,GAAU,EACVmJ,EAAekO,iBACb9lH,EACAshK,EAAO,SACGG,OAMJN,EALE3pD,EAAOxrH,KAAQ2mH,gBACnB8uD,EACAxhJ,EACAt2B,WAGc6E,IAAZgpH,UACOspD,gBAAgBnpD,YAAYH,GAAO,KAEpCnsG,GADN81J,EAAUn1K,KAAQ80K,gBAAgB34K,IAAIqvH,IACbluG,cAEvB+B,IAAKukB,EAAArnC,QAAesnC,QACpBxkB,IAAKukB,EAAArnC,QAAe8nB,OACpBhF,IAAKukB,EAAArnC,QAAeunC,kBAEpBmxI,EAAYhxK,KAAKkxK,QAGVG,IAAYC,KACrBJ,EAAU,IAAAn1K,KAAYimH,UACpBwvD,EAAe7xI,EAAArnC,QACL4nC,KACVqnF,EAAOxrH,KACF4rG,QAAO5rG,KACPkmH,mBAEIlyG,OAAS43G,EAAe/Z,mBACjC4jE,GAEFN,EAAWx3K,WAAaA,EACxBw3K,EAAW1vK,WAAammH,EAAepjF,cACrCitI,EAAgB,SAEbX,gBAAgBvnK,IAAIi+G,EAAS2pD,GAClCA,EAAW34J,iBAAgBzZ,EAAAxG,QACfkhB,OAAMzd,KACXqjC,iBAAiBpiC,KAAIjB,OAE5Bm1K,EAAW/wI,QAGfq+E,EACEA,GACA0yD,GACAA,EAAW73J,aAAQsmB,EAAArnC,QAAiBsnC,OACjCsxI,GAIHA,EAAW73J,aAAQsmB,EAAArnC,QAAiBunC,OACpCrK,EAAKnc,aAAQsmB,EAAArnC,QAAiB4nC,OAE9B1K,EAAKi8I,qBACLP,EAAW34J,iBAAgBzZ,EAAAxG,QACfkhB,QAAM,SACPk4J,QACDt2J,EAAQ81J,EAAW73J,WACnBs4J,EAAgBT,EAAWv8J,YAC7ByG,IAAKukB,EAAArnC,QAAesnC,QAAUxkB,IAAKukB,EAAArnC,QAAe8nB,MAAK,CACrDhF,IAAKukB,EAAArnC,QAAesnC,QACtBsxI,EAAWvyJ,oBAAmB7f,EAAAxG,QAClBkhB,OACVk4J,GAEFl8I,EAAKi8I,4BACEj8I,EAAKo8I,oBAAoBD,IACvBv2J,IAAKukB,EAAArnC,QAAe8nB,QAC7BoV,EAAKo8I,oBAAoBD,IAAiB,OAEtCE,EAAiBp6K,OAAOD,KAAKg+B,EAAKo8I,qBACrCj6K,OACC69B,EAAKi8I,mBAAqBI,GAAmB,IAC/Cr8I,EAAKkK,KAA0B,IAAnBmyI,EACZr8I,EAAK87I,QAAUA,EACf97I,EAAKg4E,SAAQ7tE,EAAArnC,QAAWsnC,eAMlC5iC,KAAIjB,OAEHyiH,IACHwyD,EAAYr5K,OAAS,UAEf6mH,GAAW6yD,EAAUn3J,UAG7Bsb,EAAKnc,aAAQsmB,EAAArnC,QAAiB4nC,MAChC1K,EAAKg4E,SAAQ7tE,EAAArnC,QAAWqpB,SAEtB68F,IACFhpF,EAAKkK,KAAO4xI,IAAYD,EACxB77I,EAAK87I,QAAUD,EACX77I,EAAKnc,WAAQsmB,EAAArnC,QAAesnC,OAC9BpK,EAAKg4E,SAAQ7tE,EAAArnC,QAAWsnC,QAEvB2xI,GAAmBlsK,EAAAS,OACZkrK,EAAaO,KAErB/7I,EAAKw7I,YAAcA,IAGhBA,GAWTL,EAAA10K,UAAAqhH,QAAO,SAACtkE,EAAGztC,EAAGC,EAAGwkB,EAAYt2B,OAGvB87B,EAFEs8I,EAAQrqD,EAAAY,UAAarvE,EAAGztC,EAAGC,GAC3B3G,EAAG9I,KAAQ4Y,iBAER8xG,UAAUiB,YAAYoqD,KAC7Bt8I,EAAIz5B,KAAQ0qH,UAAUvuH,IAAI45K,IACjBjtK,MAAQA,EAAG,OACX2wB,MAGLk+D,EAAS,CAAI16C,EAAGztC,EAAGC,GACrB67G,EAAYtrH,KAAQurH,+BACtB5zB,EACAh6F,GAEIy6C,EAAYp4C,KAAQ+3H,cAActxH,YAClCqzC,EAAQ95C,KAAQ6hH,yBAAyBlkH,MAC3C2tH,GAAgBlzE,EAAY,KACxB45H,EAAal4H,EAAS+3D,mBAAmByZ,YAElC0mD,GAAal4H,EAAStR,cAAcyU,GAAI+0H,gBACrC55H,EAAc45H,KAC5B1mD,EAAe,UAGf0qD,GAAQ,KACS,OAAjB1qD,EAAqB,KACjBM,EAAc5rH,KAAQ85C,SACtBr0C,EAAaq0C,EAAStR,cAAcyU,GACpCs4H,EAAU3pD,EAAeja,kBAAkBlsG,EAAY,GAEvDuO,EAAS8lC,EAAS+3D,mBAAmByZ,YAC9Bt3G,GAASvO,EAAYuO,GAClC43G,EAAekO,iBACb9lH,EACAuhK,EAAO,SACGE,GACRO,EACEA,IAAKh2K,KACC2mH,gBAAgB8uD,EAAiBxhJ,EAAYt2B,IACrDsD,KAAIjB,WAGJ+rH,EAAO,IAAAkqD,EAAA15K,QACXo7F,EACAq+E,EAAKpyI,EAAArnC,QAAaunC,MAAKF,EAAArnC,QAAa4nC,KACpCmnF,EAAYtrH,KACPk1K,eAAej0K,KAAIjB,KAAOi0B,EAAYt2B,WAG7CouH,EAAQjjH,IAAMA,EACV2wB,GACFsyF,EAAQK,YAAc3yF,EACtBsyF,EAAQM,2BACH3B,UAAU/iG,QAAQouJ,EAAUhqD,SAE5BrB,UAAUn9G,IAAIwoK,EAAUhqD,GAExBA,GAOT6oD,EAAA10K,UAAA2hH,yBAAwB,SAAClkH,OACjBsT,EAAOtT,EAAW43C,UACpBuE,EAAQ95C,KAAQg1K,WAAW/jK,OAC1B6oC,EAAQ,KAGL8xE,EAAc5rH,KAAQ85C,SAC5BA,EAAQmxE,EAAAoN,oBACN16H,OACA6E,EACAopH,EACIA,EAAe8D,YAAY9D,EAAehsG,mBAC1Cpd,QAEDwyK,WAAW/jK,GAAQ6oC,SAEnBA,GAQT86H,EAAA10K,UAAA8hH,kBAAiB,SAAC/tF,UACTA,GAST2gJ,EAAA10K,UAAAgjH,iBAAgB,SAACjmE,EAAGhpB,EAAYt2B,OACxBm8C,EAAQ95C,KAAQ6hH,yBAAyBlkH,GACzCq6H,EAAQp7F,EAAAwsB,OAAUtP,EAAS41E,YAAYzyE,GAACj9C,KAAQ63H,gBAEpDjoH,KAAK2P,MAAMy4G,EAAS,GAAK/jG,GACzBrkB,KAAK2P,MAAMy4G,EAAS,GAAK/jG,KAS7B2gJ,EAAA10K,UAAAilH,gBAAe,SAACH,EAAWrnH,GACzB0B,EAAAa,UAAMilH,gBAAeplH,KAAAC,KAAa,EAAZglH,EAAernH,IAEzCi3K,EAhaA,qBAyagBF,EAAoBj7I,EAAMx7B,GACxCw7B,EAAK42E,WAKA,SACOr8F,EAAQvO,EAAY9H,qBAE1BM,EACAw7B,EAAK41E,YACLr7F,EACAvO,EACA9H,EACA87B,EAAKy8I,OAAOj1K,KAAKw4B,GACjBA,EAAK08I,QAAQl1K,KAAKw4B,iBAtBXk7I,oeCxgBZ,MAAA/nD,EAAA3xH,EAAA,ihBAIH05K,EAAA,SAAAt1K,GAQK,SACHu1K,EAAYj9E,EAAWt4E,EAAO1G,EAAKxa,EAAQ+nH,EAAkB1uF,OAA7Dh3B,EACEnB,EAAAU,KAAAC,KAAM23F,EAAWt4E,EAAOmY,IAAWx3B,YAMnCQ,EAAKwT,OAAS,KAMdxT,EAAKorG,QAAUztG,EAMfqC,EAAK+rE,UAAY,KAMjB/rE,EAAKmrG,QAMLnrG,EAAK7C,WAAa,KAMlB6C,EAAKiF,WAMLjF,EAAKusH,kBAAoB7G,EAMzB1lH,EAAKqrG,KAAOlzF,EAEZnY,EAAKsI,IAAM6P,WA5DU1Y,EAAA20K,EAAAv1K,GAoEvBu1K,EAAA10K,UAAAmvG,UAAS,uBACKzD,SAQdgpE,EAAA10K,UAAAwd,YAAW,uBACG6uD,WAMdqoG,EAAA10K,UAAAkkC,KAAI,gBACO/kB,OAAKukB,EAAArnC,QAAc4nC,YACrBstE,SAAQ7tE,EAAArnC,QAAWqpB,cACnBmnG,kBAAiB/sH,KAAAA,KAAY6rG,WACzBF,SAAO3rG,KACT2rG,QAAO3rG,KAAMgU,OAAMhU,KAAOyF,WAAUzF,KAAOrC,cAUtDi3K,EAAA10K,UAAAg2K,OAAM,SAACv+I,EAAUq7E,QACVojE,YAAYz+I,IAMnBi9I,EAAA10K,UAAAi2K,QAAO,gBACA1kE,SAAQ7tE,EAAArnC,QAAW8nB,QAS1BuwJ,EAAA10K,UAAAk2K,YAAW,SAACz+I,QACL40C,UAAY50C,OACZ85E,SAAQ7tE,EAAArnC,QAAWsnC,SAQ1B+wI,EAAA10K,UAAAmwG,UAAS,SAACvE,QACHH,QAAUG,GAEnB8oE,EAjIA,sBAmIeD,sNCvIZ,MAAA/nD,EAAA3xH,EAAA,sgBAoBGo7K,EAAU,GAEhBC,EAAA,SAAAj3K,GAOK,SACHk3K,EAAY5+E,EAAWt4E,EAAOisG,EAAc4pD,OAA5C10K,EACEnB,EAAAU,KAAAC,KAAM23F,EAAWt4E,EAAK,CAAG4kG,WAAY,iBAMrCzjH,EAAKiiG,SAAQ,GAMbjiG,EAAKilF,eAAc,GAMnBjlF,EAAKg2K,wBAAuB,GAM5Bh2K,EAAKk1K,mBAAqB,EAM1Bl1K,EAAKq1K,oBAAmB,GAKxBr1K,EAAKi2K,sBAAqB,GAM1Bj2K,EAAKk2K,aAAY,GAKjBl2K,EAAKy0K,YAAc,KAKnBz0K,EAAKm2K,iBAKLn2K,EAAK00K,eAAiBA,EAAej0K,UAAKuB,EAAWhC,GAMrDA,EAAK+0K,SAAU,EAMf/0K,EAAKmjC,MAAO,EAKZnjC,EAAKsrH,iBAAmBR,WAlFGrrH,EAAAs2K,EAAAl3K,GAyF7Bk3K,EAAAr2K,UAAAwxB,WAAU,SAACp0B,OACHwL,EAAGgI,EAAA/D,OAAUzP,UACbwL,KAAG9I,KAASyiG,WAAQziG,KACnByiG,SAAS35F,GAAGolB,EAAAC,sBAA0B,EAAG,EAAGkoJ,SAEvC5zE,SAAS35F,IAOvBytK,EAAAr2K,UAAA02K,WAAU,SAACt5K,mBACKA,KAAK0C,KAAUyiG,UAQ/B8zE,EAAAr2K,UAAAu8E,SAAQ,SAACn/E,eACKs5K,WAAWt5K,GAAK0C,KAAS0xB,WAAWp0B,GAAOkyB,OAAS,MAOlE+mJ,EAAAr2K,UAAA22K,eAAc,SAACv5K,OACPwL,EAAGgI,EAAA/D,OAAUzP,UACbwL,KAAG9I,KAAS02K,eAAY12K,KACvB02K,aAAa5tK,GAAG,CACnB89E,OAAO,EACPkwF,oBAAqB,KACrBhhF,mBAAoBlyC,IACpBo9D,kBAAkB,EAClB+1D,uBAAwBnzH,IACxBozH,sBAAsB,EACtBC,WAAW,EACXC,eAAe,SAGPR,aAAa5tK,IAM3BytK,EAAAr2K,UAAAkkC,KAAI,gBACG8wI,kBAMPqB,EAAAr2K,UAAAotH,QAAO,mBACMxkH,KAAG9I,KAASyiG,SACrB4zE,EAAWpyK,KAAIjE,KAAMyiG,SAAS35F,GAAK0mB,oBACvBizE,SAAS35F,GAEvBzJ,EAAAa,UAAMotH,QAAOvtH,KAAAC,OAEjBu2K,EAxJA,sBA0JeD,oOCzJZptK,EAAAF,OAAAzN,EAAA,YAAA,IACaL,IAxBb,IAAAi6C,EAAAl6C,EAAA,oJAwBaC,EAASyqI,OAGnBhqI,EAAGqL,EAFDmwK,EAAYz7K,OAAOD,KAAKkqI,EAAM1pI,MAC9BsmB,EAAM40J,EAAUv7K,WAEjBD,EAAI,EAAGA,EAAI4mB,IAAO5mB,EAAC,KAChBsV,EAAOkmK,EAAUx7K,aACdsV,GAAI,KACLi8H,EAAMvH,EAAM1pI,KAAKgV,GACnBilC,EAAQg3F,EAAIh3F,MACXA,GAAqB,YAAZg3F,EAAInB,WAChB71F,EAAKnE,EAAAx1C,QAASy1C,wCAIZ/gC,KAAMA,EACNioC,gBAAiBg0F,EAAIjD,KACrBh0F,cAAei3F,EAAI7F,SACnBnxF,MAAKA,UAKRv6C,EAAI,EAAGA,EAAI4mB,IAAO5mB,EAAC,KAChBy7K,EAAQD,EAAUx7K,GAClBmsH,EAAK7uF,EAAA98B,IAAOi7K,OACbpwK,EAAI,EAAGA,EAAIub,IAAOvb,EAAC,KAChBqwK,EAAQF,EAAUnwK,GAClB+gH,EAAK9uF,EAAA98B,IAAOk7K,aACAD,EAAOC,GAAK,KACtBC,EAAO3xC,EAAM1pI,KAAKm7K,GAClBG,EAAO5xC,EAAM1pI,KAAKo7K,MACpBC,IAASC,EAAIt+I,EAAAib,yBAAA,CACW4zE,EAAOC,aAG3B15G,EAAYs3H,EAAKpmI,EAAAC,OAAA,GACV83K,EAAI,CAAGrtC,UAAMznI,gBACb+0K,EAAI,CAAGttC,UAAMznI,+BAGxBslH,EACAC,EAAK9uF,EAAAgc,8BACyB6yE,EAAOC,EAAO15G,EAAU6oC,SAAOje,EAAAgc,8BAC/B8yE,EAAOD,EAAOz5G,EAAU8oC,ozCClBlEqgI,EAAA,SAAAn4K,GAGK,SACHo4K,EAAYjgJ,OAAZh3B,EAAAR,KACQ7C,EAAUq6B,GAAyB,UAEzCh3B,EAAAnB,EAAAU,KAAAC,OAAAA,MAKKgzG,eAAc/5E,EAAA98B,IACjBgB,EAAQ61G,eAAiB71G,EAAQ61G,eAAc,aAG7C71G,EAAQgtE,oBACV3pE,EAAKk3K,yBAAwBz+I,EAAA98B,IAAiBgB,EAAQgtE,oBAQxD3pE,EAAKwuE,cAAgB7xE,EAAQ8xE,aAO7BzuE,EAAKm3K,qBAAuBx6K,EAAQy6K,6BAhClB33K,EAAAw3K,EAAAp4K,GAyCpBo4K,EAAAv3K,UAAA23K,sBAAqB,SAAC1zJ,EAAQqT,GAGzB,IACCsgJ,EAAiB,KAWf5xK,EAAW6xK,GATfD,EADe,YAAb3zJ,EAAa,KACiCA,EAElC,MACN,mBACsCA,aAC9B,OAIqC,SAAGqT,GACpDvxB,EAAO,IAAAuqE,EAAAj0E,oBACJyyE,cACP/oE,EAAQ6qE,gBAAe9wE,KAAMgvE,oBAExB2oG,sBAGL1xK,EAAQ6qE,gBAAgBgnG,EAA8B,eAExD7xK,EAAQ4qE,YAAY3qE,UAER4xK,GACV7xK,EAAQitE,MAAM4kG,EAAmB,IAG/BA,EAA2B,YAC7B7xK,EAAQgZ,cAAc64J,EAA2B,YAAG,GAE/C7xK,GASTwxK,EAAAv3K,UAAA83K,uBAAsB,SAAC7zJ,EAAQqT,OAGzBG,EAAW,QACS,sBAH4BxT,EAG5B,KAAyB,CAE/CwT,EAAQ,WACFsgJ,EAFoE9zJ,EAEf,SAClDxoB,EAAI,EAAG6H,EAAKy0K,EAAgBr8K,OAAQD,EAAI6H,IAAM7H,EACrDg8B,EAAS1zB,KAAIjE,KACN63K,sBAAsBI,EAAgBt8K,GAAI67B,SAInDG,EAAQ,MAASkgJ,sBAAsB1zJ,EAAQqT,WAE1CG,GAST8/I,EAAAv3K,UAAAg4K,uBAAsB,SAAC/zJ,EAAQqT,UACtBugJ,EAAa5zJ,EAAQqT,IAQ9BigJ,EAAAv3K,UAAAi4K,yBAAwB,SAACh0J,OAEnBxmB,EADEm9I,EAAM32H,EAAY,WAEpB22H,EACY,QAAVA,EAAU,KACZn9I,EAAUs7B,EAAA98B,IAAiB2+I,EAAgB,WAAQ,MAChC,SAAVA,EAAU,KACnBn9I,EAAUs7B,EAAA98B,IAAA,QAA2B2+I,EAAgB,WAAQ,gBAEtD,EAAO,IAGhBn9I,EAAUqC,KAAQgzG,eAE2Cr1G,GAWjE85K,EAAAv3K,UAAAk4K,mBAAkB,SAACnyK,EAASuxB,GAC1BA,EAAWx3B,KAAQq4K,aAAa7gJ,GAEH,IACvBrT,EAAM,MACJ,UACNje,SAAU,KACVqY,WAAY,MAGRziB,EAAKmK,EAAQ2wB,gBACRp0B,IAAP1G,IACFqoB,EAAOroB,GAAKA,IAGTmK,EAAQgb,gBAAa,OACjBkD,MAGH5F,EAAatY,EAAQ+a,gBACrB9a,EAAWD,EAAQ88D,qBACrB78D,IACFie,EAAOje,SAAWoyK,EAAcpyK,EAAUsxB,UAEnCjZ,EAAWtY,EAAQ2sE,8BAGfr0D,KACX4F,EAAO5F,WAAaA,GAGf4F,GAWTszJ,EAAAv3K,UAAAq4K,oBAAmB,SAAC5gJ,EAAUH,GAC5BA,EAAWx3B,KAAQq4K,aAAa7gJ,WAC1BghJ,EAAO,GACJ78K,EAAI,EAAG6H,EAAKm0B,EAAS/7B,OAAQD,EAAI6H,IAAM7H,EAC9C68K,EAAQv0K,KAAIjE,KAAMo4K,mBAAmBzgJ,EAASh8B,GAAI67B,WAGlDt1B,KAAI,oBACJy1B,SAAU6gJ,IAYdf,EAAAv3K,UAAAu4K,oBAAmB,SAACvyK,EAAUsxB,UACrB8gJ,EAAcpyK,EAAQlG,KAAOq4K,aAAa7gJ,KAErDigJ,EAhNA,YAsNG,SACMM,EAAa5zJ,EAAQqT,OACvBrT,EAAM,OACF,KAKN,IACCje,SACIie,EAAa,qBACD0uB,MAChB3sC,EAiEH,SACwBie,wBACRA,EAAoB,aAnEtBu0J,CAA+Cv0J,wBAG1C2uB,YAChB5sC,EAqEH,SAC6Bie,wBACRA,EAAoB,aAvE3Bw0J,CACyBx0J,wBAIpB6uB,QAChB9sC,EA+FH,SAC0Bie,wBACRA,EAAoB,aAjGxBy0J,CAAmDz0J,wBAG9C8uB,YAChB/sC,EA2EH,SAC6Bie,wBACRA,EAAoB,aA7E3B00J,CACyB10J,wBAIpB+uB,kBAChBhtC,EA6DH,SACkCie,wBACRA,EAAoB,aA/DhC20J,CAC8B30J,wBAIzBgvB,cAChBjtC,EAuEH,SAC+Bie,wBACRA,EAAoB,aAzE7B40J,CAC2B50J,wBAItBivB,oBAChBltC,EAgBH,SACqCie,EAAQqT,OACxCgkB,EAAar3B,EAAmB,WAAE5jB,KAInC,SACO2F,UACD6xK,EAAa7xK,EAAUsxB,2BAGJgkB,GA3Bfw9H,CACiC70J,2BAKlCnoB,MAAK,6BAAgCmoB,EAAOjiB,4CAGtBgE,GAAU,EAAOsxB,GAyEpD,SACM8gJ,EAAcpyK,EAAUsxB,OAK3ByhJ,EAHE/2K,GADNgE,EAAQgzK,EAAAC,6BAAgCjzK,GAAU,EAAMsxB,IAClCkW,iBAIdxrC,kBACY2wC,MAChBomI,EAuIH,SACyB/yK,EAAUsxB,UAElCt1B,KAAI,QACJiF,YAAajB,EAASq1C,kBA3IV69H,CACclzK,wBAKR4sC,YAChBmmI,EA4EH,SAC8B/yK,EAAUsxB,UAEvCt1B,KAAI,aACJiF,YAAajB,EAASq1C,kBAhFV89H,CACmBnzK,wBAKb8sC,QAChBimI,EAqIH,SAC2B/yK,EAAUsxB,OAClCyxB,EACAzxB,IACFyxB,EAAQzxB,EAAY8hJ,oBAGpBp3K,KAAI,UACJiF,YAAajB,EAASq1C,eAAe0N,IA7IzBswH,CACgBrzK,EACxBsxB,wBAIcyb,YAChBgmI,EAsFH,SAC8B/yK,EAAUsxB,UAEvCt1B,KAAI,aACJiF,YAAajB,EAASq1C,kBA1FVi+H,CACmBtzK,wBAKbgtC,kBAChB+lI,EAmEH,SACmC/yK,EAAUsxB,UAE5Ct1B,KAAI,kBACJiF,YAAajB,EAASq1C,kBAvEVk+H,CACwBvzK,wBAKlBitC,cAChB8lI,EAoFH,SACgC/yK,EAAUsxB,OACvCyxB,EACAzxB,IACFyxB,EAAQzxB,EAAY8hJ,oBAGpBp3K,KAAI,eACJiF,YAAajB,EAASq1C,eAAe0N,IA5FzBywH,CACqBxzK,EAC7BsxB,wBAIc4b,oBAChB6lI,EAwBH,SACsC/yK,EAAUsxB,UAO/Ct1B,KAAI,qBACJs5C,WAPiBt1C,EAASu+F,qBAAqBlkG,KAAG,SAAWo5K,OACvDx8K,EAAOoC,EAAAC,OAAA,GAAcg4B,iBACpBr6B,EAAQgtE,kBACRmuG,EAAcqB,EAAUx8K,OA7BnBy8K,CAC2B1zK,EACnCsxB,wBAIcoW,OAChBqrI,EAAO,CACL/2K,KAAI,qBACJs5C,WAAU,4BAKFx/C,MAAK,8BAAiCkG,UAG7C+2K,YAoGMzB,6jBC7iBZ,MAAA70I,EAAA1nC,EAAA,onBAkBH4+K,EAAA,SAAAx6K,GAGK,SACHy6K,EAAYC,OAAZv5K,EACEnB,EAAAU,KAAAC,OAAAA,YAMAQ,EAAKw5K,YAAcD,GAAkC,KAKrDv5K,EAAKy5K,kBAAiB,GAEtBz5K,EAAK05K,mCAlBwBj6K,EAAA65K,EAAAz6K,GAwB/By6K,EAAA55K,UAAAi6K,0BAAyB,gBAClBF,kBAAkB1yK,QAAO7G,EAAAmiB,oBACzBo3J,kBAAkBr+K,OAAS,GAMlCk+K,EAAA55K,UAAAg6K,wBAAuB,mBACXF,oBAGDr+K,EAAI,EAAG6H,EAAExD,KAAQg6K,YAAYp+K,OAAQD,EAAI6H,IAAM7H,EAACqE,KAClDi6K,kBAAkBh2K,KAAIvD,EAAAC,OAAAX,KACbg6K,YAAYr+K,GAACoH,EAAAxG,QAAakhB,OAAMzd,KAAOwd,QAAOxd,QAUhE85K,EAAA55K,UAAAqR,MAAK,eACG6oK,EAAkB,IAAON,EAAmB,aAClDM,EAAmBC,cAAar6K,KAAMg6K,aACtCI,EAAmB94J,gBAAethB,MAC3Bo6K,GAUTN,EAAA55K,UAAA++C,eAAc,SAACzvC,EAAGC,EAAGyvC,EAAcC,MAC7BA,EAAkBx4C,EAAA6K,yBAAAxR,KAAiCyG,YAAa+I,EAAGC,GAAC,OAC/D0vC,UAEH3D,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChDwjD,EAAqB3D,EAAW7/C,GAAGsjD,eACjCzvC,EACAC,EACAyvC,EACAC,UAGGA,GAQT26H,EAAA55K,UAAAyR,WAAU,SAACnC,EAAGC,WACN+rC,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,KAC5C6/C,EAAW7/C,GAAGgW,WAAWnC,EAAGC,GAAC,OACxB,SAGJ,GAQTqqK,EAAA55K,UAAAqiD,cAAa,SAACvuC,yBACQA,WACdwnC,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAACgL,EAAA4E,OAC1CyI,EAAQwnC,EAAW7/C,GAAG8K,oBAExBuN,GAQT8lK,EAAA55K,UAAAu7C,cAAa,kBACJ6+H,EAAet6K,KAAMg6K,cAM9BF,EAAA55K,UAAAukG,mBAAkB,uBACJu1E,aAMdF,EAAA55K,UAAAq6K,4BAA2B,eACK,IAC1BC,EAAe,GACbh/H,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAC5C6/C,EAAW7/C,GAAG+xC,YAAO1tC,KAAY0tC,UACnC8sI,EAAkBA,EAAgB3sG,OACGryB,EACjC7/C,GACC4+K,+BAGLC,EAAgBv2K,KAAKu3C,EAAW7/C,WAG7B6+K,GAQTV,EAAA55K,UAAAqtC,sBAAqB,SAACkT,WACXiC,6BAA0B1iD,KAAUoiB,qBACtCugC,yCAA2C,OAC3CD,2BAA0B1iD,KAAQoiB,eAGvCq+B,EAAmB,GACgC,IAD/BzgD,KACd2iD,0CACJlC,EAAgBzgD,KAAQ2iD,yCAAwC,OAAA3iD,aAK9Dy6K,EAAoB,GACpBj/H,EAAUx7C,KAAQg6K,YACpBU,GAAa,EACR/+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAAC,KAC3CuK,EAAWs1C,EAAW7/C,GACtBinD,EAAqB18C,EAASqnC,sBAClCkT,GAEFg6H,EAAqBx2K,KAAK2+C,GACtBA,IAAuB18C,IACzBw0K,GAAa,MAGbA,EAAU,KACNC,EAA4B,IAAOb,EAAmB,aAC5Da,EAA6BC,mBAAmBH,GACzCE,cAEFh4H,yCAA2ClC,QAUpDq5H,EAAA55K,UAAAwtC,QAAO,4BACe0F,qBAStB0mI,EAAA55K,UAAA6gD,iBAAgB,SAAC/sC,WACTwnC,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,KAC5C6/C,EAAW7/C,GAAGolD,iBAAiB/sC,GAAM,OAChC,SAGJ,GAMT8lK,EAAA55K,UAAAwT,QAAO,kBAC8B,SAAvBsmK,YAAYp+K,QAU1Bk+K,EAAA55K,UAAAuN,OAAM,SAACiC,EAAOs5B,WACNwS,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChD6/C,EAAW7/C,GAAG8R,OAAOiC,EAAOs5B,QAEzBxrB,WAaPs8J,EAAA55K,UAAAwN,MAAK,SAACwC,EAAI6yC,EAAQrT,OACZ1G,EAAS0G,EACR1G,IACHA,EAAMriC,EAAAmM,UAAA9S,KAAkByG,sBAEpB+0C,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChD6/C,EAAW7/C,GAAG+R,MAAMwC,EAAI6yC,EAAQ/Z,QAE7BxrB,WAQPs8J,EAAA55K,UAAAm6K,cAAa,SAAC7+H,QACPo/H,mBAAmBN,EAAgB9+H,KAM1Cs+H,EAAA55K,UAAA06K,mBAAkB,SAACp/H,QACZ2+H,iCACAH,YAAcx+H,OACd0+H,+BACA18J,WAYPs8J,EAAA55K,UAAA4T,eAAc,SAAC6D,WACP6jC,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChD6/C,EAAW7/C,GAAGmY,eAAe6D,QAE1B6F,WAUPs8J,EAAA55K,UAAA0N,UAAS,SAACoJ,EAAQC,WACVukC,EAAUx7C,KAAQg6K,YACfr+K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChD6/C,EAAW7/C,GAAGiS,UAAUoJ,EAAQC,QAE7BuG,WAMPs8J,EAAA55K,UAAAwC,gBAAe,gBACRy3K,4BACL96K,EAAAa,UAAMwC,gBAAe3C,KAAAC,OAEzB85K,EAxTA,YA6TG,SACMQ,EAAgB9+H,WACjBq/H,EAAgB,GACbl/K,EAAI,EAAG6H,EAAKg4C,EAAW5/C,OAAQD,EAAI6H,IAAM7H,EAChDk/K,EAAiB52K,KAAKu3C,EAAW7/C,GAAG4V,gBAE/BspK,YAGMhB,4SCxVZ,MAAAiB,EAAA7/K,EAAA,uiBAaH8/K,EAAA,SAAA17K,YACE27K,WACE37K,EAAAU,KAAAC,OAAAA,YAFsBC,EAAA+6K,EAAA37K,GAQxB27K,EAAA96K,UAAAwtC,QAAO,4BACavyC,MAYpB6/K,EAAA96K,UAAA+6K,YAAW,SAACz+K,EAAQg7B,eACNqgJ,sBACVqD,EAAU1+K,GAAMwD,KACXm7K,eAAe3+K,EAAQg7B,KAahCwjJ,EAAA96K,UAAAwqE,aAAY,SAACluE,EAAQg7B,eACPwgJ,uBACVkD,EAAU1+K,GAAMwD,KACXm7K,eAAe3+K,EAAQg7B,KAWhCwjJ,EAAA96K,UAAA23K,sBAAqB,SAAC1zJ,EAAQqT,wBAW9BwjJ,EAAA96K,UAAA83K,uBAAsB,SAAC7zJ,EAAQqT,wBAY/BwjJ,EAAA96K,UAAA63K,aAAY,SAACv7K,EAAQg7B,eACP0gJ,uBACVgD,EAAU1+K,GAAMwD,KACXm7K,eAAe3+K,EAAQg7B,KAWhCwjJ,EAAA96K,UAAAg4K,uBAAsB,SAAC/zJ,EAAQqT,wBAW/BwjJ,EAAA96K,UAAA2yG,eAAc,SAACr2G,eACD27K,yBAAyB+C,EAAU1+K,KASjDw+K,EAAA96K,UAAAi4K,yBAAwB,SAACh0J,wBAYzB62J,EAAA96K,UAAAk7K,aAAY,SAACn1K,EAASuxB,UACbr8B,KAAK2vH,UAAS9qH,KAAMo4K,mBAAmBnyK,EAASuxB,KASzDwjJ,EAAA96K,UAAAk4K,mBAAkB,SAACnyK,EAASuxB,wBAY5BwjJ,EAAA96K,UAAAm7K,cAAa,SAAC1jJ,EAAUH,UACfr8B,KAAK2vH,UAAS9qH,KAAMu4K,oBAAoB5gJ,EAAUH,KAS3DwjJ,EAAA96K,UAAAq4K,oBAAmB,SAAC5gJ,EAAUH,wBAY9BwjJ,EAAA96K,UAAAo4K,cAAa,SAACpyK,EAAUsxB,UACfr8B,KAAK2vH,UAAS9qH,KAAMy4K,oBAAoBvyK,EAAUsxB,KAS3DwjJ,EAAA96K,UAAAu4K,oBAAmB,SAACvyK,EAAUsxB,wBAGhCwjJ,EAlLA,YAuLG,SACME,EAAU1+K,MACA,iBAANA,EAAmB,KACtB2nB,EAAShpB,KAAKC,MAAMoB,UACnB2nB,GAA0C,YAC7B,OAAX3nB,EACFA,EAEA,eAIIu+K,+OCiBZ7xK,EAAAF,OAAAzN,EAAA,gCAAA,IACa49K,IAqDbjwK,EAAAF,OAAAzN,EAAA,8BAAA,IACa+/K,IAxRb,IAAA1nI,EAAA34C,EAAA,+FA+DHsgL,EAAA,oBACEC,IAIKx7K,KACEgzG,oBAAiBxwG,EAKnBxC,KACE03K,8BAA2Bl1K,SAUlCg5K,EAAAt7K,UAAAi7K,eAAc,SAAC3+K,EAAQg7B,OACjBr6B,KACAq6B,EAAW,KACTw7E,EAAiBx7E,EAAYw7E,eAAc/5E,EAAA98B,IAC7Bq7B,EAAYw7E,gBAAchzG,KACnC6yG,eAAer2G,GAEtBg7B,EAAYxjB,QACZg/F,GACAA,EAAeh9D,aAAQjE,EAAAx1C,QAAak3C,cAEpCu/D,EAAc/5E,EAAA98B,IAAiB62G,IAChBj5D,eAAeviB,EAAYxjB,QAE5C7W,EAAO,CACL61G,eAAgBA,EAChB7oC,kBAAmB3yC,EAAY2yC,+BAGvBkuG,aAAal7K,IAY3Bq+K,EAAAt7K,UAAAm4K,aAAY,SAACl7K,oBAGP61G,eAAchzG,KAAOgzG,eACrB7oC,kBAAiBnqE,KAAO03K,0BAE1Bv6K,IAQJq+K,EAAAt7K,UAAAwtC,QAAO,gCAYP8tI,EAAAt7K,UAAA+6K,YAAW,SAACz+K,EAAQg7B,wBAYpBgkJ,EAAAt7K,UAAAwqE,aAAY,SAACluE,EAAQg7B,wBAYrBgkJ,EAAAt7K,UAAA63K,aAAY,SAACv7K,EAAQg7B,wBAWrBgkJ,EAAAt7K,UAAA2yG,eAAc,SAACr2G,wBAYfg/K,EAAAt7K,UAAAk7K,aAAY,SAACn1K,EAASuxB,wBAYtBgkJ,EAAAt7K,UAAAm7K,cAAa,SAAC1jJ,EAAUH,wBAYxBgkJ,EAAAt7K,UAAAo4K,cAAa,SAACpyK,EAAUsxB,wBAG1BgkJ,EAzJA,YAmKgBrC,EAA6BjzK,EAAUu1K,EAAOjkJ,OAQxDygB,EAPEkyB,EAAoB3yC,EAAWyB,EAAA98B,IACnBq7B,EAAY2yC,mBAC1B,KACE6oC,EAAiBx7E,EAAWyB,EAAA98B,IAChBq7B,EAAYw7E,gBAC1B,QAQF/6D,EAJAkyB,GACA6oC,IAAc/5E,EAAAub,WACQ21B,EAAmB6oC,IAE1ByoE,EAAQv1K,EAASqL,QAAUrL,GAAUmI,UAClDotK,EAAQtxG,EAAoB6oC,EAC5ByoE,EAAQzoE,EAAiB7oC,GAGbjkE,EAGdu1K,GACAjkJ,QACuDh1B,IAA1Bg1B,EAAakkJ,SAAsB,KAE1DC,EAAQ/rK,KAAKuX,IACjB,GAC6BqQ,EAAakkJ,UAaxCzjI,IAAgB/xC,IAClB+xC,EAAc/xC,EAASqL,SAEzB0mC,EAAYnkC,gBATG,SAAa3M,WACjBxL,EAAI,EAAG6H,EAAK2D,EAAYvL,OAAQD,EAAI6H,IAAM7H,EACjDwL,EAAYxL,GAAKiU,KAAK2P,MAAMpY,EAAYxL,GAAKggL,GAASA,SAEjDx0K,YAOJ8wC,WAQOqjI,EAA2BtnK,EAAQwjB,OAC3C2yC,EAAoB3yC,EAAWyB,EAAA98B,IACnBq7B,EAAY2yC,mBAC1B,KACE6oC,EAAiBx7E,EAAWyB,EAAA98B,IAChBq7B,EAAYw7E,gBAC1B,YAGF7oC,GACA6oC,IAAc/5E,EAAAub,WACQ21B,EAAmB6oC,GAAc/5E,EAAA0b,gBAEhC3gC,EAAQg/F,EAAgB7oC,GAExCn2D,YA7EIunK,iLC5NfjgL,EAAOC,QAAUN,EAAO,gBAAiB2gL,eAAiB3gL,EAAO,kBAAPA,CAAyB,QAAS,oGCE7D,IAC3B4gL,EAAY,cAwBPC,EAAW79K,aACLA,GAAK0pB,QAAO,wCAAA,MAA8C,IAczEpsB,EAAQqgL,+BApCDC,IACHA,2BAQU7/K,YACHk7F,OACHpwF,GAAO,GAASowF,EAAI/wC,OAAO/7B,MAAK,qCAEhCtjB,EAAO,OACFg1K,EAAWh1K,EAAQ,cAbhB80K,IAGPC,GAiCTtgL,EAAQugL,WAAaA,EACrBvgL,EAAQ6jF,mBAZWnhF,OACb6I,GAAO,GAAS7I,GAAKmsB,MAAK,mCAEzBtjB,EAAO,MAAA,IACA9K,MAAK,2BAGV8K,EAAQ,mDCrCbjL,EAAUZ,EAAO,qBAAsBY,iBAMlCkgL,EAAQC,MACF,KAATA,EAAS,MAAA,QAITC,EAAyC,MAA9BD,EAAUA,EAAUpgL,OAAS,GAAaogL,EAAU31K,MAAM,EAAG21K,EAAUpgL,OAAS,GAAKogL,EAChGE,EAAaD,EAASz2F,YAAW,YACf,IAAf02F,EAAiB,IAASD,EAAS51K,MAAM,EAAG61K,YAG5CC,EAAS3gC,EAAMC,MAClBD,IAASC,EAAE,MAAA,OAIX2gC,EAAY5gC,EAAKrqI,MAAK,KAEX,MAAXirK,EAAU,IACZA,EAAU5qJ,YAUR71B,EACA0gL,EARAC,EAAU7gC,EAAGtqI,MAAK,SAET,MAATmrK,EAAQ,IACVA,EAAQ9qJ,QAOL71B,EAAI,GAAIA,EAAI2gL,EAAQ1gL,QAAUD,EAAIygL,EAAUxgL,SAA2B,MAAhBygL,EAAsB1gL,IAC5EygL,EAAUzgL,KAAO2gL,EAAQ3gL,KAC3B0gL,EAAe1gL,OAMf8jG,EAAK,OAEJ9jG,EAAI,EAAGA,EAAIygL,EAAUxgL,OAASygL,EAAc1gL,IAC/C8jG,EAAMx7F,KAAI,aAKRq4K,EAAQ1gL,OAASygL,GACnB58E,EAAMx7F,KAAK+F,MAAMy1F,EAAO68E,EAAQj2K,MAAMg2K,IAGjC58E,EAAMjvF,KAAI,KAvDnBlV,EAAOC,QAAO,SAAaghL,EAAQC,UAC1BL,EAASJ,EAAQlgL,EAAQ0gL,IAAU1gL,EAAQ2gL,KAyDpDlhL,EAAOC,QAAQkhL,SAAWV,EAC1BzgL,EAAOC,QAAQmhL,UAAYP","sources":["node_modules/@parcel/runtime-js/lib/runtime-748153c246bb16effbde4b1213295af5.js","node_modules/@parcel/runtime-js/lib/bundle-manifest.js","src/reprojection.js","node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/Disposable.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/util.js","node_modules/ol/src/transform.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/color.js","node_modules/ol/src/math.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/View.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/size.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/FullScreen.js","node_modules/ol/src/control/MousePosition.js","node_modules/ol/src/control/OverviewMap.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/control/ScaleLine.js","node_modules/ol/src/control/ZoomSlider.js","node_modules/ol/src/control/ZoomToExtent.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction/DragAndDrop.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/interaction/DragRotateAndZoom.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/interaction/Extent.js","node_modules/ol/src/interaction/Modify.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/interaction/Snap.js","node_modules/ol/src/interaction/Translate.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/format/WMTSCapabilities.js","node_modules/ol/src/format/OWS.js","node_modules/ol/src/format/XML.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XLink.js","node_modules/ol/src/format/xsd.js","node_modules/proj4/dist/proj4-src.js","node_modules/ol/src/source.js","node_modules/ol/src/source/BingMaps.js","node_modules/ol/src/net.js","node_modules/ol/src/source/CartoDB.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/Cluster.js","node_modules/ol/src/source/IIIF.js","node_modules/ol/src/source/Zoomify.js","node_modules/ol/src/format/IIIFInfo.js","node_modules/ol/src/source/Image.js","node_modules/ol/src/reproj/Image.js","node_modules/ol/src/source/ImageArcGISRest.js","node_modules/ol/src/source/ImageCanvas.js","node_modules/ol/src/ImageCanvas.js","node_modules/ol/src/source/ImageMapGuide.js","node_modules/ol/src/source/ImageStatic.js","node_modules/ol/src/source/ImageWMS.js","node_modules/ol/src/source/WMSServerType.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/Raster.js","node_modules/ol/src/layer/Image.js","node_modules/ol/src/layer/BaseImage.js","node_modules/ol/src/renderer/canvas/ImageLayer.js","node_modules/ol/src/source/Stamen.js","node_modules/ol/src/source/TileArcGISRest.js","node_modules/ol/src/source/TileDebug.js","node_modules/ol/src/source/TileJSON.js","node_modules/ol/src/source/TileWMS.js","node_modules/ol/src/source/UTFGrid.js","node_modules/ol/src/source/VectorTile.js","node_modules/ol/src/VectorTile.js","node_modules/ol/src/VectorRenderTile.js","node_modules/ol/src/proj/proj4.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/format/Feature.js","node_modules/@parcel/runtime-js/lib/runtime-a364c937ad954bbc4840794299a6a183.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js"],"sourcesContent":["require('./bundle-manifest').register(JSON.parse(\"{\\\"43Uxf\\\":\\\"reprojection.e0663bb9.js\\\",\\\"7eG15\\\":\\\"british-isles-counties.19610972.geojson\\\",\\\"0acRd\\\":\\\"basemap.7620afdc.css\\\"}\"));","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport proj4 from 'proj4';\nimport {OSM, TileImage, TileWMS} from 'ol/source';\nimport {get as getProjection, fromLonLat} from 'ol/proj';\nimport {register} from 'ol/proj/proj4';\n\n\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport counties from 'url:./data/british-isles-counties.geojson';\n\nimport {Stroke, Style} from 'ol/style';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs'\n);\n\nregister(proj4);\n\nvar proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([-650000, -150000, 1350000, 1450000]);\n\nvar layers = {};\n\nlayers['osm'] = new TileLayer({\n  source: new OSM(),\n});\n\nvar parser = new WMTSCapabilities();\n\nlayers['bng'] = new TileLayer();\nvar urlB =\n  'https://tiles.arcgis.com/tiles/qHLhLQrcvEnxjtPr/arcgis/rest/services/OS_Open_Raster/MapServer/WMTS';\nfetch(urlB)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    var result = parser.read(text);\n    var options = optionsFromCapabilities(result, {\n      layer: 'OS_Open_Raster',\n    });\n    options.attributions =\n      'Contains OS data © Crown Copyright and database right ' +\n      new Date().getFullYear();\n    options.crossOrigin = '';\n    options.projection = 'EPSG:27700';\n    options.wrapX = false;\n    layers['bng'].setSource(new WMTS(options));\n  });\n\nlayers['vector'] = new VectorLayer({\n  source: new VectorSource({\n    url: counties,\n    format: new GeoJSON(),\n    attributions: '<a href=\"https://gist.github.com/duhaime/1d6d5a8dc77c86128fcc1a05a72726c9\">Counties, D. Duhaime</a>', \n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: '#8B0000',\n      width: 1.3,\n    })\n  }),\n});\n\nvar map = new Map({\n  layers: [layers['osm'], layers['bng'], layers['vector']],\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: fromLonLat([0, 54]),\n    zoom: 4,\n  }),\n});","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      this.cssClassName_ +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? document.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n      this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n      this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.activeClassName_;\n    const inactiveClassName = this.inactiveClassName_;\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(...activeClassName);\n    element.classList.remove(...inactiveClassName);\n    element.classList.add(...nextClassName);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n    }\n  }\n}\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body['msRequestFullscreen'] && document['msFullscreenEnabled']) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document['webkitIsFullScreen'] ||\n    document['msFullscreenElement'] ||\n    document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['msRequestFullscreen']) {\n    element['msRequestFullscreen']();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document['msExitFullscreen']) {\n    document['msExitFullscreen']();\n  } else if (document['webkitExitFullscreen']) {\n    document['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    this.addEventListener(\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_\n    );\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ =\n      options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(\n      COORDINATE_FORMAT\n    ));\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(\n      PROJECTION\n    ));\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeEventListener(\n      getChangeEventType(ViewProperty.ROTATION),\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [opt_options] Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(\n      getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_\n    );\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position The position, absolute or relative\n   * @param {number} i The iterator\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom slider options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (this.element\n        .firstElementChild);\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(\n        relativePosition\n      );\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n  }\n}\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.boxStyle\n        ? opt_options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.pointerStyle\n        ? opt_options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<import(\"../extent.js\").Extent>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYSTART,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    let nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry = geometry || feature.getGeometry();\n          if (geometry.getType() === GeometryType.POINT) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getCoordinates();\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (this\n      .featureLayerAssociation_[getUid(feature)]);\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {getValues} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n  ) {\n    return /** @type {import(\"../Feature.js\").default} */ (\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\n    );\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel,\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex =\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle =\n        closestSegmentData.feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(\n          closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          ),\n          projection\n        );\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(\n          closestOnSegment(projectedCoordinate, tempSegment),\n          projection\n        );\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel,\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment,\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates],\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment,\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates],\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment,\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {getChangeEventType} from '../Object.js';\nimport {includes} from '../array.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this),\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  const matrixSetExtent = matrixSetObj['BoundingBox'];\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    wrapX =\n      wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n      wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n  }\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readNonNegativeInteger, readString} from './xsd.js';\nimport {readHref} from './XLink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './XLink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XLink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.proj4 = factory());\n}(this, (function () { 'use strict';\n\n    var globals = function(defs) {\n      defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n      defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n      defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n      defs.WGS84 = defs['EPSG:4326'];\n      defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n      defs.GOOGLE = defs['EPSG:3857'];\n      defs['EPSG:900913'] = defs['EPSG:3857'];\n      defs['EPSG:102113'] = defs['EPSG:3857'];\n    };\n\n    var PJD_3PARAM = 1;\n    var PJD_7PARAM = 2;\n    var PJD_GRIDSHIFT = 3;\n    var PJD_WGS84 = 4; // WGS84 or equivalent\n    var PJD_NODATUM = 5; // WGS84 or equivalent\n    var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\n    var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\n    var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\n    var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\n    var HALF_PI = Math.PI/2;\n    // ellipoid pj_set_ell.c\n    var SIXTH = 0.1666666666666666667;\n    /* 1/6 */\n    var RA4 = 0.04722222222222222222;\n    /* 17/360 */\n    var RA6 = 0.02215608465608465608;\n    var EPSLN = 1.0e-10;\n    // you'd think you could use Number.EPSILON above but that makes\n    // Mollweide get into an infinate loop.\n\n    var D2R = 0.01745329251994329577;\n    var R2D = 57.29577951308232088;\n    var FORTPI = Math.PI/4;\n    var TWO_PI = Math.PI * 2;\n    // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n    // degree range by a tiny amount don't get wrapped. This prevents points that\n    // have drifted from their original location along the 180th meridian (due to\n    // floating point error) from changing their sign.\n    var SPI = 3.14159265359;\n\n    var exports$1 = {};\n    exports$1.greenwich = 0.0; //\"0dE\",\n    exports$1.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\n    exports$1.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\n    exports$1.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\n    exports$1.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\n    exports$1.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\n    exports$1.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\n    exports$1.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\n    exports$1.ferro = -17.666666666667; //\"17d40'W\",\n    exports$1.brussels = 4.367975; //\"4d22'4.71\\\"E\",\n    exports$1.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\n    exports$1.athens = 23.7163375; //\"23d42'58.815\\\"E\",\n    exports$1.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n    var units = {\n      ft: {to_meter: 0.3048},\n      'us-ft': {to_meter: 1200 / 3937}\n    };\n\n    var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n    function match(obj, key) {\n      if (obj[key]) {\n        return obj[key];\n      }\n      var keys = Object.keys(obj);\n      var lkey = key.toLowerCase().replace(ignoredChar, '');\n      var i = -1;\n      var testkey, processedKey;\n      while (++i < keys.length) {\n        testkey = keys[i];\n        processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n        if (processedKey === lkey) {\n          return obj[testkey];\n        }\n      }\n    }\n\n    var parseProj = function(defData) {\n      var self = {};\n      var paramObj = defData.split('+').map(function(v) {\n        return v.trim();\n      }).filter(function(a) {\n        return a;\n      }).reduce(function(p, a) {\n        var split = a.split('=');\n        split.push(true);\n        p[split[0].toLowerCase()] = split[1];\n        return p;\n      }, {});\n      var paramName, paramVal, paramOutname;\n      var params = {\n        proj: 'projName',\n        datum: 'datumCode',\n        rf: function(v) {\n          self.rf = parseFloat(v);\n        },\n        lat_0: function(v) {\n          self.lat0 = v * D2R;\n        },\n        lat_1: function(v) {\n          self.lat1 = v * D2R;\n        },\n        lat_2: function(v) {\n          self.lat2 = v * D2R;\n        },\n        lat_ts: function(v) {\n          self.lat_ts = v * D2R;\n        },\n        lon_0: function(v) {\n          self.long0 = v * D2R;\n        },\n        lon_1: function(v) {\n          self.long1 = v * D2R;\n        },\n        lon_2: function(v) {\n          self.long2 = v * D2R;\n        },\n        alpha: function(v) {\n          self.alpha = parseFloat(v) * D2R;\n        },\n        gamma: function(v) {\n          self.rectified_grid_angle = parseFloat(v);\n        },\n        lonc: function(v) {\n          self.longc = v * D2R;\n        },\n        x_0: function(v) {\n          self.x0 = parseFloat(v);\n        },\n        y_0: function(v) {\n          self.y0 = parseFloat(v);\n        },\n        k_0: function(v) {\n          self.k0 = parseFloat(v);\n        },\n        k: function(v) {\n          self.k0 = parseFloat(v);\n        },\n        a: function(v) {\n          self.a = parseFloat(v);\n        },\n        b: function(v) {\n          self.b = parseFloat(v);\n        },\n        r_a: function() {\n          self.R_A = true;\n        },\n        zone: function(v) {\n          self.zone = parseInt(v, 10);\n        },\n        south: function() {\n          self.utmSouth = true;\n        },\n        towgs84: function(v) {\n          self.datum_params = v.split(\",\").map(function(a) {\n            return parseFloat(a);\n          });\n        },\n        to_meter: function(v) {\n          self.to_meter = parseFloat(v);\n        },\n        units: function(v) {\n          self.units = v;\n          var unit = match(units, v);\n          if (unit) {\n            self.to_meter = unit.to_meter;\n          }\n        },\n        from_greenwich: function(v) {\n          self.from_greenwich = v * D2R;\n        },\n        pm: function(v) {\n          var pm = match(exports$1, v);\n          self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n        },\n        nadgrids: function(v) {\n          if (v === '@null') {\n            self.datumCode = 'none';\n          }\n          else {\n            self.nadgrids = v;\n          }\n        },\n        axis: function(v) {\n          var legalAxis = \"ewnsud\";\n          if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n            self.axis = v;\n          }\n        },\n        approx: function() {\n          self.approx = true;\n        }\n      };\n      for (paramName in paramObj) {\n        paramVal = paramObj[paramName];\n        if (paramName in params) {\n          paramOutname = params[paramName];\n          if (typeof paramOutname === 'function') {\n            paramOutname(paramVal);\n          }\n          else {\n            self[paramOutname] = paramVal;\n          }\n        }\n        else {\n          self[paramName] = paramVal;\n        }\n      }\n      if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n        self.datumCode = self.datumCode.toLowerCase();\n      }\n      return self;\n    };\n\n    var NEUTRAL = 1;\n    var KEYWORD = 2;\n    var NUMBER = 3;\n    var QUOTED = 4;\n    var AFTERQUOTE = 5;\n    var ENDED = -1;\n    var whitespace = /\\s/;\n    var latin = /[A-Za-z]/;\n    var keyword = /[A-Za-z84]/;\n    var endThings = /[,\\]]/;\n    var digets = /[\\d\\.E\\-\\+]/;\n    // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n    function Parser(text) {\n      if (typeof text !== 'string') {\n        throw new Error('not a string');\n      }\n      this.text = text.trim();\n      this.level = 0;\n      this.place = 0;\n      this.root = null;\n      this.stack = [];\n      this.currentObject = null;\n      this.state = NEUTRAL;\n    }\n    Parser.prototype.readCharicter = function() {\n      var char = this.text[this.place++];\n      if (this.state !== QUOTED) {\n        while (whitespace.test(char)) {\n          if (this.place >= this.text.length) {\n            return;\n          }\n          char = this.text[this.place++];\n        }\n      }\n      switch (this.state) {\n        case NEUTRAL:\n          return this.neutral(char);\n        case KEYWORD:\n          return this.keyword(char)\n        case QUOTED:\n          return this.quoted(char);\n        case AFTERQUOTE:\n          return this.afterquote(char);\n        case NUMBER:\n          return this.number(char);\n        case ENDED:\n          return;\n      }\n    };\n    Parser.prototype.afterquote = function(char) {\n      if (char === '\"') {\n        this.word += '\"';\n        this.state = QUOTED;\n        return;\n      }\n      if (endThings.test(char)) {\n        this.word = this.word.trim();\n        this.afterItem(char);\n        return;\n      }\n      throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n    };\n    Parser.prototype.afterItem = function(char) {\n      if (char === ',') {\n        if (this.word !== null) {\n          this.currentObject.push(this.word);\n        }\n        this.word = null;\n        this.state = NEUTRAL;\n        return;\n      }\n      if (char === ']') {\n        this.level--;\n        if (this.word !== null) {\n          this.currentObject.push(this.word);\n          this.word = null;\n        }\n        this.state = NEUTRAL;\n        this.currentObject = this.stack.pop();\n        if (!this.currentObject) {\n          this.state = ENDED;\n        }\n\n        return;\n      }\n    };\n    Parser.prototype.number = function(char) {\n      if (digets.test(char)) {\n        this.word += char;\n        return;\n      }\n      if (endThings.test(char)) {\n        this.word = parseFloat(this.word);\n        this.afterItem(char);\n        return;\n      }\n      throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n    };\n    Parser.prototype.quoted = function(char) {\n      if (char === '\"') {\n        this.state = AFTERQUOTE;\n        return;\n      }\n      this.word += char;\n      return;\n    };\n    Parser.prototype.keyword = function(char) {\n      if (keyword.test(char)) {\n        this.word += char;\n        return;\n      }\n      if (char === '[') {\n        var newObjects = [];\n        newObjects.push(this.word);\n        this.level++;\n        if (this.root === null) {\n          this.root = newObjects;\n        } else {\n          this.currentObject.push(newObjects);\n        }\n        this.stack.push(this.currentObject);\n        this.currentObject = newObjects;\n        this.state = NEUTRAL;\n        return;\n      }\n      if (endThings.test(char)) {\n        this.afterItem(char);\n        return;\n      }\n      throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n    };\n    Parser.prototype.neutral = function(char) {\n      if (latin.test(char)) {\n        this.word = char;\n        this.state = KEYWORD;\n        return;\n      }\n      if (char === '\"') {\n        this.word = '';\n        this.state = QUOTED;\n        return;\n      }\n      if (digets.test(char)) {\n        this.word = char;\n        this.state = NUMBER;\n        return;\n      }\n      if (endThings.test(char)) {\n        this.afterItem(char);\n        return;\n      }\n      throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n    };\n    Parser.prototype.output = function() {\n      while (this.place < this.text.length) {\n        this.readCharicter();\n      }\n      if (this.state === ENDED) {\n        return this.root;\n      }\n      throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n    };\n\n    function parseString(txt) {\n      var parser = new Parser(txt);\n      return parser.output();\n    }\n\n    function mapit(obj, key, value) {\n      if (Array.isArray(key)) {\n        value.unshift(key);\n        key = null;\n      }\n      var thing = key ? {} : obj;\n\n      var out = value.reduce(function(newObj, item) {\n        sExpr(item, newObj);\n        return newObj\n      }, thing);\n      if (key) {\n        obj[key] = out;\n      }\n    }\n\n    function sExpr(v, obj) {\n      if (!Array.isArray(v)) {\n        obj[v] = true;\n        return;\n      }\n      var key = v.shift();\n      if (key === 'PARAMETER') {\n        key = v.shift();\n      }\n      if (v.length === 1) {\n        if (Array.isArray(v[0])) {\n          obj[key] = {};\n          sExpr(v[0], obj[key]);\n          return;\n        }\n        obj[key] = v[0];\n        return;\n      }\n      if (!v.length) {\n        obj[key] = true;\n        return;\n      }\n      if (key === 'TOWGS84') {\n        obj[key] = v;\n        return;\n      }\n      if (key === 'AXIS') {\n        if (!(key in obj)) {\n          obj[key] = [];\n        }\n        obj[key].push(v);\n        return;\n      }\n      if (!Array.isArray(key)) {\n        obj[key] = {};\n      }\n\n      var i;\n      switch (key) {\n        case 'UNIT':\n        case 'PRIMEM':\n        case 'VERT_DATUM':\n          obj[key] = {\n            name: v[0].toLowerCase(),\n            convert: v[1]\n          };\n          if (v.length === 3) {\n            sExpr(v[2], obj[key]);\n          }\n          return;\n        case 'SPHEROID':\n        case 'ELLIPSOID':\n          obj[key] = {\n            name: v[0],\n            a: v[1],\n            rf: v[2]\n          };\n          if (v.length === 4) {\n            sExpr(v[3], obj[key]);\n          }\n          return;\n        case 'PROJECTEDCRS':\n        case 'PROJCRS':\n        case 'GEOGCS':\n        case 'GEOCCS':\n        case 'PROJCS':\n        case 'LOCAL_CS':\n        case 'GEODCRS':\n        case 'GEODETICCRS':\n        case 'GEODETICDATUM':\n        case 'EDATUM':\n        case 'ENGINEERINGDATUM':\n        case 'VERT_CS':\n        case 'VERTCRS':\n        case 'VERTICALCRS':\n        case 'COMPD_CS':\n        case 'COMPOUNDCRS':\n        case 'ENGINEERINGCRS':\n        case 'ENGCRS':\n        case 'FITTED_CS':\n        case 'LOCAL_DATUM':\n        case 'DATUM':\n          v[0] = ['name', v[0]];\n          mapit(obj, key, v);\n          return;\n        default:\n          i = -1;\n          while (++i < v.length) {\n            if (!Array.isArray(v[i])) {\n              return sExpr(v, obj[key]);\n            }\n          }\n          return mapit(obj, key, v);\n      }\n    }\n\n    var D2R$1 = 0.01745329251994329577;\n    function rename(obj, params) {\n      var outName = params[0];\n      var inName = params[1];\n      if (!(outName in obj) && (inName in obj)) {\n        obj[outName] = obj[inName];\n        if (params.length === 3) {\n          obj[outName] = params[2](obj[outName]);\n        }\n      }\n    }\n\n    function d2r(input) {\n      return input * D2R$1;\n    }\n\n    function cleanWKT(wkt) {\n      if (wkt.type === 'GEOGCS') {\n        wkt.projName = 'longlat';\n      } else if (wkt.type === 'LOCAL_CS') {\n        wkt.projName = 'identity';\n        wkt.local = true;\n      } else {\n        if (typeof wkt.PROJECTION === 'object') {\n          wkt.projName = Object.keys(wkt.PROJECTION)[0];\n        } else {\n          wkt.projName = wkt.PROJECTION;\n        }\n      }\n      if (wkt.AXIS) {\n        var axisOrder = '';\n        for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n          var axis = wkt.AXIS[i];\n          var descriptor = axis[0].toLowerCase();\n          if (descriptor.indexOf('north') !== -1) {\n            axisOrder += 'n';\n          } else if (descriptor.indexOf('south') !== -1) {\n            axisOrder += 's';\n          } else if (descriptor.indexOf('east') !== -1) {\n            axisOrder += 'e';\n          } else if (descriptor.indexOf('west') !== -1) {\n            axisOrder += 'w';\n          }\n        }\n        if (axisOrder.length === 2) {\n          axisOrder += 'u';\n        }\n        if (axisOrder.length === 3) {\n          wkt.axis = axisOrder;\n        }\n      }\n      if (wkt.UNIT) {\n        wkt.units = wkt.UNIT.name.toLowerCase();\n        if (wkt.units === 'metre') {\n          wkt.units = 'meter';\n        }\n        if (wkt.UNIT.convert) {\n          if (wkt.type === 'GEOGCS') {\n            if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n              wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n            }\n          } else {\n            wkt.to_meter = wkt.UNIT.convert;\n          }\n        }\n      }\n      var geogcs = wkt.GEOGCS;\n      if (wkt.type === 'GEOGCS') {\n        geogcs = wkt;\n      }\n      if (geogcs) {\n        //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n        //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n        //}\n        if (geogcs.DATUM) {\n          wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n        } else {\n          wkt.datumCode = geogcs.name.toLowerCase();\n        }\n        if (wkt.datumCode.slice(0, 2) === 'd_') {\n          wkt.datumCode = wkt.datumCode.slice(2);\n        }\n        if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n          wkt.datumCode = 'nzgd49';\n        }\n        if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n          if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n            wkt.sphere = true;\n          }\n          wkt.datumCode = 'wgs84';\n        }\n        if (wkt.datumCode.slice(-6) === '_ferro') {\n          wkt.datumCode = wkt.datumCode.slice(0, - 6);\n        }\n        if (wkt.datumCode.slice(-8) === '_jakarta') {\n          wkt.datumCode = wkt.datumCode.slice(0, - 8);\n        }\n        if (~wkt.datumCode.indexOf('belge')) {\n          wkt.datumCode = 'rnb72';\n        }\n        if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n          wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n          if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n            wkt.ellps = 'intl';\n          }\n\n          wkt.a = geogcs.DATUM.SPHEROID.a;\n          wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n        }\n\n        if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n          wkt.datum_params = geogcs.DATUM.TOWGS84;\n        }\n        if (~wkt.datumCode.indexOf('osgb_1936')) {\n          wkt.datumCode = 'osgb36';\n        }\n        if (~wkt.datumCode.indexOf('osni_1952')) {\n          wkt.datumCode = 'osni52';\n        }\n        if (~wkt.datumCode.indexOf('tm65')\n          || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n          wkt.datumCode = 'ire65';\n        }\n        if (wkt.datumCode === 'ch1903+') {\n          wkt.datumCode = 'ch1903';\n        }\n        if (~wkt.datumCode.indexOf('israel')) {\n          wkt.datumCode = 'isr93';\n        }\n      }\n      if (wkt.b && !isFinite(wkt.b)) {\n        wkt.b = wkt.a;\n      }\n\n      function toMeter(input) {\n        var ratio = wkt.to_meter || 1;\n        return input * ratio;\n      }\n      var renamer = function(a) {\n        return rename(wkt, a);\n      };\n      var list = [\n        ['standard_parallel_1', 'Standard_Parallel_1'],\n        ['standard_parallel_2', 'Standard_Parallel_2'],\n        ['false_easting', 'False_Easting'],\n        ['false_northing', 'False_Northing'],\n        ['central_meridian', 'Central_Meridian'],\n        ['latitude_of_origin', 'Latitude_Of_Origin'],\n        ['latitude_of_origin', 'Central_Parallel'],\n        ['scale_factor', 'Scale_Factor'],\n        ['k0', 'scale_factor'],\n        ['latitude_of_center', 'Latitude_Of_Center'],\n        ['latitude_of_center', 'Latitude_of_center'],\n        ['lat0', 'latitude_of_center', d2r],\n        ['longitude_of_center', 'Longitude_Of_Center'],\n        ['longitude_of_center', 'Longitude_of_center'],\n        ['longc', 'longitude_of_center', d2r],\n        ['x0', 'false_easting', toMeter],\n        ['y0', 'false_northing', toMeter],\n        ['long0', 'central_meridian', d2r],\n        ['lat0', 'latitude_of_origin', d2r],\n        ['lat0', 'standard_parallel_1', d2r],\n        ['lat1', 'standard_parallel_1', d2r],\n        ['lat2', 'standard_parallel_2', d2r],\n        ['azimuth', 'Azimuth'],\n        ['alpha', 'azimuth', d2r],\n        ['srsCode', 'name']\n      ];\n      list.forEach(renamer);\n      if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n        wkt.long0 = wkt.longc;\n      }\n      if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n        wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n        wkt.lat_ts = wkt.lat1;\n      }\n    }\n    var wkt = function(wkt) {\n      var lisp = parseString(wkt);\n      var type = lisp.shift();\n      var name = lisp.shift();\n      lisp.unshift(['name', name]);\n      lisp.unshift(['type', type]);\n      var obj = {};\n      sExpr(lisp, obj);\n      cleanWKT(obj);\n      return obj;\n    };\n\n    function defs(name) {\n      /*global console*/\n      var that = this;\n      if (arguments.length === 2) {\n        var def = arguments[1];\n        if (typeof def === 'string') {\n          if (def.charAt(0) === '+') {\n            defs[name] = parseProj(arguments[1]);\n          }\n          else {\n            defs[name] = wkt(arguments[1]);\n          }\n        } else {\n          defs[name] = def;\n        }\n      }\n      else if (arguments.length === 1) {\n        if (Array.isArray(name)) {\n          return name.map(function(v) {\n            if (Array.isArray(v)) {\n              defs.apply(that, v);\n            }\n            else {\n              defs(v);\n            }\n          });\n        }\n        else if (typeof name === 'string') {\n          if (name in defs) {\n            return defs[name];\n          }\n        }\n        else if ('EPSG' in name) {\n          defs['EPSG:' + name.EPSG] = name;\n        }\n        else if ('ESRI' in name) {\n          defs['ESRI:' + name.ESRI] = name;\n        }\n        else if ('IAU2000' in name) {\n          defs['IAU2000:' + name.IAU2000] = name;\n        }\n        else {\n          console.log(name);\n        }\n        return;\n      }\n\n\n    }\n    globals(defs);\n\n    function testObj(code){\n      return typeof code === 'string';\n    }\n    function testDef(code){\n      return code in defs;\n    }\n    var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n    function testWKT(code){\n      return codeWords.some(function (word) {\n        return code.indexOf(word) > -1;\n      });\n    }\n    var codes = ['3857', '900913', '3785', '102113'];\n    function checkMercator(item) {\n      var auth = match(item, 'authority');\n      if (!auth) {\n        return;\n      }\n      var code = match(auth, 'epsg');\n      return code && codes.indexOf(code) > -1;\n    }\n    function checkProjStr(item) {\n      var ext = match(item, 'extension');\n      if (!ext) {\n        return;\n      }\n      return match(ext, 'proj4');\n    }\n    function testProj(code){\n      return code[0] === '+';\n    }\n    function parse(code){\n      if (testObj(code)) {\n        //check to see if this is a WKT string\n        if (testDef(code)) {\n          return defs[code];\n        }\n        if (testWKT(code)) {\n          var out = wkt(code);\n          // test of spetial case, due to this being a very common and often malformed\n          if (checkMercator(out)) {\n            return defs['EPSG:3857'];\n          }\n          var maybeProjStr = checkProjStr(out);\n          if (maybeProjStr) {\n            return parseProj(maybeProjStr);\n          }\n          return out;\n        }\n        if (testProj(code)) {\n          return parseProj(code);\n        }\n      }else{\n        return code;\n      }\n    }\n\n    var extend = function(destination, source) {\n      destination = destination || {};\n      var value, property;\n      if (!source) {\n        return destination;\n      }\n      for (property in source) {\n        value = source[property];\n        if (value !== undefined) {\n          destination[property] = value;\n        }\n      }\n      return destination;\n    };\n\n    var msfnz = function(eccent, sinphi, cosphi) {\n      var con = eccent * sinphi;\n      return cosphi / (Math.sqrt(1 - con * con));\n    };\n\n    var sign = function(x) {\n      return x<0 ? -1 : 1;\n    };\n\n    var adjust_lon = function(x) {\n      return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n    };\n\n    var tsfnz = function(eccent, phi, sinphi) {\n      var con = eccent * sinphi;\n      var com = 0.5 * eccent;\n      con = Math.pow(((1 - con) / (1 + con)), com);\n      return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n    };\n\n    var phi2z = function(eccent, ts) {\n      var eccnth = 0.5 * eccent;\n      var con, dphi;\n      var phi = HALF_PI - 2 * Math.atan(ts);\n      for (var i = 0; i <= 15; i++) {\n        con = eccent * Math.sin(phi);\n        dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) {\n          return phi;\n        }\n      }\n      //console.log(\"phi2z has NoConvergence\");\n      return -9999;\n    };\n\n    function init() {\n      var con = this.b / this.a;\n      this.es = 1 - con * con;\n      if(!('x0' in this)){\n        this.x0 = 0;\n      }\n      if(!('y0' in this)){\n        this.y0 = 0;\n      }\n      this.e = Math.sqrt(this.es);\n      if (this.lat_ts) {\n        if (this.sphere) {\n          this.k0 = Math.cos(this.lat_ts);\n        }\n        else {\n          this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n        }\n      }\n      else {\n        if (!this.k0) {\n          if (this.k) {\n            this.k0 = this.k;\n          }\n          else {\n            this.k0 = 1;\n          }\n        }\n      }\n    }\n\n    /* Mercator forward equations--mapping lat,long to x,y\n      --------------------------------------------------*/\n\n    function forward(p) {\n      var lon = p.x;\n      var lat = p.y;\n      // convert to radians\n      if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n        return null;\n      }\n\n      var x, y;\n      if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n        return null;\n      }\n      else {\n        if (this.sphere) {\n          x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n          y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n        }\n        else {\n          var sinphi = Math.sin(lat);\n          var ts = tsfnz(this.e, lat, sinphi);\n          x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n          y = this.y0 - this.a * this.k0 * Math.log(ts);\n        }\n        p.x = x;\n        p.y = y;\n        return p;\n      }\n    }\n\n    /* Mercator inverse equations--mapping x,y to lat/long\n      --------------------------------------------------*/\n    function inverse(p) {\n\n      var x = p.x - this.x0;\n      var y = p.y - this.y0;\n      var lon, lat;\n\n      if (this.sphere) {\n        lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n      }\n      else {\n        var ts = Math.exp(-y / (this.a * this.k0));\n        lat = phi2z(this.e, ts);\n        if (lat === -9999) {\n          return null;\n        }\n      }\n      lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$1 = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\n    var merc = {\n      init: init,\n      forward: forward,\n      inverse: inverse,\n      names: names$1\n    };\n\n    function init$1() {\n      //no-op for longlat\n    }\n\n    function identity(pt) {\n      return pt;\n    }\n    var names$2 = [\"longlat\", \"identity\"];\n    var longlat = {\n      init: init$1,\n      forward: identity,\n      inverse: identity,\n      names: names$2\n    };\n\n    var projs = [merc, longlat];\n    var names = {};\n    var projStore = [];\n\n    function add(proj, i) {\n      var len = projStore.length;\n      if (!proj.names) {\n        console.log(i);\n        return true;\n      }\n      projStore[len] = proj;\n      proj.names.forEach(function(n) {\n        names[n.toLowerCase()] = len;\n      });\n      return this;\n    }\n\n    function get(name) {\n      if (!name) {\n        return false;\n      }\n      var n = name.toLowerCase();\n      if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n        return projStore[names[n]];\n      }\n    }\n\n    function start() {\n      projs.forEach(add);\n    }\n    var projections = {\n      start: start,\n      add: add,\n      get: get\n    };\n\n    var exports$2 = {};\n    exports$2.MERIT = {\n      a: 6378137.0,\n      rf: 298.257,\n      ellipseName: \"MERIT 1983\"\n    };\n\n    exports$2.SGS85 = {\n      a: 6378136.0,\n      rf: 298.257,\n      ellipseName: \"Soviet Geodetic System 85\"\n    };\n\n    exports$2.GRS80 = {\n      a: 6378137.0,\n      rf: 298.257222101,\n      ellipseName: \"GRS 1980(IUGG, 1980)\"\n    };\n\n    exports$2.IAU76 = {\n      a: 6378140.0,\n      rf: 298.257,\n      ellipseName: \"IAU 1976\"\n    };\n\n    exports$2.airy = {\n      a: 6377563.396,\n      b: 6356256.910,\n      ellipseName: \"Airy 1830\"\n    };\n\n    exports$2.APL4 = {\n      a: 6378137,\n      rf: 298.25,\n      ellipseName: \"Appl. Physics. 1965\"\n    };\n\n    exports$2.NWL9D = {\n      a: 6378145.0,\n      rf: 298.25,\n      ellipseName: \"Naval Weapons Lab., 1965\"\n    };\n\n    exports$2.mod_airy = {\n      a: 6377340.189,\n      b: 6356034.446,\n      ellipseName: \"Modified Airy\"\n    };\n\n    exports$2.andrae = {\n      a: 6377104.43,\n      rf: 300.0,\n      ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n    };\n\n    exports$2.aust_SA = {\n      a: 6378160.0,\n      rf: 298.25,\n      ellipseName: \"Australian Natl & S. Amer. 1969\"\n    };\n\n    exports$2.GRS67 = {\n      a: 6378160.0,\n      rf: 298.2471674270,\n      ellipseName: \"GRS 67(IUGG 1967)\"\n    };\n\n    exports$2.bessel = {\n      a: 6377397.155,\n      rf: 299.1528128,\n      ellipseName: \"Bessel 1841\"\n    };\n\n    exports$2.bess_nam = {\n      a: 6377483.865,\n      rf: 299.1528128,\n      ellipseName: \"Bessel 1841 (Namibia)\"\n    };\n\n    exports$2.clrk66 = {\n      a: 6378206.4,\n      b: 6356583.8,\n      ellipseName: \"Clarke 1866\"\n    };\n\n    exports$2.clrk80 = {\n      a: 6378249.145,\n      rf: 293.4663,\n      ellipseName: \"Clarke 1880 mod.\"\n    };\n\n    exports$2.clrk58 = {\n      a: 6378293.645208759,\n      rf: 294.2606763692654,\n      ellipseName: \"Clarke 1858\"\n    };\n\n    exports$2.CPM = {\n      a: 6375738.7,\n      rf: 334.29,\n      ellipseName: \"Comm. des Poids et Mesures 1799\"\n    };\n\n    exports$2.delmbr = {\n      a: 6376428.0,\n      rf: 311.5,\n      ellipseName: \"Delambre 1810 (Belgium)\"\n    };\n\n    exports$2.engelis = {\n      a: 6378136.05,\n      rf: 298.2566,\n      ellipseName: \"Engelis 1985\"\n    };\n\n    exports$2.evrst30 = {\n      a: 6377276.345,\n      rf: 300.8017,\n      ellipseName: \"Everest 1830\"\n    };\n\n    exports$2.evrst48 = {\n      a: 6377304.063,\n      rf: 300.8017,\n      ellipseName: \"Everest 1948\"\n    };\n\n    exports$2.evrst56 = {\n      a: 6377301.243,\n      rf: 300.8017,\n      ellipseName: \"Everest 1956\"\n    };\n\n    exports$2.evrst69 = {\n      a: 6377295.664,\n      rf: 300.8017,\n      ellipseName: \"Everest 1969\"\n    };\n\n    exports$2.evrstSS = {\n      a: 6377298.556,\n      rf: 300.8017,\n      ellipseName: \"Everest (Sabah & Sarawak)\"\n    };\n\n    exports$2.fschr60 = {\n      a: 6378166.0,\n      rf: 298.3,\n      ellipseName: \"Fischer (Mercury Datum) 1960\"\n    };\n\n    exports$2.fschr60m = {\n      a: 6378155.0,\n      rf: 298.3,\n      ellipseName: \"Fischer 1960\"\n    };\n\n    exports$2.fschr68 = {\n      a: 6378150.0,\n      rf: 298.3,\n      ellipseName: \"Fischer 1968\"\n    };\n\n    exports$2.helmert = {\n      a: 6378200.0,\n      rf: 298.3,\n      ellipseName: \"Helmert 1906\"\n    };\n\n    exports$2.hough = {\n      a: 6378270.0,\n      rf: 297.0,\n      ellipseName: \"Hough\"\n    };\n\n    exports$2.intl = {\n      a: 6378388.0,\n      rf: 297.0,\n      ellipseName: \"International 1909 (Hayford)\"\n    };\n\n    exports$2.kaula = {\n      a: 6378163.0,\n      rf: 298.24,\n      ellipseName: \"Kaula 1961\"\n    };\n\n    exports$2.lerch = {\n      a: 6378139.0,\n      rf: 298.257,\n      ellipseName: \"Lerch 1979\"\n    };\n\n    exports$2.mprts = {\n      a: 6397300.0,\n      rf: 191.0,\n      ellipseName: \"Maupertius 1738\"\n    };\n\n    exports$2.new_intl = {\n      a: 6378157.5,\n      b: 6356772.2,\n      ellipseName: \"New International 1967\"\n    };\n\n    exports$2.plessis = {\n      a: 6376523.0,\n      rf: 6355863.0,\n      ellipseName: \"Plessis 1817 (France)\"\n    };\n\n    exports$2.krass = {\n      a: 6378245.0,\n      rf: 298.3,\n      ellipseName: \"Krassovsky, 1942\"\n    };\n\n    exports$2.SEasia = {\n      a: 6378155.0,\n      b: 6356773.3205,\n      ellipseName: \"Southeast Asia\"\n    };\n\n    exports$2.walbeck = {\n      a: 6376896.0,\n      b: 6355834.8467,\n      ellipseName: \"Walbeck\"\n    };\n\n    exports$2.WGS60 = {\n      a: 6378165.0,\n      rf: 298.3,\n      ellipseName: \"WGS 60\"\n    };\n\n    exports$2.WGS66 = {\n      a: 6378145.0,\n      rf: 298.25,\n      ellipseName: \"WGS 66\"\n    };\n\n    exports$2.WGS7 = {\n      a: 6378135.0,\n      rf: 298.26,\n      ellipseName: \"WGS 72\"\n    };\n\n    var WGS84 = exports$2.WGS84 = {\n      a: 6378137.0,\n      rf: 298.257223563,\n      ellipseName: \"WGS 84\"\n    };\n\n    exports$2.sphere = {\n      a: 6370997.0,\n      b: 6370997.0,\n      ellipseName: \"Normal Sphere (r=6370997)\"\n    };\n\n    function eccentricity(a, b, rf, R_A) {\n      var a2 = a * a; // used in geocentric\n      var b2 = b * b; // used in geocentric\n      var es = (a2 - b2) / a2; // e ^ 2\n      var e = 0;\n      if (R_A) {\n        a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n        a2 = a * a;\n        es = 0;\n      } else {\n        e = Math.sqrt(es); // eccentricity\n      }\n      var ep2 = (a2 - b2) / b2; // used in geocentric\n      return {\n        es: es,\n        e: e,\n        ep2: ep2\n      };\n    }\n    function sphere(a, b, rf, ellps, sphere) {\n      if (!a) { // do we have an ellipsoid?\n        var ellipse = match(exports$2, ellps);\n        if (!ellipse) {\n          ellipse = WGS84;\n        }\n        a = ellipse.a;\n        b = ellipse.b;\n        rf = ellipse.rf;\n      }\n\n      if (rf && !b) {\n        b = (1.0 - 1.0 / rf) * a;\n      }\n      if (rf === 0 || Math.abs(a - b) < EPSLN) {\n        sphere = true;\n        b = a;\n      }\n      return {\n        a: a,\n        b: b,\n        rf: rf,\n        sphere: sphere\n      };\n    }\n\n    var exports$3 = {};\n    exports$3.wgs84 = {\n      towgs84: \"0,0,0\",\n      ellipse: \"WGS84\",\n      datumName: \"WGS84\"\n    };\n\n    exports$3.ch1903 = {\n      towgs84: \"674.374,15.056,405.346\",\n      ellipse: \"bessel\",\n      datumName: \"swiss\"\n    };\n\n    exports$3.ggrs87 = {\n      towgs84: \"-199.87,74.79,246.62\",\n      ellipse: \"GRS80\",\n      datumName: \"Greek_Geodetic_Reference_System_1987\"\n    };\n\n    exports$3.nad83 = {\n      towgs84: \"0,0,0\",\n      ellipse: \"GRS80\",\n      datumName: \"North_American_Datum_1983\"\n    };\n\n    exports$3.nad27 = {\n      nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n      ellipse: \"clrk66\",\n      datumName: \"North_American_Datum_1927\"\n    };\n\n    exports$3.potsdam = {\n      towgs84: \"606.0,23.0,413.0\",\n      ellipse: \"bessel\",\n      datumName: \"Potsdam Rauenberg 1950 DHDN\"\n    };\n\n    exports$3.carthage = {\n      towgs84: \"-263.0,6.0,431.0\",\n      ellipse: \"clark80\",\n      datumName: \"Carthage 1934 Tunisia\"\n    };\n\n    exports$3.hermannskogel = {\n      towgs84: \"653.0,-212.0,449.0\",\n      ellipse: \"bessel\",\n      datumName: \"Hermannskogel\"\n    };\n\n    exports$3.osni52 = {\n      towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n      ellipse: \"airy\",\n      datumName: \"Irish National\"\n    };\n\n    exports$3.ire65 = {\n      towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n      ellipse: \"mod_airy\",\n      datumName: \"Ireland 1965\"\n    };\n\n    exports$3.rassadiran = {\n      towgs84: \"-133.63,-157.5,-158.62\",\n      ellipse: \"intl\",\n      datumName: \"Rassadiran\"\n    };\n\n    exports$3.nzgd49 = {\n      towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n      ellipse: \"intl\",\n      datumName: \"New Zealand Geodetic Datum 1949\"\n    };\n\n    exports$3.osgb36 = {\n      towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n      ellipse: \"airy\",\n      datumName: \"Airy 1830\"\n    };\n\n    exports$3.s_jtsk = {\n      towgs84: \"589,76,480\",\n      ellipse: 'bessel',\n      datumName: 'S-JTSK (Ferro)'\n    };\n\n    exports$3.beduaram = {\n      towgs84: '-106,-87,188',\n      ellipse: 'clrk80',\n      datumName: 'Beduaram'\n    };\n\n    exports$3.gunung_segara = {\n      towgs84: '-403,684,41',\n      ellipse: 'bessel',\n      datumName: 'Gunung Segara Jakarta'\n    };\n\n    exports$3.rnb72 = {\n      towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n      ellipse: \"intl\",\n      datumName: \"Reseau National Belge 1972\"\n    };\n\n    function datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n      var out = {};\n\n      if (datumCode === undefined || datumCode === 'none') {\n        out.datum_type = PJD_NODATUM;\n      } else {\n        out.datum_type = PJD_WGS84;\n      }\n\n      if (datum_params) {\n        out.datum_params = datum_params.map(parseFloat);\n        if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n          out.datum_type = PJD_3PARAM;\n        }\n        if (out.datum_params.length > 3) {\n          if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n            out.datum_type = PJD_7PARAM;\n            out.datum_params[3] *= SEC_TO_RAD;\n            out.datum_params[4] *= SEC_TO_RAD;\n            out.datum_params[5] *= SEC_TO_RAD;\n            out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n          }\n        }\n      }\n\n      if (nadgrids) {\n        out.datum_type = PJD_GRIDSHIFT;\n        out.grids = nadgrids;\n      }\n      out.a = a; //datum object also uses these values\n      out.b = b;\n      out.es = es;\n      out.ep2 = ep2;\n      return out;\n    }\n\n    /**\n     * Resources for details of NTv2 file formats:\n     * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n     * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n     */\n\n    var loadedNadgrids = {};\n\n    /**\n     * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n     * as an ArrayBuffer.\n     */\n    function nadgrid(key, data) {\n      var view = new DataView(data);\n      var isLittleEndian = detectLittleEndian(view);\n      var header = readHeader(view, isLittleEndian);\n      if (header.nSubgrids > 1) {\n        console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n      }\n      var subgrids = readSubgrids(view, header, isLittleEndian);\n      var nadgrid = {header: header, subgrids: subgrids};\n      loadedNadgrids[key] = nadgrid;\n      return nadgrid;\n    }\n\n    /**\n     * Given a proj4 value for nadgrids, return an array of loaded grids\n     */\n    function getNadgrids(nadgrids) {\n      // Format details: http://proj.maptools.org/gen_parms.html\n      if (nadgrids === undefined) { return null; }\n      var grids = nadgrids.split(',');\n      return grids.map(parseNadgridString);\n    }\n\n    function parseNadgridString(value) {\n      if (value.length === 0) {\n        return null;\n      }\n      var optional = value[0] === '@';\n      if (optional) {\n        value = value.slice(1);\n      }\n      if (value === 'null') {\n        return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n      }\n      return {\n        name: value,\n        mandatory: !optional,\n        grid: loadedNadgrids[value] || null,\n        isNull: false\n      };\n    }\n\n    function secondsToRadians(seconds) {\n      return (seconds / 3600) * Math.PI / 180;\n    }\n\n    function detectLittleEndian(view) {\n      var nFields = view.getInt32(8, false);\n      if (nFields === 11) {\n        return false;\n      }\n      nFields = view.getInt32(8, true);\n      if (nFields !== 11) {\n        console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n      }\n      return true;\n    }\n\n    function readHeader(view, isLittleEndian) {\n      return {\n        nFields: view.getInt32(8, isLittleEndian),\n        nSubgridFields: view.getInt32(24, isLittleEndian),\n        nSubgrids: view.getInt32(40, isLittleEndian),\n        shiftType: decodeString(view, 56, 56 + 8).trim(),\n        fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n        fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n        toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n        toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n      };\n    }\n\n    function decodeString(view, start, end) {\n      return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n    }\n\n    function readSubgrids(view, header, isLittleEndian) {\n      var gridOffset = 176;\n      var grids = [];\n      for (var i = 0; i < header.nSubgrids; i++) {\n        var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n        var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n        var lngColumnCount = Math.round(\n          1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n        var latColumnCount = Math.round(\n          1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n        // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n        grids.push({\n          ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n          del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n          lim: [lngColumnCount, latColumnCount],\n          count: subHeader.gridNodeCount,\n          cvs: mapNodes(nodes)\n        });\n      }\n      return grids;\n    }\n\n    function mapNodes(nodes) {\n      return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n    }\n\n    function readGridHeader(view, offset, isLittleEndian) {\n      return {\n        name: decodeString(view, offset + 8, offset + 16).trim(),\n        parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n        lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n        upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n        lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n        upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n        latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n        longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n        gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n      };\n    }\n\n    function readGridNodes(view, offset, gridHeader, isLittleEndian) {\n      var nodesOffset = offset + 176;\n      var gridRecordLength = 16;\n      var gridShiftRecords = [];\n      for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n        var record = {\n          latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n          longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n          latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n          longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n        };\n        gridShiftRecords.push(record);\n      }\n      return gridShiftRecords;\n    }\n\n    function Projection(srsCode,callback) {\n      if (!(this instanceof Projection)) {\n        return new Projection(srsCode);\n      }\n      callback = callback || function(error){\n        if(error){\n          throw error;\n        }\n      };\n      var json = parse(srsCode);\n      if(typeof json !== 'object'){\n        callback(srsCode);\n        return;\n      }\n      var ourProj = Projection.projections.get(json.projName);\n      if(!ourProj){\n        callback(srsCode);\n        return;\n      }\n      if (json.datumCode && json.datumCode !== 'none') {\n        var datumDef = match(exports$3, json.datumCode);\n        if (datumDef) {\n          json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n          json.ellps = datumDef.ellipse;\n          json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n        }\n      }\n      json.k0 = json.k0 || 1.0;\n      json.axis = json.axis || 'enu';\n      json.ellps = json.ellps || 'wgs84';\n      json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n      var sphere_ = sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n      var ecc = eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n      var nadgrids = getNadgrids(json.nadgrids);\n      var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n        nadgrids);\n\n      extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n      extend(this, ourProj); // transfer all the methods from the projection\n\n      // copy the 4 things over we calulated in deriveConstants.sphere\n      this.a = sphere_.a;\n      this.b = sphere_.b;\n      this.rf = sphere_.rf;\n      this.sphere = sphere_.sphere;\n\n      // copy the 3 things we calculated in deriveConstants.eccentricity\n      this.es = ecc.es;\n      this.e = ecc.e;\n      this.ep2 = ecc.ep2;\n\n      // add in the datum object\n      this.datum = datumObj;\n\n      // init the projection\n      this.init();\n\n      // legecy callback from back in the day when it went to spatialreference.org\n      callback(null, this);\n\n    }\n    Projection.projections = projections;\n    Projection.projections.start();\n\n    'use strict';\n    function compareDatums(source, dest) {\n      if (source.datum_type !== dest.datum_type) {\n        return false; // false, datums are not equal\n      } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n        // the tolerance for es is to ensure that GRS80 and WGS84\n        // are considered identical\n        return false;\n      } else if (source.datum_type === PJD_3PARAM) {\n        return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n      } else if (source.datum_type === PJD_7PARAM) {\n        return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n      } else {\n        return true; // datums are equal\n      }\n    } // cs_compare_datums()\n\n    /*\n     * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n     * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n     * according to the current ellipsoid parameters.\n     *\n     *    Latitude  : Geodetic latitude in radians                     (input)\n     *    Longitude : Geodetic longitude in radians                    (input)\n     *    Height    : Geodetic height, in meters                       (input)\n     *    X         : Calculated Geocentric X coordinate, in meters    (output)\n     *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n     *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n     *\n     */\n    function geodeticToGeocentric(p, es, a) {\n      var Longitude = p.x;\n      var Latitude = p.y;\n      var Height = p.z ? p.z : 0; //Z value not always supplied\n\n      var Rn; /*  Earth radius at location  */\n      var Sin_Lat; /*  Math.sin(Latitude)  */\n      var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n      var Cos_Lat; /*  Math.cos(Latitude)  */\n\n      /*\n       ** Don't blow up if Latitude is just a little out of the value\n       ** range as it may just be a rounding issue.  Also removed longitude\n       ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n       */\n      if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n        Latitude = -HALF_PI;\n      } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n        Latitude = HALF_PI;\n      } else if (Latitude < -HALF_PI) {\n        /* Latitude out of range */\n        //..reportError('geocent:lat out of range:' + Latitude);\n        return { x: -Infinity, y: -Infinity, z: p.z };\n      } else if (Latitude > HALF_PI) {\n        /* Latitude out of range */\n        return { x: Infinity, y: Infinity, z: p.z };\n      }\n\n      if (Longitude > Math.PI) {\n        Longitude -= (2 * Math.PI);\n      }\n      Sin_Lat = Math.sin(Latitude);\n      Cos_Lat = Math.cos(Latitude);\n      Sin2_Lat = Sin_Lat * Sin_Lat;\n      Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n      return {\n        x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n        y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n        z: ((Rn * (1 - es)) + Height) * Sin_Lat\n      };\n    } // cs_geodetic_to_geocentric()\n\n    function geocentricToGeodetic(p, es, a, b) {\n      /* local defintions and variables */\n      /* end-criterium of loop, accuracy of sin(Latitude) */\n      var genau = 1e-12;\n      var genau2 = (genau * genau);\n      var maxiter = 30;\n\n      var P; /* distance between semi-minor axis and location */\n      var RR; /* distance between center and location */\n      var CT; /* sin of geocentric latitude */\n      var ST; /* cos of geocentric latitude */\n      var RX;\n      var RK;\n      var RN; /* Earth radius at location */\n      var CPHI0; /* cos of start or old geodetic latitude in iterations */\n      var SPHI0; /* sin of start or old geodetic latitude in iterations */\n      var CPHI; /* cos of searched geodetic latitude */\n      var SPHI; /* sin of searched geodetic latitude */\n      var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n      var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n      var X = p.x;\n      var Y = p.y;\n      var Z = p.z ? p.z : 0.0; //Z value not always supplied\n      var Longitude;\n      var Latitude;\n      var Height;\n\n      P = Math.sqrt(X * X + Y * Y);\n      RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n      /*      special cases for latitude and longitude */\n      if (P / a < genau) {\n\n        /*  special case, if P=0. (X=0., Y=0.) */\n        Longitude = 0.0;\n\n        /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n         *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n        if (RR / a < genau) {\n          Latitude = HALF_PI;\n          Height = -b;\n          return {\n            x: p.x,\n            y: p.y,\n            z: p.z\n          };\n        }\n      } else {\n        /*  ellipsoidal (geodetic) longitude\n         *  interval: -PI < Longitude <= +PI */\n        Longitude = Math.atan2(Y, X);\n      }\n\n      /* --------------------------------------------------------------\n       * Following iterative algorithm was developped by\n       * \"Institut for Erdmessung\", University of Hannover, July 1988.\n       * Internet: www.ife.uni-hannover.de\n       * Iterative computation of CPHI,SPHI and Height.\n       * Iteration of CPHI and SPHI to 10**-12 radian resp.\n       * 2*10**-7 arcsec.\n       * --------------------------------------------------------------\n       */\n      CT = Z / RR;\n      ST = P / RR;\n      RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n      CPHI0 = ST * (1.0 - es) * RX;\n      SPHI0 = CT * RX;\n      iter = 0;\n\n      /* loop to find sin(Latitude) resp. Latitude\n       * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n      do {\n        iter++;\n        RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n        /*  ellipsoidal (geodetic) height */\n        Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n        RK = es * RN / (RN + Height);\n        RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n        CPHI = ST * (1.0 - RK) * RX;\n        SPHI = CT * RX;\n        SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n        CPHI0 = CPHI;\n        SPHI0 = SPHI;\n      }\n      while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n      /*      ellipsoidal (geodetic) latitude */\n      Latitude = Math.atan(SPHI / Math.abs(CPHI));\n      return {\n        x: Longitude,\n        y: Latitude,\n        z: Height\n      };\n    } // cs_geocentric_to_geodetic()\n\n    /****************************************************************/\n    // pj_geocentic_to_wgs84( p )\n    //  p = point to transform in geocentric coordinates (x,y,z)\n\n\n    /** point object, nothing fancy, just allows values to be\n        passed back and forth by reference rather than by value.\n        Other point classes may be used as long as they have\n        x and y properties, which will get modified in the transform method.\n    */\n    function geocentricToWgs84(p, datum_type, datum_params) {\n\n      if (datum_type === PJD_3PARAM) {\n        // if( x[io] === HUGE_VAL )\n        //    continue;\n        return {\n          x: p.x + datum_params[0],\n          y: p.y + datum_params[1],\n          z: p.z + datum_params[2],\n        };\n      } else if (datum_type === PJD_7PARAM) {\n        var Dx_BF = datum_params[0];\n        var Dy_BF = datum_params[1];\n        var Dz_BF = datum_params[2];\n        var Rx_BF = datum_params[3];\n        var Ry_BF = datum_params[4];\n        var Rz_BF = datum_params[5];\n        var M_BF = datum_params[6];\n        // if( x[io] === HUGE_VAL )\n        //    continue;\n        return {\n          x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n          y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n          z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n        };\n      }\n    } // cs_geocentric_to_wgs84\n\n    /****************************************************************/\n    // pj_geocentic_from_wgs84()\n    //  coordinate system definition,\n    //  point to transform in geocentric coordinates (x,y,z)\n    function geocentricFromWgs84(p, datum_type, datum_params) {\n\n      if (datum_type === PJD_3PARAM) {\n        //if( x[io] === HUGE_VAL )\n        //    continue;\n        return {\n          x: p.x - datum_params[0],\n          y: p.y - datum_params[1],\n          z: p.z - datum_params[2],\n        };\n\n      } else if (datum_type === PJD_7PARAM) {\n        var Dx_BF = datum_params[0];\n        var Dy_BF = datum_params[1];\n        var Dz_BF = datum_params[2];\n        var Rx_BF = datum_params[3];\n        var Ry_BF = datum_params[4];\n        var Rz_BF = datum_params[5];\n        var M_BF = datum_params[6];\n        var x_tmp = (p.x - Dx_BF) / M_BF;\n        var y_tmp = (p.y - Dy_BF) / M_BF;\n        var z_tmp = (p.z - Dz_BF) / M_BF;\n        //if( x[io] === HUGE_VAL )\n        //    continue;\n\n        return {\n          x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n          y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n          z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n        };\n      } //cs_geocentric_from_wgs84()\n    }\n\n    function checkParams(type) {\n      return (type === PJD_3PARAM || type === PJD_7PARAM);\n    }\n\n    var datum_transform = function(source, dest, point) {\n      // Short cut if the datums are identical.\n      if (compareDatums(source, dest)) {\n        return point; // in this case, zero is sucess,\n        // whereas cs_compare_datums returns 1 to indicate TRUE\n        // confusing, should fix this\n      }\n\n      // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n      if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n        return point;\n      }\n\n      // If this datum requires grid shifts, then apply it to geodetic coordinates.\n      var source_a = source.a;\n      var source_es = source.es;\n      if (source.datum_type === PJD_GRIDSHIFT) {\n        var gridShiftCode = applyGridShift(source, false, point);\n        if (gridShiftCode !== 0) {\n          return undefined;\n        }\n        source_a = SRS_WGS84_SEMIMAJOR;\n        source_es = SRS_WGS84_ESQUARED;\n      }\n\n      var dest_a = dest.a;\n      var dest_b = dest.b;\n      var dest_es = dest.es;\n      if (dest.datum_type === PJD_GRIDSHIFT) {\n        dest_a = SRS_WGS84_SEMIMAJOR;\n        dest_b = SRS_WGS84_SEMIMINOR;\n        dest_es = SRS_WGS84_ESQUARED;\n      }\n\n      // Do we need to go through geocentric coordinates?\n      if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n        return point;\n      }\n\n      // Convert to geocentric coordinates.\n      point = geodeticToGeocentric(point, source_es, source_a);\n      // Convert between datums\n      if (checkParams(source.datum_type)) {\n        point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n      }\n      if (checkParams(dest.datum_type)) {\n        point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n      }\n      point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n      if (dest.datum_type === PJD_GRIDSHIFT) {\n        var destGridShiftResult = applyGridShift(dest, true, point);\n        if (destGridShiftResult !== 0) {\n          return undefined;\n        }\n      }\n\n      return point;\n    };\n\n    function applyGridShift(source, inverse, point) {\n      if (source.grids === null || source.grids.length === 0) {\n        console.log('Grid shift grids not found');\n        return -1;\n      }\n      var input = {x: -point.x, y: point.y};\n      var output = {x: Number.NaN, y: Number.NaN};\n      var attemptedGrids = [];\n      for (var i = 0; i < source.grids.length; i++) {\n        var grid = source.grids[i];\n        attemptedGrids.push(grid.name);\n        if (grid.isNull) {\n          output = input;\n          break;\n        }\n        if (grid.grid === null) {\n          if (grid.mandatory) {\n            console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n            return -1;\n          }\n          continue;\n        }\n        var subgrid = grid.grid.subgrids[0];\n        // skip tables that don't match our point at all\n        var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n        var minX = subgrid.ll[0] - epsilon;\n        var minY = subgrid.ll[1] - epsilon;\n        var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n        var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n        if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n          continue;\n        }\n        output = applySubgridShift(input, inverse, subgrid);\n        if (!isNaN(output.x)) {\n          break;\n        }\n      }\n      if (isNaN(output.x)) {\n        console.log(\"Failed to find a grid shift table for location '\"+\n          -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n        return -1;\n      }\n      point.x = -output.x;\n      point.y = output.y;\n      return 0;\n    }\n\n    function applySubgridShift(pin, inverse, ct) {\n      var val = {x: Number.NaN, y: Number.NaN};\n      if (isNaN(pin.x)) { return val; }\n      var tb = {x: pin.x, y: pin.y};\n      tb.x -= ct.ll[0];\n      tb.y -= ct.ll[1];\n      tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n      var t = nadInterpolate(tb, ct);\n      if (inverse) {\n        if (isNaN(t.x)) {\n          return val;\n        }\n        t.x = tb.x - t.x;\n        t.y = tb.y - t.y;\n        var i = 9, tol = 1e-12;\n        var dif, del;\n        do {\n          del = nadInterpolate(t, ct);\n          if (isNaN(del.x)) {\n            console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n            break;\n          }\n          dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n          t.x += dif.x;\n          t.y += dif.y;\n        } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n        if (i < 0) {\n          console.log(\"Inverse grid shift iterator failed to converge.\");\n          return val;\n        }\n        val.x = adjust_lon(t.x + ct.ll[0]);\n        val.y = t.y + ct.ll[1];\n      } else {\n        if (!isNaN(t.x)) {\n          val.x = pin.x + t.x;\n          val.y = pin.y + t.y;\n        }\n      }\n      return val;\n    }\n\n    function nadInterpolate(pin, ct) {\n      var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n      var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n      var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n      var val= {x: Number.NaN, y: Number.NaN};\n      var inx;\n      if (indx.x < 0 || indx.x >= ct.lim[0]) {\n        return val;\n      }\n      if (indx.y < 0 || indx.y >= ct.lim[1]) {\n        return val;\n      }\n      inx = (indx.y * ct.lim[0]) + indx.x;\n      var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n      inx++;\n      var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n      inx += ct.lim[0];\n      var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n      inx--;\n      var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n      var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n        m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n      val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n      val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n      return val;\n    }\n\n    var adjust_axis = function(crs, denorm, point) {\n      var xin = point.x,\n        yin = point.y,\n        zin = point.z || 0.0;\n      var v, t, i;\n      var out = {};\n      for (i = 0; i < 3; i++) {\n        if (denorm && i === 2 && point.z === undefined) {\n          continue;\n        }\n        if (i === 0) {\n          v = xin;\n          if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n            t = 'x';\n          } else {\n            t = 'y';\n          }\n\n        }\n        else if (i === 1) {\n          v = yin;\n          if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n            t = 'y';\n          } else {\n            t = 'x';\n          }\n        }\n        else {\n          v = zin;\n          t = 'z';\n        }\n        switch (crs.axis[i]) {\n        case 'e':\n          out[t] = v;\n          break;\n        case 'w':\n          out[t] = -v;\n          break;\n        case 'n':\n          out[t] = v;\n          break;\n        case 's':\n          out[t] = -v;\n          break;\n        case 'u':\n          if (point[t] !== undefined) {\n            out.z = v;\n          }\n          break;\n        case 'd':\n          if (point[t] !== undefined) {\n            out.z = -v;\n          }\n          break;\n        default:\n          //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n          return null;\n        }\n      }\n      return out;\n    };\n\n    var toPoint = function (array){\n      var out = {\n        x: array[0],\n        y: array[1]\n      };\n      if (array.length>2) {\n        out.z = array[2];\n      }\n      if (array.length>3) {\n        out.m = array[3];\n      }\n      return out;\n    };\n\n    var checkSanity = function (point) {\n      checkCoord(point.x);\n      checkCoord(point.y);\n    };\n    function checkCoord(num) {\n      if (typeof Number.isFinite === 'function') {\n        if (Number.isFinite(num)) {\n          return;\n        }\n        throw new TypeError('coordinates must be finite numbers');\n      }\n      if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n        throw new TypeError('coordinates must be finite numbers');\n      }\n    }\n\n    function checkNotWGS(source, dest) {\n      return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n    }\n\n    function transform(source, dest, point) {\n      var wgs84;\n      if (Array.isArray(point)) {\n        point = toPoint(point);\n      }\n      checkSanity(point);\n      // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n      if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n        wgs84 = new Projection('WGS84');\n        point = transform(source, wgs84, point);\n        source = wgs84;\n      }\n      // DGR, 2010/11/12\n      if (source.axis !== 'enu') {\n        point = adjust_axis(source, false, point);\n      }\n      // Transform source points to long/lat, if they aren't already.\n      if (source.projName === 'longlat') {\n        point = {\n          x: point.x * D2R,\n          y: point.y * D2R,\n          z: point.z || 0\n        };\n      } else {\n        if (source.to_meter) {\n          point = {\n            x: point.x * source.to_meter,\n            y: point.y * source.to_meter,\n            z: point.z || 0\n          };\n        }\n        point = source.inverse(point); // Convert Cartesian to longlat\n        if (!point) {\n          return;\n        }\n      }\n      // Adjust for the prime meridian if necessary\n      if (source.from_greenwich) {\n        point.x += source.from_greenwich;\n      }\n\n      // Convert datums if needed, and if possible.\n      point = datum_transform(source.datum, dest.datum, point);\n      if (!point) {\n        return;\n      }\n\n      // Adjust for the prime meridian if necessary\n      if (dest.from_greenwich) {\n        point = {\n          x: point.x - dest.from_greenwich,\n          y: point.y,\n          z: point.z || 0\n        };\n      }\n\n      if (dest.projName === 'longlat') {\n        // convert radians to decimal degrees\n        point = {\n          x: point.x * R2D,\n          y: point.y * R2D,\n          z: point.z || 0\n        };\n      } else { // else project\n        point = dest.forward(point);\n        if (dest.to_meter) {\n          point = {\n            x: point.x / dest.to_meter,\n            y: point.y / dest.to_meter,\n            z: point.z || 0\n          };\n        }\n      }\n\n      // DGR, 2010/11/12\n      if (dest.axis !== 'enu') {\n        return adjust_axis(dest, true, point);\n      }\n\n      return point;\n    }\n\n    var wgs84 = Projection('WGS84');\n\n    function transformer(from, to, coords) {\n      var transformedArray, out, keys;\n      if (Array.isArray(coords)) {\n        transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n        if (coords.length > 2) {\n          if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n            if (typeof transformedArray.z === 'number') {\n              return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n            } else {\n              return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n            }\n          } else {\n            return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n          }\n        } else {\n          return [transformedArray.x, transformedArray.y];\n        }\n      } else {\n        out = transform(from, to, coords);\n        keys = Object.keys(coords);\n        if (keys.length === 2) {\n          return out;\n        }\n        keys.forEach(function (key) {\n          if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n            if (key === 'x' || key === 'y' || key === 'z') {\n              return;\n            }\n          } else {\n            if (key === 'x' || key === 'y') {\n              return;\n            }\n          }\n          out[key] = coords[key];\n        });\n        return out;\n      }\n    }\n\n    function checkProj(item) {\n      if (item instanceof Projection) {\n        return item;\n      }\n      if (item.oProj) {\n        return item.oProj;\n      }\n      return Projection(item);\n    }\n\n    function proj4$1(fromProj, toProj, coord) {\n      fromProj = checkProj(fromProj);\n      var single = false;\n      var obj;\n      if (typeof toProj === 'undefined') {\n        toProj = fromProj;\n        fromProj = wgs84;\n        single = true;\n      } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n        coord = toProj;\n        toProj = fromProj;\n        fromProj = wgs84;\n        single = true;\n      }\n      toProj = checkProj(toProj);\n      if (coord) {\n        return transformer(fromProj, toProj, coord);\n      } else {\n        obj = {\n          forward: function (coords) {\n            return transformer(fromProj, toProj, coords);\n          },\n          inverse: function (coords) {\n            return transformer(toProj, fromProj, coords);\n          }\n        };\n        if (single) {\n          obj.oProj = toProj;\n        }\n        return obj;\n      }\n    }\n\n    /**\n     * UTM zones are grouped, and assigned to one of a group of 6\n     * sets.\n     *\n     * {int} @private\n     */\n    var NUM_100K_SETS = 6;\n\n    /**\n     * The column letters (for easting) of the lower left value, per\n     * set.\n     *\n     * {string} @private\n     */\n    var SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n    /**\n     * The row letters (for northing) of the lower left value, per\n     * set.\n     *\n     * {string} @private\n     */\n    var SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\n    var A = 65; // A\n    var I = 73; // I\n    var O = 79; // O\n    var V = 86; // V\n    var Z = 90; // Z\n    var mgrs = {\n      forward: forward$1,\n      inverse: inverse$1,\n      toPoint: toPoint$1\n    };\n    /**\n     * Conversion of lat/lon to MGRS.\n     *\n     * @param {object} ll Object literal with lat and lon properties on a\n     *     WGS84 ellipsoid.\n     * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n     *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n     * @return {string} the MGRS string for the given location and accuracy.\n     */\n    function forward$1(ll, accuracy) {\n      accuracy = accuracy || 5; // default accuracy 1m\n      return encode(LLtoUTM({\n        lat: ll[1],\n        lon: ll[0]\n      }), accuracy);\n    }\n\n    /**\n     * Conversion of MGRS to lat/lon.\n     *\n     * @param {string} mgrs MGRS string.\n     * @return {array} An array with left (longitude), bottom (latitude), right\n     *     (longitude) and top (latitude) values in WGS84, representing the\n     *     bounding box for the provided MGRS reference.\n     */\n    function inverse$1(mgrs) {\n      var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n      if (bbox.lat && bbox.lon) {\n        return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n      }\n      return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n    }\n\n    function toPoint$1(mgrs) {\n      var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n      if (bbox.lat && bbox.lon) {\n        return [bbox.lon, bbox.lat];\n      }\n      return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n    }\n    /**\n     * Conversion from degrees to radians.\n     *\n     * @private\n     * @param {number} deg the angle in degrees.\n     * @return {number} the angle in radians.\n     */\n    function degToRad(deg) {\n      return (deg * (Math.PI / 180.0));\n    }\n\n    /**\n     * Conversion from radians to degrees.\n     *\n     * @private\n     * @param {number} rad the angle in radians.\n     * @return {number} the angle in degrees.\n     */\n    function radToDeg(rad) {\n      return (180.0 * (rad / Math.PI));\n    }\n\n    /**\n     * Converts a set of Longitude and Latitude co-ordinates to UTM\n     * using the WGS84 ellipsoid.\n     *\n     * @private\n     * @param {object} ll Object literal with lat and lon properties\n     *     representing the WGS84 coordinate to be converted.\n     * @return {object} Object literal containing the UTM value with easting,\n     *     northing, zoneNumber and zoneLetter properties, and an optional\n     *     accuracy property in digits. Returns null if the conversion failed.\n     */\n    function LLtoUTM(ll) {\n      var Lat = ll.lat;\n      var Long = ll.lon;\n      var a = 6378137.0; //ellip.radius;\n      var eccSquared = 0.00669438; //ellip.eccsq;\n      var k0 = 0.9996;\n      var LongOrigin;\n      var eccPrimeSquared;\n      var N, T, C, A, M;\n      var LatRad = degToRad(Lat);\n      var LongRad = degToRad(Long);\n      var LongOriginRad;\n      var ZoneNumber;\n      // (int)\n      ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n      //Make sure the longitude 180.00 is in Zone 60\n      if (Long === 180) {\n        ZoneNumber = 60;\n      }\n\n      // Special zone for Norway\n      if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n        ZoneNumber = 32;\n      }\n\n      // Special zones for Svalbard\n      if (Lat >= 72.0 && Lat < 84.0) {\n        if (Long >= 0.0 && Long < 9.0) {\n          ZoneNumber = 31;\n        }\n        else if (Long >= 9.0 && Long < 21.0) {\n          ZoneNumber = 33;\n        }\n        else if (Long >= 21.0 && Long < 33.0) {\n          ZoneNumber = 35;\n        }\n        else if (Long >= 33.0 && Long < 42.0) {\n          ZoneNumber = 37;\n        }\n      }\n\n      LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n      // in middle of\n      // zone\n      LongOriginRad = degToRad(LongOrigin);\n\n      eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n      N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n      T = Math.tan(LatRad) * Math.tan(LatRad);\n      C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n      A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n      M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n      var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n      var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n      if (Lat < 0.0) {\n        UTMNorthing += 10000000.0; //10000000 meter offset for\n        // southern hemisphere\n      }\n\n      return {\n        northing: Math.round(UTMNorthing),\n        easting: Math.round(UTMEasting),\n        zoneNumber: ZoneNumber,\n        zoneLetter: getLetterDesignator(Lat)\n      };\n    }\n\n    /**\n     * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n     * class where the Zone can be specified as a single string eg.\"60N\" which\n     * is then broken down into the ZoneNumber and ZoneLetter.\n     *\n     * @private\n     * @param {object} utm An object literal with northing, easting, zoneNumber\n     *     and zoneLetter properties. If an optional accuracy property is\n     *     provided (in meters), a bounding box will be returned instead of\n     *     latitude and longitude.\n     * @return {object} An object literal containing either lat and lon values\n     *     (if no accuracy was provided), or top, right, bottom and left values\n     *     for the bounding box calculated according to the provided accuracy.\n     *     Returns null if the conversion failed.\n     */\n    function UTMtoLL(utm) {\n\n      var UTMNorthing = utm.northing;\n      var UTMEasting = utm.easting;\n      var zoneLetter = utm.zoneLetter;\n      var zoneNumber = utm.zoneNumber;\n      // check the ZoneNummber is valid\n      if (zoneNumber < 0 || zoneNumber > 60) {\n        return null;\n      }\n\n      var k0 = 0.9996;\n      var a = 6378137.0; //ellip.radius;\n      var eccSquared = 0.00669438; //ellip.eccsq;\n      var eccPrimeSquared;\n      var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n      var N1, T1, C1, R1, D, M;\n      var LongOrigin;\n      var mu, phi1Rad;\n\n      // remove 500,000 meter offset for longitude\n      var x = UTMEasting - 500000.0;\n      var y = UTMNorthing;\n\n      // We must know somehow if we are in the Northern or Southern\n      // hemisphere, this is the only time we use the letter So even\n      // if the Zone letter isn't exactly correct it should indicate\n      // the hemisphere correctly\n      if (zoneLetter < 'N') {\n        y -= 10000000.0; // remove 10,000,000 meter offset used\n        // for southern hemisphere\n      }\n\n      // There are 60 zones with zone 1 being at West -180 to -174\n      LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n      // in middle of\n      // zone\n\n      eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n      M = y / k0;\n      mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n      phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n      // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n      N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n      T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n      C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n      R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n      D = x / (N1 * k0);\n\n      var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n      lat = radToDeg(lat);\n\n      var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n      lon = LongOrigin + radToDeg(lon);\n\n      var result;\n      if (utm.accuracy) {\n        var topRight = UTMtoLL({\n          northing: utm.northing + utm.accuracy,\n          easting: utm.easting + utm.accuracy,\n          zoneLetter: utm.zoneLetter,\n          zoneNumber: utm.zoneNumber\n        });\n        result = {\n          top: topRight.lat,\n          right: topRight.lon,\n          bottom: lat,\n          left: lon\n        };\n      }\n      else {\n        result = {\n          lat: lat,\n          lon: lon\n        };\n      }\n      return result;\n    }\n\n    /**\n     * Calculates the MGRS letter designator for the given latitude.\n     *\n     * @private\n     * @param {number} lat The latitude in WGS84 to get the letter designator\n     *     for.\n     * @return {char} The letter designator.\n     */\n    function getLetterDesignator(lat) {\n      //This is here as an error flag to show that the Latitude is\n      //outside MGRS limits\n      var LetterDesignator = 'Z';\n\n      if ((84 >= lat) && (lat >= 72)) {\n        LetterDesignator = 'X';\n      }\n      else if ((72 > lat) && (lat >= 64)) {\n        LetterDesignator = 'W';\n      }\n      else if ((64 > lat) && (lat >= 56)) {\n        LetterDesignator = 'V';\n      }\n      else if ((56 > lat) && (lat >= 48)) {\n        LetterDesignator = 'U';\n      }\n      else if ((48 > lat) && (lat >= 40)) {\n        LetterDesignator = 'T';\n      }\n      else if ((40 > lat) && (lat >= 32)) {\n        LetterDesignator = 'S';\n      }\n      else if ((32 > lat) && (lat >= 24)) {\n        LetterDesignator = 'R';\n      }\n      else if ((24 > lat) && (lat >= 16)) {\n        LetterDesignator = 'Q';\n      }\n      else if ((16 > lat) && (lat >= 8)) {\n        LetterDesignator = 'P';\n      }\n      else if ((8 > lat) && (lat >= 0)) {\n        LetterDesignator = 'N';\n      }\n      else if ((0 > lat) && (lat >= -8)) {\n        LetterDesignator = 'M';\n      }\n      else if ((-8 > lat) && (lat >= -16)) {\n        LetterDesignator = 'L';\n      }\n      else if ((-16 > lat) && (lat >= -24)) {\n        LetterDesignator = 'K';\n      }\n      else if ((-24 > lat) && (lat >= -32)) {\n        LetterDesignator = 'J';\n      }\n      else if ((-32 > lat) && (lat >= -40)) {\n        LetterDesignator = 'H';\n      }\n      else if ((-40 > lat) && (lat >= -48)) {\n        LetterDesignator = 'G';\n      }\n      else if ((-48 > lat) && (lat >= -56)) {\n        LetterDesignator = 'F';\n      }\n      else if ((-56 > lat) && (lat >= -64)) {\n        LetterDesignator = 'E';\n      }\n      else if ((-64 > lat) && (lat >= -72)) {\n        LetterDesignator = 'D';\n      }\n      else if ((-72 > lat) && (lat >= -80)) {\n        LetterDesignator = 'C';\n      }\n      return LetterDesignator;\n    }\n\n    /**\n     * Encodes a UTM location as MGRS string.\n     *\n     * @private\n     * @param {object} utm An object literal with easting, northing,\n     *     zoneLetter, zoneNumber\n     * @param {number} accuracy Accuracy in digits (1-5).\n     * @return {string} MGRS string for the given UTM location.\n     */\n    function encode(utm, accuracy) {\n      // prepend with leading zeroes\n      var seasting = \"00000\" + utm.easting,\n        snorthing = \"00000\" + utm.northing;\n\n      return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n    }\n\n    /**\n     * Get the two letter 100k designator for a given UTM easting,\n     * northing and zone number value.\n     *\n     * @private\n     * @param {number} easting\n     * @param {number} northing\n     * @param {number} zoneNumber\n     * @return the two letter 100k designator for the given UTM location.\n     */\n    function get100kID(easting, northing, zoneNumber) {\n      var setParm = get100kSetForZone(zoneNumber);\n      var setColumn = Math.floor(easting / 100000);\n      var setRow = Math.floor(northing / 100000) % 20;\n      return getLetter100kID(setColumn, setRow, setParm);\n    }\n\n    /**\n     * Given a UTM zone number, figure out the MGRS 100K set it is in.\n     *\n     * @private\n     * @param {number} i An UTM zone number.\n     * @return {number} the 100k set the UTM zone is in.\n     */\n    function get100kSetForZone(i) {\n      var setParm = i % NUM_100K_SETS;\n      if (setParm === 0) {\n        setParm = NUM_100K_SETS;\n      }\n\n      return setParm;\n    }\n\n    /**\n     * Get the two-letter MGRS 100k designator given information\n     * translated from the UTM northing, easting and zone number.\n     *\n     * @private\n     * @param {number} column the column index as it relates to the MGRS\n     *        100k set spreadsheet, created from the UTM easting.\n     *        Values are 1-8.\n     * @param {number} row the row index as it relates to the MGRS 100k set\n     *        spreadsheet, created from the UTM northing value. Values\n     *        are from 0-19.\n     * @param {number} parm the set block, as it relates to the MGRS 100k set\n     *        spreadsheet, created from the UTM zone. Values are from\n     *        1-60.\n     * @return two letter MGRS 100k code.\n     */\n    function getLetter100kID(column, row, parm) {\n      // colOrigin and rowOrigin are the letters at the origin of the set\n      var index = parm - 1;\n      var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n      var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n      // colInt and rowInt are the letters to build to return\n      var colInt = colOrigin + column - 1;\n      var rowInt = rowOrigin + row;\n      var rollover = false;\n\n      if (colInt > Z) {\n        colInt = colInt - Z + A - 1;\n        rollover = true;\n      }\n\n      if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n        colInt++;\n      }\n\n      if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n        colInt++;\n\n        if (colInt === I) {\n          colInt++;\n        }\n      }\n\n      if (colInt > Z) {\n        colInt = colInt - Z + A - 1;\n      }\n\n      if (rowInt > V) {\n        rowInt = rowInt - V + A - 1;\n        rollover = true;\n      }\n      else {\n        rollover = false;\n      }\n\n      if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n        rowInt++;\n      }\n\n      if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n        rowInt++;\n\n        if (rowInt === I) {\n          rowInt++;\n        }\n      }\n\n      if (rowInt > V) {\n        rowInt = rowInt - V + A - 1;\n      }\n\n      var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n      return twoLetter;\n    }\n\n    /**\n     * Decode the UTM parameters from a MGRS string.\n     *\n     * @private\n     * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n     * @return {object} An object literal with easting, northing, zoneLetter,\n     *     zoneNumber and accuracy (in meters) properties.\n     */\n    function decode(mgrsString) {\n\n      if (mgrsString && mgrsString.length === 0) {\n        throw (\"MGRSPoint coverting from nothing\");\n      }\n\n      var length = mgrsString.length;\n\n      var hunK = null;\n      var sb = \"\";\n      var testChar;\n      var i = 0;\n\n      // get Zone number\n      while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n        if (i >= 2) {\n          throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n        }\n        sb += testChar;\n        i++;\n      }\n\n      var zoneNumber = parseInt(sb, 10);\n\n      if (i === 0 || i + 3 > length) {\n        // A good MGRS string has to be 4-5 digits long,\n        // ##AAA/#AAA at least.\n        throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n      }\n\n      var zoneLetter = mgrsString.charAt(i++);\n\n      // Should we check the zone letter here? Why not.\n      if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n        throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n      }\n\n      hunK = mgrsString.substring(i, i += 2);\n\n      var set = get100kSetForZone(zoneNumber);\n\n      var east100k = getEastingFromChar(hunK.charAt(0), set);\n      var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n      // We have a bug where the northing may be 2000000 too low.\n      // How\n      // do we know when to roll over?\n\n      while (north100k < getMinNorthing(zoneLetter)) {\n        north100k += 2000000;\n      }\n\n      // calculate the char index for easting/northing separator\n      var remainder = length - i;\n\n      if (remainder % 2 !== 0) {\n        throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n      }\n\n      var sep = remainder / 2;\n\n      var sepEasting = 0.0;\n      var sepNorthing = 0.0;\n      var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n      if (sep > 0) {\n        accuracyBonus = 100000.0 / Math.pow(10, sep);\n        sepEastingString = mgrsString.substring(i, i + sep);\n        sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n        sepNorthingString = mgrsString.substring(i + sep);\n        sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n      }\n\n      easting = sepEasting + east100k;\n      northing = sepNorthing + north100k;\n\n      return {\n        easting: easting,\n        northing: northing,\n        zoneLetter: zoneLetter,\n        zoneNumber: zoneNumber,\n        accuracy: accuracyBonus\n      };\n    }\n\n    /**\n     * Given the first letter from a two-letter MGRS 100k zone, and given the\n     * MGRS table set for the zone number, figure out the easting value that\n     * should be added to the other, secondary easting value.\n     *\n     * @private\n     * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n     * @param {number} set The MGRS table set for the zone number.\n     * @return {number} The easting value for the given letter and set.\n     */\n    function getEastingFromChar(e, set) {\n      // colOrigin is the letter at the origin of the set for the\n      // column\n      var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n      var eastingValue = 100000.0;\n      var rewindMarker = false;\n\n      while (curCol !== e.charCodeAt(0)) {\n        curCol++;\n        if (curCol === I) {\n          curCol++;\n        }\n        if (curCol === O) {\n          curCol++;\n        }\n        if (curCol > Z) {\n          if (rewindMarker) {\n            throw (\"Bad character: \" + e);\n          }\n          curCol = A;\n          rewindMarker = true;\n        }\n        eastingValue += 100000.0;\n      }\n\n      return eastingValue;\n    }\n\n    /**\n     * Given the second letter from a two-letter MGRS 100k zone, and given the\n     * MGRS table set for the zone number, figure out the northing value that\n     * should be added to the other, secondary northing value. You have to\n     * remember that Northings are determined from the equator, and the vertical\n     * cycle of letters mean a 2000000 additional northing meters. This happens\n     * approx. every 18 degrees of latitude. This method does *NOT* count any\n     * additional northings. You have to figure out how many 2000000 meters need\n     * to be added for the zone letter of the MGRS coordinate.\n     *\n     * @private\n     * @param {char} n Second letter of the MGRS 100k zone\n     * @param {number} set The MGRS table set number, which is dependent on the\n     *     UTM zone number.\n     * @return {number} The northing value for the given letter and set.\n     */\n    function getNorthingFromChar(n, set) {\n\n      if (n > 'V') {\n        throw (\"MGRSPoint given invalid Northing \" + n);\n      }\n\n      // rowOrigin is the letter at the origin of the set for the\n      // column\n      var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n      var northingValue = 0.0;\n      var rewindMarker = false;\n\n      while (curRow !== n.charCodeAt(0)) {\n        curRow++;\n        if (curRow === I) {\n          curRow++;\n        }\n        if (curRow === O) {\n          curRow++;\n        }\n        // fixing a bug making whole application hang in this loop\n        // when 'n' is a wrong character\n        if (curRow > V) {\n          if (rewindMarker) { // making sure that this loop ends\n            throw (\"Bad character: \" + n);\n          }\n          curRow = A;\n          rewindMarker = true;\n        }\n        northingValue += 100000.0;\n      }\n\n      return northingValue;\n    }\n\n    /**\n     * The function getMinNorthing returns the minimum northing value of a MGRS\n     * zone.\n     *\n     * Ported from Geotrans' c Lattitude_Band_Value structure table.\n     *\n     * @private\n     * @param {char} zoneLetter The MGRS zone to get the min northing for.\n     * @return {number}\n     */\n    function getMinNorthing(zoneLetter) {\n      var northing;\n      switch (zoneLetter) {\n      case 'C':\n        northing = 1100000.0;\n        break;\n      case 'D':\n        northing = 2000000.0;\n        break;\n      case 'E':\n        northing = 2800000.0;\n        break;\n      case 'F':\n        northing = 3700000.0;\n        break;\n      case 'G':\n        northing = 4600000.0;\n        break;\n      case 'H':\n        northing = 5500000.0;\n        break;\n      case 'J':\n        northing = 6400000.0;\n        break;\n      case 'K':\n        northing = 7300000.0;\n        break;\n      case 'L':\n        northing = 8200000.0;\n        break;\n      case 'M':\n        northing = 9100000.0;\n        break;\n      case 'N':\n        northing = 0.0;\n        break;\n      case 'P':\n        northing = 800000.0;\n        break;\n      case 'Q':\n        northing = 1700000.0;\n        break;\n      case 'R':\n        northing = 2600000.0;\n        break;\n      case 'S':\n        northing = 3500000.0;\n        break;\n      case 'T':\n        northing = 4400000.0;\n        break;\n      case 'U':\n        northing = 5300000.0;\n        break;\n      case 'V':\n        northing = 6200000.0;\n        break;\n      case 'W':\n        northing = 7000000.0;\n        break;\n      case 'X':\n        northing = 7900000.0;\n        break;\n      default:\n        northing = -1.0;\n      }\n      if (northing >= 0.0) {\n        return northing;\n      }\n      else {\n        throw (\"Invalid zone letter: \" + zoneLetter);\n      }\n\n    }\n\n    function Point(x, y, z) {\n      if (!(this instanceof Point)) {\n        return new Point(x, y, z);\n      }\n      if (Array.isArray(x)) {\n        this.x = x[0];\n        this.y = x[1];\n        this.z = x[2] || 0.0;\n      } else if(typeof x === 'object') {\n        this.x = x.x;\n        this.y = x.y;\n        this.z = x.z || 0.0;\n      } else if (typeof x === 'string' && typeof y === 'undefined') {\n        var coords = x.split(',');\n        this.x = parseFloat(coords[0], 10);\n        this.y = parseFloat(coords[1], 10);\n        this.z = parseFloat(coords[2], 10) || 0.0;\n      } else {\n        this.x = x;\n        this.y = y;\n        this.z = z || 0.0;\n      }\n      console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n    }\n\n    Point.fromMGRS = function(mgrsStr) {\n      return new Point(toPoint$1(mgrsStr));\n    };\n    Point.prototype.toMGRS = function(accuracy) {\n      return forward$1([this.x, this.y], accuracy);\n    };\n\n    var C00 = 1;\n    var C02 = 0.25;\n    var C04 = 0.046875;\n    var C06 = 0.01953125;\n    var C08 = 0.01068115234375;\n    var C22 = 0.75;\n    var C44 = 0.46875;\n    var C46 = 0.01302083333333333333;\n    var C48 = 0.00712076822916666666;\n    var C66 = 0.36458333333333333333;\n    var C68 = 0.00569661458333333333;\n    var C88 = 0.3076171875;\n\n    var pj_enfn = function(es) {\n      var en = [];\n      en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n      en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n      var t = es * es;\n      en[2] = t * (C44 - es * (C46 + es * C48));\n      t *= es;\n      en[3] = t * (C66 - es * C68);\n      en[4] = t * es * C88;\n      return en;\n    };\n\n    var pj_mlfn = function(phi, sphi, cphi, en) {\n      cphi *= sphi;\n      sphi *= sphi;\n      return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n    };\n\n    var MAX_ITER = 20;\n\n    var pj_inv_mlfn = function(arg, es, en) {\n      var k = 1 / (1 - es);\n      var phi = arg;\n      for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n        var s = Math.sin(phi);\n        var t = 1 - es * s * s;\n        //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n        //phi -= t * (t * Math.sqrt(t)) * k;\n        t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n        phi -= t;\n        if (Math.abs(t) < EPSLN) {\n          return phi;\n        }\n      }\n      //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n      return phi;\n    };\n\n    // Heavily based on this tmerc projection implementation\n    // https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\n    function init$2() {\n      this.x0 = this.x0 !== undefined ? this.x0 : 0;\n      this.y0 = this.y0 !== undefined ? this.y0 : 0;\n      this.long0 = this.long0 !== undefined ? this.long0 : 0;\n      this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n      if (this.es) {\n        this.en = pj_enfn(this.es);\n        this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n      }\n    }\n\n    /**\n        Transverse Mercator Forward  - long/lat to x/y\n        long/lat in radians\n      */\n    function forward$2(p) {\n      var lon = p.x;\n      var lat = p.y;\n\n      var delta_lon = adjust_lon(lon - this.long0);\n      var con;\n      var x, y;\n      var sin_phi = Math.sin(lat);\n      var cos_phi = Math.cos(lat);\n\n      if (!this.es) {\n        var b = cos_phi * Math.sin(delta_lon);\n\n        if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n          return (93);\n        }\n        else {\n          x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n          y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n          b = Math.abs(y);\n\n          if (b >= 1) {\n            if ((b - 1) > EPSLN) {\n              return (93);\n            }\n            else {\n              y = 0;\n            }\n          }\n          else {\n            y = Math.acos(y);\n          }\n\n          if (lat < 0) {\n            y = -y;\n          }\n\n          y = this.a * this.k0 * (y - this.lat0) + this.y0;\n        }\n      }\n      else {\n        var al = cos_phi * delta_lon;\n        var als = Math.pow(al, 2);\n        var c = this.ep2 * Math.pow(cos_phi, 2);\n        var cs = Math.pow(c, 2);\n        var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n        var t = Math.pow(tq, 2);\n        var ts = Math.pow(t, 2);\n        con = 1 - this.es * Math.pow(sin_phi, 2);\n        al = al / Math.sqrt(con);\n        var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n        x = this.a * (this.k0 * al * (1 +\n          als / 6 * (1 - t + c +\n          als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n          als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n          this.x0;\n\n        y = this.a * (this.k0 * (ml - this.ml0 +\n          sin_phi * delta_lon * al / 2 * (1 +\n          als / 12 * (5 - t + 9 * c + 4 * cs +\n          als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n          als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n          this.y0;\n      }\n\n      p.x = x;\n      p.y = y;\n\n      return p;\n    }\n\n    /**\n        Transverse Mercator Inverse  -  x/y to long/lat\n      */\n    function inverse$2(p) {\n      var con, phi;\n      var lat, lon;\n      var x = (p.x - this.x0) * (1 / this.a);\n      var y = (p.y - this.y0) * (1 / this.a);\n\n      if (!this.es) {\n        var f = Math.exp(x / this.k0);\n        var g = 0.5 * (f - 1 / f);\n        var temp = this.lat0 + y / this.k0;\n        var h = Math.cos(temp);\n        con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n        lat = Math.asin(con);\n\n        if (y < 0) {\n          lat = -lat;\n        }\n\n        if ((g === 0) && (h === 0)) {\n          lon = 0;\n        }\n        else {\n          lon = adjust_lon(Math.atan2(g, h) + this.long0);\n        }\n      }\n      else { // ellipsoidal form\n        con = this.ml0 + y / this.k0;\n        phi = pj_inv_mlfn(con, this.es, this.en);\n\n        if (Math.abs(phi) < HALF_PI) {\n          var sin_phi = Math.sin(phi);\n          var cos_phi = Math.cos(phi);\n          var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n          var c = this.ep2 * Math.pow(cos_phi, 2);\n          var cs = Math.pow(c, 2);\n          var t = Math.pow(tan_phi, 2);\n          var ts = Math.pow(t, 2);\n          con = 1 - this.es * Math.pow(sin_phi, 2);\n          var d = x * Math.sqrt(con) / this.k0;\n          var ds = Math.pow(d, 2);\n          con = con * tan_phi;\n\n          lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n            ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n            ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n            ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n          lon = adjust_lon(this.long0 + (d * (1 -\n            ds / 6 * (1 + 2 * t + c -\n            ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n            ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n        }\n        else {\n          lat = HALF_PI * sign(y);\n          lon = 0;\n        }\n      }\n\n      p.x = lon;\n      p.y = lat;\n\n      return p;\n    }\n\n    var names$3 = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\n    var tmerc = {\n      init: init$2,\n      forward: forward$2,\n      inverse: inverse$2,\n      names: names$3\n    };\n\n    var sinh = function(x) {\n      var r = Math.exp(x);\n      r = (r - 1 / r) / 2;\n      return r;\n    };\n\n    var hypot = function(x, y) {\n      x = Math.abs(x);\n      y = Math.abs(y);\n      var a = Math.max(x, y);\n      var b = Math.min(x, y) / (a ? a : 1);\n\n      return a * Math.sqrt(1 + Math.pow(b, 2));\n    };\n\n    var log1py = function(x) {\n      var y = 1 + x;\n      var z = y - 1;\n\n      return z === 0 ? x : x * Math.log(y) / z;\n    };\n\n    var asinhy = function(x) {\n      var y = Math.abs(x);\n      y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n      return x < 0 ? -y : y;\n    };\n\n    var gatg = function(pp, B) {\n      var cos_2B = 2 * Math.cos(2 * B);\n      var i = pp.length - 1;\n      var h1 = pp[i];\n      var h2 = 0;\n      var h;\n\n      while (--i >= 0) {\n        h = -h2 + cos_2B * h1 + pp[i];\n        h2 = h1;\n        h1 = h;\n      }\n\n      return (B + h * Math.sin(2 * B));\n    };\n\n    var clens = function(pp, arg_r) {\n      var r = 2 * Math.cos(arg_r);\n      var i = pp.length - 1;\n      var hr1 = pp[i];\n      var hr2 = 0;\n      var hr;\n\n      while (--i >= 0) {\n        hr = -hr2 + r * hr1 + pp[i];\n        hr2 = hr1;\n        hr1 = hr;\n      }\n\n      return Math.sin(arg_r) * hr;\n    };\n\n    var cosh = function(x) {\n      var r = Math.exp(x);\n      r = (r + 1 / r) / 2;\n      return r;\n    };\n\n    var clens_cmplx = function(pp, arg_r, arg_i) {\n      var sin_arg_r = Math.sin(arg_r);\n      var cos_arg_r = Math.cos(arg_r);\n      var sinh_arg_i = sinh(arg_i);\n      var cosh_arg_i = cosh(arg_i);\n      var r = 2 * cos_arg_r * cosh_arg_i;\n      var i = -2 * sin_arg_r * sinh_arg_i;\n      var j = pp.length - 1;\n      var hr = pp[j];\n      var hi1 = 0;\n      var hr1 = 0;\n      var hi = 0;\n      var hr2;\n      var hi2;\n\n      while (--j >= 0) {\n        hr2 = hr1;\n        hi2 = hi1;\n        hr1 = hr;\n        hi1 = hi;\n        hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n        hi = -hi2 + i * hr1 + r * hi1;\n      }\n\n      r = sin_arg_r * cosh_arg_i;\n      i = cos_arg_r * sinh_arg_i;\n\n      return [r * hr - i * hi, r * hi + i * hr];\n    };\n\n    // Heavily based on this etmerc projection implementation\n    // https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\n    function init$3() {\n      if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n        throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n      }\n      if (this.approx) {\n        // When '+approx' is set, use tmerc instead\n        tmerc.init.apply(this);\n        this.forward = tmerc.forward;\n        this.inverse = tmerc.inverse;\n      }\n\n      this.x0 = this.x0 !== undefined ? this.x0 : 0;\n      this.y0 = this.y0 !== undefined ? this.y0 : 0;\n      this.long0 = this.long0 !== undefined ? this.long0 : 0;\n      this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n      this.cgb = [];\n      this.cbg = [];\n      this.utg = [];\n      this.gtu = [];\n\n      var f = this.es / (1 + Math.sqrt(1 - this.es));\n      var n = f / (2 - f);\n      var np = n;\n\n      this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n      this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n      np = np * n;\n      this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n      this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n      np = np * n;\n      this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n      this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n      np = np * n;\n      this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n      this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n      np = np * n;\n      this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n      this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n      np = np * n;\n      this.cgb[5] = np * (601676 / 22275);\n      this.cbg[5] = np * (444337 / 155925);\n\n      np = Math.pow(n, 2);\n      this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n      this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n      this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n      this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n      this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n      np = np * n;\n      this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n      this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n      np = np * n;\n      this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n      this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n      np = np * n;\n      this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n      this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n      np = np * n;\n      this.utg[5] = np * (-20648693 / 638668800);\n      this.gtu[5] = np * (212378941 / 319334400);\n\n      var Z = gatg(this.cbg, this.lat0);\n      this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n    }\n\n    function forward$3(p) {\n      var Ce = adjust_lon(p.x - this.long0);\n      var Cn = p.y;\n\n      Cn = gatg(this.cbg, Cn);\n      var sin_Cn = Math.sin(Cn);\n      var cos_Cn = Math.cos(Cn);\n      var sin_Ce = Math.sin(Ce);\n      var cos_Ce = Math.cos(Ce);\n\n      Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n      Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n      Ce = asinhy(Math.tan(Ce));\n\n      var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n      Cn = Cn + tmp[0];\n      Ce = Ce + tmp[1];\n\n      var x;\n      var y;\n\n      if (Math.abs(Ce) <= 2.623395162778) {\n        x = this.a * (this.Qn * Ce) + this.x0;\n        y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n      }\n      else {\n        x = Infinity;\n        y = Infinity;\n      }\n\n      p.x = x;\n      p.y = y;\n\n      return p;\n    }\n\n    function inverse$3(p) {\n      var Ce = (p.x - this.x0) * (1 / this.a);\n      var Cn = (p.y - this.y0) * (1 / this.a);\n\n      Cn = (Cn - this.Zb) / this.Qn;\n      Ce = Ce / this.Qn;\n\n      var lon;\n      var lat;\n\n      if (Math.abs(Ce) <= 2.623395162778) {\n        var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n        Cn = Cn + tmp[0];\n        Ce = Ce + tmp[1];\n        Ce = Math.atan(sinh(Ce));\n\n        var sin_Cn = Math.sin(Cn);\n        var cos_Cn = Math.cos(Cn);\n        var sin_Ce = Math.sin(Ce);\n        var cos_Ce = Math.cos(Ce);\n\n        Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n        Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n        lon = adjust_lon(Ce + this.long0);\n        lat = gatg(this.cgb, Cn);\n      }\n      else {\n        lon = Infinity;\n        lat = Infinity;\n      }\n\n      p.x = lon;\n      p.y = lat;\n\n      return p;\n    }\n\n    var names$4 = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\n    var etmerc = {\n      init: init$3,\n      forward: forward$3,\n      inverse: inverse$3,\n      names: names$4\n    };\n\n    var adjust_zone = function(zone, lon) {\n      if (zone === undefined) {\n        zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n        if (zone < 0) {\n          return 0;\n        } else if (zone > 60) {\n          return 60;\n        }\n      }\n      return zone;\n    };\n\n    var dependsOn = 'etmerc';\n    function init$4() {\n      var zone = adjust_zone(this.zone, this.long0);\n      if (zone === undefined) {\n        throw new Error('unknown utm zone');\n      }\n      this.lat0 = 0;\n      this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n      this.x0 = 500000;\n      this.y0 = this.utmSouth ? 10000000 : 0;\n      this.k0 = 0.9996;\n\n      etmerc.init.apply(this);\n      this.forward = etmerc.forward;\n      this.inverse = etmerc.inverse;\n    }\n\n    var names$5 = [\"Universal Transverse Mercator System\", \"utm\"];\n    var utm = {\n      init: init$4,\n      names: names$5,\n      dependsOn: dependsOn\n    };\n\n    var srat = function(esinp, exp) {\n      return (Math.pow((1 - esinp) / (1 + esinp), exp));\n    };\n\n    var MAX_ITER$1 = 20;\n    function init$6() {\n      var sphi = Math.sin(this.lat0);\n      var cphi = Math.cos(this.lat0);\n      cphi *= cphi;\n      this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n      this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n      this.phic0 = Math.asin(sphi / this.C);\n      this.ratexp = 0.5 * this.C * this.e;\n      this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n    }\n\n    function forward$5(p) {\n      var lon = p.x;\n      var lat = p.y;\n\n      p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n      p.x = this.C * lon;\n      return p;\n    }\n\n    function inverse$5(p) {\n      var DEL_TOL = 1e-14;\n      var lon = p.x / this.C;\n      var lat = p.y;\n      var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n      for (var i = MAX_ITER$1; i > 0; --i) {\n        lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n        if (Math.abs(lat - p.y) < DEL_TOL) {\n          break;\n        }\n        p.y = lat;\n      }\n      /* convergence failed */\n      if (!i) {\n        return null;\n      }\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$7 = [\"gauss\"];\n    var gauss = {\n      init: init$6,\n      forward: forward$5,\n      inverse: inverse$5,\n      names: names$7\n    };\n\n    function init$5() {\n      gauss.init.apply(this);\n      if (!this.rc) {\n        return;\n      }\n      this.sinc0 = Math.sin(this.phic0);\n      this.cosc0 = Math.cos(this.phic0);\n      this.R2 = 2 * this.rc;\n      if (!this.title) {\n        this.title = \"Oblique Stereographic Alternative\";\n      }\n    }\n\n    function forward$4(p) {\n      var sinc, cosc, cosl, k;\n      p.x = adjust_lon(p.x - this.long0);\n      gauss.forward.apply(this, [p]);\n      sinc = Math.sin(p.y);\n      cosc = Math.cos(p.y);\n      cosl = Math.cos(p.x);\n      k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n      p.x = k * cosc * Math.sin(p.x);\n      p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n      p.x = this.a * p.x + this.x0;\n      p.y = this.a * p.y + this.y0;\n      return p;\n    }\n\n    function inverse$4(p) {\n      var sinc, cosc, lon, lat, rho;\n      p.x = (p.x - this.x0) / this.a;\n      p.y = (p.y - this.y0) / this.a;\n\n      p.x /= this.k0;\n      p.y /= this.k0;\n      if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n        var c = 2 * Math.atan2(rho, this.R2);\n        sinc = Math.sin(c);\n        cosc = Math.cos(c);\n        lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n        lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n      }\n      else {\n        lat = this.phic0;\n        lon = 0;\n      }\n\n      p.x = lon;\n      p.y = lat;\n      gauss.inverse.apply(this, [p]);\n      p.x = adjust_lon(p.x + this.long0);\n      return p;\n    }\n\n    var names$6 = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\n    var sterea = {\n      init: init$5,\n      forward: forward$4,\n      inverse: inverse$4,\n      names: names$6\n    };\n\n    function ssfn_(phit, sinphi, eccen) {\n      sinphi *= eccen;\n      return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n    }\n\n    function init$7() {\n      this.coslat0 = Math.cos(this.lat0);\n      this.sinlat0 = Math.sin(this.lat0);\n      if (this.sphere) {\n        if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n          this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n        }\n      }\n      else {\n        if (Math.abs(this.coslat0) <= EPSLN) {\n          if (this.lat0 > 0) {\n            //North pole\n            //trace('stere:north pole');\n            this.con = 1;\n          }\n          else {\n            //South pole\n            //trace('stere:south pole');\n            this.con = -1;\n          }\n        }\n        this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n        if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n          this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n        }\n        this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n        this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n        this.cosX0 = Math.cos(this.X0);\n        this.sinX0 = Math.sin(this.X0);\n      }\n    }\n\n    // Stereographic forward equations--mapping lat,long to x,y\n    function forward$6(p) {\n      var lon = p.x;\n      var lat = p.y;\n      var sinlat = Math.sin(lat);\n      var coslat = Math.cos(lat);\n      var A, X, sinX, cosX, ts, rh;\n      var dlon = adjust_lon(lon - this.long0);\n\n      if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n        //case of the origine point\n        //trace('stere:this is the origin point');\n        p.x = NaN;\n        p.y = NaN;\n        return p;\n      }\n      if (this.sphere) {\n        //trace('stere:sphere case');\n        A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n        p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n        p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n        return p;\n      }\n      else {\n        X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n        cosX = Math.cos(X);\n        sinX = Math.sin(X);\n        if (Math.abs(this.coslat0) <= EPSLN) {\n          ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n          rh = 2 * this.a * this.k0 * ts / this.cons;\n          p.x = this.x0 + rh * Math.sin(lon - this.long0);\n          p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n          //trace(p.toString());\n          return p;\n        }\n        else if (Math.abs(this.sinlat0) < EPSLN) {\n          //Eq\n          //trace('stere:equateur');\n          A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n          p.y = A * sinX;\n        }\n        else {\n          //other case\n          //trace('stere:normal case');\n          A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n          p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n        }\n        p.x = A * cosX * Math.sin(dlon) + this.x0;\n      }\n      //trace(p.toString());\n      return p;\n    }\n\n    //* Stereographic inverse equations--mapping x,y to lat/long\n    function inverse$6(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n      var lon, lat, ts, ce, Chi;\n      var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      if (this.sphere) {\n        var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n        lon = this.long0;\n        lat = this.lat0;\n        if (rh <= EPSLN) {\n          p.x = lon;\n          p.y = lat;\n          return p;\n        }\n        lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n        if (Math.abs(this.coslat0) < EPSLN) {\n          if (this.lat0 > 0) {\n            lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n          }\n          else {\n            lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n          }\n        }\n        else {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n        }\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n      else {\n        if (Math.abs(this.coslat0) <= EPSLN) {\n          if (rh <= EPSLN) {\n            lat = this.lat0;\n            lon = this.long0;\n            p.x = lon;\n            p.y = lat;\n            //trace(p.toString());\n            return p;\n          }\n          p.x *= this.con;\n          p.y *= this.con;\n          ts = rh * this.cons / (2 * this.a * this.k0);\n          lat = this.con * phi2z(this.e, ts);\n          lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n        }\n        else {\n          ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n          lon = this.long0;\n          if (rh <= EPSLN) {\n            Chi = this.X0;\n          }\n          else {\n            Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n            lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n          }\n          lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n        }\n      }\n      p.x = lon;\n      p.y = lat;\n\n      //trace(p.toString());\n      return p;\n\n    }\n\n    var names$8 = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\n    var stere = {\n      init: init$7,\n      forward: forward$6,\n      inverse: inverse$6,\n      names: names$8,\n      ssfn_: ssfn_\n    };\n\n    /*\n      references:\n        Formules et constantes pour le Calcul pour la\n        projection cylindrique conforme à axe oblique et pour la transformation entre\n        des systèmes de référence.\n        http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n      */\n\n    function init$8() {\n      var phy0 = this.lat0;\n      this.lambda0 = this.long0;\n      var sinPhy0 = Math.sin(phy0);\n      var semiMajorAxis = this.a;\n      var invF = this.rf;\n      var flattening = 1 / invF;\n      var e2 = 2 * flattening - Math.pow(flattening, 2);\n      var e = this.e = Math.sqrt(e2);\n      this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n      this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n      this.b0 = Math.asin(sinPhy0 / this.alpha);\n      var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n      var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n      var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n      this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n    }\n\n    function forward$7(p) {\n      var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n      var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n      var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n      // spheric latitude\n      var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n      // spheric longitude\n      var I = this.alpha * (p.x - this.lambda0);\n\n      // psoeudo equatorial rotation\n      var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n      var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n      p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n      p.x = this.R * rotI + this.x0;\n      return p;\n    }\n\n    function inverse$7(p) {\n      var Y = p.x - this.x0;\n      var X = p.y - this.y0;\n\n      var rotI = Y / this.R;\n      var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n      var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n      var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n      var lambda = this.lambda0 + I / this.alpha;\n\n      var S = 0;\n      var phy = b;\n      var prevPhy = -1000;\n      var iteration = 0;\n      while (Math.abs(phy - prevPhy) > 0.0000001) {\n        if (++iteration > 20) {\n          //...reportError(\"omercFwdInfinity\");\n          return;\n        }\n        //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n        S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n        prevPhy = phy;\n        phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n      }\n\n      p.x = lambda;\n      p.y = phy;\n      return p;\n    }\n\n    var names$9 = [\"somerc\"];\n    var somerc = {\n      init: init$8,\n      forward: forward$7,\n      inverse: inverse$7,\n      names: names$9\n    };\n\n    var TOL = 1e-7;\n\n    function isTypeA(P) {\n      var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n      var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n      \n      return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n    }\n\n\n    /* Initialize the Oblique Mercator  projection\n        ------------------------------------------*/\n    function init$9() {  \n      var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n        gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n      \n      // only Type A uses the no_off or no_uoff property\n      // https://github.com/OSGeo/proj.4/issues/104\n      this.no_off = isTypeA(this);\n      this.no_rot = 'no_rot' in this;\n      \n      var alp = false;\n      if (\"alpha\" in this) {\n        alp = true;\n      }\n\n      var gam = false;\n      if (\"rectified_grid_angle\" in this) {\n        gam = true;\n      }\n\n      if (alp) {\n        alpha_c = this.alpha;\n      }\n      \n      if (gam) {\n        gamma = (this.rectified_grid_angle * D2R);\n      }\n      \n      if (alp || gam) {\n        lamc = this.longc;\n      } else {\n        lam1 = this.long1;\n        phi1 = this.lat1;\n        lam2 = this.long2;\n        phi2 = this.lat2;\n        \n        if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n            Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n            Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n          throw new Error();\n        }\n      }\n      \n      var one_es = 1.0 - this.es;\n      com = Math.sqrt(one_es);\n      \n      if (Math.abs(this.lat0) > EPSLN) {\n        sinph0 = Math.sin(this.lat0);\n        cosph0 = Math.cos(this.lat0);\n        con = 1 - this.es * sinph0 * sinph0;\n        this.B = cosph0 * cosph0;\n        this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n        this.A = this.B * this.k0 * com / con;\n        D = this.B * com / (cosph0 * Math.sqrt(con));\n        F = D * D -1;\n        \n        if (F <= 0) {\n          F = 0;\n        } else {\n          F = Math.sqrt(F);\n          if (this.lat0 < 0) {\n            F = -F;\n          }\n        }\n        \n        this.E = F += D;\n        this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n      } else {\n        this.B = 1 / com;\n        this.A = this.k0;\n        this.E = D = F = 1;\n      }\n      \n      if (alp || gam) {\n        if (alp) {\n          gamma0 = Math.asin(Math.sin(alpha_c) / D);\n          if (!gam) {\n            gamma = alpha_c;\n          }\n        } else {\n          gamma0 = gamma;\n          alpha_c = Math.asin(D * Math.sin(gamma0));\n        }\n        this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n      } else {\n        H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n        L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n        F = this.E / H;\n        p = (L - H) / (L + H);\n        J = this.E * this.E;\n        J = (J - L * H) / (J + L * H);\n        con = lam1 - lam2;\n        \n        if (con < -Math.pi) {\n          lam2 -=TWO_PI;\n        } else if (con > Math.pi) {\n          lam2 += TWO_PI;\n        }\n        \n        this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n        gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n        gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n      }\n      \n      this.singam = Math.sin(gamma0);\n      this.cosgam = Math.cos(gamma0);\n      this.sinrot = Math.sin(gamma);\n      this.cosrot = Math.cos(gamma);\n      \n      this.rB = 1 / this.B;\n      this.ArB = this.A * this.rB;\n      this.BrA = 1 / this.ArB;\n      if (this.no_off) {\n        this.u_0 = 0;\n      } else {\n        this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n        \n        if (this.lat0 < 0) {\n          this.u_0 = - this.u_0;\n        }  \n      }\n        \n      F = 0.5 * gamma0;\n      this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n      this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n    }\n\n\n    /* Oblique Mercator forward equations--mapping lat,long to x,y\n        ----------------------------------------------------------*/\n    function forward$8(p) {\n      var coords = {};\n      var S, T, U, V, W, temp, u, v;\n      p.x = p.x - this.lam0;\n      \n      if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n        W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n        \n        temp = 1 / W;\n        S = 0.5 * (W - temp);\n        T = 0.5 * (W + temp);\n        V = Math.sin(this.B * p.x);\n        U = (S * this.singam - V * this.cosgam) / T;\n            \n        if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n          throw new Error();\n        }\n        \n        v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n        temp = Math.cos(this.B * p.x);\n        \n        if (Math.abs(temp) < TOL) {\n          u = this.A * p.x;\n        } else {\n          u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n        }    \n      } else {\n        v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n        u = this.ArB * p.y;\n      }\n         \n      if (this.no_rot) {\n        coords.x = u;\n        coords.y = v;\n      } else {\n        u -= this.u_0;\n        coords.x = v * this.cosrot + u * this.sinrot;\n        coords.y = u * this.cosrot - v * this.sinrot;\n      }\n      \n      coords.x = (this.a * coords.x + this.x0);\n      coords.y = (this.a * coords.y + this.y0);\n      \n      return coords;\n    }\n\n    function inverse$8(p) {\n      var u, v, Qp, Sp, Tp, Vp, Up;\n      var coords = {};\n      \n      p.x = (p.x - this.x0) * (1.0 / this.a);\n      p.y = (p.y - this.y0) * (1.0 / this.a);\n\n      if (this.no_rot) {\n        v = p.y;\n        u = p.x;\n      } else {\n        v = p.x * this.cosrot - p.y * this.sinrot;\n        u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n      }\n      \n      Qp = Math.exp(-this.BrA * v);\n      Sp = 0.5 * (Qp - 1 / Qp);\n      Tp = 0.5 * (Qp + 1 / Qp);\n      Vp = Math.sin(this.BrA * u);\n      Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n      \n      if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n        coords.x = 0;\n        coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n      } else {\n        coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n        coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n        \n        if (coords.y === Infinity) {\n          throw new Error();\n        }\n            \n        coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n      }\n      \n      coords.x += this.lam0;\n      \n      return coords;\n    }\n\n    var names$10 = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\n    var omerc = {\n      init: init$9,\n      forward: forward$8,\n      inverse: inverse$8,\n      names: names$10\n    };\n\n    function init$10() {\n\n      // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n      //double c_lat;                   /* center latitude                      */\n      //double c_lon;                   /* center longitude                     */\n      //double lat1;                    /* first standard parallel              */\n      //double lat2;                    /* second standard parallel             */\n      //double r_maj;                   /* major axis                           */\n      //double r_min;                   /* minor axis                           */\n      //double false_east;              /* x offset in meters                   */\n      //double false_north;             /* y offset in meters                   */\n\n      if (!this.lat2) {\n        this.lat2 = this.lat1;\n      } //if lat2 is not defined\n      if (!this.k0) {\n        this.k0 = 1;\n      }\n      this.x0 = this.x0 || 0;\n      this.y0 = this.y0 || 0;\n      // Standard Parallels cannot be equal and on opposite sides of the equator\n      if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n        return;\n      }\n\n      var temp = this.b / this.a;\n      this.e = Math.sqrt(1 - temp * temp);\n\n      var sin1 = Math.sin(this.lat1);\n      var cos1 = Math.cos(this.lat1);\n      var ms1 = msfnz(this.e, sin1, cos1);\n      var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n      var sin2 = Math.sin(this.lat2);\n      var cos2 = Math.cos(this.lat2);\n      var ms2 = msfnz(this.e, sin2, cos2);\n      var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n      var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n      if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n        this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n      }\n      else {\n        this.ns = sin1;\n      }\n      if (isNaN(this.ns)) {\n        this.ns = sin1;\n      }\n      this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n      this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n      if (!this.title) {\n        this.title = \"Lambert Conformal Conic\";\n      }\n    }\n\n    // Lambert Conformal conic forward equations--mapping lat,long to x,y\n    // -----------------------------------------------------------------\n    function forward$9(p) {\n\n      var lon = p.x;\n      var lat = p.y;\n\n      // singular cases :\n      if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n        lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n      }\n\n      var con = Math.abs(Math.abs(lat) - HALF_PI);\n      var ts, rh1;\n      if (con > EPSLN) {\n        ts = tsfnz(this.e, lat, Math.sin(lat));\n        rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n      }\n      else {\n        con = lat * this.ns;\n        if (con <= 0) {\n          return null;\n        }\n        rh1 = 0;\n      }\n      var theta = this.ns * adjust_lon(lon - this.long0);\n      p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n      p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n      return p;\n    }\n\n    // Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n    // -----------------------------------------------------------------\n    function inverse$9(p) {\n\n      var rh1, con, ts;\n      var lat, lon;\n      var x = (p.x - this.x0) / this.k0;\n      var y = (this.rh - (p.y - this.y0) / this.k0);\n      if (this.ns > 0) {\n        rh1 = Math.sqrt(x * x + y * y);\n        con = 1;\n      }\n      else {\n        rh1 = -Math.sqrt(x * x + y * y);\n        con = -1;\n      }\n      var theta = 0;\n      if (rh1 !== 0) {\n        theta = Math.atan2((con * x), (con * y));\n      }\n      if ((rh1 !== 0) || (this.ns > 0)) {\n        con = 1 / this.ns;\n        ts = Math.pow((rh1 / (this.a * this.f0)), con);\n        lat = phi2z(this.e, ts);\n        if (lat === -9999) {\n          return null;\n        }\n      }\n      else {\n        lat = -HALF_PI;\n      }\n      lon = adjust_lon(theta / this.ns + this.long0);\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$11 = [\n      \"Lambert Tangential Conformal Conic Projection\",\n      \"Lambert_Conformal_Conic\",\n      \"Lambert_Conformal_Conic_1SP\",\n      \"Lambert_Conformal_Conic_2SP\",\n      \"lcc\"\n    ];\n\n    var lcc = {\n      init: init$10,\n      forward: forward$9,\n      inverse: inverse$9,\n      names: names$11\n    };\n\n    function init$11() {\n      this.a = 6377397.155;\n      this.es = 0.006674372230614;\n      this.e = Math.sqrt(this.es);\n      if (!this.lat0) {\n        this.lat0 = 0.863937979737193;\n      }\n      if (!this.long0) {\n        this.long0 = 0.7417649320975901 - 0.308341501185665;\n      }\n      /* if scale not set default to 0.9999 */\n      if (!this.k0) {\n        this.k0 = 0.9999;\n      }\n      this.s45 = 0.785398163397448; /* 45 */\n      this.s90 = 2 * this.s45;\n      this.fi0 = this.lat0;\n      this.e2 = this.es;\n      this.e = Math.sqrt(this.e2);\n      this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n      this.uq = 1.04216856380474;\n      this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n      this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n      this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n      this.k1 = this.k0;\n      this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n      this.s0 = 1.37008346281555;\n      this.n = Math.sin(this.s0);\n      this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n      this.ad = this.s90 - this.uq;\n    }\n\n    /* ellipsoid */\n    /* calculate xy from lat/lon */\n    /* Constants, identical to inverse transform function */\n    function forward$10(p) {\n      var gfi, u, deltav, s, d, eps, ro;\n      var lon = p.x;\n      var lat = p.y;\n      var delta_lon = adjust_lon(lon - this.long0);\n      /* Transformation */\n      gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n      u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n      deltav = -delta_lon * this.alfa;\n      s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n      d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n      eps = this.n * d;\n      ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n      p.y = ro * Math.cos(eps) / 1;\n      p.x = ro * Math.sin(eps) / 1;\n\n      if (!this.czech) {\n        p.y *= -1;\n        p.x *= -1;\n      }\n      return (p);\n    }\n\n    /* calculate lat/lon from xy */\n    function inverse$10(p) {\n      var u, deltav, s, d, eps, ro, fi1;\n      var ok;\n\n      /* Transformation */\n      /* revert y, x*/\n      var tmp = p.x;\n      p.x = p.y;\n      p.y = tmp;\n      if (!this.czech) {\n        p.y *= -1;\n        p.x *= -1;\n      }\n      ro = Math.sqrt(p.x * p.x + p.y * p.y);\n      eps = Math.atan2(p.y, p.x);\n      d = eps / Math.sin(this.s0);\n      s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n      u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n      deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n      p.x = this.long0 - deltav / this.alfa;\n      fi1 = u;\n      ok = 0;\n      var iter = 0;\n      do {\n        p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n        if (Math.abs(fi1 - p.y) < 0.0000000001) {\n          ok = 1;\n        }\n        fi1 = p.y;\n        iter += 1;\n      } while (ok === 0 && iter < 15);\n      if (iter >= 15) {\n        return null;\n      }\n\n      return (p);\n    }\n\n    var names$12 = [\"Krovak\", \"krovak\"];\n    var krovak = {\n      init: init$11,\n      forward: forward$10,\n      inverse: inverse$10,\n      names: names$12\n    };\n\n    var mlfn = function(e0, e1, e2, e3, phi) {\n      return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n    };\n\n    var e0fn = function(x) {\n      return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n    };\n\n    var e1fn = function(x) {\n      return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n    };\n\n    var e2fn = function(x) {\n      return (0.05859375 * x * x * (1 + 0.75 * x));\n    };\n\n    var e3fn = function(x) {\n      return (x * x * x * (35 / 3072));\n    };\n\n    var gN = function(a, e, sinphi) {\n      var temp = e * sinphi;\n      return a / Math.sqrt(1 - temp * temp);\n    };\n\n    var adjust_lat = function(x) {\n      return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n    };\n\n    var imlfn = function(ml, e0, e1, e2, e3) {\n      var phi;\n      var dphi;\n\n      phi = ml / e0;\n      for (var i = 0; i < 15; i++) {\n        dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) {\n          return phi;\n        }\n      }\n\n      //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n      return NaN;\n    };\n\n    function init$12() {\n      if (!this.sphere) {\n        this.e0 = e0fn(this.es);\n        this.e1 = e1fn(this.es);\n        this.e2 = e2fn(this.es);\n        this.e3 = e3fn(this.es);\n        this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n      }\n    }\n\n    /* Cassini forward equations--mapping lat,long to x,y\n      -----------------------------------------------------------------------*/\n    function forward$11(p) {\n\n      /* Forward equations\n          -----------------*/\n      var x, y;\n      var lam = p.x;\n      var phi = p.y;\n      lam = adjust_lon(lam - this.long0);\n\n      if (this.sphere) {\n        x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n        y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n      }\n      else {\n        //ellipsoid\n        var sinphi = Math.sin(phi);\n        var cosphi = Math.cos(phi);\n        var nl = gN(this.a, this.e, sinphi);\n        var tl = Math.tan(phi) * Math.tan(phi);\n        var al = lam * Math.cos(phi);\n        var asq = al * al;\n        var cl = this.es * cosphi * cosphi / (1 - this.es);\n        var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n        x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n        y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n      }\n\n      p.x = x + this.x0;\n      p.y = y + this.y0;\n      return p;\n    }\n\n    /* Inverse equations\n      -----------------*/\n    function inverse$11(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n      var x = p.x / this.a;\n      var y = p.y / this.a;\n      var phi, lam;\n\n      if (this.sphere) {\n        var dd = y + this.lat0;\n        phi = Math.asin(Math.sin(dd) * Math.cos(x));\n        lam = Math.atan2(Math.tan(x), Math.cos(dd));\n      }\n      else {\n        /* ellipsoid */\n        var ml1 = this.ml0 / this.a + y;\n        var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n        if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n          p.x = this.long0;\n          p.y = HALF_PI;\n          if (y < 0) {\n            p.y *= -1;\n          }\n          return p;\n        }\n        var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n        var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n        var tl1 = Math.pow(Math.tan(phi1), 2);\n        var dl = x * this.a / nl1;\n        var dsq = dl * dl;\n        phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n        lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n      }\n\n      p.x = adjust_lon(lam + this.long0);\n      p.y = adjust_lat(phi);\n      return p;\n\n    }\n\n    var names$13 = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\n    var cass = {\n      init: init$12,\n      forward: forward$11,\n      inverse: inverse$11,\n      names: names$13\n    };\n\n    var qsfnz = function(eccent, sinphi) {\n      var con;\n      if (eccent > 1.0e-7) {\n        con = eccent * sinphi;\n        return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n      }\n      else {\n        return (2 * sinphi);\n      }\n    };\n\n    /*\n      reference\n        \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n        The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n      */\n\n    var S_POLE = 1;\n\n    var N_POLE = 2;\n    var EQUIT = 3;\n    var OBLIQ = 4;\n\n    /* Initialize the Lambert Azimuthal Equal Area projection\n      ------------------------------------------------------*/\n    function init$13() {\n      var t = Math.abs(this.lat0);\n      if (Math.abs(t - HALF_PI) < EPSLN) {\n        this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n      }\n      else if (Math.abs(t) < EPSLN) {\n        this.mode = this.EQUIT;\n      }\n      else {\n        this.mode = this.OBLIQ;\n      }\n      if (this.es > 0) {\n        var sinphi;\n\n        this.qp = qsfnz(this.e, 1);\n        this.mmf = 0.5 / (1 - this.es);\n        this.apa = authset(this.es);\n        switch (this.mode) {\n        case this.N_POLE:\n          this.dd = 1;\n          break;\n        case this.S_POLE:\n          this.dd = 1;\n          break;\n        case this.EQUIT:\n          this.rq = Math.sqrt(0.5 * this.qp);\n          this.dd = 1 / this.rq;\n          this.xmf = 1;\n          this.ymf = 0.5 * this.qp;\n          break;\n        case this.OBLIQ:\n          this.rq = Math.sqrt(0.5 * this.qp);\n          sinphi = Math.sin(this.lat0);\n          this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n          this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n          this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n          this.ymf = (this.xmf = this.rq) / this.dd;\n          this.xmf *= this.dd;\n          break;\n        }\n      }\n      else {\n        if (this.mode === this.OBLIQ) {\n          this.sinph0 = Math.sin(this.lat0);\n          this.cosph0 = Math.cos(this.lat0);\n        }\n      }\n    }\n\n    /* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n      -----------------------------------------------------------------------*/\n    function forward$12(p) {\n\n      /* Forward equations\n          -----------------*/\n      var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n      var lam = p.x;\n      var phi = p.y;\n\n      lam = adjust_lon(lam - this.long0);\n      if (this.sphere) {\n        sinphi = Math.sin(phi);\n        cosphi = Math.cos(phi);\n        coslam = Math.cos(lam);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n          y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n          if (y <= EPSLN) {\n            return null;\n          }\n          y = Math.sqrt(2 / y);\n          x = y * cosphi * Math.sin(lam);\n          y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n        }\n        else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n          if (this.mode === this.N_POLE) {\n            coslam = -coslam;\n          }\n          if (Math.abs(phi + this.lat0) < EPSLN) {\n            return null;\n          }\n          y = FORTPI - phi * 0.5;\n          y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n          x = y * Math.sin(lam);\n          y *= coslam;\n        }\n      }\n      else {\n        sinb = 0;\n        cosb = 0;\n        b = 0;\n        coslam = Math.cos(lam);\n        sinlam = Math.sin(lam);\n        sinphi = Math.sin(phi);\n        q = qsfnz(this.e, sinphi);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n          sinb = q / this.qp;\n          cosb = Math.sqrt(1 - sinb * sinb);\n        }\n        switch (this.mode) {\n        case this.OBLIQ:\n          b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n          break;\n        case this.EQUIT:\n          b = 1 + cosb * coslam;\n          break;\n        case this.N_POLE:\n          b = HALF_PI + phi;\n          q = this.qp - q;\n          break;\n        case this.S_POLE:\n          b = phi - HALF_PI;\n          q = this.qp + q;\n          break;\n        }\n        if (Math.abs(b) < EPSLN) {\n          return null;\n        }\n        switch (this.mode) {\n        case this.OBLIQ:\n        case this.EQUIT:\n          b = Math.sqrt(2 / b);\n          if (this.mode === this.OBLIQ) {\n            y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n          }\n          else {\n            y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n          }\n          x = this.xmf * b * cosb * sinlam;\n          break;\n        case this.N_POLE:\n        case this.S_POLE:\n          if (q >= 0) {\n            x = (b = Math.sqrt(q)) * sinlam;\n            y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n          }\n          else {\n            x = y = 0;\n          }\n          break;\n        }\n      }\n\n      p.x = this.a * x + this.x0;\n      p.y = this.a * y + this.y0;\n      return p;\n    }\n\n    /* Inverse equations\n      -----------------*/\n    function inverse$12(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n      var x = p.x / this.a;\n      var y = p.y / this.a;\n      var lam, phi, cCe, sCe, q, rho, ab;\n      if (this.sphere) {\n        var cosz = 0,\n          rh, sinz = 0;\n\n        rh = Math.sqrt(x * x + y * y);\n        phi = rh * 0.5;\n        if (phi > 1) {\n          return null;\n        }\n        phi = 2 * Math.asin(phi);\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n          sinz = Math.sin(phi);\n          cosz = Math.cos(phi);\n        }\n        switch (this.mode) {\n        case this.EQUIT:\n          phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n          x *= sinz;\n          y = cosz * rh;\n          break;\n        case this.OBLIQ:\n          phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n          x *= sinz * this.cosph0;\n          y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n          break;\n        case this.N_POLE:\n          y = -y;\n          phi = HALF_PI - phi;\n          break;\n        case this.S_POLE:\n          phi -= HALF_PI;\n          break;\n        }\n        lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n      }\n      else {\n        ab = 0;\n        if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n          x /= this.dd;\n          y *= this.dd;\n          rho = Math.sqrt(x * x + y * y);\n          if (rho < EPSLN) {\n            p.x = this.long0;\n            p.y = this.lat0;\n            return p;\n          }\n          sCe = 2 * Math.asin(0.5 * rho / this.rq);\n          cCe = Math.cos(sCe);\n          x *= (sCe = Math.sin(sCe));\n          if (this.mode === this.OBLIQ) {\n            ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n            q = this.qp * ab;\n            y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n          }\n          else {\n            ab = y * sCe / rho;\n            q = this.qp * ab;\n            y = rho * cCe;\n          }\n        }\n        else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n          if (this.mode === this.N_POLE) {\n            y = -y;\n          }\n          q = (x * x + y * y);\n          if (!q) {\n            p.x = this.long0;\n            p.y = this.lat0;\n            return p;\n          }\n          ab = 1 - q / this.qp;\n          if (this.mode === this.S_POLE) {\n            ab = -ab;\n          }\n        }\n        lam = Math.atan2(x, y);\n        phi = authlat(Math.asin(ab), this.apa);\n      }\n\n      p.x = adjust_lon(this.long0 + lam);\n      p.y = phi;\n      return p;\n    }\n\n    /* determine latitude from authalic latitude */\n    var P00 = 0.33333333333333333333;\n\n    var P01 = 0.17222222222222222222;\n    var P02 = 0.10257936507936507936;\n    var P10 = 0.06388888888888888888;\n    var P11 = 0.06640211640211640211;\n    var P20 = 0.01641501294219154443;\n\n    function authset(es) {\n      var t;\n      var APA = [];\n      APA[0] = es * P00;\n      t = es * es;\n      APA[0] += t * P01;\n      APA[1] = t * P10;\n      t *= es;\n      APA[0] += t * P02;\n      APA[1] += t * P11;\n      APA[2] = t * P20;\n      return APA;\n    }\n\n    function authlat(beta, APA) {\n      var t = beta + beta;\n      return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n    }\n\n    var names$14 = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\n    var laea = {\n      init: init$13,\n      forward: forward$12,\n      inverse: inverse$12,\n      names: names$14,\n      S_POLE: S_POLE,\n      N_POLE: N_POLE,\n      EQUIT: EQUIT,\n      OBLIQ: OBLIQ\n    };\n\n    var asinz = function(x) {\n      if (Math.abs(x) > 1) {\n        x = (x > 1) ? 1 : -1;\n      }\n      return Math.asin(x);\n    };\n\n    function init$14() {\n\n      if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n        return;\n      }\n      this.temp = this.b / this.a;\n      this.es = 1 - Math.pow(this.temp, 2);\n      this.e3 = Math.sqrt(this.es);\n\n      this.sin_po = Math.sin(this.lat1);\n      this.cos_po = Math.cos(this.lat1);\n      this.t1 = this.sin_po;\n      this.con = this.sin_po;\n      this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n      this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n      this.sin_po = Math.sin(this.lat2);\n      this.cos_po = Math.cos(this.lat2);\n      this.t2 = this.sin_po;\n      this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n      this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n      this.sin_po = Math.sin(this.lat0);\n      this.cos_po = Math.cos(this.lat0);\n      this.t3 = this.sin_po;\n      this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n      if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n        this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n      }\n      else {\n        this.ns0 = this.con;\n      }\n      this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n      this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n    }\n\n    /* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n      -------------------------------------------------------------------*/\n    function forward$13(p) {\n\n      var lon = p.x;\n      var lat = p.y;\n\n      this.sin_phi = Math.sin(lat);\n      this.cos_phi = Math.cos(lat);\n\n      var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n      var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n      var theta = this.ns0 * adjust_lon(lon - this.long0);\n      var x = rh1 * Math.sin(theta) + this.x0;\n      var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    function inverse$13(p) {\n      var rh1, qs, con, theta, lon, lat;\n\n      p.x -= this.x0;\n      p.y = this.rh - p.y + this.y0;\n      if (this.ns0 >= 0) {\n        rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n        con = 1;\n      }\n      else {\n        rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n        con = -1;\n      }\n      theta = 0;\n      if (rh1 !== 0) {\n        theta = Math.atan2(con * p.x, con * p.y);\n      }\n      con = rh1 * this.ns0 / this.a;\n      if (this.sphere) {\n        lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n      }\n      else {\n        qs = (this.c - con * con) / this.ns0;\n        lat = this.phi1z(this.e3, qs);\n      }\n\n      lon = adjust_lon(theta / this.ns0 + this.long0);\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    /* Function to compute phi1, the latitude for the inverse of the\n       Albers Conical Equal-Area projection.\n    -------------------------------------------*/\n    function phi1z(eccent, qs) {\n      var sinphi, cosphi, con, com, dphi;\n      var phi = asinz(0.5 * qs);\n      if (eccent < EPSLN) {\n        return phi;\n      }\n\n      var eccnts = eccent * eccent;\n      for (var i = 1; i <= 25; i++) {\n        sinphi = Math.sin(phi);\n        cosphi = Math.cos(phi);\n        con = eccent * sinphi;\n        com = 1 - con * con;\n        dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n        phi = phi + dphi;\n        if (Math.abs(dphi) <= 1e-7) {\n          return phi;\n        }\n      }\n      return null;\n    }\n\n    var names$15 = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\n    var aea = {\n      init: init$14,\n      forward: forward$13,\n      inverse: inverse$13,\n      names: names$15,\n      phi1z: phi1z\n    };\n\n    /*\n      reference:\n        Wolfram Mathworld \"Gnomonic Projection\"\n        http://mathworld.wolfram.com/GnomonicProjection.html\n        Accessed: 12th November 2009\n      */\n    function init$15() {\n\n      /* Place parameters in static storage for common use\n          -------------------------------------------------*/\n      this.sin_p14 = Math.sin(this.lat0);\n      this.cos_p14 = Math.cos(this.lat0);\n      // Approximation for projecting points to the horizon (infinity)\n      this.infinity_dist = 1000 * this.a;\n      this.rc = 1;\n    }\n\n    /* Gnomonic forward equations--mapping lat,long to x,y\n        ---------------------------------------------------*/\n    function forward$14(p) {\n      var sinphi, cosphi; /* sin and cos value        */\n      var dlon; /* delta longitude value      */\n      var coslon; /* cos of longitude        */\n      var ksp; /* scale factor          */\n      var g;\n      var x, y;\n      var lon = p.x;\n      var lat = p.y;\n      /* Forward equations\n          -----------------*/\n      dlon = adjust_lon(lon - this.long0);\n\n      sinphi = Math.sin(lat);\n      cosphi = Math.cos(lat);\n\n      coslon = Math.cos(dlon);\n      g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n      ksp = 1;\n      if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n        x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n        y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n      }\n      else {\n\n        // Point is in the opposing hemisphere and is unprojectable\n        // We still need to return a reasonable point, so we project\n        // to infinity, on a bearing\n        // equivalent to the northern hemisphere equivalent\n        // This is a reasonable approximation for short shapes and lines that\n        // straddle the horizon.\n\n        x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n        y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n      }\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    function inverse$14(p) {\n      var rh; /* Rho */\n      var sinc, cosc;\n      var c;\n      var lon, lat;\n\n      /* Inverse equations\n          -----------------*/\n      p.x = (p.x - this.x0) / this.a;\n      p.y = (p.y - this.y0) / this.a;\n\n      p.x /= this.k0;\n      p.y /= this.k0;\n\n      if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n        c = Math.atan2(rh, this.rc);\n        sinc = Math.sin(c);\n        cosc = Math.cos(c);\n\n        lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n        lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n        lon = adjust_lon(this.long0 + lon);\n      }\n      else {\n        lat = this.phic0;\n        lon = 0;\n      }\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$16 = [\"gnom\"];\n    var gnom = {\n      init: init$15,\n      forward: forward$14,\n      inverse: inverse$14,\n      names: names$16\n    };\n\n    var iqsfnz = function(eccent, q) {\n      var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n      if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n        if (q < 0) {\n          return (-1 * HALF_PI);\n        }\n        else {\n          return HALF_PI;\n        }\n      }\n      //var phi = 0.5* q/(1-eccent*eccent);\n      var phi = Math.asin(0.5 * q);\n      var dphi;\n      var sin_phi;\n      var cos_phi;\n      var con;\n      for (var i = 0; i < 30; i++) {\n        sin_phi = Math.sin(phi);\n        cos_phi = Math.cos(phi);\n        con = eccent * sin_phi;\n        dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n        phi += dphi;\n        if (Math.abs(dphi) <= 0.0000000001) {\n          return phi;\n        }\n      }\n\n      //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n      return NaN;\n    };\n\n    /*\n      reference:\n        \"Cartographic Projection Procedures for the UNIX Environment-\n        A User's Manual\" by Gerald I. Evenden,\n        USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n    */\n    function init$16() {\n      //no-op\n      if (!this.sphere) {\n        this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n      }\n    }\n\n    /* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n        ------------------------------------------------------------*/\n    function forward$15(p) {\n      var lon = p.x;\n      var lat = p.y;\n      var x, y;\n      /* Forward equations\n          -----------------*/\n      var dlon = adjust_lon(lon - this.long0);\n      if (this.sphere) {\n        x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n        y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n      }\n      else {\n        var qs = qsfnz(this.e, Math.sin(lat));\n        x = this.x0 + this.a * this.k0 * dlon;\n        y = this.y0 + this.a * qs * 0.5 / this.k0;\n      }\n\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    /* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n        ------------------------------------------------------------*/\n    function inverse$15(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n      var lon, lat;\n\n      if (this.sphere) {\n        lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n        lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n      }\n      else {\n        lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n        lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n      }\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$17 = [\"cea\"];\n    var cea = {\n      init: init$16,\n      forward: forward$15,\n      inverse: inverse$15,\n      names: names$17\n    };\n\n    function init$17() {\n\n      this.x0 = this.x0 || 0;\n      this.y0 = this.y0 || 0;\n      this.lat0 = this.lat0 || 0;\n      this.long0 = this.long0 || 0;\n      this.lat_ts = this.lat_ts || 0;\n      this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n      this.rc = Math.cos(this.lat_ts);\n    }\n\n    // forward equations--mapping lat,long to x,y\n    // -----------------------------------------------------------------\n    function forward$16(p) {\n\n      var lon = p.x;\n      var lat = p.y;\n\n      var dlon = adjust_lon(lon - this.long0);\n      var dlat = adjust_lat(lat - this.lat0);\n      p.x = this.x0 + (this.a * dlon * this.rc);\n      p.y = this.y0 + (this.a * dlat);\n      return p;\n    }\n\n    // inverse equations--mapping x,y to lat/long\n    // -----------------------------------------------------------------\n    function inverse$16(p) {\n\n      var x = p.x;\n      var y = p.y;\n\n      p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n      p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n      return p;\n    }\n\n    var names$18 = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\n    var eqc = {\n      init: init$17,\n      forward: forward$16,\n      inverse: inverse$16,\n      names: names$18\n    };\n\n    var MAX_ITER$2 = 20;\n\n    function init$18() {\n      /* Place parameters in static storage for common use\n          -------------------------------------------------*/\n      this.temp = this.b / this.a;\n      this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n      this.e = Math.sqrt(this.es);\n      this.e0 = e0fn(this.es);\n      this.e1 = e1fn(this.es);\n      this.e2 = e2fn(this.es);\n      this.e3 = e3fn(this.es);\n      this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n    }\n\n    /* Polyconic forward equations--mapping lat,long to x,y\n        ---------------------------------------------------*/\n    function forward$17(p) {\n      var lon = p.x;\n      var lat = p.y;\n      var x, y, el;\n      var dlon = adjust_lon(lon - this.long0);\n      el = dlon * Math.sin(lat);\n      if (this.sphere) {\n        if (Math.abs(lat) <= EPSLN) {\n          x = this.a * dlon;\n          y = -1 * this.a * this.lat0;\n        }\n        else {\n          x = this.a * Math.sin(el) / Math.tan(lat);\n          y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n        }\n      }\n      else {\n        if (Math.abs(lat) <= EPSLN) {\n          x = this.a * dlon;\n          y = -1 * this.ml0;\n        }\n        else {\n          var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n          x = nl * Math.sin(el);\n          y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n        }\n\n      }\n      p.x = x + this.x0;\n      p.y = y + this.y0;\n      return p;\n    }\n\n    /* Inverse equations\n      -----------------*/\n    function inverse$17(p) {\n      var lon, lat, x, y, i;\n      var al, bl;\n      var phi, dphi;\n      x = p.x - this.x0;\n      y = p.y - this.y0;\n\n      if (this.sphere) {\n        if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n          lon = adjust_lon(x / this.a + this.long0);\n          lat = 0;\n        }\n        else {\n          al = this.lat0 + y / this.a;\n          bl = x * x / this.a / this.a + al * al;\n          phi = al;\n          var tanphi;\n          for (i = MAX_ITER$2; i; --i) {\n            tanphi = Math.tan(phi);\n            dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n            phi += dphi;\n            if (Math.abs(dphi) <= EPSLN) {\n              lat = phi;\n              break;\n            }\n          }\n          lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n        }\n      }\n      else {\n        if (Math.abs(y + this.ml0) <= EPSLN) {\n          lat = 0;\n          lon = adjust_lon(this.long0 + x / this.a);\n        }\n        else {\n\n          al = (this.ml0 + y) / this.a;\n          bl = x * x / this.a / this.a + al * al;\n          phi = al;\n          var cl, mln, mlnp, ma;\n          var con;\n          for (i = MAX_ITER$2; i; --i) {\n            con = this.e * Math.sin(phi);\n            cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n            mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n            mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n            ma = mln / this.a;\n            dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n            phi -= dphi;\n            if (Math.abs(dphi) <= EPSLN) {\n              lat = phi;\n              break;\n            }\n          }\n\n          //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n          cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n          lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n        }\n      }\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$19 = [\"Polyconic\", \"poly\"];\n    var poly = {\n      init: init$18,\n      forward: forward$17,\n      inverse: inverse$17,\n      names: names$19\n    };\n\n    /*\n      reference\n        Department of Land and Survey Technical Circular 1973/32\n          http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n        OSG Technical Report 4.1\n          http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n      */\n\n    /**\n     * iterations: Number of iterations to refine inverse transform.\n     *     0 -> km accuracy\n     *     1 -> m accuracy -- suitable for most mapping applications\n     *     2 -> mm accuracy\n     */\n\n\n    function init$19() {\n      this.A = [];\n      this.A[1] = 0.6399175073;\n      this.A[2] = -0.1358797613;\n      this.A[3] = 0.063294409;\n      this.A[4] = -0.02526853;\n      this.A[5] = 0.0117879;\n      this.A[6] = -0.0055161;\n      this.A[7] = 0.0026906;\n      this.A[8] = -0.001333;\n      this.A[9] = 0.00067;\n      this.A[10] = -0.00034;\n\n      this.B_re = [];\n      this.B_im = [];\n      this.B_re[1] = 0.7557853228;\n      this.B_im[1] = 0;\n      this.B_re[2] = 0.249204646;\n      this.B_im[2] = 0.003371507;\n      this.B_re[3] = -0.001541739;\n      this.B_im[3] = 0.041058560;\n      this.B_re[4] = -0.10162907;\n      this.B_im[4] = 0.01727609;\n      this.B_re[5] = -0.26623489;\n      this.B_im[5] = -0.36249218;\n      this.B_re[6] = -0.6870983;\n      this.B_im[6] = -1.1651967;\n\n      this.C_re = [];\n      this.C_im = [];\n      this.C_re[1] = 1.3231270439;\n      this.C_im[1] = 0;\n      this.C_re[2] = -0.577245789;\n      this.C_im[2] = -0.007809598;\n      this.C_re[3] = 0.508307513;\n      this.C_im[3] = -0.112208952;\n      this.C_re[4] = -0.15094762;\n      this.C_im[4] = 0.18200602;\n      this.C_re[5] = 1.01418179;\n      this.C_im[5] = 1.64497696;\n      this.C_re[6] = 1.9660549;\n      this.C_im[6] = 2.5127645;\n\n      this.D = [];\n      this.D[1] = 1.5627014243;\n      this.D[2] = 0.5185406398;\n      this.D[3] = -0.03333098;\n      this.D[4] = -0.1052906;\n      this.D[5] = -0.0368594;\n      this.D[6] = 0.007317;\n      this.D[7] = 0.01220;\n      this.D[8] = 0.00394;\n      this.D[9] = -0.0013;\n    }\n\n    /**\n        New Zealand Map Grid Forward  - long/lat to x/y\n        long/lat in radians\n      */\n    function forward$18(p) {\n      var n;\n      var lon = p.x;\n      var lat = p.y;\n\n      var delta_lat = lat - this.lat0;\n      var delta_lon = lon - this.long0;\n\n      // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n      // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n      var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n      var d_lambda = delta_lon;\n      var d_phi_n = 1; // d_phi^0\n\n      var d_psi = 0;\n      for (n = 1; n <= 10; n++) {\n        d_phi_n = d_phi_n * d_phi;\n        d_psi = d_psi + this.A[n] * d_phi_n;\n      }\n\n      // 2. Calculate theta\n      var th_re = d_psi;\n      var th_im = d_lambda;\n\n      // 3. Calculate z\n      var th_n_re = 1;\n      var th_n_im = 0; // theta^0\n      var th_n_re1;\n      var th_n_im1;\n\n      var z_re = 0;\n      var z_im = 0;\n      for (n = 1; n <= 6; n++) {\n        th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n        th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n        th_n_re = th_n_re1;\n        th_n_im = th_n_im1;\n        z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n        z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n      }\n\n      // 4. Calculate easting and northing\n      p.x = (z_im * this.a) + this.x0;\n      p.y = (z_re * this.a) + this.y0;\n\n      return p;\n    }\n\n    /**\n        New Zealand Map Grid Inverse  -  x/y to long/lat\n      */\n    function inverse$18(p) {\n      var n;\n      var x = p.x;\n      var y = p.y;\n\n      var delta_x = x - this.x0;\n      var delta_y = y - this.y0;\n\n      // 1. Calculate z\n      var z_re = delta_y / this.a;\n      var z_im = delta_x / this.a;\n\n      // 2a. Calculate theta - first approximation gives km accuracy\n      var z_n_re = 1;\n      var z_n_im = 0; // z^0\n      var z_n_re1;\n      var z_n_im1;\n\n      var th_re = 0;\n      var th_im = 0;\n      for (n = 1; n <= 6; n++) {\n        z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n        z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n        z_n_re = z_n_re1;\n        z_n_im = z_n_im1;\n        th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n        th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n      }\n\n      // 2b. Iterate to refine the accuracy of the calculation\n      //        0 iterations gives km accuracy\n      //        1 iteration gives m accuracy -- good enough for most mapping applications\n      //        2 iterations bives mm accuracy\n      for (var i = 0; i < this.iterations; i++) {\n        var th_n_re = th_re;\n        var th_n_im = th_im;\n        var th_n_re1;\n        var th_n_im1;\n\n        var num_re = z_re;\n        var num_im = z_im;\n        for (n = 2; n <= 6; n++) {\n          th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n          th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n          th_n_re = th_n_re1;\n          th_n_im = th_n_im1;\n          num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n          num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n        }\n\n        th_n_re = 1;\n        th_n_im = 0;\n        var den_re = this.B_re[1];\n        var den_im = this.B_im[1];\n        for (n = 2; n <= 6; n++) {\n          th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n          th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n          th_n_re = th_n_re1;\n          th_n_im = th_n_im1;\n          den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n          den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n        }\n\n        // Complex division\n        var den2 = den_re * den_re + den_im * den_im;\n        th_re = (num_re * den_re + num_im * den_im) / den2;\n        th_im = (num_im * den_re - num_re * den_im) / den2;\n      }\n\n      // 3. Calculate d_phi              ...                                    // and d_lambda\n      var d_psi = th_re;\n      var d_lambda = th_im;\n      var d_psi_n = 1; // d_psi^0\n\n      var d_phi = 0;\n      for (n = 1; n <= 9; n++) {\n        d_psi_n = d_psi_n * d_psi;\n        d_phi = d_phi + this.D[n] * d_psi_n;\n      }\n\n      // 4. Calculate latitude and longitude\n      // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n      var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n      var lon = this.long0 + d_lambda;\n\n      p.x = lon;\n      p.y = lat;\n\n      return p;\n    }\n\n    var names$20 = [\"New_Zealand_Map_Grid\", \"nzmg\"];\n    var nzmg = {\n      init: init$19,\n      forward: forward$18,\n      inverse: inverse$18,\n      names: names$20\n    };\n\n    /*\n      reference\n        \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n        The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n      */\n\n\n    /* Initialize the Miller Cylindrical projection\n      -------------------------------------------*/\n    function init$20() {\n      //no-op\n    }\n\n    /* Miller Cylindrical forward equations--mapping lat,long to x,y\n        ------------------------------------------------------------*/\n    function forward$19(p) {\n      var lon = p.x;\n      var lat = p.y;\n      /* Forward equations\n          -----------------*/\n      var dlon = adjust_lon(lon - this.long0);\n      var x = this.x0 + this.a * dlon;\n      var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    /* Miller Cylindrical inverse equations--mapping x,y to lat/long\n        ------------------------------------------------------------*/\n    function inverse$19(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n\n      var lon = adjust_lon(this.long0 + p.x / this.a);\n      var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$21 = [\"Miller_Cylindrical\", \"mill\"];\n    var mill = {\n      init: init$20,\n      forward: forward$19,\n      inverse: inverse$19,\n      names: names$21\n    };\n\n    var MAX_ITER$3 = 20;\n    function init$21() {\n      /* Place parameters in static storage for common use\n        -------------------------------------------------*/\n\n\n      if (!this.sphere) {\n        this.en = pj_enfn(this.es);\n      }\n      else {\n        this.n = 1;\n        this.m = 0;\n        this.es = 0;\n        this.C_y = Math.sqrt((this.m + 1) / this.n);\n        this.C_x = this.C_y / (this.m + 1);\n      }\n\n    }\n\n    /* Sinusoidal forward equations--mapping lat,long to x,y\n      -----------------------------------------------------*/\n    function forward$20(p) {\n      var x, y;\n      var lon = p.x;\n      var lat = p.y;\n      /* Forward equations\n        -----------------*/\n      lon = adjust_lon(lon - this.long0);\n\n      if (this.sphere) {\n        if (!this.m) {\n          lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n        }\n        else {\n          var k = this.n * Math.sin(lat);\n          for (var i = MAX_ITER$3; i; --i) {\n            var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n            lat -= V;\n            if (Math.abs(V) < EPSLN) {\n              break;\n            }\n          }\n        }\n        x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n        y = this.a * this.C_y * lat;\n\n      }\n      else {\n\n        var s = Math.sin(lat);\n        var c = Math.cos(lat);\n        y = this.a * pj_mlfn(lat, s, c, this.en);\n        x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n      }\n\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    function inverse$20(p) {\n      var lat, temp, lon, s;\n\n      p.x -= this.x0;\n      lon = p.x / this.a;\n      p.y -= this.y0;\n      lat = p.y / this.a;\n\n      if (this.sphere) {\n        lat /= this.C_y;\n        lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n        if (this.m) {\n          lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n        }\n        else if (this.n !== 1) {\n          lat = asinz(Math.sin(lat) / this.n);\n        }\n        lon = adjust_lon(lon + this.long0);\n        lat = adjust_lat(lat);\n      }\n      else {\n        lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n        s = Math.abs(lat);\n        if (s < HALF_PI) {\n          s = Math.sin(lat);\n          temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n          //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n          lon = adjust_lon(temp);\n        }\n        else if ((s - EPSLN) < HALF_PI) {\n          lon = this.long0;\n        }\n      }\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$22 = [\"Sinusoidal\", \"sinu\"];\n    var sinu = {\n      init: init$21,\n      forward: forward$20,\n      inverse: inverse$20,\n      names: names$22\n    };\n\n    function init$22() {}\n    /* Mollweide forward equations--mapping lat,long to x,y\n        ----------------------------------------------------*/\n    function forward$21(p) {\n\n      /* Forward equations\n          -----------------*/\n      var lon = p.x;\n      var lat = p.y;\n\n      var delta_lon = adjust_lon(lon - this.long0);\n      var theta = lat;\n      var con = Math.PI * Math.sin(lat);\n\n      /* Iterate using the Newton-Raphson method to find theta\n          -----------------------------------------------------*/\n      while (true) {\n        var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n        theta += delta_theta;\n        if (Math.abs(delta_theta) < EPSLN) {\n          break;\n        }\n      }\n      theta /= 2;\n\n      /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n           this is done here because of precision problems with \"cos(theta)\"\n           --------------------------------------------------------------------------*/\n      if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n        delta_lon = 0;\n      }\n      var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n      var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    function inverse$21(p) {\n      var theta;\n      var arg;\n\n      /* Inverse equations\n          -----------------*/\n      p.x -= this.x0;\n      p.y -= this.y0;\n      arg = p.y / (1.4142135623731 * this.a);\n\n      /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n           a number very close to one is used instead.\n           -------------------------------------------------------------------*/\n      if (Math.abs(arg) > 0.999999999999) {\n        arg = 0.999999999999;\n      }\n      theta = Math.asin(arg);\n      var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n      if (lon < (-Math.PI)) {\n        lon = -Math.PI;\n      }\n      if (lon > Math.PI) {\n        lon = Math.PI;\n      }\n      arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n      if (Math.abs(arg) > 1) {\n        arg = 1;\n      }\n      var lat = Math.asin(arg);\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$23 = [\"Mollweide\", \"moll\"];\n    var moll = {\n      init: init$22,\n      forward: forward$21,\n      inverse: inverse$21,\n      names: names$23\n    };\n\n    function init$23() {\n\n      /* Place parameters in static storage for common use\n          -------------------------------------------------*/\n      // Standard Parallels cannot be equal and on opposite sides of the equator\n      if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n        return;\n      }\n      this.lat2 = this.lat2 || this.lat1;\n      this.temp = this.b / this.a;\n      this.es = 1 - Math.pow(this.temp, 2);\n      this.e = Math.sqrt(this.es);\n      this.e0 = e0fn(this.es);\n      this.e1 = e1fn(this.es);\n      this.e2 = e2fn(this.es);\n      this.e3 = e3fn(this.es);\n\n      this.sinphi = Math.sin(this.lat1);\n      this.cosphi = Math.cos(this.lat1);\n\n      this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n      this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n      if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n        this.ns = this.sinphi;\n      }\n      else {\n        this.sinphi = Math.sin(this.lat2);\n        this.cosphi = Math.cos(this.lat2);\n        this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n        this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n        this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n      }\n      this.g = this.ml1 + this.ms1 / this.ns;\n      this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n      this.rh = this.a * (this.g - this.ml0);\n    }\n\n    /* Equidistant Conic forward equations--mapping lat,long to x,y\n      -----------------------------------------------------------*/\n    function forward$22(p) {\n      var lon = p.x;\n      var lat = p.y;\n      var rh1;\n\n      /* Forward equations\n          -----------------*/\n      if (this.sphere) {\n        rh1 = this.a * (this.g - lat);\n      }\n      else {\n        var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n        rh1 = this.a * (this.g - ml);\n      }\n      var theta = this.ns * adjust_lon(lon - this.long0);\n      var x = this.x0 + rh1 * Math.sin(theta);\n      var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    /* Inverse equations\n      -----------------*/\n    function inverse$22(p) {\n      p.x -= this.x0;\n      p.y = this.rh - p.y + this.y0;\n      var con, rh1, lat, lon;\n      if (this.ns >= 0) {\n        rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n        con = 1;\n      }\n      else {\n        rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n        con = -1;\n      }\n      var theta = 0;\n      if (rh1 !== 0) {\n        theta = Math.atan2(con * p.x, con * p.y);\n      }\n\n      if (this.sphere) {\n        lon = adjust_lon(this.long0 + theta / this.ns);\n        lat = adjust_lat(this.g - rh1 / this.a);\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n      else {\n        var ml = this.g - rh1 / this.a;\n        lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n        lon = adjust_lon(this.long0 + theta / this.ns);\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n\n    }\n\n    var names$24 = [\"Equidistant_Conic\", \"eqdc\"];\n    var eqdc = {\n      init: init$23,\n      forward: forward$22,\n      inverse: inverse$22,\n      names: names$24\n    };\n\n    /* Initialize the Van Der Grinten projection\n      ----------------------------------------*/\n    function init$24() {\n      //this.R = 6370997; //Radius of earth\n      this.R = this.a;\n    }\n\n    function forward$23(p) {\n\n      var lon = p.x;\n      var lat = p.y;\n\n      /* Forward equations\n        -----------------*/\n      var dlon = adjust_lon(lon - this.long0);\n      var x, y;\n\n      if (Math.abs(lat) <= EPSLN) {\n        x = this.x0 + this.R * dlon;\n        y = this.y0;\n      }\n      var theta = asinz(2 * Math.abs(lat / Math.PI));\n      if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n        x = this.x0;\n        if (lat >= 0) {\n          y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n        }\n        else {\n          y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n        }\n        //  return(OK);\n      }\n      var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n      var asq = al * al;\n      var sinth = Math.sin(theta);\n      var costh = Math.cos(theta);\n\n      var g = costh / (sinth + costh - 1);\n      var gsq = g * g;\n      var m = g * (2 / sinth - 1);\n      var msq = m * m;\n      var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n      if (dlon < 0) {\n        con = -con;\n      }\n      x = this.x0 + con;\n      //con = Math.abs(con / (Math.PI * this.R));\n      var q = asq + g;\n      con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n      if (lat >= 0) {\n        //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n        y = this.y0 + con;\n      }\n      else {\n        //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n        y = this.y0 - con;\n      }\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    /* Van Der Grinten inverse equations--mapping x,y to lat/long\n      ---------------------------------------------------------*/\n    function inverse$23(p) {\n      var lon, lat;\n      var xx, yy, xys, c1, c2, c3;\n      var a1;\n      var m1;\n      var con;\n      var th1;\n      var d;\n\n      /* inverse equations\n        -----------------*/\n      p.x -= this.x0;\n      p.y -= this.y0;\n      con = Math.PI * this.R;\n      xx = p.x / con;\n      yy = p.y / con;\n      xys = xx * xx + yy * yy;\n      c1 = -Math.abs(yy) * (1 + xys);\n      c2 = c1 - 2 * yy * yy + xx * xx;\n      c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n      d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n      a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n      m1 = 2 * Math.sqrt(-a1 / 3);\n      con = ((3 * d) / a1) / m1;\n      if (Math.abs(con) > 1) {\n        if (con >= 0) {\n          con = 1;\n        }\n        else {\n          con = -1;\n        }\n      }\n      th1 = Math.acos(con) / 3;\n      if (p.y >= 0) {\n        lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n      }\n      else {\n        lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n      }\n\n      if (Math.abs(xx) < EPSLN) {\n        lon = this.long0;\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n      }\n\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$25 = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\n    var vandg = {\n      init: init$24,\n      forward: forward$23,\n      inverse: inverse$23,\n      names: names$25\n    };\n\n    function init$25() {\n      this.sin_p12 = Math.sin(this.lat0);\n      this.cos_p12 = Math.cos(this.lat0);\n    }\n\n    function forward$24(p) {\n      var lon = p.x;\n      var lat = p.y;\n      var sinphi = Math.sin(p.y);\n      var cosphi = Math.cos(p.y);\n      var dlon = adjust_lon(lon - this.long0);\n      var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n      if (this.sphere) {\n        if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n          //North Pole case\n          p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n          p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n          return p;\n        }\n        else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n          //South Pole case\n          p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n          p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n          return p;\n        }\n        else {\n          //default case\n          cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n          c = Math.acos(cos_c);\n          kp = c ? c / Math.sin(c) : 1;\n          p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n          p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n          return p;\n        }\n      }\n      else {\n        e0 = e0fn(this.es);\n        e1 = e1fn(this.es);\n        e2 = e2fn(this.es);\n        e3 = e3fn(this.es);\n        if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n          //North Pole case\n          Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n          Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n          p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n          p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n          return p;\n        }\n        else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n          //South Pole case\n          Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n          Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n          p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n          p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n          return p;\n        }\n        else {\n          //Default case\n          tanphi = sinphi / cosphi;\n          Nl1 = gN(this.a, this.e, this.sin_p12);\n          Nl = gN(this.a, this.e, sinphi);\n          psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n          Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n          if (Az === 0) {\n            s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n          }\n          else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n            s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n          }\n          else {\n            s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n          }\n          G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n          H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n          GH = G * H;\n          Hs = H * H;\n          s2 = s * s;\n          s3 = s2 * s;\n          s4 = s3 * s;\n          s5 = s4 * s;\n          c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n          p.x = this.x0 + c * Math.sin(Az);\n          p.y = this.y0 + c * Math.cos(Az);\n          return p;\n        }\n      }\n\n\n    }\n\n    function inverse$24(p) {\n      p.x -= this.x0;\n      p.y -= this.y0;\n      var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n      if (this.sphere) {\n        rh = Math.sqrt(p.x * p.x + p.y * p.y);\n        if (rh > (2 * HALF_PI * this.a)) {\n          return;\n        }\n        z = rh / this.a;\n\n        sinz = Math.sin(z);\n        cosz = Math.cos(z);\n\n        lon = this.long0;\n        if (Math.abs(rh) <= EPSLN) {\n          lat = this.lat0;\n        }\n        else {\n          lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n          con = Math.abs(this.lat0) - HALF_PI;\n          if (Math.abs(con) <= EPSLN) {\n            if (this.lat0 >= 0) {\n              lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n            }\n            else {\n              lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n            }\n          }\n          else {\n            /*con = cosz - this.sin_p12 * Math.sin(lat);\n            if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n              //no-op, just keep the lon value as is\n            } else {\n              var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n              lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n            }*/\n            lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n          }\n        }\n\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n      else {\n        e0 = e0fn(this.es);\n        e1 = e1fn(this.es);\n        e2 = e2fn(this.es);\n        e3 = e3fn(this.es);\n        if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n          //North pole case\n          Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n          rh = Math.sqrt(p.x * p.x + p.y * p.y);\n          M = Mlp - rh;\n          lat = imlfn(M / this.a, e0, e1, e2, e3);\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n          p.x = lon;\n          p.y = lat;\n          return p;\n        }\n        else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n          //South pole case\n          Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n          rh = Math.sqrt(p.x * p.x + p.y * p.y);\n          M = rh - Mlp;\n\n          lat = imlfn(M / this.a, e0, e1, e2, e3);\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n          p.x = lon;\n          p.y = lat;\n          return p;\n        }\n        else {\n          //default case\n          rh = Math.sqrt(p.x * p.x + p.y * p.y);\n          Az = Math.atan2(p.x, p.y);\n          N1 = gN(this.a, this.e, this.sin_p12);\n          cosAz = Math.cos(Az);\n          tmp = this.e * this.cos_p12 * cosAz;\n          A = -tmp * tmp / (1 - this.es);\n          B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n          D = rh / N1;\n          Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n          F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n          psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n          lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n          sinpsi = Math.sin(psi);\n          lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n          p.x = lon;\n          p.y = lat;\n          return p;\n        }\n      }\n\n    }\n\n    var names$26 = [\"Azimuthal_Equidistant\", \"aeqd\"];\n    var aeqd = {\n      init: init$25,\n      forward: forward$24,\n      inverse: inverse$24,\n      names: names$26\n    };\n\n    function init$26() {\n      //double temp;      /* temporary variable    */\n\n      /* Place parameters in static storage for common use\n          -------------------------------------------------*/\n      this.sin_p14 = Math.sin(this.lat0);\n      this.cos_p14 = Math.cos(this.lat0);\n    }\n\n    /* Orthographic forward equations--mapping lat,long to x,y\n        ---------------------------------------------------*/\n    function forward$25(p) {\n      var sinphi, cosphi; /* sin and cos value        */\n      var dlon; /* delta longitude value      */\n      var coslon; /* cos of longitude        */\n      var ksp; /* scale factor          */\n      var g, x, y;\n      var lon = p.x;\n      var lat = p.y;\n      /* Forward equations\n          -----------------*/\n      dlon = adjust_lon(lon - this.long0);\n\n      sinphi = Math.sin(lat);\n      cosphi = Math.cos(lat);\n\n      coslon = Math.cos(dlon);\n      g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n      ksp = 1;\n      if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n        x = this.a * ksp * cosphi * Math.sin(dlon);\n        y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n      }\n      p.x = x;\n      p.y = y;\n      return p;\n    }\n\n    function inverse$25(p) {\n      var rh; /* height above ellipsoid      */\n      var z; /* angle          */\n      var sinz, cosz; /* sin of z and cos of z      */\n      var con;\n      var lon, lat;\n      /* Inverse equations\n          -----------------*/\n      p.x -= this.x0;\n      p.y -= this.y0;\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      z = asinz(rh / this.a);\n\n      sinz = Math.sin(z);\n      cosz = Math.cos(z);\n\n      lon = this.long0;\n      if (Math.abs(rh) <= EPSLN) {\n        lat = this.lat0;\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n      lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n        p.x = lon;\n        p.y = lat;\n        return p;\n      }\n      lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    var names$27 = [\"ortho\"];\n    var ortho = {\n      init: init$26,\n      forward: forward$25,\n      inverse: inverse$25,\n      names: names$27\n    };\n\n    // QSC projection rewritten from the original PROJ4\n    // https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\n    /* constants */\n    var FACE_ENUM = {\n        FRONT: 1,\n        RIGHT: 2,\n        BACK: 3,\n        LEFT: 4,\n        TOP: 5,\n        BOTTOM: 6\n    };\n\n    var AREA_ENUM = {\n        AREA_0: 1,\n        AREA_1: 2,\n        AREA_2: 3,\n        AREA_3: 4\n    };\n\n    function init$27() {\n\n      this.x0 = this.x0 || 0;\n      this.y0 = this.y0 || 0;\n      this.lat0 = this.lat0 || 0;\n      this.long0 = this.long0 || 0;\n      this.lat_ts = this.lat_ts || 0;\n      this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n      /* Determine the cube face from the center of projection. */\n      if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n        this.face = FACE_ENUM.TOP;\n      } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n        this.face = FACE_ENUM.BOTTOM;\n      } else if (Math.abs(this.long0) <= FORTPI) {\n        this.face = FACE_ENUM.FRONT;\n      } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n        this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n      } else {\n        this.face = FACE_ENUM.BACK;\n      }\n\n      /* Fill in useful values for the ellipsoid <-> sphere shift\n       * described in [LK12]. */\n      if (this.es !== 0) {\n        this.one_minus_f = 1 - (this.a - this.b) / this.a;\n        this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n      }\n    }\n\n    // QSC forward equations--mapping lat,long to x,y\n    // -----------------------------------------------------------------\n    function forward$26(p) {\n      var xy = {x: 0, y: 0};\n      var lat, lon;\n      var theta, phi;\n      var t, mu;\n      /* nu; */\n      var area = {value: 0};\n\n      // move lon according to projection's lon\n      p.x -= this.long0;\n\n      /* Convert the geodetic latitude to a geocentric latitude.\n       * This corresponds to the shift from the ellipsoid to the sphere\n       * described in [LK12]. */\n      if (this.es !== 0) {//if (P->es != 0) {\n        lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n      } else {\n        lat = p.y;\n      }\n\n      /* Convert the input lat, lon into theta, phi as used by QSC.\n       * This depends on the cube face and the area on it.\n       * For the top and bottom face, we can compute theta and phi\n       * directly from phi, lam. For the other faces, we must use\n       * unit sphere cartesian coordinates as an intermediate step. */\n      lon = p.x; //lon = lp.lam;\n      if (this.face === FACE_ENUM.TOP) {\n        phi = HALF_PI - lat;\n        if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n          area.value = AREA_ENUM.AREA_0;\n          theta = lon - HALF_PI;\n        } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n          area.value = AREA_ENUM.AREA_1;\n          theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n        } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n          area.value = AREA_ENUM.AREA_2;\n          theta = lon + HALF_PI;\n        } else {\n          area.value = AREA_ENUM.AREA_3;\n          theta = lon;\n        }\n      } else if (this.face === FACE_ENUM.BOTTOM) {\n        phi = HALF_PI + lat;\n        if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n          area.value = AREA_ENUM.AREA_0;\n          theta = -lon + HALF_PI;\n        } else if (lon < FORTPI && lon >= -FORTPI) {\n          area.value = AREA_ENUM.AREA_1;\n          theta = -lon;\n        } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n          area.value = AREA_ENUM.AREA_2;\n          theta = -lon - HALF_PI;\n        } else {\n          area.value = AREA_ENUM.AREA_3;\n          theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n        }\n      } else {\n        var q, r, s;\n        var sinlat, coslat;\n        var sinlon, coslon;\n\n        if (this.face === FACE_ENUM.RIGHT) {\n          lon = qsc_shift_lon_origin(lon, +HALF_PI);\n        } else if (this.face === FACE_ENUM.BACK) {\n          lon = qsc_shift_lon_origin(lon, +SPI);\n        } else if (this.face === FACE_ENUM.LEFT) {\n          lon = qsc_shift_lon_origin(lon, -HALF_PI);\n        }\n        sinlat = Math.sin(lat);\n        coslat = Math.cos(lat);\n        sinlon = Math.sin(lon);\n        coslon = Math.cos(lon);\n        q = coslat * coslon;\n        r = coslat * sinlon;\n        s = sinlat;\n\n        if (this.face === FACE_ENUM.FRONT) {\n          phi = Math.acos(q);\n          theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n        } else if (this.face === FACE_ENUM.RIGHT) {\n          phi = Math.acos(r);\n          theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n        } else if (this.face === FACE_ENUM.BACK) {\n          phi = Math.acos(-q);\n          theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n        } else if (this.face === FACE_ENUM.LEFT) {\n          phi = Math.acos(-r);\n          theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n        } else {\n          /* Impossible */\n          phi = theta = 0;\n          area.value = AREA_ENUM.AREA_0;\n        }\n      }\n\n      /* Compute mu and nu for the area of definition.\n       * For mu, see Eq. (3-21) in [OL76], but note the typos:\n       * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n      mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n      t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n      /* Apply the result to the real area. */\n      if (area.value === AREA_ENUM.AREA_1) {\n        mu += HALF_PI;\n      } else if (area.value === AREA_ENUM.AREA_2) {\n        mu += SPI;\n      } else if (area.value === AREA_ENUM.AREA_3) {\n        mu += 1.5 * SPI;\n      }\n\n      /* Now compute x, y from mu and nu */\n      xy.x = t * Math.cos(mu);\n      xy.y = t * Math.sin(mu);\n      xy.x = xy.x * this.a + this.x0;\n      xy.y = xy.y * this.a + this.y0;\n\n      p.x = xy.x;\n      p.y = xy.y;\n      return p;\n    }\n\n    // QSC inverse equations--mapping x,y to lat/long\n    // -----------------------------------------------------------------\n    function inverse$26(p) {\n      var lp = {lam: 0, phi: 0};\n      var mu, nu, cosmu, tannu;\n      var tantheta, theta, cosphi, phi;\n      var t;\n      var area = {value: 0};\n\n      /* de-offset */\n      p.x = (p.x - this.x0) / this.a;\n      p.y = (p.y - this.y0) / this.a;\n\n      /* Convert the input x, y to the mu and nu angles as used by QSC.\n       * This depends on the area of the cube face. */\n      nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n      mu = Math.atan2(p.y, p.x);\n      if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n        area.value = AREA_ENUM.AREA_0;\n      } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n        area.value = AREA_ENUM.AREA_1;\n        mu -= HALF_PI;\n      } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n        area.value = AREA_ENUM.AREA_2;\n        mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n      } else {\n        area.value = AREA_ENUM.AREA_3;\n        mu += HALF_PI;\n      }\n\n      /* Compute phi and theta for the area of definition.\n       * The inverse projection is not described in the original paper, but some\n       * good hints can be found here (as of 2011-12-14):\n       * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n       * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n      t = (SPI / 12) * Math.tan(mu);\n      tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n      theta = Math.atan(tantheta);\n      cosmu = Math.cos(mu);\n      tannu = Math.tan(nu);\n      cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n      if (cosphi < -1) {\n        cosphi = -1;\n      } else if (cosphi > +1) {\n        cosphi = +1;\n      }\n\n      /* Apply the result to the real area on the cube face.\n       * For the top and bottom face, we can compute phi and lam directly.\n       * For the other faces, we must use unit sphere cartesian coordinates\n       * as an intermediate step. */\n      if (this.face === FACE_ENUM.TOP) {\n        phi = Math.acos(cosphi);\n        lp.phi = HALF_PI - phi;\n        if (area.value === AREA_ENUM.AREA_0) {\n          lp.lam = theta + HALF_PI;\n        } else if (area.value === AREA_ENUM.AREA_1) {\n          lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n        } else if (area.value === AREA_ENUM.AREA_2) {\n          lp.lam = theta - HALF_PI;\n        } else /* area.value == AREA_ENUM.AREA_3 */ {\n          lp.lam = theta;\n        }\n      } else if (this.face === FACE_ENUM.BOTTOM) {\n        phi = Math.acos(cosphi);\n        lp.phi = phi - HALF_PI;\n        if (area.value === AREA_ENUM.AREA_0) {\n          lp.lam = -theta + HALF_PI;\n        } else if (area.value === AREA_ENUM.AREA_1) {\n          lp.lam = -theta;\n        } else if (area.value === AREA_ENUM.AREA_2) {\n          lp.lam = -theta - HALF_PI;\n        } else /* area.value == AREA_ENUM.AREA_3 */ {\n          lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n        }\n      } else {\n        /* Compute phi and lam via cartesian unit sphere coordinates. */\n        var q, r, s;\n        q = cosphi;\n        t = q * q;\n        if (t >= 1) {\n          s = 0;\n        } else {\n          s = Math.sqrt(1 - t) * Math.sin(theta);\n        }\n        t += s * s;\n        if (t >= 1) {\n          r = 0;\n        } else {\n          r = Math.sqrt(1 - t);\n        }\n        /* Rotate q,r,s into the correct area. */\n        if (area.value === AREA_ENUM.AREA_1) {\n          t = r;\n          r = -s;\n          s = t;\n        } else if (area.value === AREA_ENUM.AREA_2) {\n          r = -r;\n          s = -s;\n        } else if (area.value === AREA_ENUM.AREA_3) {\n          t = r;\n          r = s;\n          s = -t;\n        }\n        /* Rotate q,r,s into the correct cube face. */\n        if (this.face === FACE_ENUM.RIGHT) {\n          t = q;\n          q = -r;\n          r = t;\n        } else if (this.face === FACE_ENUM.BACK) {\n          q = -q;\n          r = -r;\n        } else if (this.face === FACE_ENUM.LEFT) {\n          t = q;\n          q = r;\n          r = -t;\n        }\n        /* Now compute phi and lam from the unit sphere coordinates. */\n        lp.phi = Math.acos(-s) - HALF_PI;\n        lp.lam = Math.atan2(r, q);\n        if (this.face === FACE_ENUM.RIGHT) {\n          lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n        } else if (this.face === FACE_ENUM.BACK) {\n          lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n        } else if (this.face === FACE_ENUM.LEFT) {\n          lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n        }\n      }\n\n      /* Apply the shift from the sphere to the ellipsoid as described\n       * in [LK12]. */\n      if (this.es !== 0) {\n        var invert_sign;\n        var tanphi, xa;\n        invert_sign = (lp.phi < 0 ? 1 : 0);\n        tanphi = Math.tan(lp.phi);\n        xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n        lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n        if (invert_sign) {\n          lp.phi = -lp.phi;\n        }\n      }\n\n      lp.lam += this.long0;\n      p.x = lp.lam;\n      p.y = lp.phi;\n      return p;\n    }\n\n    /* Helper function for forward projection: compute the theta angle\n     * and determine the area number. */\n    function qsc_fwd_equat_face_theta(phi, y, x, area) {\n      var theta;\n      if (phi < EPSLN) {\n        area.value = AREA_ENUM.AREA_0;\n        theta = 0.0;\n      } else {\n        theta = Math.atan2(y, x);\n        if (Math.abs(theta) <= FORTPI) {\n          area.value = AREA_ENUM.AREA_0;\n        } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n          area.value = AREA_ENUM.AREA_1;\n          theta -= HALF_PI;\n        } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n          area.value = AREA_ENUM.AREA_2;\n          theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n        } else {\n          area.value = AREA_ENUM.AREA_3;\n          theta += HALF_PI;\n        }\n      }\n      return theta;\n    }\n\n    /* Helper function: shift the longitude. */\n    function qsc_shift_lon_origin(lon, offset) {\n      var slon = lon + offset;\n      if (slon < -SPI) {\n        slon += TWO_PI;\n      } else if (slon > +SPI) {\n        slon -= TWO_PI;\n      }\n      return slon;\n    }\n\n    var names$28 = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\n    var qsc = {\n      init: init$27,\n      forward: forward$26,\n      inverse: inverse$26,\n      names: names$28\n    };\n\n    // Robinson projection\n    // Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n    // Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\n    var COEFS_X = [\n        [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n        [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n        [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n        [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n        [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n        [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n        [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n        [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n        [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n        [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n        [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n        [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n        [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n        [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n        [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n        [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n        [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n        [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n        [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n    ];\n\n    var COEFS_Y = [\n        [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n        [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n        [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n        [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n        [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n        [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n        [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n        [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n        [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n        [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n        [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n        [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n        [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n        [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n        [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n        [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n        [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n        [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n        [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n    ];\n\n    var FXC = 0.8487;\n    var FYC = 1.3523;\n    var C1 = R2D/5; // rad to 5-degree interval\n    var RC1 = 1/C1;\n    var NODES = 18;\n\n    var poly3_val = function(coefs, x) {\n        return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n    };\n\n    var poly3_der = function(coefs, x) {\n        return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n    };\n\n    function newton_rapshon(f_df, start, max_err, iters) {\n        var x = start;\n        for (; iters; --iters) {\n            var upd = f_df(x);\n            x -= upd;\n            if (Math.abs(upd) < max_err) {\n                break;\n            }\n        }\n        return x;\n    }\n\n    function init$28() {\n        this.x0 = this.x0 || 0;\n        this.y0 = this.y0 || 0;\n        this.long0 = this.long0 || 0;\n        this.es = 0;\n        this.title = this.title || \"Robinson\";\n    }\n\n    function forward$27(ll) {\n        var lon = adjust_lon(ll.x - this.long0);\n\n        var dphi = Math.abs(ll.y);\n        var i = Math.floor(dphi * C1);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        dphi = R2D * (dphi - RC1 * i);\n        var xy = {\n            x: poly3_val(COEFS_X[i], dphi) * lon,\n            y: poly3_val(COEFS_Y[i], dphi)\n        };\n        if (ll.y < 0) {\n            xy.y = -xy.y;\n        }\n\n        xy.x = xy.x * this.a * FXC + this.x0;\n        xy.y = xy.y * this.a * FYC + this.y0;\n        return xy;\n    }\n\n    function inverse$27(xy) {\n        var ll = {\n            x: (xy.x - this.x0) / (this.a * FXC),\n            y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n        };\n\n        if (ll.y >= 1) { // pathologic case\n            ll.x /= COEFS_X[NODES][0];\n            ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n        } else {\n            // find table interval\n            var i = Math.floor(ll.y * NODES);\n            if (i < 0) {\n                i = 0;\n            } else if (i >= NODES) {\n                i = NODES - 1;\n            }\n            for (;;) {\n                if (COEFS_Y[i][0] > ll.y) {\n                    --i;\n                } else if (COEFS_Y[i+1][0] <= ll.y) {\n                    ++i;\n                } else {\n                    break;\n                }\n            }\n            // linear interpolation in 5 degree interval\n            var coefs = COEFS_Y[i];\n            var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n            // find t so that poly3_val(coefs, t) = ll.y\n            t = newton_rapshon(function(x) {\n                return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n            }, t, EPSLN, 100);\n\n            ll.x /= poly3_val(COEFS_X[i], t);\n            ll.y = (5 * i + t) * D2R;\n            if (xy.y < 0) {\n                ll.y = -ll.y;\n            }\n        }\n\n        ll.x = adjust_lon(ll.x + this.long0);\n        return ll;\n    }\n\n    var names$29 = [\"Robinson\", \"robin\"];\n    var robin = {\n      init: init$28,\n      forward: forward$27,\n      inverse: inverse$27,\n      names: names$29\n    };\n\n    function init$29() {\n        this.name = 'geocent';\n\n    }\n\n    function forward$28(p) {\n        var point = geodeticToGeocentric(p, this.es, this.a);\n        return point;\n    }\n\n    function inverse$28(p) {\n        var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n        return point;\n    }\n\n    var names$30 = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\n    var geocent = {\n        init: init$29,\n        forward: forward$28,\n        inverse: inverse$28,\n        names: names$30\n    };\n\n    var mode = {\n      N_POLE: 0,\n      S_POLE: 1,\n      EQUIT: 2,\n      OBLIQ: 3\n    };\n\n    var params = {\n      h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n      azi:   { def: 0, num: true, degrees: true }, // default is North\n      tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n      long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n      lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n    };\n\n    function init$30() {\n      Object.keys(params).forEach(function (p) {\n        if (typeof this[p] === \"undefined\") {\n          this[p] = params[p].def;\n        } else if (params[p].num && isNaN(this[p])) {\n          throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n        } else if (params[p].num) {\n          this[p] = parseFloat(this[p]);\n        }\n        if (params[p].degrees) {\n          this[p] = this[p] * D2R;\n        }\n      }.bind(this));\n\n      if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n        this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n      } else if (Math.abs(this.lat0) < EPSLN) {\n        this.mode = mode.EQUIT;\n      } else {\n        this.mode = mode.OBLIQ;\n        this.sinph0 = Math.sin(this.lat0);\n        this.cosph0 = Math.cos(this.lat0);\n      }\n\n      this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n      if (this.pn1 <= 0 || this.pn1 > 1e10) {\n        throw new Error(\"Invalid height\");\n      }\n      \n      this.p = 1 + this.pn1;\n      this.rp = 1 / this.p;\n      this.h1 = 1 / this.pn1;\n      this.pfact = (this.p + 1) * this.h1;\n      this.es = 0;\n\n      var omega = this.tilt;\n      var gamma = this.azi;\n      this.cg = Math.cos(gamma);\n      this.sg = Math.sin(gamma);\n      this.cw = Math.cos(omega);\n      this.sw = Math.sin(omega);\n    }\n\n    function forward$29(p) {\n      p.x -= this.long0;\n      var sinphi = Math.sin(p.y);\n      var cosphi = Math.cos(p.y);\n      var coslam = Math.cos(p.x);\n      var x, y;\n      switch (this.mode) {\n        case mode.OBLIQ:\n          y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n          break;\n        case mode.EQUIT:\n          y = cosphi * coslam;\n          break;\n        case mode.S_POLE:\n          y = -sinphi;\n          break;\n        case mode.N_POLE:\n          y = sinphi;\n          break;\n      }\n      y = this.pn1 / (this.p - y);\n      x = y * cosphi * Math.sin(p.x);\n\n      switch (this.mode) {\n        case mode.OBLIQ:\n          y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n          break;\n        case mode.EQUIT:\n          y *= sinphi;\n          break;\n        case mode.N_POLE:\n          y *= -(cosphi * coslam);\n          break;\n        case mode.S_POLE:\n          y *= cosphi * coslam;\n          break;\n      }\n\n      // Tilt \n      var yt, ba;\n      yt = y * this.cg + x * this.sg;\n      ba = 1 / (yt * this.sw * this.h1 + this.cw);\n      x = (x * this.cg - y * this.sg) * this.cw * ba;\n      y = yt * ba;\n\n      p.x = x * this.a;\n      p.y = y * this.a;\n      return p;\n    }\n\n    function inverse$29(p) {\n      p.x /= this.a;\n      p.y /= this.a;\n      var r = { x: p.x, y: p.y };\n\n      // Un-Tilt\n      var bm, bq, yt;\n      yt = 1 / (this.pn1 - p.y * this.sw);\n      bm = this.pn1 * p.x * yt;\n      bq = this.pn1 * p.y * this.cw * yt;\n      p.x = bm * this.cg + bq * this.sg;\n      p.y = bq * this.cg - bm * this.sg;\n\n      var rh = hypot(p.x, p.y);\n      if (Math.abs(rh) < EPSLN) {\n        r.x = 0;\n        r.y = p.y;\n      } else {\n        var cosz, sinz;\n        sinz = 1 - rh * rh * this.pfact;\n        sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n        cosz = Math.sqrt(1 - sinz * sinz);\n        switch (this.mode) {\n          case mode.OBLIQ:\n            r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n            p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n            p.x *= sinz * this.cosph0;\n            break;\n          case mode.EQUIT:\n            r.y = Math.asin(p.y * sinz / rh);\n            p.y = cosz * rh;\n            p.x *= sinz;\n            break;\n          case mode.N_POLE:\n            r.y = Math.asin(cosz);\n            p.y = -p.y;\n            break;\n          case mode.S_POLE:\n            r.y = -Math.asin(cosz);\n            break;\n        }\n        r.x = Math.atan2(p.x, p.y);\n      }\n\n      p.x = r.x + this.long0;\n      p.y = r.y;\n      return p;\n    }\n\n    var names$31 = [\"Tilted_Perspective\", \"tpers\"];\n    var tpers = {\n      init: init$30,\n      forward: forward$29,\n      inverse: inverse$29,\n      names: names$31\n    };\n\n    var includedProjections = function(proj4){\n      proj4.Proj.projections.add(tmerc);\n      proj4.Proj.projections.add(etmerc);\n      proj4.Proj.projections.add(utm);\n      proj4.Proj.projections.add(sterea);\n      proj4.Proj.projections.add(stere);\n      proj4.Proj.projections.add(somerc);\n      proj4.Proj.projections.add(omerc);\n      proj4.Proj.projections.add(lcc);\n      proj4.Proj.projections.add(krovak);\n      proj4.Proj.projections.add(cass);\n      proj4.Proj.projections.add(laea);\n      proj4.Proj.projections.add(aea);\n      proj4.Proj.projections.add(gnom);\n      proj4.Proj.projections.add(cea);\n      proj4.Proj.projections.add(eqc);\n      proj4.Proj.projections.add(poly);\n      proj4.Proj.projections.add(nzmg);\n      proj4.Proj.projections.add(mill);\n      proj4.Proj.projections.add(sinu);\n      proj4.Proj.projections.add(moll);\n      proj4.Proj.projections.add(eqdc);\n      proj4.Proj.projections.add(vandg);\n      proj4.Proj.projections.add(aeqd);\n      proj4.Proj.projections.add(ortho);\n      proj4.Proj.projections.add(qsc);\n      proj4.Proj.projections.add(robin);\n      proj4.Proj.projections.add(geocent);\n      proj4.Proj.projections.add(tpers);\n    };\n\n    proj4$1.defaultDatum = 'WGS84'; //default datum\n    proj4$1.Proj = Projection;\n    proj4$1.WGS84 = new proj4$1.Proj('WGS84');\n    proj4$1.Point = Point;\n    proj4$1.toPoint = toPoint;\n    proj4$1.defs = defs;\n    proj4$1.nadgrid = nadgrid;\n    proj4$1.transform = transform;\n    proj4$1.mgrs = mgrs;\n    proj4$1.version = '2.7.2';\n    includedProjections(proj4$1);\n\n    return proj4$1;\n\n})));\n","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n","/**\n * @module ol/source/BingMaps\n */\n\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(\n                tileCoord[0],\n                tileCoord[1],\n                tileCoord[2],\n                quadKeyTileCoord\n              );\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions(\n        function (frameState) {\n          const attributions = [];\n          const viewState = frameState.viewState;\n          const tileGrid = this.getTileGrid();\n          const z = tileGrid.getZForResolution(\n            viewState.resolution,\n            this.zDirection\n          );\n          const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n            viewState.center,\n            z\n          );\n          const zoom = tileCoord[0];\n          resource.imageryProviders.map(function (imageryProvider) {\n            let intersecting = false;\n            const coverageAreas = imageryProvider.coverageAreas;\n            for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n              const coverageArea = coverageAreas[i];\n              if (\n                zoom >= coverageArea.zoomMin &&\n                zoom <= coverageArea.zoomMax\n              ) {\n                const bbox = coverageArea.bbox;\n                const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                const extent = applyTransform(epsg4326Extent, transform);\n                if (intersects(extent, frameState.extent)) {\n                  intersecting = true;\n                  break;\n                }\n              }\n            }\n            if (intersecting) {\n              attributions.push(imageryProvider.attribution);\n            }\n          });\n\n          attributions.push(TOS_ATTRIBUTION);\n          return attributions;\n        }.bind(this)\n      );\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [opt_errback] Callback on error.\n * @param {string} [opt_callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.indexOf('?') == -1 ? '?' : '&') +\n    (opt_callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/source/CartoDB\n */\n\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener(\n      'load',\n      this.handleInitResponse_.bind(this, paramHash)\n    );\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */ (JSON.parse(\n          client.responseText\n        ));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState(SourceState.ERROR);\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl =\n      'https://' +\n      data.cdn_url.https +\n      '/' +\n      this.account_ +\n      '/api/v1/map/' +\n      data.layergroupid +\n      '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\nexport default CartoDB;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} [source] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = feature.getGeometry();\n        assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = null;\n\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    this.features.length = 0;\n    super.clear(opt_fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    const cluster = new Feature(geometry);\n    cluster.set('features', features, true);\n    return cluster;\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/IIIF\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {CustomTile} from './Zoomify.js';\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport {getTopLeft} from '../extent.js';\nimport {includes} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Size of the cache.\n * @property {null|string} [crossOrigin] The value for the crossOrigin option of the request.\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]] The extent.\n * @property {string} [format='jpg'] Requested image format.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition] Transition.\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {import(\"../format/IIIFInfo.js\").Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n  /**\n   * @param {Options} [opt_options] Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(opt_options) {\n    /**\n     * @type {Partial<Options>}\n     */\n    const options = opt_options || {};\n\n    let baseUrl = options.url || '';\n    baseUrl =\n      baseUrl +\n      (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === ''\n        ? ''\n        : '/');\n    const version = options.version || Versions.VERSION2;\n    const sizes = options.sizes || [];\n    const size = options.size;\n    assert(\n      size != undefined &&\n        Array.isArray(size) &&\n        size.length == 2 &&\n        !isNaN(size[0]) &&\n        size[0] > 0 &&\n        !isNaN(size[1]) &&\n        size[1] > 0,\n      60\n    );\n    const width = size[0];\n    const height = size[1];\n    const tileSize = options.tileSize;\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const format = options.format || 'jpg';\n    const quality =\n      options.quality ||\n      (options.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = options.resolutions || [];\n    const supports = options.supports || [];\n    const extent = options.extent || [0, -height, width, 0];\n\n    const supportsListedSizes =\n      sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles =\n      tileSize !== undefined &&\n      ((typeof tileSize === 'number' &&\n        Number.isInteger(tileSize) &&\n        tileSize > 0) ||\n        (Array.isArray(tileSize) && tileSize.length > 0));\n    const supportsArbitraryTiling =\n      supports != undefined &&\n      Array.isArray(supports) &&\n      (includes(supports, 'regionByPx') || includes(supports, 'regionByPct')) &&\n      (includes(supports, 'sizeByWh') ||\n        includes(supports, 'sizeByH') ||\n        includes(supports, 'sizeByW') ||\n        includes(supports, 'sizeByPct'));\n\n    let tileWidth, tileHeight, maxZoom;\n\n    resolutions.sort(function (a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (\n          typeof tileSize === 'number' &&\n          Number.isInteger(tileSize) &&\n          tileSize > 0\n        ) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (\n            tileSize.length == 1 ||\n            (tileSize[1] == undefined && Number.isInteger(tileSize[0]))\n          ) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (\n              Number.isInteger(tileSize[0]) &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (\n              tileSize[0] == undefined &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function (a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (\n            resolutions.length > 0 &&\n            resolutions[resolutions.length - 1] == resolution\n          ) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions,\n    });\n\n    const tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      let regionParam, sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n        tileY = tileCoord[2],\n        scale = resolutions[zoom];\n      if (\n        tileX === undefined ||\n        tileY === undefined ||\n        scale === undefined ||\n        tileX < 0 ||\n        Math.ceil(width / scale / tileWidth) <= tileX ||\n        tileY < 0 ||\n        Math.ceil(height / scale / tileHeight) <= tileY\n      ) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n          regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n          regionH = tileHeight * scale,\n          sizeW = tileWidth,\n          sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (\n          regionX == 0 &&\n          regionW == width &&\n          regionY == 0 &&\n          regionH == height\n        ) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (\n          !supportsArbitraryTiling ||\n          includes(supports, 'regionByPx')\n        ) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (includes(supports, 'regionByPct')) {\n          const pctX = formatPercentage((regionX / width) * 100),\n            pctY = formatPercentage((regionY / height) * 100),\n            pctW = formatPercentage((regionW / width) * 100),\n            pctH = formatPercentage((regionH / height) * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (\n          version == Versions.VERSION3 &&\n          (!supportsArbitraryTiling || includes(supports, 'sizeByWh'))\n        ) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || includes(supports, 'sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (includes(supports, 'sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (includes(supports, 'sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (includes(supports, 'sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n            regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return (\n        baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format\n      );\n    };\n\n    const IiifTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize || 256).map(function (size) {\n        return size * tilePixelRatio;\n      })\n    );\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: options.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number}\n     */\n    this.zDirection = options.zDirection;\n  }\n}\n\nexport default IIIF;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport TileState from '../TileState.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {getCenter} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated',\n};\n\nexport class CustomTile extends ImageTile {\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileSize,\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size Size.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n  /**\n   * @param {Options} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options;\n\n    const size = options.size;\n    const tierSizeCalculation =\n      options.tierSizeCalculation !== undefined\n        ? options.tierSizeCalculation\n        : TierSizeCalculation.DEFAULT;\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (\n          imageWidth > tileSizeForTierSizeCalculation ||\n          imageHeight > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation),\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        let width = imageWidth;\n        let height = imageHeight;\n        while (\n          width > tileSizeForTierSizeCalculation ||\n          height > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation),\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions,\n    });\n\n    let url = options.url;\n    if (\n      url &&\n      url.indexOf('{TileGroup}') == -1 &&\n      url.indexOf('{tileIndex}') == -1\n    ) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    let tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = tileCoord[2];\n            const tileIndex =\n              tileCoordX + tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileGroup =\n              ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup,\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(\n      urls.map(createFromTemplate)\n    );\n\n    const ZoomifyTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize * tilePixelRatio)\n    );\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number}\n     */\n    this.zDirection = options.zDirection;\n\n    // Server retina tile detection (non-standard):\n    // Try loading the center tile for the highest resolution. If it is not\n    // available, we are dealing with retina tiles, and need to adjust the\n    // tile url calculation.\n    const tileUrl = tileGrid.getTileCoordForCoordAndResolution(\n      getCenter(tileGrid.getExtent()),\n      resolutions[resolutions.length - 1]\n    );\n    const testTileUrl = tileUrlFunction(tileUrl, 1, null);\n    const image = new Image();\n    image.addEventListener(\n      'error',\n      function () {\n        tileWidth = tileSize;\n        this.changed();\n      }.bind(this)\n    );\n    image.src = testTileUrl;\n  }\n}\n\nexport default Zoomify;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\nimport {includes} from '../array.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile>|Object<string, number>|TileInfo>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 = /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 = /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 = /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return includes(['jpg', 'png', 'gif'], format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && includes(formats, format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [opt_preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(opt_preferredOptions) {\n    const options = opt_preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        includes(imageOptions.formats, options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && includes(imageOptions.qualities, options.quality)\n          ? options.quality\n          : includes(imageOptions.qualities, 'native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./State.js\").default} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.contextOptions_\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image)\n        );\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image)\n        );\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image)\n        );\n        break;\n      default:\n      // pass\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    opt_contextOptions\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.contextOptions_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [opt_options] Image ArcGIS Rest Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [opt_options] ImageCanvas options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [opt_loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n    const state =\n      opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {\n  containsExtent,\n  getCenter,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n    super({\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ =\n      options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ =\n      options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ =\n      options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(\n        this.url_,\n        this.params_,\n        extent,\n        size,\n        projection\n      );\n      image = new ImageWrapper(\n        extent,\n        resolution,\n        pixelRatio,\n        imageUrl,\n        this.crossOrigin_,\n        this.imageLoadFunction_\n      );\n      image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_\n        ? 'GETDYNAMICMAPOVERLAYIMAGE'\n        : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1],\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return (mcsW * metersPerUnit) / (devW * mpp); // width limited\n  } else {\n    return (mcsH * metersPerUnit) / (devH * mpp); // height limited\n  }\n}\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {assign} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const resolution = getHeight(imageExtent) / imageHeight;\n      const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        const context = createCanvasContext2D(targetWidth, imageHeight);\n        assign(context, this.getContextOptions());\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = Math.ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution\n    );\n    const requestHeight = Math.ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {assign} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nconst context = document.createElement('canvas').getContext('2d');\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    const imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n    let output, b;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      const arrays = new Array(numBuffers);\n      const pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (let i = 0; i < numBytes; i += 4) {\n        for (let j = 0; j < numBuffers; ++j) {\n          const array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        const pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const blob = new Blob(lines, {type: 'text/javascript'});\n  const source = URL.createObjectURL(blob);\n  const worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {function(Array, Object):*} operation The operation.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n    const workers = [];\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n    this._queue = [];\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n    this._dataLookup = {};\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<Array|ImageData>} inputs Array of pixels or image data\n   *     (depending on the operation type).\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Object} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running === 0 && this._queue.length > 0) {\n      const job = this._queue.shift();\n      this._job = job;\n      const width = job.inputs[0].width;\n      const height = job.inputs[0].height;\n      const buffers = job.inputs.map(function (input) {\n        return input.data.buffer;\n      });\n      const threads = this._workers.length;\n      this._running = threads;\n      if (threads === 1) {\n        this._workers[0].postMessage(\n          {\n            buffers: buffers,\n            meta: job.meta,\n            imageOps: this._imageOps,\n            width: width,\n            height: height,\n          },\n          buffers\n        );\n      } else {\n        const length = job.inputs[0].data.length;\n        const segmentLength = 4 * Math.ceil(length / 4 / threads);\n        for (let i = 0; i < threads; ++i) {\n          const offset = i * segmentLength;\n          const slices = [];\n          for (let j = 0, jj = buffers.length; j < jj; ++j) {\n            slices.push(buffers[j].slice(offset, offset + segmentLength));\n          }\n          this._workers[i].postMessage(\n            {\n              buffers: slices,\n              meta: job.meta,\n              imageOps: this._imageOps,\n              width: width,\n              height: height,\n            },\n            slices\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(length);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Object} data An object made available to operations.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined\n        ? options.operationType\n        : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [opt_lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, opt_lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign(\n      {},\n      this.frameState_\n    ));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign(\n      {},\n      frameState.viewState\n    ));\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Infinity;\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @return {null} not implemented\n   */\n  getImageInternal() {\n    return null; // not implemented\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container) {\n    element = container.firstElementChild;\n  }\n  if (!(element instanceof HTMLCanvasElement)) {\n    throw new Error('Unsupported rendered element: ' + element);\n  }\n  if (element.width === width && element.height === height) {\n    const context = element.getContext('2d');\n    return context.getImageData(0, 0, width, height);\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {Layer<ImageSourceType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {assign} from '../../obj.js';\nimport {compose as composeTransform, makeInverse} from '../../transform.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        let projection = viewState.projection;\n        if (!ENABLE_RASTER_REPROJECTION) {\n          const sourceProjection = imageSource.getProjection();\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersects(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dx = transform[4];\n    const dy = transform[5];\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    assign(context, this.getLayer().getSource().getContextOptions());\n    this.preRender(context, frameState);\n    if (dw >= 0.5 && dh >= 0.5) {\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = this.context.globalAlpha;\n        this.context.globalAlpha = opacity;\n      }\n      this.context.drawImage(\n        img,\n        0,\n        0,\n        +img.width,\n        +img.height,\n        Math.round(dx),\n        Math.round(dy),\n        Math.round(dw),\n        Math.round(dh)\n      );\n      if (opacity !== 1) {\n        this.context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [opt_options] Tile ArcGIS Rest options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {toSize} from '../size.js';\n\nclass LabeledTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {string} text Text.\n   */\n  constructor(tileCoord, tileSize, text) {\n    super(tileCoord, TileState.LOADED);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = text;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      const tileSize = this.tileSize_;\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'grey';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'grey';\n      context.strokeStyle = 'white';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.lineWidth = 4;\n      context.strokeText(\n        this.text_,\n        tileSize[0] / 2,\n        tileSize[1] / 2,\n        tileSize[0]\n      );\n      context.fillText(\n        this.text_,\n        tileSize[0] / 2,\n        tileSize[1] / 2,\n        tileSize[0]\n      );\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  }\n\n  load() {}\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [zDirection=0] Set to `1` when debugging `VectorTile` sources with\n * a default configuration. Indicates which resolution should be used by a renderer if\n * the view resolution does not match any resolution of the tile source. If 0, the nearest\n * resolution will be used. If 1, the nearest lower resolution will be used. If -1, the\n * nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [opt_options] Debug tile options.\n   */\n  constructor(opt_options) {\n    /**\n     * @type {Options}\n     */\n    const options = opt_options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n    });\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {!LabeledTile} Tile.\n   */\n  getTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      const tileSize = toSize(this.tileGrid.getTileSize(z));\n      const tileCoord = [z, x, y];\n      const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      let text;\n      if (textTileCoord) {\n        text =\n          'z:' +\n          textTileCoord[0] +\n          ' x:' +\n          textTileCoord[1] +\n          ' y:' +\n          textTileCoord[2];\n      } else {\n        text = 'none';\n      }\n      const tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport SourceState from './State.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [opt_request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, opt_request) {\n    if (this.state == TileState.EMPTY && opt_request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(\n          function () {\n            callback(this.getData(coordinate));\n          }.bind(this),\n          0\n        );\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (JSON.parse(\n          client.responseText\n        ));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `opt_request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(\n          client.responseText\n        ));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [opt_request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(\n    coordinate,\n    resolution,\n    callback,\n    opt_request\n  ) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (this.getTile(\n        tileCoord[0],\n        tileCoord[1],\n        tileCoord[2],\n        1,\n        this.getProjection()\n      ));\n      tile.forDataAtCoordinate(coordinate, callback, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord,\n        projection\n      );\n      const tileUrl = this.tileUrlFunction_(\n        urlTileCoord,\n        pixelRatio,\n        projection\n      );\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_\n      );\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {\n  createForProjection,\n  createXYZ,\n  extentFromProjection,\n} from '../tilegrid.js';\nimport {equals} from '../array.js';\nimport {fromKey, getKeyZXY} from '../tilecoord.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number} [zDirection=1] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, import(\"./VectorTile\").default>}\n     */\n    this.loadingTiles_ = {};\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache({});\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    const urlTileCoord = tile.wrappedTileCoord;\n    const tileGrid = this.getTileGridForProjection(projection);\n    const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const z = urlTileCoord[0];\n    const resolution = tileGrid.getResolution(z);\n    // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n    bufferExtent(extent, -resolution, extent);\n    const sourceTileGrid = this.tileGrid;\n    const sourceExtent = sourceTileGrid.getExtent();\n    if (sourceExtent) {\n      getIntersection(extent, sourceExtent, extent);\n    }\n    const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n    const minZoom = sourceTileGrid.getMinZoom();\n\n    const previousSourceTiles = tile.sourceTiles;\n    let sourceTiles, covered, loadedZ;\n    if (\n      previousSourceTiles &&\n      previousSourceTiles.length > 0 &&\n      previousSourceTiles[0].tileCoord[0] === sourceZ\n    ) {\n      sourceTiles = previousSourceTiles;\n      covered = true;\n      loadedZ = sourceZ;\n    } else {\n      sourceTiles = [];\n      loadedZ = sourceZ + 1;\n      do {\n        --loadedZ;\n        covered = true;\n        sourceTileGrid.forEachTileCoord(\n          extent,\n          loadedZ,\n          function (sourceTileCoord) {\n            const tileUrl = this.tileUrlFunction(\n              sourceTileCoord,\n              pixelRatio,\n              projection\n            );\n            let sourceTile;\n            if (tileUrl !== undefined) {\n              if (this.sourceTileCache.containsKey(tileUrl)) {\n                sourceTile = this.sourceTileCache.get(tileUrl);\n                const state = sourceTile.getState();\n                if (\n                  state === TileState.LOADED ||\n                  state === TileState.ERROR ||\n                  state === TileState.EMPTY\n                ) {\n                  sourceTiles.push(sourceTile);\n                  return;\n                }\n              } else if (loadedZ === sourceZ) {\n                sourceTile = new this.tileClass(\n                  sourceTileCoord,\n                  TileState.IDLE,\n                  tileUrl,\n                  this.format_,\n                  this.tileLoadFunction\n                );\n                sourceTile.extent = sourceTileGrid.getTileCoordExtent(\n                  sourceTileCoord\n                );\n                sourceTile.projection = projection;\n                sourceTile.resolution = sourceTileGrid.getResolution(\n                  sourceTileCoord[0]\n                );\n                this.sourceTileCache.set(tileUrl, sourceTile);\n                sourceTile.addEventListener(\n                  EventType.CHANGE,\n                  this.handleTileChange.bind(this)\n                );\n                sourceTile.load();\n              }\n            }\n            covered =\n              covered &&\n              sourceTile &&\n              sourceTile.getState() === TileState.LOADED;\n            if (!sourceTile) {\n              return;\n            }\n            if (\n              sourceTile.getState() !== TileState.EMPTY &&\n              tile.getState() === TileState.IDLE\n            ) {\n              tile.loadingSourceTiles++;\n              sourceTile.addEventListener(\n                EventType.CHANGE,\n                function listenChange() {\n                  const state = sourceTile.getState();\n                  const sourceTileKey = sourceTile.getKey();\n                  if (state === TileState.LOADED || state === TileState.ERROR) {\n                    if (state === TileState.LOADED) {\n                      sourceTile.removeEventListener(\n                        EventType.CHANGE,\n                        listenChange\n                      );\n                      tile.loadingSourceTiles--;\n                      delete tile.errorSourceTileKeys[sourceTileKey];\n                    } else if (state === TileState.ERROR) {\n                      tile.errorSourceTileKeys[sourceTileKey] = true;\n                    }\n                    const errorTileCount = Object.keys(tile.errorSourceTileKeys)\n                      .length;\n                    if (tile.loadingSourceTiles - errorTileCount === 0) {\n                      tile.hifi = errorTileCount === 0;\n                      tile.sourceZ = sourceZ;\n                      tile.setState(TileState.LOADED);\n                    }\n                  }\n                }\n              );\n            }\n          }.bind(this)\n        );\n        if (!covered) {\n          sourceTiles.length = 0;\n        }\n      } while (!covered && loadedZ > minZoom);\n    }\n\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n    }\n    if (covered) {\n      tile.hifi = sourceZ === loadedZ;\n      tile.sourceZ = loadedZ;\n      if (tile.getState() < TileState.LOADED) {\n        tile.setState(TileState.LOADED);\n      } else if (\n        !previousSourceTiles ||\n        !equals(sourceTiles, previousSourceTiles)\n      ) {\n        tile.sourceTiles = sourceTiles;\n      }\n    }\n    return sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      tileGrid = createForProjection(\n        projection,\n        undefined,\n        sourceTileGrid\n          ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom())\n          : undefined\n      );\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedZ RenderedZ.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * Tile keys of error source tiles. Read/written by the source.\n     * @type {Object<string, boolean>}\n     */\n    this.errorSourceTileKeys = {};\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = null;\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * z of the source tiles of the last getSourceTiles call.\n     * @type {number}\n     */\n    this.sourceZ = -1;\n\n    /**\n     * True when all tiles for this tile's nominal resolution are available.\n     * @type {boolean}\n     */\n    this.hifi = false;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedZ: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      canvasPool.push(this.context_[key].canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {assign} from '../obj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = def.units;\n      if (!units && def.projName === 'longlat') {\n        units = Units.DEGREES;\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        const def1 = proj4.defs(code1);\n        const def2 = proj4.defs(code2);\n        if (def1 === def2) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          // Reset axis because OpenLayers always uses x, y axis order\n          const transform = proj4(\n            assign({}, def1, {axis: undefined}),\n            assign({}, def2, {axis: undefined})\n          );\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"43Uxf\", \"7eG15\")","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;"],"names":["require","register","JSON","parse","mapping","module","exports","pairs","keys","Object","i","length","resolve","id","resolved","Error","defs","_proj","get","setExtent","layers","_tileDefault","default","source","_source","OSM","parser","_wmtscapabilitiesDefault","fetch","then","response","text","result","read","options","_wmts","optionsFromCapabilities","layer","attributions","Date","getFullYear","crossOrigin","projection","wrapX","setSource","_wmtsDefault","_vectorDefault","_vectorDefault1","url","_britishIslesCountiesGeojsonDefault","format","_geoJSONDefault","style","_style","Style","stroke","Stroke","color","width","_mapDefault","target","view","_viewDefault","center","fromLonLat","zoom","_compositeJs","Map1","_super","Map2","_objJs","assign","controls","_controlJs","defaults","interactions","_interactionJs","onFocusOnly","call","this","__extends","prototype","createRenderer","_mapJs","CompositeMapRenderer1","CompositeMapRenderer2","map","_this","fontChangeListenerKey_","_eventsJs","listen","_canvasJs","checkedFonts","_objectEventTypeJsDefault","PROPERTYCHANGE","redrawText","bind","element_","document","createElement","position","height","zIndex","className","_cssJs","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","dispatchRenderEvent","type","frameState","getMap","hasListener","event_1","_eventJsDefault","undefined","dispatchEvent","disposeInternal","parentNode","removeChild","renderFrame","calculateMatrices2D","_eventTypeJsDefault","PRECOMPOSE","layerStatesArray","sort","a","b","viewState","declutterLayers","previousElement","ii","layerState","layerIndex","sourceState","_stateJsDefault","READY","UNDEFINED","element","render","push","renderDeclutter","POSTCOMPOSE","display","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","callback","layerFilter","layerStates","hasRenderer","_layerJs","inView","data","getRenderer","getDataAtPixel","_disposableJs","MapRenderer1","MapRenderer2","map_","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","rotation","forEachFeatureAtCoordinate","coordinate","checkWrapped","thisArg","thisArg2","managed","feature","geometry","translatedCoordinate","_coordinateJs","slice","offsets","canWrapX","projectionExtent","getExtent","worldWidth","_extentJs","getWidth","numLayers","matches","tmpCoord","j","layerRenderer","getSource","coordinates","getWrapX","callback_1","order","forEach","m","i1","distanceSq","some","hasFeatureAtCoordinate","_functionsJs","TRUE","canExpireCache","postRenderFunctions","expireIconCache","expire","Disposable","Disposable1","disposed","dispose","interopDefault","__esModule","defineInteropFlag","defineProperty","value","exportAll","dest","key","enumerable","export","destName","parcelHelpers","FALSE","VOID","memoizeOne","_arrayJs","fn","lastResult","lastArgs","lastThis","called","nextArgs","Array","arguments","equals","apply","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","obj","indexOf","linearFindNearest","direction","n","reverseSubArray","begin","end","tmp","extend","extension","isArray","remove","splice","find","func","arr1","arr2","len1","stableSort","compareFnc","index","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","abstract","getUid","VERSION","uidCounter_","ol_uid","String","create","reset","multiply","set","setFromArray","rotate","scale","makeScale","translate","compose","composeCssTransform","invert","makeInverse","determinant","toString","_assertsJs","tmp_","transform","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","x","y","angle","cos","Math","sin","dx","dy","dx1","dy1","sx","sy","dx2","dy2","det","mat","join","assert","_assertionErrorJs","assertion","errorCode","_assertionErrorJsDefault","_utilJs","AssertionError1","AssertionError2","code","message","split","name","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","approximatelyEquals","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_cornerJs","extent","opt_extent","extent1","extent2","minX","minY","maxX","maxY","relationship","_relationshipJsDefault","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","flatCoordinates","offset","stride","rings","tolerance","abs","min","max","val","area","corner","_cornerJsDefault","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","intersects1","startRel","endRel","startX","startY","endX","endY","slope","transformFn","opt_stops","xs","ys","l","_boundingExtentXYs","floor","shared","_colorJs","IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","clear","iconImage","src","getKey","setSize","maxCacheSize","asString","fromString","asArray","normalize","isStringColor","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","body","appendChild","rgb","getComputedStyle","cache","cacheSize","s","hasOwnProperty","r","g","exec","hasAlpha","parseInt","substr","Number","fromStringInternal_","_mathJs","clamp","test","cosh","log2","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","log","LOG2E","t","maxRow","maxEl","absValue","coef","k","angleInRadians","PI","angleInDegrees","_baseJs","Layer1","Layer2","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","addEventListener","_objectJs","getChangeEventType","_propertyJsDefault","SOURCE","handleSourcePropertyChange_","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","getState","handleSourceChange_","changed","CHANGE","getFeatures","Promise","prepareFrame","_eventTypeJsDefault1","evt","arrayLayerState","visible","minResolution","maxResolution","minZoom","maxZoom","BaseLayer1","BaseLayer2","properties","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","getClassName","opt_managed","state","getZIndex","round","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","_eventJs","ObjectEvent1","ObjectEvent2","oldValue","BaseObject1","BaseObject2","opt_values","values_","getKeys","getProperties","hasProperties","notify","eventType","opt_silent","values","applyProperties","unset","changeEventTypeCache","stopPropagation","preventDefault","BaseEvent","BaseEvent1","propagationStopped","defaultPrevented","unByKey","_targetJs","Observable1","Observable2","revision_","getRevision","on","listener","len","once","listenOnce","ol_key","un","removeEventListener","unlistenByKey","Target1","Target2","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","event","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","getValues","var_sources","TypeError","output","object","property","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","opt_this","opt_once","originalListener_1","eventsKey","PRERENDER","POSTRENDER","RENDERCOMPLETE","LOADING","add","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","distance","squaredDistanceToSegment","toStringHDMS","toStringXY","getWorldsAway","delta","circle","getRadius","sqrt","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","pow","deg","sec","ceil","_stringJs","padNumber","charAt","template","replace","toFixed","coordinate1","coordinate2","equals1","cosAngle","sinAngle","scale1","coord1","coord2","worldsAway","opt_sourceExtentWidth","sourceExtentWidth","number","opt_precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","n2","RenderEvent1","RenderEvent2","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","fontRegEx","RegExp","fontRegExMatchIndex","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","textHeights","registerFont","measureTextHeight","measureTextWidth","measureAndCacheTextWidth","measureTextWidths","rotateAtOffset","drawImageOrLabel","createTransformString","_objectJsDefault","_targetJsDefault","console","warn","measureFont","measureElement","measureContext","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","check","done","fonts","font","clearInterval","setInterval","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","left","offsetHeight","_domJs","createCanvasContext2D","lines","widths","numLines","currentWidth","offsetX","offsetY","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","canvas","_transformJs","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","ua","navigator","userAgent","toLowerCase","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","passive","window","error","outerWidth","outerHeight","replaceNode","removeNode","removeChildren","replaceChildren","opt_width","opt_height","opt_canvasPool","shift","_hasJs","getContext","offsetWidth","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","PluggableMap1","PluggableMap2","optionsInternal","keyboardEventTarget","getElementById","overlays","layerGroup","getLayers","_groupJsDefault","_mapPropertyJsDefault","LAYERGROUP","TARGET","VIEW","_viewJsDefault","_collectionJsDefault","getArray","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","_tileQueueJsDefault","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","control","_collectionEventTypeJsDefault","ADD","REMOVE","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","opt_options","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","top","getTarget","getTargetElement","getView","getProjection","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","_projJs","fromUserCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","_mapBrowserEventJsDefault","handleMapBrowserEvent","originalEvent","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","_viewHintJsDefault","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","_eventTypeJsDefault2","animate","getAnimating","resolveConstraints","_mapBrowserEventHandlerJsDefault","_mapBrowserEventTypeJsDefault","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","_sizeJs","hasArea","isDef","getHints","declutterTree","usedTiles","wantedTiles","_mapEventJsDefault","_mapEventTypeJsDefault","MOVESTART","MOVEEND","setTimeout","setLayerGroup","setView","computedStyle","parseFloat","setViewportSize","Property","CollectionEvent1","CollectionEvent2","opt_element","opt_index","Collection1","Collection2","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","item","insertAt","elem","removeAt","prev","setAt","opt_except","LayerGroup1","LayerGroup2","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","_mapEventJs","MapBrowserEvent1","MapBrowserEvent2","opt_dragging","pixel_","coordinate_","dragging","MapEvent1","MapEvent2","MapBrowserEventHandler1","MapBrowserEventHandler2","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","newEvent1","SINGLECLICK","updateActivePointers_","POINTERUP","POINTERCANCEL","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","_eventTypeJs","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","TileQueue1","TileQueue2","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","hifi","_tileStateJsDefault","LOADED","EMPTY","tileKey","newLoads","getCount","dequeue","IDLE","load","_priorityQueueJs","PriorityQueue","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","View1","View2","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","fromUserExtent","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","duration","easing","_easingJs","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","opt_size","_viewPropertyJsDefault","CENTER","getConstraints","getConstrainResolution","constrainResolution","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","RESOLUTION","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","getSimplifiedGeometry","_polygonJs","fromExtent","getType","_geometryTypeJsDefault","CIRCLE","userProjection","getUserProjection","fitInternal","coords","getFlatCoordinates","minRotX","minRotY","maxRotX","maxRotY","getStride","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","toUserCoordinate","setCenter","adjustCenterInternal","adjustResolution","ratio","opt_anchor","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smooth","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","smoothResolutionConstraint","showFullExtent","projExtent","_resolutionconstraintJs","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","METERS_PER_UNIT","_unitsJsDefault","DEGREES","getMetersPerUnit","_commonJs","DEFAULT_TILE_SIZE","defaultMinResolution","defaultMaxZoom","createSnapToPower","enableRotation","constrainRotation","_rotationconstraintJs","createSnapToZero","none","createSnapToN","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","Units","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","DEFAULT_MAX_ZOOM","_unitsJs","cloneTransform","identityTransform","addProjection","addProjections","getPointResolution","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createTransformFromCoordinateTransform","addCoordinateTransforms","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","toUserExtent","createSafeCoordinateTransform","addCommon","_projectionJs","input","opt_output","opt_dimension","getCode","projections","projectionLike","_projectionsJs","point","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","metersPerUnit","units","toEPSG4326_1","vertices","_sphereJs","getDistance","destination","_transformsJs","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","dimension","forward","inverse","sourceProj","destProj","opt_projection","lonLat","lon","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","destProjection","coord","transformed","sourceX","sourceY","sourceExtent","_epsg3857Js","PROJECTIONS","_epsg4326Js","fromEPSG4326","toEPSG4326","Projection","Projection1","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getWorldExtent","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection1","EPSG3857Projection2","atan","EPSG4326Projection1","EPSG4326Projection2","opt_axisOrientation","transforms","DEFAULT_RADIUS","_geometryTypeJs","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","createExtent","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","getSmoothClampedResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","disable","theta","opt_tolerance","easeIn","linear","upAndDown","circular","fromCircle","makeRegular","_geometryLayoutJs","Polygon1","Polygon2","opt_layout","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setFlatCoordinates","setCoordinates","appendLinearRing","linearRing","polygon","layout","closestPointXY","closestPoint","minSquaredDistance","_closestJs","arrayMaxSquaredDelta","getOrientedFlatCoordinates","opt_right","getEnds","getFlatInteriorPoint","flatCenter","_interiorpointJs","getInteriorPointOfArray","getInteriorPoint","_geometryLayoutJsDefault","XYM","getLinearRingCount","getLinearRing","getLinearRings","ends","linearRings","_linearRingJsDefault","_orientJs","orientLinearRings","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","_simplifyJs","quantizeArray","XY","intersectsExtent","setLayout","_deflateJs","deflateCoordinatesArray","opt_n","opt_sphereRadius","opt_sides","opt_angle","sides","getLayout","arrayLength","startAngle","XYZ","XYZM","LinearRing1","LinearRing2","maxSquaredDelta","douglasPeucker","deflateCoordinates","getStrideForLayout","transformGeom2D","_geometryJs","SimpleGeometry1","SimpleGeometry2","computeExtent","getFirstCoordinate","getLastCoordinate","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","getLayoutForStride","opt_sy","simpleGeometry","opt_dest","tmpTransform","Geometry1","Geometry2","extentRevision_","simplifyTransformedInternal","revision","opt_transform","simplifyTransformed","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","simplify","inCoordinates","outCoordinates","pixelExtent","projectedExtent","transform2D","anchorX","anchorY","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","endss","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","simplifyLineString","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","simplifiedEndss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","twiceArea","linearRingss","Point1","Point2","getInteriorPointsOfMultiArray","_containsJs","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","point1","point2","ret","linearRingIsClockwise","linearRingsAreOriented","linearRingssAreOriented","orientLinearRingsArray","_reverseJs","edge","right","isClockwise","num","toSize","_attributionJs","_zoomJsDefault","zoomOptions","_rotateJsDefault","rotateOptions","attribution","_attributionJsDefault","attributionOptions","Attribution1","Attribution2","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control1","Control2","target_","listenerKeys","Rotate1","Rotate2","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom1","Zoom2","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","events","FullScreenEventType","FullScreen1","FullScreen2","cssClassName_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullscreen","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","nextClassName","_a","_b","_c","requestFullscreen","fullscreenEnabled","fullscreenElement","PROJECTION","COORDINATE_FORMAT","MousePosition1","MousePosition2","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","MAX_RATIO","MIN_RATIO","ControlledMap1","ControlledMap2","OverviewMap1","OverviewMap2","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","box","boxSizing","boxOverlay_","_overlayJsDefault","positioning","_overlayPositioningJsDefault","CENTER_CENTER","scope","overlayBox","getElement","move","mousePosition","setPosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","mapSize","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","LN2","updateBox_","ovresolution","ovmapPostrenderKey_","getRotateWithView","setRotateWithView","getOverviewMap","Overlay1","Overlay2","insertFirst","stopEvent","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","updateRenderedPosition","posX","posY","CENTER_RIGHT","BOTTOM_CENTER","TOP_CENTER","CENTER_LEFT","msTransform","getOptions","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","DEFAULT_DPI","ScaleLine1","ScaleLine2","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Direction","ZoomSlider1","ZoomSlider2","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","firstElementChild","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent1","ZoomToExtent2","handleZoomToExtent","_collectionJs","kinetic","_kineticJsDefault","altShiftDragRotate","_dragRotateJsDefault","doubleClickZoom","_doubleClickZoomJsDefault","zoomDelta","zoomDuration","dragPan","_dragPanJsDefault","pinchRotate","_pinchRotateJsDefault","pinchZoom","_pinchZoomJsDefault","keyboard","_keyboardPanJsDefault","_keyboardZoomJsDefault","mouseWheelZoom","_mouseWheelZoomJsDefault","shiftDragZoom","_dragZoomJsDefault","DoubleClickZoom1","DoubleClickZoom2","delta_","shiftKey","pan","zoomByDelta","Interaction1","Interaction2","setActive","ACTIVE","active","_pointerJs","DragPan1","DragPan2","stopDown","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","_conditionJs","all","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","handleDragEvent","targetPointers","centroid","update","handleUpEvent","getAngle","centerpx","handleDownEvent","PointerInteraction1","PointerInteraction2","handleMoveEvent","handlingDownUpSequence","trackedPointers_","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","altKeyOnly","altShiftKeysOnly","focus","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","mouseOnly","touchOnly","penOnly","_mapBrowserEventTypeJs","conditions","pass","altKey","metaKey","ctrlKey","activeElement","hasAttribute","tagName","pointerType","pointerEvt","isPrimary","DragRotate1","DragRotate2","lastAngle_","_dragBoxJs","DragZoom1","DragZoom2","minArea","out_","out","onBoxEnd","getGeometry","mapExtent","boxPixelExtent","factor","DragBoxEventType","DragBoxEvent1","DragBoxEvent2","DragBox1","DragBox2","box_","_boxJsDefault","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","RenderBox1","RenderBox2","geometry_","endPixel_","render_","px","createOrUpdateGeometry","_polygonJsDefault","KeyboardPan1","KeyboardPan2","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","_keyCodeJsDefault","DOWN","UP","mapUnitsDelta","KeyboardZoom1","KeyboardZoom2","charCode","charCodeAt","Kinetic","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","TRACKPAD","MouseWheelZoom1","MouseWheelZoom2","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate1","PinchRotate2","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom1","PinchZoom2","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent1","DragAndDropEvent2","file","opt_features","DragAndDrop1","DragAndDrop2","readAsBuffer_","formats_","formatConstructors","_formatTypeJsDefault","ARRAY_BUFFER","dropListenKeys_","handleResult_","formats","TextDecoder","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","TEXT","XML","DragRotateAndZoom1","DragRotateAndZoom2","lastMagnitude_","magnitude","angleDelta","createRegularPolygon","createBox","_circleJs","DrawEventType","DrawEvent1","DrawEvent2","Draw1","Draw2","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","styles","geometryFunction","Constructor_1","mode_1","_circleJsDefault","squaredLength","setCenterAndRadius","_pointJsDefault","_lineStringJsDefault","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","_vectorJsDefault","_vectorJsDefault1","useSpatialIndex","_styleJs","createEditingStyle","updateWhileInteracting","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","_featureJsDefault","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","setGeometry","setGeometryName","removeLastPoint","sketchFeature","abortDrawing_","_multiPointJsDefault","_multiLineStringJsDefault","_multiPolygonJsDefault","addFeature","appendCoordinates","newDrawing","ending","lineString","sketchFeatures","overlaySource","opt_geometry","boxCoordinates","Circle1","Circle2","getRadiusSquared_","circleExtent","setRadius","createStyleFunction","Feature1","Feature2","opt_geometryOrProperties","id_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","styles_1","LineString1","LineString2","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","getCoordinateAt","getFlatMidpoint","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","o","length_1","cumulativeLengths","lo","hi","m0","interpolate","lineStringLength","linearRingLength","perimeter","MultiLineString1","MultiLineString2","lineStrings","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","_interpolateJs","MultiPoint1","MultiPoint2","appendPoint","multiPoint","getPoint","getPoints","points","MultiPolygon1","MultiPolygon2","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","getEndss","getFlatInteriorPoints","_centerJs","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_baseVectorJs","VectorLayer1","VectorLayer2","BaseVectorLayer1","BaseVectorLayer2","renderBuffer","updateWhileAnimating","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","_rbushDefault","setRenderOrder","renderOrder","createDefaultStyle","toFunction","t1","t2","r1","h1","u","p","_maxEntries","_minEntries","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","Style1","defaultGeometryFunction","fill_","fill","image_","image","renderer","stroke_","text_","zIndex_","getFill","getImage","getStroke","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","styleFunction","defaultStyles","_fillJsDefault","_strokeJsDefault","white","blue","CircleStyle1","CircleStyle2","displacement","getScale","getDisplacement","radius_","RegularShape1","RegularShape2","canvas_","hitDetectionCanvas_","origin_","radius1","radius2_","radius2","size_","imageSize_","hitDetectionImageSize_","getRadius2","getAnchor","getHitDetectionImage","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","getPixelRatio","getImageSize","getHitDetectionImageSize","getImageState","getOrigin","listenImageChange","unlistenImageChange","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","_colorlikeJs","asColorLike","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","ImageStyle","ImageStyle1","opacity_","scale_","scaleArray_","displacement_","getScaleArray","setScale","Fill","Fill1","color_","setColor","Stroke1","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_builderGroupJs","CanvasVectorLayerRenderer1","CanvasVectorLayerRenderer2","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","useContainer","renderWorlds","executorGroup","opt_declutterTree","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","pixelTransform","canvasTransform","replayGroup","containerReused","clearRect","preRender","clipped","layerExtent","clipUnrotated","postRender","_hitdetectJs","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","_vectorJs","defaultOrder","loadExtents","gutter","loadExtent","declutterBuilderGroup","_builderGroupJsDefault","getTolerance","userTransform","loadFeatures","getSquaredTolerance","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","finish","_executorGroupJsDefault","getOverlaps","builderGroup","opt_declutterBuilderGroup","_builderJs","BATCH_CONSTRUCTORS","_polygonBuilderJsDefault","_builderJsDefault","_imageBuilderJsDefault","_lineStringBuilderJsDefault","_textBuilderJsDefault","BuilderGroup","BuilderGroup1","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","_instructionJs","CanvasBuilder1","CanvasBuilder2","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","myEnds","CUSTOM","_inflateJs","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","_instructionJsDefault","END_GEOMETRY","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","Instruction","BEGIN_PATH","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","VectorContext","VectorContext1","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasImageBuilder1","CanvasImageBuilder2","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","CanvasLineStringBuilder1","CanvasLineStringBuilder2","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder1","CanvasPolygonBuilder2","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","TEXT_ALIGN","CanvasTextBuilder1","CanvasTextBuilder2","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","_textPlacementJsDefault","LINE","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","_straightchunkJs","matchingChunk","maxAngle","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","CanvasLayerRenderer1","CanvasLayerRenderer2","renderedResolution","tempTransform","layerClassName","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","inverted","dispatchRenderEvent_","renderPixel","renderCoordinate","newCanvas","newContext","getImageData","err","Uint8Array","LayerRenderer1","LayerRenderer2","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","_imageStateJsDefault","loadImage","imageState","getPixelIndexArray","_builderTypeJs","ORDER","IMAGE","DEFAULT","ExecutorGroup","ExecutorGroup1","overlaps","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","_executorJsDefault","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","imageData","i_1","_builderTypeJsDefault","result_1","executor","zs","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","Executor","Executor1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p11","p21","p31","p41","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","_textBuilderJs","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","_transformJs1","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","_lengthJs","textLength","startM","parts","_textpathJs","drawTextOnPath","drawChars","cc","chars","part","ii_1","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","substring","_immediateJs","imageSmoothingEnabled","_immediateJsDefault","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","img","imgContext","alpha","fillRect","Icon","anchorXUnits","_iconAnchorUnitsJsDefault","anchorYUnits","byGeometryType","zIndexKeys","geomAndStyle","kk","resultFeatures","CanvasImmediateRenderer1","CanvasImmediateRenderer2","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","_simpleGeometryJs","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","FRACTION","Icon1","Icon2","normalizedAnchor_","anchorOrigin_","anchorOrigin","_iconOriginJsDefault","anchorXUnits_","anchorYUnits_","crossOrigin_","iconImage_","_iconImageJs","offset_","offsetOrigin_","offsetOrigin","getSrc","setAnchor","iconImageSize","taintedTestContext","IconImage1","IconImage2","unlisten_","imageState_","src_","tainted_","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","_imageJs","listenImage","ctx","globalCompositeOperation","imgData","putImageData","_iconImageCacheJs","ImageWrapper1","ImageWrapper2","imageLoadFunction","imageLoadFunction_","loadHandler","errorHandler","promise","listening_1","catch","ImageBase1","ImageBase2","_fillJs","Text1","Text2","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","GEOMETRY_RENDERERS","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","feature1","feature2","renderGeometry","renderFeatureInternal","VectorSourceEvent1","VectorSourceEvent2","opt_feature","VectorSource1","VectorSource2","loader_","format_","url_","loader","_featureloaderJs","xhr","strategy_","strategy","_loadingstrategyJs","collection","featuresRtree_","_rbushJsDefault","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","_vectorEventTypeJsDefault","ADDFEATURE","handleFeatureChange_","valid","extents","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","uid","getFormat","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","refresh","removeLoadedExtent","removed","setLoader","setUrl","_rbush","RBush1","opt_maxEntries","rbush_","items_","items","bbox","forEach_","rbush","Source1","Source2","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getContextOptions","setAttributions","setState","attributionLike","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","loadFeaturesXhr","setWithCredentials","_formatTypeJs","withCredentials","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","onerror","send","dataProjection","xhrWithCredentials","ExtentEventType","ExtentEvent1","ExtentEvent2","Extent1","Extent2","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent1","ModifyEvent2","MapBrowserEvent","Modify1","Modify2","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","opt_coordinate","nodes","hitPointGeometry","viewExtent","projectedDistanceToSegmentDataSquared","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent1","SelectEvent2","selected","deselected","originalFeatureStyles","Select1","Select2","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","_collectionEventTypeJs","getFeatureFromEvent","Snap1","Snap2","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","lowerLeft","upperRight","closestSegmentData","projectedCoordinate","isCircle","TranslateEventType","TranslateEvent1","TranslateEvent2","startCoordinate","Translate1","Translate2","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","geom","_baseTileJs","TileLayer1","TileLayer2","BaseTileLayer1","BaseTileLayer2","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","_tilePropertyJsDefault","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","CanvasTileLayerRenderer1","CanvasTileLayerRenderer2","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","_tileRangeJsDefault","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileRange","TileRange1","containsTileRange","WMTS1","WMTS2","requestEncoding","_wmtsrequestEncodingJsDefault","KVP","urls","_tileurlfunctionJs","expandUrl","imageSmoothing","reprojectionErrorThreshold","tileClass","tileLoadFunction","version_","version","dimensions_","matrixSet_","matrixSet","requestEncoding_","setKey","getKeyForDimensions_","tileUrlFunction","createFromTileUrlFunctions","createFromWMTSTemplate","setUrls","setTileUrlFunction","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","_uriJs","appendParams","localContext_1","getMatrixId","wmtsCap","config","elt","tileMatrixSets","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","projConfig","switchOriginXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","_wmtsJs","createFromCapabilitiesMatrixSet","gets","encodings","REST","TileImage1","TileImage2","opaque","defaultTileLoadFunction","_imageTileJsDefault","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","contextOptions_","_commonJs1","IMAGE_SMOOTHING_DISABLED","renderReprojectionEdges_","tileCache","usedTileCache","getTileCacheForProjection","getGutter","stringify","thisProj","projKey","_tilegridJs","getForProjection","_tileCacheJsDefault","highWaterMark","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","_tilecoordJs","containsKey","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","_tileJsDefault","z1","pixelRatio1","getTileInternal","interimTile","refreshInterimChain","getKeyZXY","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","_tileJs","ImageTile1","ImageTile2","tileLoadFunction_","naturalWidth","naturalHeight","Tile1","Tile2","transition_","transitionStarts_","release","getTileCoord","ReprojTile1","ReprojTile2","targetProj","getTileFunction","opt_errorThreshold","opt_renderEdges","opt_contextOptions","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","_reprojJs","calculateSourceExtentResolution","isFinite","errorThresholdInPixels","ERROR_THRESHOLD","triangulation_","_triangulationJsDefault","getTriangles","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","sources","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","ENABLE_RASTER_REPROJECTION","Triangulation","Triangulation1","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceResolution","brokenDiagonalRendering_","drawTestTriangle","verifyBrokenDiagonalRendering","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","triangulation","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","DEFAULT_WMS_VERSION","msImageSmoothingEnabled","_lrucacheJs","TileCache1","TileCache2","peekLast","pruneExceptNewestZ","peekFirstKey","fromKey","LRUCache","LRUCache1","opt_highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","peekLastKey","opt_tileCoord","hash","withinExtentAndZ","getFullTileRange","_tileEventTypeJs","UrlTile1","UrlTile2","generateTileUrlFunction_","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","_tileEventTypeJsDefault","TILELOADSTART","TILELOADERROR","TILELOADEND","TileSourceEvent","setTileLoadFunction","createFromTemplates","TileSource1","TileSource2","opaque_","tilePixelRatio_","tmpSize","loaded","getTileGrid","tileSize","TileSourceEvent1","TileSourceEvent2","createForExtent","createXYZ","createForProjection","extentFromProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","xyzOptions","gridOptions","opt_maxResolution","half","_tileRangeJs","tmpTileCoord","TileGrid","TileGrid1","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","fullTileRanges","createFromTemplate","nullTileUrlFunction","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","startCharCode","stopCharCode","stop_1","uri","params","keyParams","encodeURIComponent","qs","WMTSTileGrid1","WMTSTileGrid2","matrixIds_","matrixIds","getMatrixIds","opt_matrixLimits","elt_ml","tileWidth","tileHeight","_owsJs","NAMESPACE_URIS","OWS_NAMESPACE_URIS","PARSERS","_xmlJs1","makeStructureNS","makeObjectPropertySetter","objectStack","CONTENTS_PARSERS","WMTSCapabilities1","WMTSCapabilities2","owsParser_","_owsJsDefault","readFromNode","getAttribute","trim","WMTSCapabilityObject","pushParseAndPop","makeObjectPropertyPusher","LAYER_PARSERS","TMS_PARSERS","STYLE_PARSERS","isDefault","_xsdJs","readString","TMS_LINKS_PARSERS","DIMENSION_PARSERS","resourceType","resource","readBoundingBox","legend","_xlinkJs","readHref","TMS_LIMITS_LIST_PARSERS","makeArrayPusher","TMS_LIMITS_PARSERS","readNonNegativeInteger","WGS84_BBOX_READERS","readCoordinates","TM_PARSERS","readDecimal","_xmlJs","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","OPERATIONS_METADATA_PARSERS","OWS1","OWS2","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","CONSTRAINT_PARSERS","CONTACT_INFO_PARSERS","PHONE_PARSERS","DCP_PARSERS","HTTP_PARSERS","href","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","SERVICE_CONTACT_PARSERS","XML1","readFromDocument","nextSibling","nodeType","Node","ELEMENT_NODE","XML_SCHEMA_INSTANCE_URI","createElementNS","getAllTextContent","getAllTextContent_","isDocument","getAttributeNS","makeArrayExtender","makeReplacer","makeChildAppender","makeArraySerializer","makeSimpleNodeFactory","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","parseNode","serialize","pushSerializeAndPop","registerXMLSerializer","getXMLSerializer","registerDocument","getDocument","namespaceURI","qualifiedName","normalizeWhitespace","accumulator","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","xml","valueReader","opt_property","localName","nodeWriter","serializersNS","nodeFactory","serializers","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","orderedKeys","sequence","namespaceURIs","structure","opt_structureNS","structureNS","parsersNS","nextElementSibling","parsers","opt_keys","xmlSerializer_","xmlSerializer","XMLSerializer","document_","implementation","createDocument","readBoolean","readBooleanString","readDateTime","readDecimalString","readNonNegativeIntegerString","writeBooleanTextNode","writeCDATASection","writeDateTimeTextNode","writeDecimalTextNode","writeNonNegativeIntegerTextNode","writeStringTextNode","string","dateTime","bool","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","nonNegativeInteger","factory","proj4","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports$1","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","ignoredChar","testkey","lkey","parseProj","defData","paramName","paramVal","paramOutname","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","approx","whitespace","latin","keyword","endThings","digets","Parser","level","place","root","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","d2r","wkt","wkt1","lisp","projName","local","AXIS","axisOrder","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","outName","inName","rename","cleanWKT","that","def","EPSG","ESRI","IAU2000","WGS84","GOOGLE","globals","codeWords","codes","testObj","testDef","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","init","es","names","projStore","exports$2","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","exports$3","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","start1","mapNodes","longitudeShift","latitudeShift","readGridHeader","isLittleEndian","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","srsCode","json","ourProj","datumDef","sphere_","sphere1","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","checkParams","datum_transform","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","inverse1","attemptedGrids","subgrid","subgrids","epsilon","del","ll","lim","applySubgridShift","pin","ct","tb","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","toPoint","checkCoord","checkSanity","checkNotWGS","transformer","from","to","transformedArray","checkProj","oProj","proj4$1","fromProj","toProj","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","forward$1","mgrs1","UTMtoLL","toUpperCase","bottom","toPoint$1","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","A1","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","getLetterDesignator","LLtoUTM","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","LetterDesignator","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","temp","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hr","hi1","hr1","etmerc","cgb","cbg","utg","gtu","np","Qn","Z1","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","R","b0","k1","k2","k3","Sa1","Sa2","S","I1","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V1","W","Qp","Sp","Tp","Vp","Up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","krovak","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","ml1","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","bl","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","tilt","tpers","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","defaultDatum","Proj","nadgrid","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","nadgrid1","gridOffset","subHeader","lngColumnCount","latColumnCount","readSubgrids","_bingMapsJsDefault","quadKey","digits","mask","BingMaps1","BingMaps2","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","transform_1","tileGrid1","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","extent_1","jsonp","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","CartoDB1","CartoDB2","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","XYZ1","XYZ2","Cluster1","Cluster2","interpolationRatio","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","createCluster","searchCenter","formatPercentage","percentage","maximumFractionDigits","IIIF1","IIIF2","baseUrl","_iiifinfoJs","Versions","VERSION2","quality","VERSION1","supports","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","_tileGridJsDefault","IiifTileClass","_zoomifyJs","CustomTile","size1","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","VERSION3","regionWidth","regionHeight","TierSizeCalculation","CustomTile1","CustomTile2","zoomifyImage_","Zoomify1","Zoomify2","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileIndex","ZoomifyTileClass","testTileUrl","IIIF_PROFILE_VALUES","qualities","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","__spreadArray","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","scaleFactors","extraFormats","preferredFormat","preferredFormats","acc","extraFeatures","extraQualities","IIIFInfo","IIIFInfo1","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","opt_preferredOptions","imageOptions","ImageSourceEventType","defaultImageLoadFunction","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent1","ImageSourceEvent2","ImageSource1","ImageSource2","reprojectedImage_","reprojectedRevision_","findNearestResolution","_imageJsDefault","resolution1","getImageInternal","handleImageChange","ReprojImage1","ReprojImage2","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","sourceState1","ImageArcGISRest1","ImageArcGISRest2","params_","ratio_","getParams","imageResolution","getRequestUrl_","_imageJsDefault1","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvasSource1","ImageCanvasSource2","canvasFunction_","canvasFunction","canvasElement","_imageCanvasJsDefault","_imageBaseJs","ImageCanvas1","ImageCanvas2","opt_loader","error_","getError","handleLoad_","ImageMapGuide1","ImageMapGuide2","displayDpi_","displayDpi","useOverlay_","useOverlay","mcsW","mcsH","devW","devH","mpp","baseParams","Static1","Static2","imageExtent_","imageExtent","getImageExtent","targetWidth","GETFEATUREINFO_IMAGE_SIZE","ImageWMS1","ImageWMS2","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","getLegendUrl","LAYERS","requestWidth","requestHeight","requestExtent","GEOSERVER","MAPSERVER","CARMENTA_SERVER","QGIS","ATTRIBUTION","OSM1","OSM2","newImageData","hasImageData","ImageData","_","createImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","onMessage","lib","blob","Blob","URL","createObjectURL","worker","Worker","Processor1","Processor2","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterOperationType","RasterSourceEvent1","RasterSourceEvent2","RasterSource1","RasterSource2","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","_sourceJsDefault","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","renderedExtent","processSources_","imageDatas","onWorkerComplete_","context1","sharedContext","layerOrSource","_tileJsDefault1","_baseImageJs","ImageLayer1","ImageLayer2","BaseImageLayer1","BaseImageLayer2","CanvasImageLayerRenderer1","CanvasImageLayerRenderer2","imageLayer","imageSource","imagePixelRatio","size_1","dw","dh","previousAlpha","ATTRIBUTIONS","_osmJs","LayerConfig","ProviderConfig","Stamen1","Stamen2","provider","providerConfig","layerConfig","TileArcGISRest1","TileArcGISRest2","getKeyForParams_","tileExtent","LabeledTile1","LabeledTile2","strokeRect","TileDebug1","TileDebug2","textTileCoord","_stateJs","TileJSON1","TileJSON2","tileJSON_","_netJs","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent_1","TileWMS1","TileWMS2","transparent","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","forDataAtCoordinate","opt_request","loadInternal_","handleError_","UTFGrid1","UTFGrid2","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","defaultLoadFunction","VectorTile1","VectorTile2","loadingTiles_","sourceTileCache","_vectorTileJsDefault","tileGrids_","sourceTiles","getSourceTiles","sourceTile","tileFeatures","candidate","loadedZ","sourceZ","previousSourceTiles","sourceTileCoord","loadingSourceTiles","listenChange","sourceTileKey","errorSourceTileKeys","errorTileCount","coordKey","empty","_vectorRenderTileJsDefault","onLoad","onError","setFeatures","canvasPool","VectorRenderTile1","VectorRenderTile2","declutterExecutorGroups","hitDetectionImageData","replayState_","wantedResolution","hasContext","getReplayState","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","projCodes","code1","code2","def1","def2","GeoJSON1","GeoJSON2","defaultFeatureProjection","extractGeometryName_","extractGeometryName","readFeatureFromObject","geoJSONFeature","readGeometry","readFeaturesFromObject","geoJSONFeatures","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","adaptOptions","writeGeometry","writeFeaturesObject","objects","writeGeometryObject","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","_featureJs1","transformGeometryWithOptions","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","geometry1","writeGeometryCollectionGeometry","GeometryCollection1","GeometryCollection2","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","_featureJs","JSONFeature1","JSONFeature2","readFeature","getObject","getReadOptions","writeFeature","writeFeatures","transformExtentWithOptions","FeatureFormat","FeatureFormat1","write","decimals","power_1","getBundleURL","bundleURL","getBaseURL","dirname","_filePath","filePath","slashIndex","relative","fromParts","divergeIndex","toParts","fromId","toId","_dirname","_relative"],"version":3,"file":"reprojection.e0663bb9.js.map"}