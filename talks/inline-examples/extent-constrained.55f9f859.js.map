{"mappings":"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","sources":["node_modules/ol/src/source/Source.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/util.js","node_modules/ol/src/source/State.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/sphere.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/color.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/dom.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/View.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/size.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/renderer/vector.js"],"sourcesContent":["/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n"],"names":["$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","Array","isArray","frameState","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","_super","Source","options","_this","call","this","projection","$2vjin","get","attributions_","attributions","attributionsCollapsible_","undefined","attributionsCollapsible","loading","state_","state","$4atwc","default","READY","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","prototype","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","$6fegY","abstract","getState","getWrapX","getContextOptions","refresh","changed","setAttributions","setState","$4ZHam","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","type","key","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$0qSof","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","getUid","values_","setProperties","value","hasOwnProperty","getKeys","Object","keys","getProperties","$6RQ94","assign","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","dispatchEvent","$5PWvX","PROPERTYCHANGE","set","opt_silent","values","applyProperties","source","unset","isEmpty","$5u1mN","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","i","ii","length","$3H2uZ","unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","$65ADj","CHANGE","getRevision","on","listener","len","listen","once","listenOnce","ol_key","un","removeEventListener","$4GA14","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listeners","listenersForType","indexOf","push","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","$4nF2G","VOID","disposeInternal","clear","getListeners","hasListener","opt_type","index","splice","$7xsVg","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$8ff7925ef9afa7e69604ab9620edac22$export$1bd42086bda9cade","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","arguments","$3MevS","equals","apply","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","haystack","needle","opt_comparator","mid","cmp","comparator","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","low","high","found","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$7c21d7646a0313abf7b847efa68bfceb$export$fd1d1d368f0c3e6f","opt_func","opt_strict","compare","every","currentVal","res","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","var_sources","TypeError","output","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","UNDEFINED","LOADING","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","input","opt_output","opt_dimension","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$lXcXx","add","getCode","$3j6d5","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","resolution","point","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","metersPerUnit","getMetersPerUnit","$6MSva","METERS_PER_UNIT","units","DEGREES","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$2vjZk","getDistance","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","destination","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$13550698a4b6771e","coordinate","opt_projection","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","extent","opt_stops","$4lmw7","applyTransform","projections1","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$1834066e63104ea","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3OsOH","PROJECTIONS","$35e5h","fromEPSG4326","toEPSG4326","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","Math","PI","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","log","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","code","global","worldExtent","getPointResolution","$4qq0p","cosh","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$DMlk4","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","dimension","y","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","exp","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","extent_","worldExtent_","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","canWrapX","getExtent","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","min","max","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","x","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","x1","y1","x2","y2","dx","dy","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","mat","maxRow","maxEl","abs","r","absValue","j","coef","k","l","m","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$0ba2913765cbb83278246e730dbcdcdf$export$97fff7491bd246bd","$0ba2913765cbb83278246e730dbcdcdf$export$7eb84799c931fe91","replace","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$97fff7491bd246bd","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","transformFn","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","transform","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","$4aF1u","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$b6ab620e694fb080","$8ebfb36ef5532881c5652b708da2c120$export$303e7fab357a87ae","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$4nuo6","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$1mHUI","assert","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","deltaX","deltaY","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","width","height","xs","ys","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","projectionExtent","worldWidth","floor","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$7I9hv","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","message","VERSION","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","toRadians","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","lon","toDegrees","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$29884e9b826cd25109649ab0c360e769$export$568ed88074851180","delta","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","angle","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$8f869025bba9609b","scale","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","getWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","sourceExtentWidth","$9d44b4ae0ee335a0d47ee14b2c70e04c$export$ce10beeb24f5e243","number","opt_precision","numberString","toFixed","decimal","join","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","controls","$5ScHR","defaults","interactions","$5h33g","onFocusOnly","$976448907138da16f7612e32ecc55ac7$var$__extends","createRenderer","$1iV0Z","$5p7rl","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","map","fontChangeListenerKey_","$6yQsI","checkedFonts","redrawText","element_","document","createElement","style","position","zIndex","className","$3Rx15","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","dispatchRenderEvent","getMap","event_1","$OadRJ","parentNode","removeChild","renderFrame","calculateMatrices2D","$4uxJu","PRECOMPOSE","layerStatesArray","sort","viewState","declutterLayers","previousElement","layerState","layerIndex","$Lzmdv","inView","sourceState","layer","element","render","renderDeclutter","$4eVqD","replaceChildren","POSTCOMPOSE","display","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","layerFilter","layerStates","hasRenderer","getRenderer","getDataAtPixel","result","$2vgwj","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$3U9Yj","shared","expire","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","coordinateToPixelTransform","pixelToCoordinateTransform","$5ljS4","compose","makeInverse","forEachFeatureAtCoordinate","checkWrapped","thisArg","thisArg2","managed","feature","geometry","translatedCoordinate","$1gmYD","offsets","numLayers","matches","tmpCoord","layerRenderer","getSource","callback_1","order","i1","distanceSq","some","hasFeatureAtCoordinate","TRUE","canExpireCache","postRenderFunctions","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$83abccee78a744ce","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$d259b918f3750573","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","$af95442a94d1862a138c401177ef0c4b$export$8f869025bba9609b","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$af95442a94d1862a138c401177ef0c4b$export$f37782ea24d4d643","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","det","transformString","$YyeWG","WORKER_OFFSCREEN_CANVAS","node","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","src","crossOrigin","color","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","setSize","maxCacheSize","$6KuGy","asString","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","clamp","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","visible","minResolution","maxResolution","zoom","minZoom","maxZoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","getChangeEventType","$3mjx6","SOURCE","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","handleSourceChange_","getFeatures","Promise","resolve","prepareFrame","arrayLayerState","$1Mpeg","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","properties","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","opt_managed","getZIndex","round","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","PRERENDER","POSTRENDER","RENDERCOMPLETE","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3786c39de7e14bd0","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b1e2f63226064044","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70a70bbc0da51900","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","getFontParameters","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","left","offsetHeight","createCanvasContext2D","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","lines","widths","numLines","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","children","oldChildren","childNodes","oldChild","newChild","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","overlays","layerGroup","layers","getLayers","$6wBEG","$3sAUp","LAYERGROUP","TARGET","VIEW","view","$N1rY5","$71dVn","getArray","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","create","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$3hMgG","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","control","$4FhyO","ADD","REMOVE","interaction","addOverlayInternal_","id","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","opt_options","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","top","getTarget","getTargetElement","toUserCoordinate","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","$2tPaw","handleMapBrowserEvent","originalEvent","$5e2TO","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","$3dwRD","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","getAnimating","resolveConstraints","removeNode","$3AwuN","$3Jpg2","PASSIVE_EVENT_LISTENERS","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","previousFrameState","$43BI1","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","wantedTiles","$7zDcU","$41hqu","MOVESTART","createOrUpdateEmpty","MOVEEND","clone","setTimeout","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","setViewportSize","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","item","insertAt","elem","removeAt","prev","setAt","opt_except","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","getIntersection","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","newEvent1","SINGLECLICK","updateActivePointers_","POINTERUP","POINTERCANCEL","pointerId","handlePointerUp_","isMouseActionButton_","button","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","enqueue","added","hifi","$dgki0","LOADED","EMPTY","tileKey","newLoads","getCount","dequeue","IDLE","load","$7gsLl","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smooth","smoothExtentConstraint","$2YpsA","createExtent","constrainOnlyCenter","createProjection","multiWorld","none","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","showFullExtent","projExtent","resolutions","constrainResolution","$3AiXN","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","getHeight","$5TQMR","DEFAULT_TILE_SIZE","pow","defaultMinResolution","defaultMaxZoom","createSnapToPower","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","enableRotation","constrainRotation","$2kc5F","createSnapToZero","createSnapToN","disable","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","fromUserExtent","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","getCenter","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","anchor","animateInternal","animationCount","series","complete","duration","easing","$46UD2","inAndOut","getResolutionForZoom","modulo","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","opt_size","$3pdCC","CENTER","getConstraints","getConstrainResolution","opt_hints","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","RESOLUTION","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","nearest","linearFindNearest","baseLevel","fit","geometryOrExtent","getSimplifiedGeometry","$5QgBH","fromExtent","getType","$1gVIf","userProjection","getUserProjection","fitInternal","coords","getFlatCoordinates","minRotX","minRotY","maxRotX","maxRotY","getStride","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","opt_anchor","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$c1e1f889297e115e83bec772196e32bf$export$33cb2b2277c1ea0c","$c1e1f889297e115e83bec772196e32bf$export$6c563273fc39e165","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$4c6a822b604dbfa9a10722399f7335d0$export$37e537ca821cbb20","theta","$4c6a822b604dbfa9a10722399f7335d0$export$fdc0b3988dd5aafc","opt_tolerance","tolerance","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","opt_layout","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setFlatCoordinates","setCoordinates","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","layout","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","$3QyYH","arrayMaxSquaredDelta","assignClosestArrayPoint","containsXY","$3v8bp","linearRingsContainsXY","getOrientedFlatCoordinates","getArea","$3B90O","linearRings","getCoordinates","opt_right","$2wxLi","orientLinearRings","$5X4hW","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","$39fh1","getInteriorPointOfArray","getInteriorPoint","$5g6wp","$3dG11","XYM","getLinearRingCount","getLinearRing","$6iGbz","getLinearRings","ends","linearRingsAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","$4YdW9","quantizeArray","XY","intersectsExtent","$1xC0k","intersectsLinearRingArray","setLayout","$6X6IT","deflateCoordinatesArray","$2FGG8","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getLayout","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","XYZ","XYZM","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","maxSquaredDelta","assignClosestPoint","inflateCoordinates","douglasPeucker","deflateCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","opt_dest","$1VsH2","transform2D","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","computeExtent","createOrUpdateFromFlatCoordinates","getFirstCoordinate","getLastCoordinate","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","opt_sy","$4UIww","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","createEmpty","extentRevision_","simplifyTransformedInternal","memoizeOne","revision","opt_transform","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","returnOrUpdate","simplify","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getTransform","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchorX","anchorY","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","lerp","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","squaredDistance","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","endss","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","coordinatesss","opt_endss","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","squaredSegmentDistance","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","simplifiedEndss","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","opt_coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","createOrUpdateFromCoordinate","deflateCoordinate","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","numberSafeCompareFunction","segmentLength","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","interiorPoints","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","forEachCorner","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","extendFlatCoordinates","containsExtent","$1ZN49","point1","point2","intersectsSegment","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","linearRingContainsXY","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","linearRingContainsExtent","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$12olT","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$8f869025bba9609b","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","$4CXoP","zoomOptions","$5k8Oh","rotateOptions","attribution","$LJZZH","attributionOptions","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","removeChildren","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","$3Zmpd","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","kinetic","$2poDG","altShiftDragRotate","$3sou6","doubleClickZoom","$2oWyR","zoomDelta","zoomDuration","dragPan","$4ykpl","pinchRotate","$3ydco","pinchZoom","$2VlPI","keyboard","$5Km6o","$2C7wu","mouseWheelZoom","$7xkCb","shiftDragZoom","$5x3un","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$OBe42","zoomByDelta","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","linear","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$5SIlX","ACTIVE","active","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","stopDown","FALSE","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","$9XrHo","all","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","handleDragEvent","targetPointers","centroid","$dmoHp","update","handleUpEvent","getAngle","centerpx","handleDownEvent","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleMoveEvent","handlingDownUpSequence","trackedPointers_","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","getValues","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","WEBKIT","MAC","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","altShiftKeysOnly","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","mouseOnly","mouseActionButton","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","shiftKeyOnly","minArea","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","onBoxEnd","getGeometry","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","getBottomLeft","getTopRight","factor","scaleFromCenter","$1cgm4","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$6kwQG","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","px","createOrUpdateGeometry","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","targetNotEditable","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","$4iJoZ","DOWN","UP","mapUnitsDelta","pan","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","always","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","getColor","setColor","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","rotateWithView","displacement","normalizedAnchor_","anchorOrigin_","anchorOrigin","$67wV0","anchorXUnits_","anchorXUnits","$17PKZ","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","image","img","imgSize","imageState","$6KqPC","asArray","iconImage_","$4sICh","offset_","offsetOrigin_","offsetOrigin","origin_","size_","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","getScale","getSrc","getRotateWithView","getAnchor","getDisplacement","setAnchor","getImage","getPixelRatio","getImageSize","getHitDetectionImageSize","getImageState","getHitDetectionImage","getOrigin","iconImageSize","listenImageChange","unlistenImageChange","$4ASaK","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","scale_","scaleArray_","toSize","displacement_","getScaleArray","setRotateWithView","setScale","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","hitDetectionImage_","image_","canvas_","unlisten_","imageState_","src_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","$1s8C5","listenImage","ctx","globalCompositeOperation","fillStyle","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","IMAGE_DECODE","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","setImage","$70FsU","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","setGeometry","fill_","fill","renderer","stroke_","stroke","text_","zIndex_","getFill","getStroke","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","styleFunction","styles_1","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$6Spvy","$2k3WA","$MJAOB","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","points","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","radius_","$4uuiL","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","radius1","radius2_","radius2","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getPoints","getRadius2","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","defaultLineCap","defaultLineJoin","strokeWidth","defaultStrokeStyle","$3R4vQ","asColorLike","defaultLineWidth","defaultMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","defaultFillStyle","lineWidth","closePath","drawHitDetectionCanvas_","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","LINE","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$10o71","$5dvi5","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","$2lJcf","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$3f7wY","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","getLayer","tileState","getTile","getInterimTile","loadedTileCallback","tiles","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","layerExtent","tilePixelRatio","getTilePixelRatio","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","uid","tileCoord","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","tempTransform","containerReused","clearRect","clipUnrotated","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","getTopLeft","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","clip","moveTo","drawTileImage","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$5eOHj","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","$ac230d10056414a40eb774bd091234f1$var$__extends","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","getBottomRight","bottomLeft","rotateAtOffset","inverted","dispatchRenderEvent_","getRenderTransform","renderPixel","renderCoordinate","containsCoordinate","newCanvas","newContext","err","Uint8Array","$5iuGx","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","forEachLoadedTile","renderIfReadyAndVisible","loadImage","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$5Ul36","$6isWD","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","$51t4G","setRenderOrder","renderOrder","opt_style","$5w8pN","createDefaultStyle","toFunction","module","exports","t1","t2","r1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","opt_declutterTree","vectorSource","snapToPixel","endWorld","world","execute","makeScale","replayGroup","clipped","transforms","$4R5ve","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","featureCallback","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","$25giy","defaultOrder","buffer","loadExtents","loadExtent","declutterBuilderGroup","$2pH9f","getTolerance","userTransform","loadFeatures","getTransformFromProjections","getSquaredTolerance","styles","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","finish","$63iR2","getOverlaps","builderGroup","opt_declutterBuilderGroup","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$7ubxS","$69VVD","$dxG9z","$1f0fO","$3QAmu","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","coordinateRelationship","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","$3AEwg","CUSTOM","inflateMultiCoordinatesArray","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","instruction","END_GEOMETRY","reverseSubArray","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$4EgJy","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_PATH","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","beginPathInstruction","strokeInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","closePathInstruction","setFillStrokeStyles_","circleInstruction","snap","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","$7iFu4","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","$7lVD1","matchingChunk","maxAngle","drawChars_","strokeKey","textKey","defaultTextAlign","textBaseline","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$1hA4d","IMAGE","TEXT","DEFAULT","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","overlaps","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","$3jzsB","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","extendCoordinate","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","imageData","idx","result_1","executor","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","measureTextWidths","measureTextHeight","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","createOrUpdate","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","setFromArray","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","$5QB2H","lineStringLength","textLength","measureAndCacheTextWidth","startM","parts","$2DI6J","drawTextOnPath","drawChars","cc","chars","part","ii_1","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","substring","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","imageSmoothingEnabled","$4R4Ev","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$2mZBT","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","resultFeatures","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries"],"version":3,"file":"extent-constrained.55f9f859.js.map"}