{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1454d3a602ab9c009ba10af943558b77.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XML.js","node_modules/ol/src/format/xlink.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/OWS.js","node_modules/ol/src/format/WMTSCapabilities.js","node_modules/proj4/lib/constants/values.js","node_modules/proj4/lib/constants/PrimeMeridian.js","node_modules/proj4/lib/constants/units.js","node_modules/proj4/lib/match.js","node_modules/proj4/lib/projString.js","node_modules/wkt-parser/parser.js","node_modules/wkt-parser/process.js","node_modules/proj4/lib/global.js","node_modules/wkt-parser/index.js","node_modules/proj4/lib/defs.js","node_modules/proj4/lib/parseCode.js","node_modules/proj4/lib/extend.js","node_modules/proj4/lib/common/msfnz.js","node_modules/proj4/lib/common/sign.js","node_modules/proj4/lib/common/adjust_lon.js","node_modules/proj4/lib/common/tsfnz.js","node_modules/proj4/lib/common/phi2z.js","node_modules/proj4/lib/projections/longlat.js","node_modules/proj4/lib/projections.js","node_modules/proj4/lib/projections/merc.js","node_modules/proj4/lib/constants/Ellipsoid.js","node_modules/proj4/lib/constants/Datum.js","node_modules/proj4/lib/datum.js","node_modules/proj4/lib/nadgrid.js","node_modules/proj4/lib/Proj.js","node_modules/proj4/lib/deriveConstants.js","node_modules/proj4/lib/datumUtils.js","node_modules/proj4/lib/datum_transform.js","node_modules/proj4/lib/adjust_axis.js","node_modules/proj4/lib/common/toPoint.js","node_modules/proj4/lib/checkSanity.js","node_modules/proj4/lib/transform.js","node_modules/proj4/lib/core.js","node_modules/mgrs/mgrs.js","node_modules/proj4/lib/Point.js","node_modules/proj4/lib/common/pj_enfn.js","node_modules/proj4/lib/common/pj_mlfn.js","node_modules/proj4/lib/common/pj_inv_mlfn.js","node_modules/proj4/lib/projections/tmerc.js","node_modules/proj4/lib/common/sinh.js","node_modules/proj4/lib/common/hypot.js","node_modules/proj4/lib/common/asinhy.js","node_modules/proj4/lib/common/log1py.js","node_modules/proj4/lib/common/gatg.js","node_modules/proj4/lib/common/clens_cmplx.js","node_modules/proj4/lib/common/cosh.js","node_modules/proj4/lib/projections/etmerc.js","node_modules/proj4/lib/common/clens.js","node_modules/proj4/lib/projections/utm.js","node_modules/proj4/lib/common/adjust_zone.js","node_modules/proj4/lib/common/srat.js","node_modules/proj4/lib/projections/gauss.js","node_modules/proj4/lib/projections/sterea.js","node_modules/proj4/lib/projections/stere.js","node_modules/proj4/lib/projections/somerc.js","node_modules/proj4/lib/projections/omerc.js","node_modules/proj4/lib/projections/lcc.js","node_modules/proj4/lib/projections/krovak.js","node_modules/proj4/lib/common/mlfn.js","node_modules/proj4/lib/common/e0fn.js","node_modules/proj4/lib/common/e1fn.js","node_modules/proj4/lib/common/e2fn.js","node_modules/proj4/lib/common/e3fn.js","node_modules/proj4/lib/common/gN.js","node_modules/proj4/lib/common/adjust_lat.js","node_modules/proj4/lib/common/imlfn.js","node_modules/proj4/lib/projections/cass.js","node_modules/proj4/lib/common/qsfnz.js","node_modules/proj4/lib/projections/laea.js","node_modules/proj4/lib/common/asinz.js","node_modules/proj4/lib/projections/aea.js","node_modules/proj4/lib/projections/gnom.js","node_modules/proj4/lib/projections/cea.js","node_modules/proj4/lib/common/iqsfnz.js","node_modules/proj4/lib/projections/eqc.js","node_modules/proj4/lib/projections/poly.js","node_modules/proj4/lib/projections/nzmg.js","node_modules/proj4/lib/projections/mill.js","node_modules/proj4/lib/projections/sinu.js","node_modules/proj4/lib/projections/moll.js","node_modules/proj4/lib/projections/eqdc.js","node_modules/proj4/lib/projections/vandg.js","node_modules/proj4/lib/projections/aeqd.js","node_modules/proj4/lib/projections/ortho.js","node_modules/proj4/lib/projections/qsc.js","node_modules/proj4/lib/projections/robin.js","node_modules/proj4/lib/projections/geocent.js","node_modules/proj4/lib/projections/tpers.js","node_modules/proj4/projs.js","node_modules/proj4/lib/index.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-989800ae9c02d82f19518fb6d467baa5.js","src/reprojection.js","node_modules/ol/src/proj/proj4.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"2okNu\\\":\\\"reprojection.e6938880.js\\\",\\\"2HXi0\\\":\\\"british-isles-counties.fa96f262.geojson\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  const matrixSetExtent = matrixSetObj['BoundingBox'];\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    wrapX =\n      wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n      wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readNonNegativeInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = wkt.AXIS[i];\n      var descriptor = axis[0].toLowerCase();\n      if (descriptor.indexOf('north') !== -1) {\n        axisOrder += 'n';\n      } else if (descriptor.indexOf('south') !== -1) {\n        axisOrder += 's';\n      } else if (descriptor.indexOf('east') !== -1) {\n        axisOrder += 'e';\n      } else if (descriptor.indexOf('west') !== -1) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function (coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"2okNu\", \"2HXi0\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport proj4 from 'proj4';\nimport {OSM, TileImage, TileWMS} from 'ol/source';\nimport {get as getProjection, fromLonLat} from 'ol/proj';\nimport {register} from 'ol/proj/proj4';\n\n\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport counties from 'url:./data/british-isles-counties.geojson';\n\nimport {Stroke, Style} from 'ol/style';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs'\n);\n\nregister(proj4);\n\nvar proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([-650000, -150000, 1350000, 1450000]);\n\nvar layers = {};\n\nlayers['osm'] = new TileLayer({\n  source: new OSM(),\n});\n\nvar parser = new WMTSCapabilities();\n\nlayers['bng'] = new TileLayer();\nvar urlB =\n  'https://tiles.arcgis.com/tiles/qHLhLQrcvEnxjtPr/arcgis/rest/services/OS_Open_Raster/MapServer/WMTS';\nfetch(urlB)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    var result = parser.read(text);\n    var options = optionsFromCapabilities(result, {\n      layer: 'OS_Open_Raster',\n    });\n    options.attributions =\n      'Contains OS data © Crown Copyright and database right ' +\n      new Date().getFullYear();\n    options.crossOrigin = '';\n    options.projection = 'EPSG:27700';\n    options.wrapX = false;\n    layers['bng'].setSource(new WMTS(options));\n  });\n\nlayers['vector'] = new VectorLayer({\n  source: new VectorSource({\n    url: counties,\n    format: new GeoJSON(),\n    attributions: '<a href=\"https://gist.github.com/duhaime/1d6d5a8dc77c86128fcc1a05a72726c9\">Counties, D. Duhaime</a>', \n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: '#8B0000',\n      width: 1.3,\n    })\n  }),\n});\n\nvar map = new Map({\n  layers: [layers['osm'], layers['bng'], layers['vector']],\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: fromLonLat([0, 54]),\n    zoom: 4,\n  }),\n});","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {assign} from '../obj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = def.units;\n      if (!units && def.projName === 'longlat') {\n        units = Units.DEGREES;\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        const def1 = proj4.defs(code1);\n        const def2 = proj4.defs(code2);\n        if (def1 === def2) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          // Reset axis because OpenLayers always uses x, y axis order\n          const transform = proj4(\n            assign({}, def1, {axis: undefined}),\n            assign({}, def2, {axis: undefined})\n          );\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","arr","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$7ad150f61db3b289","func","value","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$7c21d7646a0313abf7b847efa68bfceb$export$4d0d05f1b8a16b84","index","every","el","idx","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","obj","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","indexOf","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","options","defineProperty","get","window","addEventListener","removeEventListener","error","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","default","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","transform","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","source","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","ii","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$exports","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$d0db892835f4be10","coordTransform","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$524e9c84a4c58bd58490804da4c772c6$export$adc1225342deb6c0","sourceProj","destProj","coord","transformed","sourceX","sourceY","sourceExtent","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$a17c336463d573a615343832f6e09aa8$exports","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$57ce72c0539154dec2abdc81ffcff6df$exports","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$acd1b863667085614d305475fd6c1d27$exports","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$bffbcd35af658c4477627697774de1c2$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$ac230d10056414a40eb774bd091234f1$exports","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","refreshInterimChain","getTileCoord","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","getPixelRatio","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$e65a38a3837120ad833711b5930f5912$exports","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","u1","v1","u2","v2","closePath","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","refresh","setAttributions","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","templates","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$d4e5f9edec43b2bcf069a8bf770d3efb$export$9099ad97b570f7c","$c965b52f2e69fc1d4b0c393ef9deb65b$export$8626442242d77803","uri","params","keyParams","encodeURIComponent","qs","$58bd396b9060285fad6005243c29b81b$var$WMTSTileGrid","WMTSTileGrid","matrixIds_","matrixIds","$58bd396b9060285fad6005243c29b81b$var$__extends","getMatrixId","getMatrixIds","$58bd396b9060285fad6005243c29b81b$export$363b339ecb1a4a6a","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","$b497ef1ef2831090530aaca58dcfe7d6$export$9099ad97b570f7c","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","matrixSet_","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","$b497ef1ef2831090530aaca58dcfe7d6$var$__extends","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","p","localContext_1","$f1c529d0542d6a8d6fa77a64fa516101$exports","$b497ef1ef2831090530aaca58dcfe7d6$export$d7772025db6228c3","wmtsCap","config","tileMatrixSets","supportedCRS","proj1","proj2","matrixSetObj","projConfig","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","$58bd396b9060285fad6005243c29b81b$exports","createFromCapabilitiesMatrixSet","gets","encodings","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$baa75edefe2b3b39","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","parsersNS","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$9f4902a9a63030514b9927b8f6e5f48d$export$9099ad97b570f7c","XML","read","xml","DOMParser","parseFromString","readFromDocument","readFromNode","ELEMENT_NODE","$2bf679bf05859801cbcee98d3b2de4c0$export$12f0fdf500d0183d","getAttributeNS","$90d80a364a39de433c7f5cd490d4f896$export$1840c252c524643f","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$a61558a2b47ac92427fdad5086cc8e92$var$NAMESPACE_URIS","$a61558a2b47ac92427fdad5086cc8e92$var$PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_IDENTIFICATION_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_PROVIDER_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OPERATIONS_METADATA_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OWS","OWS","$a61558a2b47ac92427fdad5086cc8e92$var$__extends","owsObject","$a61558a2b47ac92427fdad5086cc8e92$var$ADDRESS_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$ALLOWED_VALUES_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$CONSTRAINT_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$CONTACT_INFO_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$PHONE_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$DCP_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$HTTP_PARSERS","href","$a61558a2b47ac92427fdad5086cc8e92$var$REQUEST_METHOD_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OPERATION_PARSERS","getAttribute","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_CONTACT_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$export$9099ad97b570f7c","$930f6ef62b03f1f97c077b9230bede6f$var$NAMESPACE_URIS","$930f6ef62b03f1f97c077b9230bede6f$var$OWS_NAMESPACE_URIS","$930f6ef62b03f1f97c077b9230bede6f$var$PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$CONTENTS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$WMTSCapabilities","WMTSCapabilities","owsParser_","$a61558a2b47ac92427fdad5086cc8e92$exports","$930f6ef62b03f1f97c077b9230bede6f$var$__extends","WMTSCapabilityObject","$930f6ef62b03f1f97c077b9230bede6f$var$LAYER_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$STYLE_PARSERS","isDefault","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LINKS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$DIMENSION_PARSERS","resourceType","resource","$930f6ef62b03f1f97c077b9230bede6f$var$readBoundingBox","legend","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LIMITS_LIST_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LIMITS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$WGS84_BBOX_READERS","$930f6ef62b03f1f97c077b9230bede6f$var$readCoordinates","$930f6ef62b03f1f97c077b9230bede6f$var$TM_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$export$9099ad97b570f7c","$f30078481f7c9587aecacf33ce6e1d2e$export$68f01400ccc4424f","$f30078481f7c9587aecacf33ce6e1d2e$export$75344a049d017de0","$f30078481f7c9587aecacf33ce6e1d2e$export$429e18053503d610","$f30078481f7c9587aecacf33ce6e1d2e$export$83d052ec83b80473","$f30078481f7c9587aecacf33ce6e1d2e$export$c7f832cc9aec8319","$f30078481f7c9587aecacf33ce6e1d2e$export$5d0e041b0fa45977","$f30078481f7c9587aecacf33ce6e1d2e$export$d2f4c255d663a207","$f30078481f7c9587aecacf33ce6e1d2e$export$f8057a1e491a5ca0","$f30078481f7c9587aecacf33ce6e1d2e$export$df723407396f679","$f30078481f7c9587aecacf33ce6e1d2e$export$73c81a6340304450","$7168996476e4a7c14f00ed458edc53b7$export$9099ad97b570f7c","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","$8c7a48b8b5a092df98dbd465bd97fd33$export$9099ad97b570f7c","ft","to_meter","$40a53d14760145a8966d3f264d488472$var$ignoredChar","testkey","lkey","defData","paramName","paramVal","paramOutname","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","$40a53d14760145a8966d3f264d488472$export$9099ad97b570f7c","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","approx","$adc48595fe8c0e2f1f39fa89eb90b8f9$export$9099ad97b570f7c","txt","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$Parser","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$whitespace","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$latin","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$keyword","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$endThings","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$digets","level","place","root","currentObject","$324c9868e2a62613f75d0c809842c327$var$mapit","thing","newObj","$324c9868e2a62613f75d0c809842c327$export$6bb9e1271b655930","convert","readCharicter","char","test","neutral","keyword","quoted","afterquote","number","word","afterItem","newObjects","defs","$41554aeb666b72eb96b6164771363ce5$var$d2r","wkt","lisp","projName","local","PROJECTION","AXIS","axisOrder","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","outName","inName","$41554aeb666b72eb96b6164771363ce5$var$cleanWKT","$a3a72cd78d56ea1f9e95b35dc50798a4$var$defs","that","def","charAt","$6ce14a48753cb82a828da20f56b81924$export$9099ad97b570f7c","$41554aeb666b72eb96b6164771363ce5$export$9099ad97b570f7c","EPSG","ESRI","IAU2000","WGS84","GOOGLE","$a3a72cd78d56ea1f9e95b35dc50798a4$export$9099ad97b570f7c","$87e81b99cc4dbfcb96c155cfc5b9a624$var$codeWords","$87e81b99cc4dbfcb96c155cfc5b9a624$var$codes","$87e81b99cc4dbfcb96c155cfc5b9a624$export$9099ad97b570f7c","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testObj","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testDef","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testWKT","auth","$87e81b99cc4dbfcb96c155cfc5b9a624$var$checkMercator","maybeProjStr","ext","$87e81b99cc4dbfcb96c155cfc5b9a624$var$checkProjStr","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testProj","eccent","sinphi","cosphi","con","$4a094391c4f1afa8705c99950020a18b$export$9099ad97b570f7c","phi","com","ts","dphi","eccnth","$176eadb90eaa06f115c1314c81a90d7e$export$4a8bf0e184696d22","pt","$63e720dc7deb0787b7611be9f1ec3c56$var$projs","init","es","$932ec3ee59963320a6cf0d8a08ccd375$export$9099ad97b570f7c","forward","lon","$ed0fffea80282e9da12724242f69d099$export$9099ad97b570f7c","$9a834318f463b5941b8f1b3329da0a62$export$9099ad97b570f7c","inverse","$d386862fa285a014457283c2bff3d64f$export$9099ad97b570f7c","names","$63e720dc7deb0787b7611be9f1ec3c56$var$names","$63e720dc7deb0787b7611be9f1ec3c56$var$projStore","$63e720dc7deb0787b7611be9f1ec3c56$export$568ed88074851180","$63e720dc7deb0787b7611be9f1ec3c56$export$9099ad97b570f7c","$5bcd47a8a87e861726a7f187f22b29ad$export$9099ad97b570f7c","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","$5bcd47a8a87e861726a7f187f22b29ad$export$54c21b927d128e3a","$c3fc188445238dd8b60da787a2bad3c5$export$9099ad97b570f7c","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","$68bf7ed283ec4c939311e8f56be967db$export$9099ad97b570f7c","ep2","datum_type","grids","$73688848b839884cf6df37f63fc786c8$var$loadedNadgrids","$73688848b839884cf6df37f63fc786c8$var$parseNadgridString","optional","mandatory","grid","isNull","$73688848b839884cf6df37f63fc786c8$var$secondsToRadians","seconds","$73688848b839884cf6df37f63fc786c8$var$decodeString","buffer","$73688848b839884cf6df37f63fc786c8$var$mapNodes","nodes","longitudeShift","latitudeShift","$73688848b839884cf6df37f63fc786c8$var$readGridHeader","isLittleEndian","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","$73688848b839884cf6df37f63fc786c8$var$readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","$216841a79707c288ce3e84a102f2d41f$var$Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","$d3806091fa67412b5547b724e5c59b30$export$30013081b1b09995","ecc","$73688848b839884cf6df37f63fc786c8$export$6a2339afe995e447","datumObj","$ccaaa433450c8119b1382d985fd401d3$export$9099ad97b570f7c","$216841a79707c288ce3e84a102f2d41f$export$9099ad97b570f7c","$ed5d872ed7dcbeca8314543a0a2419fd$export$9a67aa2030612944","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","$ed5d872ed7dcbeca8314543a0a2419fd$export$5b25f68787c76635","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","$b5117cfa9b920f6efe5e13fce02830d9$var$checkParams","$ed5d872ed7dcbeca8314543a0a2419fd$export$e9330dc8aa99723d","source_a","source_es","$b5117cfa9b920f6efe5e13fce02830d9$export$5fdb24ae30554ac7","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","$ed5d872ed7dcbeca8314543a0a2419fd$export$3f16dfc4be774fc","x_tmp","y_tmp","z_tmp","$ed5d872ed7dcbeca8314543a0a2419fd$export$76b0723e9c7efb64","attemptedGrids","subgrid","subgrids","epsilon","del","ll","lim","$b5117cfa9b920f6efe5e13fce02830d9$var$applySubgridShift","pin","ct","tb","$b5117cfa9b920f6efe5e13fce02830d9$var$nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","$f157f8254526d21c658a211712efef6c$var$checkCoord","num","$cc80a90b1d79e777eade521eb31a8570$export$9099ad97b570f7c","$f157f8254526d21c658a211712efef6c$export$9099ad97b570f7c","$ceb7f5089495975e2bc851171e844411$var$checkNotWGS","$ceb7f5089495975e2bc851171e844411$export$9099ad97b570f7c","$05e9c2f96e1b6582561a6b81b835292b$export$9099ad97b570f7c","$b5117cfa9b920f6efe5e13fce02830d9$export$9099ad97b570f7c","$d1ec632f9baf4432cdbdc6873bed2ee9$var$wgs84","$d1ec632f9baf4432cdbdc6873bed2ee9$var$transformer","from","to","transformedArray","concat","$d1ec632f9baf4432cdbdc6873bed2ee9$var$checkProj","oProj","$d1ec632f9baf4432cdbdc6873bed2ee9$export$9099ad97b570f7c","fromProj","toProj","single","$fbedd6cc5501f30dd070310d798a8cff$var$SET_ORIGIN_COLUMN_LETTERS","$fbedd6cc5501f30dd070310d798a8cff$var$SET_ORIGIN_ROW_LETTERS","$fbedd6cc5501f30dd070310d798a8cff$var$A","$fbedd6cc5501f30dd070310d798a8cff$var$I","$fbedd6cc5501f30dd070310d798a8cff$var$O","$fbedd6cc5501f30dd070310d798a8cff$var$V","$fbedd6cc5501f30dd070310d798a8cff$var$Z","$fbedd6cc5501f30dd070310d798a8cff$export$9099ad97b570f7c","$fbedd6cc5501f30dd070310d798a8cff$export$4a8bf0e184696d22","mgrs","bbox","$fbedd6cc5501f30dd070310d798a8cff$var$UTMtoLL","$fbedd6cc5501f30dd070310d798a8cff$var$decode","toUpperCase","bottom","toPoint","$fbedd6cc5501f30dd070310d798a8cff$export$3eafb1fe31c7cfec","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","$fbedd6cc5501f30dd070310d798a8cff$var$get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","$fbedd6cc5501f30dd070310d798a8cff$var$encode","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","$fbedd6cc5501f30dd070310d798a8cff$var$degToRad","LongRad","UTMEasting","UTMNorthing","$fbedd6cc5501f30dd070310d798a8cff$var$getLetterDesignator","$fbedd6cc5501f30dd070310d798a8cff$var$LLtoUTM","deg","$fbedd6cc5501f30dd070310d798a8cff$var$radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","LetterDesignator","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","$fbedd6cc5501f30dd070310d798a8cff$var$getEastingFromChar","north100k","curRow","northingValue","$fbedd6cc5501f30dd070310d798a8cff$var$getNorthingFromChar","$fbedd6cc5501f30dd070310d798a8cff$var$getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","$6aea1226bc5c0e0570cd1e477eae5d36$var$Point","fromMGRS","mgrsStr","toMGRS","$6aea1226bc5c0e0570cd1e477eae5d36$export$9099ad97b570f7c","$88317c131567edd6d7e93aa9a3814009$var$C04","$88317c131567edd6d7e93aa9a3814009$var$C06","$88317c131567edd6d7e93aa9a3814009$var$C08","en","sphi","cphi","arg","$ab778fa3f68fd925ebf6e3a5dcb3cb4d$export$9099ad97b570f7c","$124d973f8c0076eaed63cc5f5c8e8738$export$9099ad97b570f7c","$88317c131567edd6d7e93aa9a3814009$export$9099ad97b570f7c","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","$443cdbd71ac9e6ca2fb8df175523d774$export$9099ad97b570f7c","tan_phi","ds","temp","$62ed1cae08d9d68fb5ae28da309cd997$export$9099ad97b570f7c","$ab6e4146484102ce3baf0a0945a089e4$export$9099ad97b570f7c","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","$69364276f70c71d8d8fe58815692b1ba$export$9099ad97b570f7c","cosh_arg_i","$18671f68d8cb3dd6fba9586ff2996773$export$9099ad97b570f7c","hr","hi1","hr1","hi","$7f450596d612b40a200bdb41b98d511f$export$9099ad97b570f7c","cgb","cbg","utg","gtu","np","Qn","$c7a182bd51e5b929d6248e7bdc9fcdde$export$9099ad97b570f7c","Zb","$6172a34bccef5500c6c1bf310afd5534$export$9099ad97b570f7c","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","$f683469889e5875f2b96b2f62c0154fd$export$9099ad97b570f7c","$0b44fb38ee8aa6deab2d753a2ba9f7cf$export$9099ad97b570f7c","$f5649fd46de755bd9897175d8dd77cba$export$9099ad97b570f7c","$10cc6b2772011624b789bff2d1a2e041$export$9099ad97b570f7c","dependsOn","esinp","$d5f3d4df8c88c5e2e89737176b134b52$export$9099ad97b570f7c","rc","phic0","ratexp","K","$01131ca326da0dced3d9b058e8886391$export$9099ad97b570f7c","$2737452c749166779bd7d3750869bff2$export$9099ad97b570f7c","sinc0","cosc0","R2","sinc","cosc","cosl","rho","$d6dda7165de163aad22c596af0982e25$export$9099ad97b570f7c","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","$a926be4e30b358a7376ae1030c6690b9$export$9099ad97b570f7c","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","$505a4ee3081f3d9956524207f7e09ec6$var$TOL","$505a4ee3081f3d9956524207f7e09ec6$export$9099ad97b570f7c","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","$27631f2081584ee069217bc990a25d8e$export$9099ad97b570f7c","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","$89b2dd6ee4016e9cd9cddd1e40e86d3b$export$9099ad97b570f7c","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","$06c09a46dd3b35a996ae6d6ace8da6e8$export$9099ad97b570f7c","$515891ca5efa3cac3b342dfdcbf7b3d6$export$9099ad97b570f7c","$848a119f600f4cdb0bd102215e74c796$export$9099ad97b570f7c","$467f3de6c47841d97ca970e13d742e8d$export$9099ad97b570f7c","$4bccb50e68620f936d11ae13bf91c005$export$9099ad97b570f7c","$ad2eba81eb24a7cba86e1e35a5a052c8$export$9099ad97b570f7c","lam","nl","$1b1b0aff7de67c57644828e9c5efc72c$export$9099ad97b570f7c","tl","asq","cl","dd","$20c34de771f14d6821f1b9bc45703ec8$export$9099ad97b570f7c","nl1","rl1","tl1","dl","dsq","$dac43b2089e67572d609f1ca92a6d857$export$9099ad97b570f7c","$80afd10529d1f79916b6186530895a67$var$P00","$80afd10529d1f79916b6186530895a67$var$P01","$80afd10529d1f79916b6186530895a67$var$P02","$80afd10529d1f79916b6186530895a67$var$P10","$80afd10529d1f79916b6186530895a67$var$P11","$80afd10529d1f79916b6186530895a67$var$P20","$80afd10529d1f79916b6186530895a67$export$9099ad97b570f7c","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","$7962f85bda3f063bfc67f89a5ebc7c8a$export$9099ad97b570f7c","mmf","apa","APA","$80afd10529d1f79916b6186530895a67$var$authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","beta","cosz","sinz","$f0247b40dd3031aa875882c6b786ad4b$export$9099ad97b570f7c","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","phi1z","$6db5f87f330b70fff6248c18b651c5b3$export$9099ad97b570f7c","eccnts","$b46038560e39f252e945a40a80c715d7$export$9099ad97b570f7c","sin_p14","cos_p14","infinity_dist","coslon","$3d0065c46a689a20dfb3b1c70774d183$export$9099ad97b570f7c","$4440b5085a185af04ed0ddc86055dcdb$export$9099ad97b570f7c","$7f8ecfee59c4b3bcd8020c710ea7327d$export$9099ad97b570f7c","dlat","$5c51a391a92a684b957c22922e743dc6$export$9099ad97b570f7c","bl","tanphi","mln","mlnp","ma","$ce94ccc3ab03fba5b4fe66195b26fd5a$export$9099ad97b570f7c","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","$8bc68b0ce16f4f8ea748b5f4867edd31$export$9099ad97b570f7c","$6b21ab565e0a6d9d280bdc9c80208f7c$export$9099ad97b570f7c","C_y","C_x","$93bb23a7c8db8241ecf775738b257018$export$9099ad97b570f7c","delta_theta","$894b83361352bb26938a0cbb5e31a82f$export$9099ad97b570f7c","ml1","ml2","$df203055fb44912e13550c7a951512b5$export$9099ad97b570f7c","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","$eec40b4f340f510f9f13f0b89197a0f0$export$9099ad97b570f7c","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","$b451dbdae4f64e9722659a2833ba2185$export$9099ad97b570f7c","$77fecbf84a0bef929ee167b237d4890a$var$FACE_ENUM","$77fecbf84a0bef929ee167b237d4890a$var$AREA_ENUM","$77fecbf84a0bef929ee167b237d4890a$var$qsc_fwd_equat_face_theta","$77fecbf84a0bef929ee167b237d4890a$var$qsc_shift_lon_origin","slon","$77fecbf84a0bef929ee167b237d4890a$export$9099ad97b570f7c","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","$c617d7c6ebde25dfc786f22e920f4c63$var$COEFS_X","$c617d7c6ebde25dfc786f22e920f4c63$var$COEFS_Y","$c617d7c6ebde25dfc786f22e920f4c63$var$FXC","$c617d7c6ebde25dfc786f22e920f4c63$var$FYC","$c617d7c6ebde25dfc786f22e920f4c63$var$C1","$c617d7c6ebde25dfc786f22e920f4c63$var$NODES","$c617d7c6ebde25dfc786f22e920f4c63$var$poly3_val","coefs","$c617d7c6ebde25dfc786f22e920f4c63$export$9099ad97b570f7c","f_df","max_err","iters","upd","$c617d7c6ebde25dfc786f22e920f4c63$var$newton_rapshon","$c617d7c6ebde25dfc786f22e920f4c63$var$poly3_der","$3865c2d01885fd2ad7c29cd7fe4dc6dc$export$9099ad97b570f7c","$b1e8b694287e34b75974f5e8177e2c20$var$mode","$b1e8b694287e34b75974f5e8177e2c20$var$params","azi","degrees","tilt","proj4","$b1e8b694287e34b75974f5e8177e2c20$export$9099ad97b570f7c","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","defaultDatum","Proj","nadgrid","DataView","nFields","$73688848b839884cf6df37f63fc786c8$var$detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","$73688848b839884cf6df37f63fc786c8$var$readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","$73688848b839884cf6df37f63fc786c8$var$readSubgrids","$5833441ccf8a9a15a80ba2bb2122c2cd$export$9099ad97b570f7c","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$ff8235042efbfb69f46b35131190fa2b$export$bd9c1867755cf54e","$ff8235042efbfb69f46b35131190fa2b$export$9099ad97b570f7c","OSM","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","decimals","power_1","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$1a6c956f7a172f55a86db631d141a623$var$getObject","$1a6c956f7a172f55a86db631d141a623$export$9099ad97b570f7c","JSONFeature","$1a6c956f7a172f55a86db631d141a623$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","extrapolate","lo","m0","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$5d8566a0c1419db39058842324e9a300$var$readGeometry","$5d8566a0c1419db39058842324e9a300$var$readPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPointGeometry","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiLineStringGeometry","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiPolygonGeometry","$8af1af76f23419d9d724a1b0182ffb00$exports","$5d8566a0c1419db39058842324e9a300$var$readGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$var$writeGeometry","geoJSON","$5d8566a0c1419db39058842324e9a300$var$writePointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeLineStringGeometry","rightHanded","$5d8566a0c1419db39058842324e9a300$var$writePolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPolygonGeometry","geometry1","$5d8566a0c1419db39058842324e9a300$var$writeGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$export$9099ad97b570f7c","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$5d8566a0c1419db39058842324e9a300$var$__extends","geoJSONFeature","$fe05caf5f991aea82bd67c9bebabc467$exports","geoJSONFeatures","objects","$1a6c956f7a172f55a86db631d141a623$exports","$a51010926fccd7fa7fa549e12811b655$exports","r1","_maxEntries","_minEntries","n1","leaf","m2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","f2","_chooseSubtree","m3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","l2","u3","p1","d1","_allDistMargin","define","amd","RBush","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","result_1","executor","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$db9917bd37a7fbaf8170d743457bd325$exports","getBundleURL","projCodes","code1","code2","def1","def2","$aa7b107dd19d79f276cd7ec9eb6b477e$export$357eb1b4f03c1402","$c06b89b23a9fadf20960d1da2b5a90f8$var$layers","$7f639b92eb9591e7aded56644548f656$exports","$ff8235042efbfb69f46b35131190fa2b$exports","$c06b89b23a9fadf20960d1da2b5a90f8$var$parser","$930f6ef62b03f1f97c077b9230bede6f$exports","fetch","$b497ef1ef2831090530aaca58dcfe7d6$exports","optionsFromCapabilities","getFullYear","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$76e99b295c09c7c5e340e251e89879b1$exports","$5d8566a0c1419db39058842324e9a300$exports","$976448907138da16f7612e32ecc55ac7$exports"],"version":3,"file":"reprojection.e6938880.js.map"}