{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1454d3a602ab9c009ba10af943558b77.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/XML.js","node_modules/ol/src/format/XLink.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/format/OWS.js","node_modules/ol/src/format/WMTSCapabilities.js","node_modules/proj4/lib/constants/values.js","node_modules/proj4/lib/constants/PrimeMeridian.js","node_modules/proj4/lib/constants/units.js","node_modules/proj4/lib/match.js","node_modules/proj4/lib/projString.js","node_modules/wkt-parser/parser.js","node_modules/wkt-parser/process.js","node_modules/proj4/lib/global.js","node_modules/wkt-parser/index.js","node_modules/proj4/lib/defs.js","node_modules/proj4/lib/parseCode.js","node_modules/proj4/lib/extend.js","node_modules/proj4/lib/common/msfnz.js","node_modules/proj4/lib/common/sign.js","node_modules/proj4/lib/common/adjust_lon.js","node_modules/proj4/lib/common/tsfnz.js","node_modules/proj4/lib/common/phi2z.js","node_modules/proj4/lib/projections/longlat.js","node_modules/proj4/lib/projections.js","node_modules/proj4/lib/projections/merc.js","node_modules/proj4/lib/constants/Ellipsoid.js","node_modules/proj4/lib/constants/Datum.js","node_modules/proj4/lib/datum.js","node_modules/proj4/lib/nadgrid.js","node_modules/proj4/lib/Proj.js","node_modules/proj4/lib/deriveConstants.js","node_modules/proj4/lib/datumUtils.js","node_modules/proj4/lib/datum_transform.js","node_modules/proj4/lib/adjust_axis.js","node_modules/proj4/lib/common/toPoint.js","node_modules/proj4/lib/checkSanity.js","node_modules/proj4/lib/transform.js","node_modules/proj4/lib/core.js","node_modules/mgrs/mgrs.js","node_modules/proj4/lib/Point.js","node_modules/proj4/lib/common/pj_enfn.js","node_modules/proj4/lib/common/pj_mlfn.js","node_modules/proj4/lib/common/pj_inv_mlfn.js","node_modules/proj4/lib/projections/tmerc.js","node_modules/proj4/lib/common/sinh.js","node_modules/proj4/lib/common/hypot.js","node_modules/proj4/lib/common/asinhy.js","node_modules/proj4/lib/common/log1py.js","node_modules/proj4/lib/common/gatg.js","node_modules/proj4/lib/common/clens_cmplx.js","node_modules/proj4/lib/common/cosh.js","node_modules/proj4/lib/projections/etmerc.js","node_modules/proj4/lib/common/clens.js","node_modules/proj4/lib/projections/utm.js","node_modules/proj4/lib/common/adjust_zone.js","node_modules/proj4/lib/common/srat.js","node_modules/proj4/lib/projections/gauss.js","node_modules/proj4/lib/projections/sterea.js","node_modules/proj4/lib/projections/stere.js","node_modules/proj4/lib/projections/somerc.js","node_modules/proj4/lib/projections/omerc.js","node_modules/proj4/lib/projections/lcc.js","node_modules/proj4/lib/projections/krovak.js","node_modules/proj4/lib/common/mlfn.js","node_modules/proj4/lib/common/e0fn.js","node_modules/proj4/lib/common/e1fn.js","node_modules/proj4/lib/common/e2fn.js","node_modules/proj4/lib/common/e3fn.js","node_modules/proj4/lib/common/gN.js","node_modules/proj4/lib/common/adjust_lat.js","node_modules/proj4/lib/common/imlfn.js","node_modules/proj4/lib/projections/cass.js","node_modules/proj4/lib/common/qsfnz.js","node_modules/proj4/lib/projections/laea.js","node_modules/proj4/lib/common/asinz.js","node_modules/proj4/lib/projections/aea.js","node_modules/proj4/lib/projections/gnom.js","node_modules/proj4/lib/projections/cea.js","node_modules/proj4/lib/common/iqsfnz.js","node_modules/proj4/lib/projections/eqc.js","node_modules/proj4/lib/projections/poly.js","node_modules/proj4/lib/projections/nzmg.js","node_modules/proj4/lib/projections/mill.js","node_modules/proj4/lib/projections/sinu.js","node_modules/proj4/lib/projections/moll.js","node_modules/proj4/lib/projections/eqdc.js","node_modules/proj4/lib/projections/vandg.js","node_modules/proj4/lib/projections/aeqd.js","node_modules/proj4/lib/projections/ortho.js","node_modules/proj4/lib/projections/qsc.js","node_modules/proj4/lib/projections/robin.js","node_modules/proj4/lib/projections/geocent.js","node_modules/proj4/lib/projections/tpers.js","node_modules/proj4/projs.js","node_modules/proj4/lib/index.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","node_modules/@parcel/runtime-js/lib/relative-path.js","node_modules/@parcel/runtime-js/lib/runtime-989800ae9c02d82f19518fb6d467baa5.js","src/reprojection.js","node_modules/ol/src/proj/proj4.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"2okNu\\\":\\\"reprojection.e6938880.js\\\",\\\"2HXi0\\\":\\\"british-isles-counties.fa96f262.geojson\\\",\\\"43PvP\\\":\\\"basemap.fe5b33cb.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} [opt_direction] If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  const matrixSetExtent = matrixSetObj['BoundingBox'];\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    wrapX =\n      wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n      wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n  }\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/XLink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './XLink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readNonNegativeInteger, readString} from './xsd.js';\nimport {readHref} from './XLink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n  'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n  'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = wkt.AXIS[i];\n      var descriptor = axis[0].toLowerCase();\n      if (descriptor.indexOf('north') !== -1) {\n        axisOrder += 'n';\n      } else if (descriptor.indexOf('south') !== -1) {\n        axisOrder += 's';\n      } else if (descriptor.indexOf('east') !== -1) {\n        axisOrder += 'e';\n      } else if (descriptor.indexOf('west') !== -1) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function (coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const img = document.createElement('canvas');\n        img.width = imgSize[0];\n        img.height = imgSize[1];\n        const imgContext = img.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","module.exports = require('./bundle-url').getBundleURL() + require('./relative-path')(\"2okNu\", \"2HXi0\")","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport proj4 from 'proj4';\nimport {OSM, TileImage, TileWMS} from 'ol/source';\nimport {get as getProjection, fromLonLat} from 'ol/proj';\nimport {register} from 'ol/proj/proj4';\n\n\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport counties from 'url:./data/british-isles-counties.geojson';\n\nimport {Stroke, Style} from 'ol/style';\n\nproj4.defs(\n  'EPSG:27700',\n  '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs'\n);\n\nregister(proj4);\n\nvar proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([-650000, -150000, 1350000, 1450000]);\n\nvar layers = {};\n\nlayers['osm'] = new TileLayer({\n  source: new OSM(),\n});\n\nvar parser = new WMTSCapabilities();\n\nlayers['bng'] = new TileLayer();\nvar urlB =\n  'https://tiles.arcgis.com/tiles/qHLhLQrcvEnxjtPr/arcgis/rest/services/OS_Open_Raster/MapServer/WMTS';\nfetch(urlB)\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    var result = parser.read(text);\n    var options = optionsFromCapabilities(result, {\n      layer: 'OS_Open_Raster',\n    });\n    options.attributions =\n      'Contains OS data © Crown Copyright and database right ' +\n      new Date().getFullYear();\n    options.crossOrigin = '';\n    options.projection = 'EPSG:27700';\n    options.wrapX = false;\n    layers['bng'].setSource(new WMTS(options));\n  });\n\nlayers['vector'] = new VectorLayer({\n  source: new VectorSource({\n    url: counties,\n    format: new GeoJSON(),\n    attributions: '<a href=\"https://gist.github.com/duhaime/1d6d5a8dc77c86128fcc1a05a72726c9\">Counties, D. Duhaime</a>', \n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: '#8B0000',\n      width: 1.3,\n    })\n  }),\n});\n\nvar map = new Map({\n  layers: [layers['osm'], layers['bng'], layers['vector']],\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: fromLonLat([0, 54]),\n    zoom: 4,\n  }),\n});","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {assign} from '../obj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = def.units;\n      if (!units && def.projName === 'longlat') {\n        units = Units.DEGREES;\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        const def1 = proj4.defs(code1);\n        const def2 = proj4.defs(code2);\n        if (def1 === def2) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          // Reset axis because OpenLayers always uses x, y axis order\n          const transform = proj4(\n            assign({}, def1, {axis: undefined}),\n            assign({}, def2, {axis: undefined})\n          );\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n"],"names":["$7d806a7a603c235ec027b73d847f4d95$var$mapping","$7d806a7a603c235ec027b73d847f4d95$export$357eb1b4f03c1402","pairs","keys","Object","i","length","$7d806a7a603c235ec027b73d847f4d95$export$40339995e8a21591","id","resolved","Error","parcelRequire","register","JSON","parse","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","arr","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$7ad150f61db3b289","func","value","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$7c21d7646a0313abf7b847efa68bfceb$export$4d0d05f1b8a16b84","index","every","el","idx","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","obj","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$fd652548d0f540d94aaff6aa830746d2$exports","default","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","transform","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","source","mat","det","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","join","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","ii","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","slice","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","r","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","color","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","indexOf","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","undefined","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","get","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","values","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","splice","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","changed","getRevision","on","len","once","ol_key","un","$99fe3f3343ef18166bd431edc467d890$exports","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$02e80757fefec0a9636ae28d17c9fab2$exports","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$exports","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","layerState","viewState","zoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$3a8294651627eb74246351f5b596cf68$exports","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$1935b85c22cfc539ea58e141ab0b37d6$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","defineProperty","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","node","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","event_1","$1a95b8d63eeb9d5cd5e2742791ea7ab2$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","getDataAtPixel","$52488a0195cf0e38344877f5a3896831$exports","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$e6a59fbd122f687b33c2f382a3c7634b$exports","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","getEventPixel","getCoordinateFromPixel","$f8e1a00fe597e09d283a3697649a8ad5$exports","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","$5185059e8a82c1ae03c4e1ba7159b318$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","destination","sourceCode","destinationCode","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$d0db892835f4be10","coordTransform","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$524e9c84a4c58bd58490804da4c772c6$export$adc1225342deb6c0","sourceProj","destProj","coord","transformed","sourceX","sourceY","sourceExtent","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$7d5079714e2786ec6bee07910f0d8a86$exports","PROJECTIONS","$655738a66489cc3574c072262645bff6$exports","fromEPSG4326","toEPSG4326","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","layout","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$a17c336463d573a615343832f6e09aa8$exports","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","simplifiedEnds","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","getArea","$57ce72c0539154dec2abdc81ffcff6df$exports","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$acd1b863667085614d305475fd6c1d27$exports","getLinearRingCount","getLinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$exports","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$bffbcd35af658c4477627697774de1c2$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$d66bdf9af75d90254b022f9a4b768a43$exports","view","$19fadbefe1b7e34cc76223b5c3e441cc$exports","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$6bfe069e85349c527971d875462feeac$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$75ed2fc91ec6cb8478583ef358a9dd4d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8316c877d328ebfc4f4b917229eec057$exports","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","active","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$1ad0cf5090e3852174414bfc8cc27b9e$exports","zoomByDelta","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","centroid","$0714aed143b912743afff175db44c1dc$exports","update","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$d0055a036577a61fd8306330947568c7$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","mapExtent","boxPixelExtent","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","$275b26378704892d776581791f32dc0e$exports","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","Map1","$9812beea87bdcda9027d52b89085c87c$exports","zoomOptions","$aef56543978371a8090d728a4f107ac0$exports","rotateOptions","attribution","$194d017bd833b991c2c712fa2ff5b0e5$exports","attributionOptions","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","altShiftDragRotate","$719e5208cd50905e41bacbcae2219883$exports","doubleClickZoom","$4eeedd039b7e6d5b8277b175715f9541$exports","zoomDelta","zoomDuration","dragPan","$959ec1b544453a9fa4f0e9221c3bb0b0$exports","pinchRotate","$74b3a0ab43d5d3c47ed1a15cedc99f6a$exports","pinchZoom","$601b81cfcc535d77832cc96f04e942a1$exports","keyboard","$bcd9d2d6fd38b8643ae7b7b6fd22a911$exports","$55ea853e77e2fe25fa1a8793cb31a3bf$exports","mouseWheelZoom","$f7a99b9e7b1a72242a3eb408b28d3563$exports","shiftDragZoom","$b5cd6c68e27395a36aa4c8d3c5395250$exports","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","$976448907138da16f7612e32ecc55ac7$var$__extends","$2ae21f590be041e7827bf48426c0766a$exports","$b198bbb8a7fca092de94dd3a772c1343$exports","$013ee184ddda363412ada1e10e95871e$export$9099ad97b570f7c","$ab70eb0a0a56b112261264db1ea7acab$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","getPreload","getUseInterimTilesOnError","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$ac230d10056414a40eb774bd091234f1$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ae15ed96a99c1303ea67938747c94fca$exports","$6a958d3d10a45fbc13d601def6cb4731$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$ea8082d0226d35a5","$6a958d3d10a45fbc13d601def6cb4731$export$9099ad97b570f7c","$21101e8f6691f861098a74ca233ba3e1$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$21101e8f6691f861098a74ca233ba3e1$var$__extends","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$ac230d10056414a40eb774bd091234f1$exports","$21101e8f6691f861098a74ca233ba3e1$export$9099ad97b570f7c","$7f639b92eb9591e7aded56644548f656$export$9099ad97b570f7c","TileLayer","$7f639b92eb9591e7aded56644548f656$var$__extends","$21101e8f6691f861098a74ca233ba3e1$exports","$ab70eb0a0a56b112261264db1ea7acab$exports","$6ea2e09c0ee686e4fcf344e90f929221$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","release","refreshInterimChain","getTileCoord","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","getPixelRatio","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$e65a38a3837120ad833711b5930f5912$exports","$69031f3b45b1bb2d223c45e6bbe47b36$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$2fc4e1887f4ffa14e16ea647fd21482c$exports","listenImage","$6ea2e09c0ee686e4fcf344e90f929221$exports","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","u1","v1","u2","v2","closePath","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$97e37be8733b1927a1ed959b854a8d18$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7e4c33869bbc09ad771e58efcd7791e2$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$97e37be8733b1927a1ed959b854a8d18$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$ea8082d0226d35a5","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$1039fb0288fd71e3","$c98d704946f2a3a0e1335bd43bccb465$export$a0f0ccbe5bbc0789","$8328c42c04c9adada69111ec662476d9$export$9099ad97b570f7c","TileCache","$8328c42c04c9adada69111ec662476d9$var$__extends","pruneExceptNewestZ","$c98d704946f2a3a0e1335bd43bccb465$export$5208a752d34424e5","$6fb7cf65abcfc8d879372ec2dca0d0b8$export$9099ad97b570f7c","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","refresh","setAttributions","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$9099ad97b570f7c","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$57c49ef1657592d4","$0b7f50deff6bfc90c8b239d5ceca7010$export$9666e825b22d806d","$0b7f50deff6bfc90c8b239d5ceca7010$export$6dfef52f91d4f582","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$8328c42c04c9adada69111ec662476d9$exports","tmpSize","tileOptions","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$0b7f50deff6bfc90c8b239d5ceca7010$export$5a0d9577a24f3c5b","$c98d704946f2a3a0e1335bd43bccb465$export$b46b80619528d4e5","$6a9611a0560ac769e67fadc6cfef9a2c$exports","$cde35ab3df9629f8ffd26ea2f187b41e$export$8434c8db61edbf9d","TileSourceEvent","$cde35ab3df9629f8ffd26ea2f187b41e$export$9099ad97b570f7c","$f3b33fdefe65058178a4b532c7b3f14b$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$c6a04e0c49b28953","tileUrlFunctions","$c98d704946f2a3a0e1335bd43bccb465$export$4639c7f2947f4458","$f3b33fdefe65058178a4b532c7b3f14b$export$47abe479fba0e55d","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","$671acdd0ca89710db49a7e8e41335e8e$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$cde35ab3df9629f8ffd26ea2f187b41e$exports","setTileLoadFunction","setTileUrlFunction","templates","$f3b33fdefe65058178a4b532c7b3f14b$export$2d2faeb2e9d58b93","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","imageTile","$f1c529d0542d6a8d6fa77a64fa516101$export$9099ad97b570f7c","TileImage","tileClass","$69031f3b45b1bb2d223c45e6bbe47b36$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$97e37be8733b1927a1ed959b854a8d18$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$671acdd0ca89710db49a7e8e41335e8e$exports","$d4e5f9edec43b2bcf069a8bf770d3efb$export$9099ad97b570f7c","$c965b52f2e69fc1d4b0c393ef9deb65b$export$8626442242d77803","uri","params","keyParams","encodeURIComponent","qs","$58bd396b9060285fad6005243c29b81b$var$WMTSTileGrid","WMTSTileGrid","matrixIds_","matrixIds","$58bd396b9060285fad6005243c29b81b$var$__extends","getMatrixId","getMatrixIds","$58bd396b9060285fad6005243c29b81b$export$363b339ecb1a4a6a","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","$b497ef1ef2831090530aaca58dcfe7d6$export$9099ad97b570f7c","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","matrixSet_","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","$b497ef1ef2831090530aaca58dcfe7d6$var$__extends","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","p","localContext_1","$f1c529d0542d6a8d6fa77a64fa516101$exports","$b497ef1ef2831090530aaca58dcfe7d6$export$d7772025db6228c3","wmtsCap","config","tileMatrixSets","supportedCRS","proj1","proj2","matrixSetObj","projConfig","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","$58bd396b9060285fad6005243c29b81b$exports","createFromCapabilitiesMatrixSet","gets","encodings","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$baa75edefe2b3b39","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","parsersNS","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$9f4902a9a63030514b9927b8f6e5f48d$export$9099ad97b570f7c","XML","read","xml","DOMParser","parseFromString","readFromDocument","readFromNode","ELEMENT_NODE","$6dbb4c945d9ba56f036ad1ec33dc2776$export$12f0fdf500d0183d","getAttributeNS","$90d80a364a39de433c7f5cd490d4f896$export$1840c252c524643f","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$a61558a2b47ac92427fdad5086cc8e92$var$NAMESPACE_URIS","$a61558a2b47ac92427fdad5086cc8e92$var$PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_IDENTIFICATION_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_PROVIDER_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OPERATIONS_METADATA_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OWS","OWS","$a61558a2b47ac92427fdad5086cc8e92$var$__extends","owsObject","$a61558a2b47ac92427fdad5086cc8e92$var$ADDRESS_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$ALLOWED_VALUES_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$CONSTRAINT_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$CONTACT_INFO_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$PHONE_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$DCP_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$HTTP_PARSERS","href","$a61558a2b47ac92427fdad5086cc8e92$var$REQUEST_METHOD_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$var$OPERATION_PARSERS","getAttribute","$a61558a2b47ac92427fdad5086cc8e92$var$SERVICE_CONTACT_PARSERS","$a61558a2b47ac92427fdad5086cc8e92$export$9099ad97b570f7c","$930f6ef62b03f1f97c077b9230bede6f$var$NAMESPACE_URIS","$930f6ef62b03f1f97c077b9230bede6f$var$OWS_NAMESPACE_URIS","$930f6ef62b03f1f97c077b9230bede6f$var$PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$CONTENTS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$WMTSCapabilities","WMTSCapabilities","owsParser_","$a61558a2b47ac92427fdad5086cc8e92$exports","$930f6ef62b03f1f97c077b9230bede6f$var$__extends","WMTSCapabilityObject","$930f6ef62b03f1f97c077b9230bede6f$var$LAYER_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$STYLE_PARSERS","isDefault","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LINKS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$DIMENSION_PARSERS","resourceType","resource","$930f6ef62b03f1f97c077b9230bede6f$var$readBoundingBox","legend","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LIMITS_LIST_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$TMS_LIMITS_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$var$WGS84_BBOX_READERS","$930f6ef62b03f1f97c077b9230bede6f$var$readCoordinates","$930f6ef62b03f1f97c077b9230bede6f$var$TM_PARSERS","$930f6ef62b03f1f97c077b9230bede6f$export$9099ad97b570f7c","$f30078481f7c9587aecacf33ce6e1d2e$export$68f01400ccc4424f","$f30078481f7c9587aecacf33ce6e1d2e$export$75344a049d017de0","$f30078481f7c9587aecacf33ce6e1d2e$export$429e18053503d610","$f30078481f7c9587aecacf33ce6e1d2e$export$83d052ec83b80473","$f30078481f7c9587aecacf33ce6e1d2e$export$c7f832cc9aec8319","$f30078481f7c9587aecacf33ce6e1d2e$export$5d0e041b0fa45977","$f30078481f7c9587aecacf33ce6e1d2e$export$d2f4c255d663a207","$f30078481f7c9587aecacf33ce6e1d2e$export$f8057a1e491a5ca0","$f30078481f7c9587aecacf33ce6e1d2e$export$df723407396f679","$f30078481f7c9587aecacf33ce6e1d2e$export$73c81a6340304450","$7168996476e4a7c14f00ed458edc53b7$export$9099ad97b570f7c","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","$8c7a48b8b5a092df98dbd465bd97fd33$export$9099ad97b570f7c","ft","to_meter","$40a53d14760145a8966d3f264d488472$var$ignoredChar","testkey","lkey","defData","paramName","paramVal","paramOutname","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","$40a53d14760145a8966d3f264d488472$export$9099ad97b570f7c","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","approx","$adc48595fe8c0e2f1f39fa89eb90b8f9$export$9099ad97b570f7c","txt","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$Parser","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$whitespace","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$latin","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$keyword","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$endThings","$adc48595fe8c0e2f1f39fa89eb90b8f9$var$digets","level","place","root","currentObject","$324c9868e2a62613f75d0c809842c327$var$mapit","thing","newObj","$324c9868e2a62613f75d0c809842c327$export$6bb9e1271b655930","convert","readCharicter","char","test","neutral","keyword","quoted","afterquote","number","word","afterItem","newObjects","defs","$41554aeb666b72eb96b6164771363ce5$var$d2r","wkt","lisp","projName","local","PROJECTION","AXIS","axisOrder","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","outName","inName","$41554aeb666b72eb96b6164771363ce5$var$cleanWKT","$a3a72cd78d56ea1f9e95b35dc50798a4$var$defs","that","def","charAt","$6ce14a48753cb82a828da20f56b81924$export$9099ad97b570f7c","$41554aeb666b72eb96b6164771363ce5$export$9099ad97b570f7c","EPSG","ESRI","IAU2000","WGS84","GOOGLE","$a3a72cd78d56ea1f9e95b35dc50798a4$export$9099ad97b570f7c","$87e81b99cc4dbfcb96c155cfc5b9a624$var$codeWords","$87e81b99cc4dbfcb96c155cfc5b9a624$var$codes","$87e81b99cc4dbfcb96c155cfc5b9a624$export$9099ad97b570f7c","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testObj","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testDef","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testWKT","auth","$87e81b99cc4dbfcb96c155cfc5b9a624$var$checkMercator","maybeProjStr","ext","$87e81b99cc4dbfcb96c155cfc5b9a624$var$checkProjStr","$87e81b99cc4dbfcb96c155cfc5b9a624$var$testProj","eccent","sinphi","cosphi","con","$4a094391c4f1afa8705c99950020a18b$export$9099ad97b570f7c","phi","com","ts","dphi","eccnth","$176eadb90eaa06f115c1314c81a90d7e$export$4a8bf0e184696d22","pt","$63e720dc7deb0787b7611be9f1ec3c56$var$projs","init","es","$932ec3ee59963320a6cf0d8a08ccd375$export$9099ad97b570f7c","forward","lon","$ed0fffea80282e9da12724242f69d099$export$9099ad97b570f7c","$9a834318f463b5941b8f1b3329da0a62$export$9099ad97b570f7c","inverse","$d386862fa285a014457283c2bff3d64f$export$9099ad97b570f7c","names","$63e720dc7deb0787b7611be9f1ec3c56$var$names","$63e720dc7deb0787b7611be9f1ec3c56$var$projStore","$63e720dc7deb0787b7611be9f1ec3c56$export$568ed88074851180","$63e720dc7deb0787b7611be9f1ec3c56$export$9099ad97b570f7c","$5bcd47a8a87e861726a7f187f22b29ad$export$9099ad97b570f7c","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","$5bcd47a8a87e861726a7f187f22b29ad$export$54c21b927d128e3a","$c3fc188445238dd8b60da787a2bad3c5$export$9099ad97b570f7c","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","$68bf7ed283ec4c939311e8f56be967db$export$9099ad97b570f7c","ep2","datum_type","grids","$73688848b839884cf6df37f63fc786c8$var$loadedNadgrids","$73688848b839884cf6df37f63fc786c8$var$parseNadgridString","optional","mandatory","grid","isNull","$73688848b839884cf6df37f63fc786c8$var$secondsToRadians","seconds","$73688848b839884cf6df37f63fc786c8$var$decodeString","buffer","$73688848b839884cf6df37f63fc786c8$var$mapNodes","nodes","longitudeShift","latitudeShift","$73688848b839884cf6df37f63fc786c8$var$readGridHeader","isLittleEndian","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","$73688848b839884cf6df37f63fc786c8$var$readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","$216841a79707c288ce3e84a102f2d41f$var$Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","$d3806091fa67412b5547b724e5c59b30$export$30013081b1b09995","ecc","$73688848b839884cf6df37f63fc786c8$export$6a2339afe995e447","datumObj","$ccaaa433450c8119b1382d985fd401d3$export$9099ad97b570f7c","$216841a79707c288ce3e84a102f2d41f$export$9099ad97b570f7c","$ed5d872ed7dcbeca8314543a0a2419fd$export$9a67aa2030612944","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","$ed5d872ed7dcbeca8314543a0a2419fd$export$5b25f68787c76635","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","$b5117cfa9b920f6efe5e13fce02830d9$var$checkParams","$ed5d872ed7dcbeca8314543a0a2419fd$export$e9330dc8aa99723d","source_a","source_es","$b5117cfa9b920f6efe5e13fce02830d9$export$5fdb24ae30554ac7","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","$ed5d872ed7dcbeca8314543a0a2419fd$export$3f16dfc4be774fc","x_tmp","y_tmp","z_tmp","$ed5d872ed7dcbeca8314543a0a2419fd$export$76b0723e9c7efb64","attemptedGrids","subgrid","subgrids","epsilon","del","ll","lim","$b5117cfa9b920f6efe5e13fce02830d9$var$applySubgridShift","pin","ct","tb","$b5117cfa9b920f6efe5e13fce02830d9$var$nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","$f157f8254526d21c658a211712efef6c$var$checkCoord","num","$cc80a90b1d79e777eade521eb31a8570$export$9099ad97b570f7c","$f157f8254526d21c658a211712efef6c$export$9099ad97b570f7c","$ceb7f5089495975e2bc851171e844411$var$checkNotWGS","$ceb7f5089495975e2bc851171e844411$export$9099ad97b570f7c","$05e9c2f96e1b6582561a6b81b835292b$export$9099ad97b570f7c","$b5117cfa9b920f6efe5e13fce02830d9$export$9099ad97b570f7c","$d1ec632f9baf4432cdbdc6873bed2ee9$var$wgs84","$d1ec632f9baf4432cdbdc6873bed2ee9$var$transformer","from","to","transformedArray","concat","$d1ec632f9baf4432cdbdc6873bed2ee9$var$checkProj","oProj","$d1ec632f9baf4432cdbdc6873bed2ee9$export$9099ad97b570f7c","fromProj","toProj","single","$fbedd6cc5501f30dd070310d798a8cff$var$SET_ORIGIN_COLUMN_LETTERS","$fbedd6cc5501f30dd070310d798a8cff$var$SET_ORIGIN_ROW_LETTERS","$fbedd6cc5501f30dd070310d798a8cff$var$A","$fbedd6cc5501f30dd070310d798a8cff$var$I","$fbedd6cc5501f30dd070310d798a8cff$var$O","$fbedd6cc5501f30dd070310d798a8cff$var$V","$fbedd6cc5501f30dd070310d798a8cff$var$Z","$fbedd6cc5501f30dd070310d798a8cff$export$9099ad97b570f7c","$fbedd6cc5501f30dd070310d798a8cff$export$4a8bf0e184696d22","mgrs","bbox","$fbedd6cc5501f30dd070310d798a8cff$var$UTMtoLL","$fbedd6cc5501f30dd070310d798a8cff$var$decode","toUpperCase","bottom","toPoint","$fbedd6cc5501f30dd070310d798a8cff$export$3eafb1fe31c7cfec","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","$fbedd6cc5501f30dd070310d798a8cff$var$get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","$fbedd6cc5501f30dd070310d798a8cff$var$encode","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","$fbedd6cc5501f30dd070310d798a8cff$var$degToRad","LongRad","UTMEasting","UTMNorthing","$fbedd6cc5501f30dd070310d798a8cff$var$getLetterDesignator","$fbedd6cc5501f30dd070310d798a8cff$var$LLtoUTM","deg","$fbedd6cc5501f30dd070310d798a8cff$var$radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","LetterDesignator","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","$fbedd6cc5501f30dd070310d798a8cff$var$getEastingFromChar","north100k","curRow","northingValue","$fbedd6cc5501f30dd070310d798a8cff$var$getNorthingFromChar","$fbedd6cc5501f30dd070310d798a8cff$var$getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","$6aea1226bc5c0e0570cd1e477eae5d36$var$Point","fromMGRS","mgrsStr","toMGRS","$6aea1226bc5c0e0570cd1e477eae5d36$export$9099ad97b570f7c","$88317c131567edd6d7e93aa9a3814009$var$C04","$88317c131567edd6d7e93aa9a3814009$var$C06","$88317c131567edd6d7e93aa9a3814009$var$C08","en","sphi","cphi","arg","$ab778fa3f68fd925ebf6e3a5dcb3cb4d$export$9099ad97b570f7c","$124d973f8c0076eaed63cc5f5c8e8738$export$9099ad97b570f7c","$88317c131567edd6d7e93aa9a3814009$export$9099ad97b570f7c","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","$443cdbd71ac9e6ca2fb8df175523d774$export$9099ad97b570f7c","tan_phi","ds","temp","$62ed1cae08d9d68fb5ae28da309cd997$export$9099ad97b570f7c","$ab6e4146484102ce3baf0a0945a089e4$export$9099ad97b570f7c","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","$69364276f70c71d8d8fe58815692b1ba$export$9099ad97b570f7c","cosh_arg_i","$18671f68d8cb3dd6fba9586ff2996773$export$9099ad97b570f7c","hr","hi1","hr1","hi","$7f450596d612b40a200bdb41b98d511f$export$9099ad97b570f7c","cgb","cbg","utg","gtu","np","Qn","$c7a182bd51e5b929d6248e7bdc9fcdde$export$9099ad97b570f7c","Zb","$6172a34bccef5500c6c1bf310afd5534$export$9099ad97b570f7c","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","$f683469889e5875f2b96b2f62c0154fd$export$9099ad97b570f7c","$0b44fb38ee8aa6deab2d753a2ba9f7cf$export$9099ad97b570f7c","$f5649fd46de755bd9897175d8dd77cba$export$9099ad97b570f7c","$10cc6b2772011624b789bff2d1a2e041$export$9099ad97b570f7c","dependsOn","esinp","$d5f3d4df8c88c5e2e89737176b134b52$export$9099ad97b570f7c","rc","phic0","ratexp","K","$01131ca326da0dced3d9b058e8886391$export$9099ad97b570f7c","$2737452c749166779bd7d3750869bff2$export$9099ad97b570f7c","sinc0","cosc0","R2","sinc","cosc","cosl","rho","$d6dda7165de163aad22c596af0982e25$export$9099ad97b570f7c","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","$a926be4e30b358a7376ae1030c6690b9$export$9099ad97b570f7c","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","$505a4ee3081f3d9956524207f7e09ec6$var$TOL","$505a4ee3081f3d9956524207f7e09ec6$export$9099ad97b570f7c","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","$27631f2081584ee069217bc990a25d8e$export$9099ad97b570f7c","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","$89b2dd6ee4016e9cd9cddd1e40e86d3b$export$9099ad97b570f7c","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","$06c09a46dd3b35a996ae6d6ace8da6e8$export$9099ad97b570f7c","$515891ca5efa3cac3b342dfdcbf7b3d6$export$9099ad97b570f7c","$848a119f600f4cdb0bd102215e74c796$export$9099ad97b570f7c","$467f3de6c47841d97ca970e13d742e8d$export$9099ad97b570f7c","$4bccb50e68620f936d11ae13bf91c005$export$9099ad97b570f7c","$ad2eba81eb24a7cba86e1e35a5a052c8$export$9099ad97b570f7c","lam","nl","$1b1b0aff7de67c57644828e9c5efc72c$export$9099ad97b570f7c","tl","asq","cl","dd","$20c34de771f14d6821f1b9bc45703ec8$export$9099ad97b570f7c","nl1","rl1","tl1","dl","dsq","$dac43b2089e67572d609f1ca92a6d857$export$9099ad97b570f7c","$80afd10529d1f79916b6186530895a67$var$P00","$80afd10529d1f79916b6186530895a67$var$P01","$80afd10529d1f79916b6186530895a67$var$P02","$80afd10529d1f79916b6186530895a67$var$P10","$80afd10529d1f79916b6186530895a67$var$P11","$80afd10529d1f79916b6186530895a67$var$P20","$80afd10529d1f79916b6186530895a67$export$9099ad97b570f7c","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","$7962f85bda3f063bfc67f89a5ebc7c8a$export$9099ad97b570f7c","mmf","apa","APA","$80afd10529d1f79916b6186530895a67$var$authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","beta","cosz","sinz","$f0247b40dd3031aa875882c6b786ad4b$export$9099ad97b570f7c","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","phi1z","$6db5f87f330b70fff6248c18b651c5b3$export$9099ad97b570f7c","eccnts","$b46038560e39f252e945a40a80c715d7$export$9099ad97b570f7c","sin_p14","cos_p14","infinity_dist","coslon","$3d0065c46a689a20dfb3b1c70774d183$export$9099ad97b570f7c","$4440b5085a185af04ed0ddc86055dcdb$export$9099ad97b570f7c","$7f8ecfee59c4b3bcd8020c710ea7327d$export$9099ad97b570f7c","dlat","$5c51a391a92a684b957c22922e743dc6$export$9099ad97b570f7c","bl","tanphi","mln","mlnp","ma","$ce94ccc3ab03fba5b4fe66195b26fd5a$export$9099ad97b570f7c","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","$8bc68b0ce16f4f8ea748b5f4867edd31$export$9099ad97b570f7c","$6b21ab565e0a6d9d280bdc9c80208f7c$export$9099ad97b570f7c","C_y","C_x","$93bb23a7c8db8241ecf775738b257018$export$9099ad97b570f7c","delta_theta","$894b83361352bb26938a0cbb5e31a82f$export$9099ad97b570f7c","ml1","ml2","$df203055fb44912e13550c7a951512b5$export$9099ad97b570f7c","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","$eec40b4f340f510f9f13f0b89197a0f0$export$9099ad97b570f7c","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","$b451dbdae4f64e9722659a2833ba2185$export$9099ad97b570f7c","$77fecbf84a0bef929ee167b237d4890a$var$FACE_ENUM","$77fecbf84a0bef929ee167b237d4890a$var$AREA_ENUM","$77fecbf84a0bef929ee167b237d4890a$var$qsc_fwd_equat_face_theta","$77fecbf84a0bef929ee167b237d4890a$var$qsc_shift_lon_origin","slon","$77fecbf84a0bef929ee167b237d4890a$export$9099ad97b570f7c","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","$c617d7c6ebde25dfc786f22e920f4c63$var$COEFS_X","$c617d7c6ebde25dfc786f22e920f4c63$var$COEFS_Y","$c617d7c6ebde25dfc786f22e920f4c63$var$FXC","$c617d7c6ebde25dfc786f22e920f4c63$var$FYC","$c617d7c6ebde25dfc786f22e920f4c63$var$C1","$c617d7c6ebde25dfc786f22e920f4c63$var$NODES","$c617d7c6ebde25dfc786f22e920f4c63$var$poly3_val","coefs","$c617d7c6ebde25dfc786f22e920f4c63$export$9099ad97b570f7c","f_df","max_err","iters","upd","$c617d7c6ebde25dfc786f22e920f4c63$var$newton_rapshon","$c617d7c6ebde25dfc786f22e920f4c63$var$poly3_der","$3865c2d01885fd2ad7c29cd7fe4dc6dc$export$9099ad97b570f7c","$b1e8b694287e34b75974f5e8177e2c20$var$mode","$b1e8b694287e34b75974f5e8177e2c20$var$params","azi","degrees","tilt","proj4","$b1e8b694287e34b75974f5e8177e2c20$export$9099ad97b570f7c","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","defaultDatum","Proj","nadgrid","DataView","nFields","$73688848b839884cf6df37f63fc786c8$var$detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","$73688848b839884cf6df37f63fc786c8$var$readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","$73688848b839884cf6df37f63fc786c8$var$readSubgrids","$5833441ccf8a9a15a80ba2bb2122c2cd$export$9099ad97b570f7c","$fd3ab3577c0c67d5f04f77f7494fe563$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$0b7f50deff6bfc90c8b239d5ceca7010$export$5731532c605ee56","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$ff8235042efbfb69f46b35131190fa2b$export$bd9c1867755cf54e","$ff8235042efbfb69f46b35131190fa2b$export$9099ad97b570f7c","OSM","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$exports","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","styles_1","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","geometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","decimals","power_1","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$1a6c956f7a172f55a86db631d141a623$var$getObject","$1a6c956f7a172f55a86db631d141a623$export$9099ad97b570f7c","JSONFeature","$1a6c956f7a172f55a86db631d141a623$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","extrapolate","lo","m0","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","getLineString","$f3208b74dbadea817236410092d4ed69$exports","getLineStrings","getFlatMidpoints","midpoints","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$0c87ec0f12a2b62262bf5859757b8a2b$export$9099ad97b570f7c","MultiPoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$3f89ce735a32ce0bc16220a89ae67b2f$export$9099ad97b570f7c","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","appendPolygon","newEndss","multiPolygon","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$8080d3a1460a7f67662c4a8e92d86a37$export$3ed76a8ff8a671c","interiorPoints","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","getInteriorPoints","$0c87ec0f12a2b62262bf5859757b8a2b$exports","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","simplifiedEndss","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","lastEnds","$5d8566a0c1419db39058842324e9a300$var$readGeometry","$5d8566a0c1419db39058842324e9a300$var$readPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPointGeometry","$9cc45ed4bf6c6f99d7b74c7015645e2b$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiLineStringGeometry","$3f89ce735a32ce0bc16220a89ae67b2f$exports","$5d8566a0c1419db39058842324e9a300$var$readMultiPolygonGeometry","$8af1af76f23419d9d724a1b0182ffb00$exports","$5d8566a0c1419db39058842324e9a300$var$readGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$var$writeGeometry","geoJSON","$5d8566a0c1419db39058842324e9a300$var$writePointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeLineStringGeometry","rightHanded","$5d8566a0c1419db39058842324e9a300$var$writePolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPolygonGeometry","geometry1","$5d8566a0c1419db39058842324e9a300$var$writeGeometryCollectionGeometry","$5d8566a0c1419db39058842324e9a300$export$9099ad97b570f7c","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$5d8566a0c1419db39058842324e9a300$var$__extends","geoJSONFeature","$fe05caf5f991aea82bd67c9bebabc467$exports","geoJSONFeatures","objects","$1a6c956f7a172f55a86db631d141a623$exports","$a51010926fccd7fa7fa549e12811b655$exports","r1","_maxEntries","_minEntries","n1","leaf","m2","o1","all","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","f2","_chooseSubtree","m3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","l2","u3","p1","d1","_allDistMargin","define","amd","RBush","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","hitDetectionCanvas_","fill_","fill","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getFill","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","$19d3c8bef588e205c4ab8014047de833$var$__extends","setRadius","$9395bcf7fa5c622dff9d678b4abf4bba$exports","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$19d3c8bef588e205c4ab8014047de833$exports","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$ca67e4c506ae561bc3174e981b55d257$exports","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","featureCallback","imageData","result_1","executor","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","imageState_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$92a5ba3fab046f40ee35c464c4cf79b4$exports","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","setAnchor","iconImageSize","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","clipped","transforms","$9f8df4495769241e9ec70201b90e0eaa$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4de6336f82b6fd9bc7cf688bb41b8b96$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","resultFeatures","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$c2243072b6513ba407326b2a30b1374a$exports","$ceed79ad4f0d8f0ebaf810c3cca30983$exports","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","addFeatures","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$634f916bc30b7d6650877f3f4b6a8b3a$var$bundleURL","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBaseURL","$634f916bc30b7d6650877f3f4b6a8b3a$export$da289beea9c5b10d","$634f916bc30b7d6650877f3f4b6a8b3a$var$getBundleURL","$824bc590bf0a3702ac7bd27152cb0639$var$dirname","_filePath","filePath","slashIndex","$824bc590bf0a3702ac7bd27152cb0639$var$relative","fromParts","divergeIndex","toParts","module","exports","fromId","toId","$824bc590bf0a3702ac7bd27152cb0639$require$resolve","_dirname","_relative","$db9917bd37a7fbaf8170d743457bd325$exports","getBundleURL","projCodes","code1","code2","def1","def2","$aa7b107dd19d79f276cd7ec9eb6b477e$export$357eb1b4f03c1402","$c06b89b23a9fadf20960d1da2b5a90f8$var$layers","$7f639b92eb9591e7aded56644548f656$exports","$ff8235042efbfb69f46b35131190fa2b$exports","$c06b89b23a9fadf20960d1da2b5a90f8$var$parser","$930f6ef62b03f1f97c077b9230bede6f$exports","fetch","$b497ef1ef2831090530aaca58dcfe7d6$exports","optionsFromCapabilities","getFullYear","$2f5ed0ce65ecb2bfe439d05296b3d36a$exports","$76e99b295c09c7c5e340e251e89879b1$exports","$5d8566a0c1419db39058842324e9a300$exports","$976448907138da16f7612e32ecc55ac7$exports"],"version":3,"file":"reprojection.e6938880.js.map"}