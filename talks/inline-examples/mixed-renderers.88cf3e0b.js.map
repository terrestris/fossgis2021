{"mappings":"+sCA+EAA,EAvBA,SAAAC,GAGK,SACHC,EAAYC,UACVA,EAAUC,EAAAC,OAAM,GAAKF,IACRG,WACXH,EAAQG,SAAWC,EAAAC,YAEhBL,EAAQM,eACXN,EAAQM,aAAeC,EAAAF,SAAmB,CACxCG,aAAa,KAIjBV,EAAAW,KAAAC,KAAMV,IAAOU,YAfCC,EAAAZ,EAAAD,GAkBhBC,EAAAa,UAAAC,eAAc,sBACDC,EAAAC,QAAoBL,OAEnCX,EArBA,CAAkBiB,EAAAD,gqBC0IlBE,EA/KA,SAAAnB,GAGK,SACHoB,EAAYC,OAAZC,EACEtB,EAAAW,KAAAC,KAAMS,IAAGT,KAKTU,EAAKC,uBAAyBC,EAAAC,OAC5BC,EAAAC,aACAC,EAAAX,QAAgBY,eAChBR,EAAIS,WAAWC,KAAKV,IAOtBC,EAAKU,SAAWC,SAASC,cAAa,WAChCC,EAAQb,EAAKU,SAASG,MAC5BA,EAAMC,SAAQ,WACdD,EAAME,MAAK,OACXF,EAAMG,OAAM,OACZH,EAAMI,OAAM,IAEZjB,EAAKU,SAASQ,UAAYC,EAAAC,mBAAkB,iBAEtCC,EAAYtB,EAAIuB,qBACtBD,EAAUE,aAAavB,EAAKU,SAAUW,EAAUG,YAAc,MAM9DxB,EAAKyB,UAAS,GAMdzB,EAAK0B,kBAAmB,WA1COC,EAAA7B,EAAApB,GAiDjCoB,EAAAN,UAAAoC,oBAAmB,SAACC,EAAMC,OAClB/B,EAAGT,KAAQyC,YACbhC,EAAIiC,YAAYH,GAAI,KAChBI,EAAK,IAAOC,EAAAvC,QAAYkC,OAAMM,EAAWL,GAC/C/B,EAAIqC,cAAcH,KAItBnC,EAAAN,UAAA6C,gBAAe,WACbnC,EAAAoC,cAAahD,KAAMW,6BACdS,SAAS6B,WAAWC,YAAWlD,KAAMoB,UAC1ChC,EAAAc,UAAM6C,gBAAehD,KAAAC,OAOvBQ,EAAAN,UAAAiD,YAAW,SAACX,MACLA,QAQAY,oBAAoBZ,QACpBF,oBAAoBe,EAAAhD,QAAgBiD,WAAYd,OAE/Ce,EAAmBf,EAAWe,iBAAiBC,MAAI,SAAWC,EAAGC,UAC9DD,EAAE9B,OAAS+B,EAAE/B,UAEhBgC,EAAYnB,EAAWmB,eAExBxB,UAAUyB,OAAS,MAGrB,IACGC,EAAe,GACjBC,EAAkB,KACbC,EAAI,EAAGC,EAAKT,EAAiBK,OAAQG,EAAIC,IAAMD,EAAC,KACjDE,EAAaV,EAAiBQ,MACpCvB,EAAW0B,WAAaH,EAErBI,EAAAC,OAAOH,EAAYN,KACnBM,EAAWI,aAAeC,EAAAjE,QAAYkE,OACrCN,EAAWI,aAAeC,EAAAjE,QAAYmE,gBAKpCC,EAAQR,EAAWQ,MACnBC,EAAUD,EAAME,OAAOnC,EAAYsB,GACpCY,IAGDA,IAAYZ,SACT3B,UAAUyC,KAAKF,GACpBZ,EAAkBY,oBAEED,GACpBZ,EAAgBe,KAAKH,SAGhBV,EAAIF,EAAgBD,OAAS,EAAGG,GAAK,IAAKA,EACjDF,EAAgBE,GAAGc,gBAAgBrC,GAGrCsC,EAAAC,gBAAe/E,KAAMoB,SAAQpB,KAAOmC,gBAE/BG,oBAAoBe,EAAAhD,QAAgB2E,YAAaxC,QAE5CJ,wBACHhB,SAASG,MAAM0D,QAAO,QACtB7C,kBAAmB,QAGrB8C,wBAAwB1C,aA1DlBJ,wBACFhB,SAASG,MAAM0D,QAAO,YACtB7C,kBAAmB,IAwE9B5B,EAAAN,UAAAiF,oBAAmB,SAACC,EAAO5C,EAAY6C,EAAcC,EAAUC,WACvD5B,EAAYnB,EAAWmB,UAEvB6B,EAAchD,EAAWe,iBAGtBQ,EAFSyB,EAAY5B,OAEL,EAAGG,GAAK,IAAKA,EAAC,KAC/BE,EAAauB,EAAYzB,GACzBU,EAAQR,EAAWQ,SAEvBA,EAAMgB,eACNtB,EAAAC,OAAOH,EAAYN,IACnB4B,EAAYd,GAAK,KAGXiB,EADgBjB,EAAMkB,cACDC,eACzBR,EACA5C,EACA6C,MAEEK,EAAI,KACAG,EAASP,EAASb,EAAOiB,MAC3BG,EAAM,OACDA,MAOnBrF,EA7KA,CAAmCsF,EAAAzF,soBC4OhC,SACM0F,EAAgBtF,EAAK+B,GAC5BwD,EAAAC,OAAeC,aAGjBC,EA3OA,SAAA/G,GAGK,SACHgH,EAAY3F,OAAZC,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK2F,KAAO5F,WAXU6F,EAAAF,EAAAhH,GAmBxBgH,EAAAlG,UAAAoC,oBAAmB,SAACC,EAAMC,GACxB+D,EAAAC,YAOFJ,EAAAlG,UAAAkD,oBAAmB,SAACZ,OACZmB,EAAYnB,EAAWmB,UACvB8C,EAA6BjE,EAAWiE,2BACxCC,EAA6BlE,EAAWkE,2BAE9CC,EAAAC,QACEH,EACAjE,EAAWqE,KAAK,GAAK,EACrBrE,EAAWqE,KAAK,GAAK,EACrB,EAAIlD,EAAUmD,YACd,EAAKnD,EAAUmD,YACdnD,EAAUoD,UACVpD,EAAUqD,OAAO,IACjBrD,EAAUqD,OAAO,IAGpBL,EAAAM,YAAYP,EAA4BD,IAkB1CL,EAAAlG,UAAAgH,2BAA0B,SACxBC,EACA3E,EACA6C,EACA+B,EACA9B,EACA+B,EACA9B,EACA+B,OAEIzB,EACElC,EAAYnB,EAAWmB,UAQ1B,SACMuD,EAA2BK,EAASC,EAAS/C,EAAOgD,UACpDnC,EAASvF,KAAKsH,EAASG,EAASD,EAAU9C,EAAQ,KAAMgD,OAG3DC,EAAa/D,EAAU+D,WAEvBC,EAAuBC,EAAAC,MAAMV,EAAWW,QAASJ,GACjDK,EAAO,EAAK,EAAG,OACjBL,EAAWM,YAAcZ,EAAY,KACjCa,EAAmBP,EAAWQ,YAC9BC,EAAaC,EAAAC,SAASJ,GAC5BF,EAAQnD,KAAI,EAAGuD,EAAY,IAAKA,EAAY,YAGxC3C,EAAchD,EAAWe,iBACzB+E,EAAY9C,EAAY5B,OAExB2E,EAAO,GACPC,EAAQ,GACLzE,EAAI,EAAGA,EAAIgE,EAAQnE,OAAQG,IAAC,IAAA,IAC1B0E,EAAIH,EAAY,EAAGG,GAAK,IAAKA,EAAC,KAC/BxE,EAAauB,EAAYiD,GACzBhE,EAAQR,EAAWQ,SAEvBA,EAAMgB,eACNtB,EAAAC,OAAOH,EAAYN,IACnB4B,EAAYxF,KAAKuH,EAAU7C,GAAK,KAE1BiE,EAAgBjE,EAAMkB,cACtBgD,EAASlE,EAAMmE,eACjBF,GAAiBC,EAAM,KACnBE,EAAcF,EAAOG,WACvBnB,EACAR,EACE4B,EAAW7B,EAA2B/F,KAC1C,KACA8C,EAAWsD,SAEbiB,EAAS,GAAKK,EAAY,GAAKd,EAAQhE,GAAG,GAC1CyE,EAAS,GAAKK,EAAY,GAAKd,EAAQhE,GAAG,GAC1C8B,EAAS6C,EAAcxB,2BACrBsB,EACAhG,EACA6C,EACA0D,EACAR,MAGA1C,EAAM,OACDA,MAKQ,IAAnB0C,EAAQ3E,YAGNoF,EAAQ,EAAIT,EAAQ3E,cAC1B2E,EAAQU,SAAO,SAAEC,EAAGC,UAAOD,EAAEE,YAAcD,EAAIH,KAC/CT,EAAQ/E,MAAI,SAAEC,EAAGC,UAAMD,EAAE2F,WAAa1F,EAAE0F,cACxCb,EAAQc,MAAI,SAAEH,UACJrD,EAASqD,EAAE5D,SAAS4D,EAAE1B,QAAS0B,EAAEzE,MAAOyE,EAAEzB,aAE7C5B,IAiBTO,EAAAlG,UAAAiF,oBAAmB,SAACC,EAAO5C,EAAY6C,EAAcC,EAAUC,UACtDgB,EAAAC,YAgBTJ,EAAAlG,UAAAoJ,uBAAsB,SACpBnC,EACA3E,EACA6C,EACA+B,EACA7B,EACA8B,eAasBxE,IAXN7C,KAAQkH,2BACtBC,EACA3E,EACA6C,EACA+B,EACAmC,EAAAC,KAAIxJ,KAEJuF,EACA8B,IASJjB,EAAAlG,UAAAuC,OAAM,uBACQ4D,MAQdD,EAAAlG,UAAAiD,YAAW,SAACX,GACV+D,EAAAC,YAOFJ,EAAAlG,UAAAgF,wBAAuB,SAAC1C,GAClBwD,EAAAC,OAAewD,kBACjBjH,EAAWkH,oBAAoB9E,KAAKmB,IAG1CK,EAjOA,CAA0BuD,EAAAtJ,6EClBvB,IA4BHuJ,EA3BA,oBACEC,IAKK7J,KACE8J,UAAW,SAMlBD,EAAA3J,UAAA6J,QAAO,gBACKD,gBACHA,UAAW,OACX/G,oBAQT8G,EAAA3J,UAAA6C,gBAAe,aACjB8G,EAzBA,yLCEgBG,WACP,WAOOC,WACP,WAQOC,cAWAC,EAAWC,OAIrBC,EAGAC,EAEAC,EARAC,GAAS,wBAWLC,EAAWC,MAAMxK,UAAU4H,MAAM/H,KAAK4K,kBACvCH,GAAMxK,OAAauK,GAAaK,EAAAC,OAAYJ,EAAUH,KACzDE,GAAS,EACTD,EAAQvK,KACRsK,EAAWG,EACXJ,EAAaD,EAAGU,MAAK9K,KAAO2K,YAEvBN,kDC5CKU,EAAaC,EAAUC,EAAQC,WACzCC,EAAKC,EACHC,EAAaH,GAAkBI,EACjCC,EAAM,EACNC,EAAOR,EAASpH,OAChB6H,GAAQ,EAELF,EAAMC,IAIXJ,GAAOC,EAAWL,EADlBG,EAAMI,GAAQC,EAAOD,GAAQ,IACIN,IAEvB,EAERM,EAAMJ,EAAM,GAGZK,EAAOL,EACPM,GAASL,GAIO,OACbK,EAAQF,GAAOA,WAURD,EAA0B7H,EAAGC,UACpCD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,WASlBgI,EAASC,EAAKC,UACrBD,EAAIE,QAAQD,IAAQ,WAWbE,EAAkBH,EAAKI,EAAQC,OACvCC,EAAIN,EAAI/H,UACV+H,EAAI,IAAMI,EAAM,OACX,KACEA,GAAUJ,EAAIM,EAAI,GAAC,OACrBA,EAAI,MAEPlI,OAAC,KACDiI,EAAY,GAAC,IACVjI,EAAI,EAAGA,EAAIkI,IAAKlI,KACf4H,EAAI5H,GAAKgI,EAAM,OACVhI,EAAI,UAGNiI,EAAY,GAAC,IACjBjI,EAAI,EAAGA,EAAIkI,IAAKlI,KACf4H,EAAI5H,IAAMgI,EAAM,OACXhI,WAINA,EAAI,EAAGA,EAAIkI,IAAKlI,EAAC,IAChB4H,EAAI5H,IAAMgI,EAAM,OACXhI,KACE4H,EAAI5H,GAAKgI,SACdJ,EAAI5H,EAAI,GAAKgI,EAASA,EAASJ,EAAI5H,GAC9BA,EAAI,EAEJA,SAKRkI,EAAI,WASCC,EAAgBP,EAAKQ,EAAOC,QACnCD,EAAQC,GAAG,KACVC,EAAMV,EAAIQ,GAChBR,EAAIQ,GAASR,EAAIS,GACjBT,EAAIS,GAAOC,IACTF,IACAC,YASUE,EAAOX,EAAKjG,WACpB6G,EAAY7B,MAAM8B,QAAQ9G,GAAQA,EAAI,CAAIA,GAC1C9B,EAAS2I,EAAU3I,OAChBG,EAAI,EAAGA,EAAIH,EAAQG,IAC1B4H,EAAIA,EAAI/H,QAAU2I,EAAUxI,YA2ChB0I,EAAOC,EAAMC,OACrBC,EAAOF,EAAK9I,UACdgJ,IAASD,EAAK/I,OAAM,OACf,UAEAG,EAAI,EAAGA,EAAI6I,EAAM7I,OACpB2I,EAAK3I,KAAO4I,EAAK5I,GAAC,OACb,SAGJ,WA6CO8I,EAASlB,EAAKmB,EAAUC,OAChCC,EAAUF,GAAYxB,SACrBK,EAAIsB,OAAK,SAAWC,EAAYC,MACvB,IAAVA,EAAW,OACN,MAEHC,EAAMJ,EAAQrB,EAAIwB,EAAQ,GAAID,WAC3BE,EAAM,GAAML,GAAsB,IAARK,qVCpOvBC,gCAEFC,MAAK,kIAQhB,IACCC,EAAc,WAWFC,EAAO5B,UACdA,EAAI6B,SAAW7B,EAAI6B,OAASC,SAASH,QAOjCI,EAAO,wcC0OhBC,4BAlPEC,EAAI,IAAOnD,MAAM,YAMPoD,WACN,EAAG,EAAG,EAAG,EAAG,EAAG,YAQTC,EAAMC,UACbC,EAAID,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,YAUvBE,EAASC,EAAYC,OAC7BC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,UAEtBD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,WAcOF,EAAID,EAAWvK,EAAGC,EAAGuL,EAAGC,EAAGC,EAAGC,UAC5CpB,EAAU,GAAKvK,EACfuK,EAAU,GAAKtK,EACfsK,EAAU,GAAKiB,EACfjB,EAAU,GAAKkB,EACflB,EAAU,GAAKmB,EACfnB,EAAU,GAAKoB,EACRpB,WASOqB,EAAalB,EAAYC,UACvCD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,WAYOmB,EAAMtB,EAAW7G,OACzBoI,EAAIpI,EAAW,GACfqI,EAAIrI,EAAW,UACrBA,EAAW,GAAK6G,EAAU,GAAKuB,EAAIvB,EAAU,GAAKwB,EAAIxB,EAAU,GAChE7G,EAAW,GAAK6G,EAAU,GAAKuB,EAAIvB,EAAU,GAAKwB,EAAIxB,EAAU,GACzD7G,WASOsI,EAAOzB,EAAW0B,OAC1BC,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,UACdxB,EAASF,EAAWC,EAAIJ,EAAM8B,EAAKE,GAAMA,EAAKF,EAAK,EAAG,aAU/CG,EAAM9B,EAAWuB,EAAGC,UAC3BtB,EAASF,EAAWC,EAAIJ,EAAM0B,EAAG,EAAG,EAAGC,EAAG,EAAG,aAUtCO,EAAUhE,EAAQwD,EAAGC,UAC5BvB,EAAIlC,EAAQwD,EAAG,EAAG,EAAGC,EAAG,EAAG,YA2BpBQ,EAAQhC,EAAWiC,EAAKC,EAAKC,EAAIC,EAAIV,EAAOW,EAAKC,OACzDT,EAAMD,KAAKC,IAAIH,GACfC,EAAMC,KAAKD,IAAID,UACrB1B,EAAU,GAAKmC,EAAKR,EACpB3B,EAAU,GAAKoC,EAAKP,EACpB7B,EAAU,IAAMmC,EAAKN,EACrB7B,EAAU,GAAKoC,EAAKT,EACpB3B,EAAU,GAAKqC,EAAMF,EAAKR,EAAMW,EAAMH,EAAKN,EAAMI,EACjDjC,EAAU,GAAKqC,EAAMD,EAAKP,EAAMS,EAAMF,EAAKT,EAAMO,EAC1ClC,WAiBOuC,EAAoBN,EAAKC,EAAKC,EAAIC,EAAIV,EAAOW,EAAKC,UACzDE,EAASR,GAtLR,EAAG,EAAG,EAAG,EAAG,EAAG,GAsLWC,EAAKC,EAAKC,EAAIC,EAAIV,EAAOW,EAAKC,aAmBlDG,EAAY1E,EAAQpD,OA0BR+H,EAzBpBC,GAyBoBD,EAzBF/H,GA0Bb,GAAK+H,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAzBtCE,EAAAC,OAAe,IAARF,EAAW,QAEZlN,EAAIkF,EAAO,GACXjF,EAAIiF,EAAO,GACXsG,EAAItG,EAAO,GACXuG,EAAIvG,EAAO,GACXwG,EAAIxG,EAAO,GACXyG,EAAIzG,EAAO,UAEjBoD,EAAO,GAAKmD,EAAIyB,EAChB5E,EAAO,IAAMrI,EAAIiN,EACjB5E,EAAO,IAAMkD,EAAI0B,EACjB5E,EAAO,GAAKtI,EAAIkN,EAChB5E,EAAO,IAAMkD,EAAIG,EAAIF,EAAIC,GAAKwB,EAC9B5E,EAAO,KAAOtI,EAAI2L,EAAI1L,EAAIyL,GAAKwB,EAExB5E,WAwBOyE,EAASE,OACjBI,EAAe,UAAeJ,EAAIK,KAAI,MAAK,OAC7CC,EAAAC,wBAAuB,OAClBH,MAEHI,EACJtD,IAAuBA,EAAqBvM,SAASC,cAAa,eACpE4P,EAAK3P,MAAMyM,UAAY8C,EAChBI,EAAK3P,MAAMyM,oTC7RjB,IAEGmD,EACY,oBAATC,gBAAuD,IAAnBA,UAAUC,UACjDD,UAAUC,UAAUC,cAAW,GAOxBC,GAAoC,IAA1BJ,EAAGtF,QAAO,WAYpB2F,IANkC,IAAzBL,EAAGtF,QAAO,WAAqBsF,EAAGtF,QAAO,UAMhB,IAAzBsF,EAAGtF,QAAO,YAA2C,GAAtBsF,EAAGtF,QAAO,SAMlD4F,GAAkC,IAA5BN,EAAGtF,QAAO,aAShB6F,EACY,oBAAhBC,iBAAmCA,iBAAmB,EAOlDC,EACa,oBAAjBC,mBACe,oBAAfC,iBACPC,gBAAgBF,kBAMLG,EACC,oBAALC,OAAyBA,MAAM/R,UAAUgS,OAKrCC,EAAuB,eAC9BC,GAAU,UAEN9S,EAAU+S,OAAOC,eAAc,aAAc,CACjDC,IAAG,WACDH,GAAU,KAIdI,OAAOC,iBAAgB,IAAM,KAAMnT,GACnCkT,OAAOE,oBAAmB,IAAM,KAAMpT,SAC/BqT,WAGFP,EAd2B,gGCtDpBQ,EAAOC,EAAWC,OAC3BD,EAAS,MAAA,IACFE,EAAA1S,QAAeyS,siBCkC7BE,EAnCA,SAAA5T,GAGK,SACH6T,EAAYC,OAAZxS,EAAAV,KAEQmT,EAAO,oDADO,WAAP5M,EAAA6M,QAAuB7M,EAAA6M,QAAO,IAAS7M,EAAA6M,QAAQC,MAAK,KAAM,IAGjE,gBAEJH,EAAI,uBAGNxS,EAAAtB,EAAAW,KAAAC,KAAMmT,IAAOnT,MAURkT,KAAOA,EAKZxS,EAAK4S,KAAI,iBAGT5S,EAAKyS,QAAUA,WA/BUI,EAAAN,EAAA7T,GAiC7B6T,EAjCA,CAA6B3F,y9CCUbkG,EAAe3K,WACvB4K,EAASC,IACN3P,EAAI,EAAGC,EAAK6E,EAAYjF,OAAQG,EAAIC,IAAMD,EACjD4P,EAAiBF,EAAQ5K,EAAY9E,WAEhC0P,WA0BOG,EAAOH,EAAQI,EAAOC,UAChCA,GACFA,EAAW,GAAKL,EAAO,GAAKI,EAC5BC,EAAW,GAAKL,EAAO,GAAKI,EAC5BC,EAAW,GAAKL,EAAO,GAAKI,EAC5BC,EAAW,GAAKL,EAAO,GAAKI,EACrBC,IAGLL,EAAO,GAAKI,EACZJ,EAAO,GAAKI,EACZJ,EAAO,GAAKI,EACZJ,EAAO,GAAKI,YAYFE,EAAMN,EAAQK,UACxBA,GACFA,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GAChBK,GAEAL,EAAO3L,iBAUFkM,EAAyBP,EAAQlE,EAAGC,OAC9CyE,EAAIC,SAEND,EADE1E,EAAIkE,EAAO,GACRA,EAAO,GAAKlE,EACRkE,EAAO,GAAKlE,EAChBA,EAAIkE,EAAO,GAEX,GASKQ,GANVC,EADE1E,EAAIiE,EAAO,GACRA,EAAO,GAAKjE,EACRiE,EAAO,GAAKjE,EAChBA,EAAIiE,EAAO,GAEX,GAEeS,WAWRC,EAAmBV,EAAQtM,UAClCiN,EAAWX,EAAQtM,EAAW,GAAIA,EAAW,aAetCkN,EAAeC,EAASC,UAEpCD,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,YAaVF,EAAWX,EAAQlE,EAAGC,UAC7BiE,EAAO,IAAMlE,GAAKA,GAAKkE,EAAO,IAAMA,EAAO,IAAMjE,GAAKA,GAAKiE,EAAO,YAU3De,EAAuBf,EAAQtM,OACvCsN,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdlE,EAAIpI,EAAW,GACfqI,EAAIrI,EAAW,GACjB0N,EAAeC,EAAAzU,QAAa0U,eAC5BxF,EAAIkF,EACNI,GAA8BC,EAAAzU,QAAa2U,KAClCzF,EAAIoF,IACbE,GAA8BC,EAAAzU,QAAa4U,OAEzCzF,EAAIkF,EACNG,GAA8BC,EAAAzU,QAAa6U,MAClC1F,EAAIoF,IACbC,GAA8BC,EAAAzU,QAAa8U,OAEzCN,IAAiBC,EAAAzU,QAAa0U,UAChCF,EAAeC,EAAAzU,QAAa+U,cAEvBP,WAQOnB,WACN2B,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,YAY1BC,EAAeb,EAAMC,EAAMC,EAAMC,EAAMd,UACjDA,GACFA,EAAW,GAAKW,EAChBX,EAAW,GAAKY,EAChBZ,EAAW,GAAKa,EAChBb,EAAW,GAAKc,EACTd,IAECW,EAAMC,EAAMC,EAAMC,YASdW,EAAoBzB,UAC3BwB,EAAeD,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUvB,YAQlD0B,EAA6BrO,EAAY2M,OACjDvE,EAAIpI,EAAW,GACfqI,EAAIrI,EAAW,UACdmO,EAAe/F,EAAGC,EAAGD,EAAGC,EAAGsE,YAQpB2B,EAA8B5M,EAAaiL,UAElD4B,EADQH,EAAoBzB,GACFjL,YAWnB8M,EACdC,EACAC,EACAzJ,EACA0J,EACAhC,UAGOiC,EADQR,EAAoBzB,GACE8B,EAAiBC,EAAQzJ,EAAK0J,YAoBrDE,EAAO1B,EAASC,UAE5BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YA2BV0B,EAAO3B,EAASC,UAC1BA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,WAOOX,EAAiBF,EAAQtM,GACnCA,EAAW,GAAKsM,EAAO,KACzBA,EAAO,GAAKtM,EAAW,IAErBA,EAAW,GAAKsM,EAAO,KACzBA,EAAO,GAAKtM,EAAW,IAErBA,EAAW,GAAKsM,EAAO,KACzBA,EAAO,GAAKtM,EAAW,IAErBA,EAAW,GAAKsM,EAAO,KACzBA,EAAO,GAAKtM,EAAW,aASXuO,EAAkBjC,EAAQ5K,WAC/B9E,EAAI,EAAGC,EAAK6E,EAAYjF,OAAQG,EAAIC,IAAMD,EACjD4P,EAAiBF,EAAQ5K,EAAY9E,WAEhC0P,WAWOsC,EACdtC,EACAmC,EACAC,EACAzJ,EACA0J,QAEOD,EAASzJ,EAAKyJ,GAAUC,EAC7BI,EAASzC,EAAQmC,EAAgBC,GAASD,EAAgBC,EAAS,WAE9DpC,WAoBOyC,EAASzC,EAAQlE,EAAGC,GAClCiE,EAAO,GAAK7D,KAAKuG,IAAI1C,EAAO,GAAIlE,GAChCkE,EAAO,GAAK7D,KAAKuG,IAAI1C,EAAO,GAAIjE,GAChCiE,EAAO,GAAK7D,KAAKwG,IAAI3C,EAAO,GAAIlE,GAChCkE,EAAO,GAAK7D,KAAKwG,IAAI3C,EAAO,GAAIjE,YAYlB6G,EAAc5C,EAAQnO,OAChCgR,SACJA,EAAMhR,EAASiR,EAAc9C,OAI7B6C,EAAMhR,EAASkR,EAAe/C,OAI9B6C,EAAMhR,EAASmR,EAAYhD,KANlB6C,GAUTA,EAAMhR,EAASoR,EAAWjD,OAInB,WASOkD,EAAQlD,OAClBmD,EAAO,SACNC,EAAQpD,KACXmD,EAAOE,EAASrD,GAAUsD,EAAUtD,IAE/BmD,WASOL,EAAc9C,UACpBA,EAAO,GAAIA,EAAO,aASZ+C,EAAe/C,UACrBA,EAAO,GAAIA,EAAO,aASZuD,EAAUvD,WACfA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,YASjDwD,EAAUxD,EAAQyD,OAC5B/P,SACA+P,IAAWC,EAAA9W,QAAO+W,YACpBjQ,EAAaoP,EAAc9C,GAClByD,IAAWC,EAAA9W,QAAOgX,aAC3BlQ,EAAaqP,EAAe/C,GACnByD,IAAWC,EAAA9W,QAAOiX,SAC3BnQ,EAAauP,EAAWjD,GACfyD,IAAWC,EAAA9W,QAAOkX,UAC3BpQ,EAAasP,EAAYhD,GAEzB7C,EAAAC,QAAO,EAAO,IAET1J,WAwBOqQ,EACdxQ,EACAF,EACAC,EACAF,EACAiN,OAEMG,EAAMnN,EAAaD,EAAK,GAAM,EAC9BqN,EAAMpN,EAAaD,EAAK,GAAM,EAC9B4Q,EAAc7H,KAAKD,IAAI5I,GACvB2Q,EAAc9H,KAAKC,IAAI9I,GACvB4Q,EAAO1D,EAAKwD,EACZG,EAAO3D,EAAKyD,EACZG,EAAO3D,EAAKuD,EACZK,EAAO5D,EAAKwD,EACZnI,EAAIvI,EAAO,GACXwI,EAAIxI,EAAO,GACX+Q,EAAKxI,EAAIoI,EAAOG,EAChBE,EAAKzI,EAAIoI,EAAOG,EAChBG,EAAK1I,EAAIoI,EAAOG,EAChBI,EAAK3I,EAAIoI,EAAOG,EAChBK,EAAK3I,EAAIoI,EAAOC,EAChBO,EAAK5I,EAAIoI,EAAOC,EAChBQ,EAAK7I,EAAIoI,EAAOC,EAChBS,EAAK9I,EAAIoI,EAAOC,SACfvC,EACL1F,KAAKuG,IAAI4B,EAAIC,EAAIC,EAAIC,GACrBtI,KAAKuG,IAAIgC,EAAIC,EAAIC,EAAIC,GACrB1I,KAAKwG,IAAI2B,EAAIC,EAAIC,EAAIC,GACrBtI,KAAKwG,IAAI+B,EAAIC,EAAIC,EAAIC,GACrBxE,YAUYiD,EAAUtD,UACjBA,EAAO,GAAKA,EAAO,YAqBZ8E,EAAgBjE,EAASC,EAAST,OAC1C0E,EAAe1E,IA1YbuB,EAAAA,EAAUA,EAAAA,GAAQ,EAAA,GAAW,EAAA,UA2YjCoD,EAAWnE,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBiE,EAAa,GAAKlE,EAAQ,GAE1BkE,EAAa,GAAKjE,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBiE,EAAa,GAAKlE,EAAQ,GAE1BkE,EAAa,GAAKjE,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBiE,EAAa,GAAKlE,EAAQ,GAE1BkE,EAAa,GAAKjE,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBiE,EAAa,GAAKlE,EAAQ,GAE1BkE,EAAa,GAAKjE,EAAQ,IAG5BgB,EAAoBiD,GAEfA,WA2BO9B,EAAWjD,UACjBA,EAAO,GAAIA,EAAO,aASZgD,EAAYhD,UAClBA,EAAO,GAAIA,EAAO,aASZqD,EAASrD,UAChBA,EAAO,GAAKA,EAAO,YAUZgF,EAAWnE,EAASC,UAEhCD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,YAUVsC,EAAQpD,UACfA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,YAQrCiF,EAAejF,EAAQK,UACjCA,GACFA,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GACvBK,EAAW,GAAKL,EAAO,GAChBK,GAEAL,WAQKkF,EAAgBlF,EAAQI,OAChC+E,GAAWnF,EAAO,GAAKA,EAAO,IAAM,GAAMI,EAAQ,GAClDgF,GAAWpF,EAAO,GAAKA,EAAO,IAAM,GAAMI,EAAQ,GACxDJ,EAAO,IAAMmF,EACbnF,EAAO,IAAMmF,EACbnF,EAAO,IAAMoF,EACbpF,EAAO,IAAMoF,WAWCC,EAAkBrF,EAAQsF,EAAO3M,OAC3C4M,GAAa,EACXC,EAAWzE,EAAuBf,EAAQsF,GAC1CG,EAAS1E,EAAuBf,EAAQrH,MAE5C6M,IAAanE,EAAAzU,QAAa+U,cAC1B8D,IAAWpE,EAAAzU,QAAa+U,aAExB4D,GAAa,WAEPvE,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACd0F,EAASJ,EAAM,GACfK,EAASL,EAAM,GACfM,EAAOjN,EAAI,GACXkN,EAAOlN,EAAI,GACXmN,GAASD,EAAOF,IAAWC,EAAOF,GACpC5J,OAAC,EAAEC,OAAC,EACD0J,EAASpE,EAAAzU,QAAa8U,SAAY8D,EAAWnE,EAAAzU,QAAa8U,SAG/D6D,GADAzJ,EAAI8J,GAAQC,EAAO1E,GAAQ2E,IACT9E,GAAQlF,GAAKoF,GAG9BqE,KACEE,EAASpE,EAAAzU,QAAa4U,QACvBgE,EAAWnE,EAAAzU,QAAa4U,QAI1B+D,GADAxJ,EAAI8J,GAAQD,EAAO1E,GAAQ4E,IACT7E,GAAQlF,GAAKoF,GAG9BoE,KACEE,EAASpE,EAAAzU,QAAa6U,QACvB+D,EAAWnE,EAAAzU,QAAa6U,QAI1B8D,GADAzJ,EAAI8J,GAAQC,EAAO5E,GAAQ6E,IACT9E,GAAQlF,GAAKoF,GAG9BqE,KACEE,EAASpE,EAAAzU,QAAa2U,OACvBiE,EAAWnE,EAAAzU,QAAa2U,OAI1BgE,GADAxJ,EAAI8J,GAAQD,EAAO5E,GAAQ8E,IACT7E,GAAQlF,GAAKoF,UAG5BoE,WAcOQ,EAAe/F,EAAQgG,EAAa3F,EAAY4F,OAC1D7Q,EAAW,MACX6Q,EAAY,UACRjY,EAAQgS,EAAO,GAAKA,EAAO,GAC3B/R,EAAS+R,EAAO,GAAKA,EAAO,GACzB1P,EAAI,EAAGA,EAAI2V,IAAa3V,EAC/B8E,EAAYjE,KACV6O,EAAO,GAAMhS,EAAQsC,EAAK2V,EAC1BjG,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM/R,EAASqC,EAAK2V,EAC3BjG,EAAO,GAAMhS,EAAQsC,EAAK2V,EAC1BjG,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM/R,EAASqC,EAAK2V,QAI/B7Q,EAAW,CACT4K,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXgG,EAAY5Q,EAAaA,EAAa,WAChC8Q,EAAE,GACFC,EAAE,GACQC,GAAP9V,EAAI,EAAO8E,EAAYjF,QAAQG,EAAI8V,EAAG9V,GAAK,EAClD4V,EAAG/U,KAAKiE,EAAY9E,IACpB6V,EAAGhV,KAAKiE,EAAY9E,EAAI,WA5xBzB,SACyB4V,EAAIC,EAAI9F,UAK3BwB,EAJM1F,KAAKuG,IAAIrL,MAAM,KAAM6O,GACrB/J,KAAKuG,IAAIrL,MAAM,KAAM8O,GACrBhK,KAAKwG,IAAItL,MAAM,KAAM6O,GACrB/J,KAAKwG,IAAItL,MAAM,KAAM8O,GACY9F,GAwxBvCgG,CAAmBH,EAAIC,EAAI9F,YAWpBiG,EAAMtG,EAAQ/L,OACtBO,EAAmBP,EAAWQ,YAC9BlB,EAASgQ,EAAUvD,MAEvB/L,EAAWM,aACVhB,EAAO,GAAKiB,EAAiB,IAAMjB,EAAO,IAAMiB,EAAiB,IAAC,KAE7DE,EAAa2O,EAAS7O,GAItB4N,EAHajG,KAAKoK,OACrBhT,EAAO,GAAKiB,EAAiB,IAAME,GAEVA,EAC5BsL,EAAO,IAAMoC,EACbpC,EAAO,IAAMoC,SAERpC,2ECl1BTwG,EAKE,CAJA7C,YAAW,cACXC,aAAY,eACZC,SAAQ,WACRC,UAAS,qFCJX2C,EAOE,CANAnF,QAAS,EACTK,aAAc,EACdD,MAAO,EACPF,MAAO,EACPC,MAAO,EACPF,KAAM,wFCLRmF,EAAA,oBACEC,IAIKpa,KACEqa,OAAM,GAKRra,KACEsa,WAAa,EAKfta,KACEua,cAAgB,UAMvBH,EAAAla,UAAAsa,MAAK,gBACEH,OAAM,QACNC,WAAa,GAMpBF,EAAAla,UAAAuJ,eAAc,uBACA6Q,WAAUta,KAAQua,eAMhCH,EAAAla,UAAAgG,OAAM,mBACKuD,iBAAc,KACjB1F,EAAI,UACG0W,KAAGza,KAASqa,OAAM,KACrBK,EAAS1a,KAAQqa,OAAOI,GACZ,IAAP,EAAN1W,MAAmB2W,EAAUhY,4BACpB2X,OAAOI,UACZH,eAYfF,EAAAla,UAAAqS,IAAG,SAACoI,EAAKC,EAAaC,OACdJ,EAAMK,EAAOH,EAAKC,EAAaC,UAC9BJ,KAAGza,KAASqa,OAAMra,KAAQqa,OAAOI,GAAO,MASjDL,EAAAla,UAAA6a,IAAG,SAACJ,EAAKC,EAAaC,EAAOH,OACrBD,EAAMK,EAAOH,EAAKC,EAAaC,QAChCR,OAAOI,GAAOC,SACZJ,YAUTF,EAAAla,UAAA8a,QAAO,SAACC,QACDV,cAAgBU,OAChB/U,UAETkU,EAtFA,GA6FG,SACMU,EAAOH,EAAKC,EAAaC,UAEzBD,EAAW,IAASD,EAAG,KADVE,EAAQK,EAAAC,SAASN,GAAK,YAW/BO,EAAM,IAAOjB,oKC9FpBkB,EAAa,oDAQbC,EAAe,qCAQLC,EAASV,SACP,iBAALA,EACFA,EAEAW,EAASX,GAQjB,SACMY,EAAUZ,OACXa,EAAKra,SAASC,cAAa,UACjCoa,EAAGna,MAAMsZ,MAAQA,EACC,KAAda,EAAGna,MAAMsZ,MAAK,CAChBxZ,SAASsa,KAAKC,YAAYF,OACpBG,EAAMC,iBAAiBJ,GAAIb,aACjCxZ,SAASsa,KAAKzY,YAAYwY,GACnBG,eAwBHE,EAKFC,EAnBOC,GAcLF,EAAK,GAKPC,EAAY,WAOJE,OACJrB,KACAkB,EAAMI,eAAeD,GACvBrB,EAAQkB,EAAMG,WAEVF,GAtBa,KAsBc,KACzBjY,EAAI,UACG0W,KAAOsB,EACE,IAAP,EAANhY,cACIgY,EAAMtB,KACXuB,GAIRnB,EA4BL,SAC0BqB,OACvBE,EAAGC,EAAG3Y,EAAGD,EAAGoX,KAEZS,EAAgBgB,KAAKJ,KACvBA,EAAIT,EAAUS,IAGZb,EAAciB,KAAKJ,GAAC,KAEhBjQ,EAAIiQ,EAAEtY,OAAS,EACjBsL,OAAC,EAEHA,EADEjD,GAAK,EACH,EAEA,MAEAsQ,EAAiB,IAANtQ,GAAiB,IAANA,EAC5BmQ,EAAII,SAASN,EAAEO,OAAO,EAAI,EAAIvN,EAAGA,GAAI,IACrCmN,EAAIG,SAASN,EAAEO,OAAO,EAAI,EAAIvN,EAAGA,GAAI,IACrCxL,EAAI8Y,SAASN,EAAEO,OAAO,EAAI,EAAIvN,EAAGA,GAAI,IAEnCzL,EADE8Y,EACEC,SAASN,EAAEO,OAAO,EAAI,EAAIvN,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFkN,GAAKA,GAAK,GAAKA,EACfC,GAAKA,GAAK,GAAKA,EACf3Y,GAAKA,GAAK,GAAKA,EACX6Y,IACF9Y,GAAKA,GAAK,GAAKA,IAGnBoX,EAAK,CAAIuB,EAAGC,EAAG3Y,EAAGD,EAAI,UACS,GAAtByY,EAAErQ,QAAO,SAGlB6Q,EADA7B,EAAQqB,EAAEpU,MAAM,GAAG,GAAIuL,MAAK,KAAM5S,IAAIkc,SAER,GAArBT,EAAErQ,QAAO,UAElBgP,EAAQqB,EAAEpU,MAAM,GAAG,GAAIuL,MAAK,KAAM5S,IAAIkc,SAChC/X,KAAK,GACX8X,EAAU7B,IAEVjK,EAAAC,QAAO,EAAO,WAETgK,EA3EO+B,CAAoBV,GAC5BH,EAAMG,GAAKrB,IACTmB,SAEGnB,aAYGgC,EAAQhC,UAClBnQ,MAAM8B,QAAQqO,GACTA,EAEAoB,EAAWpB,YA+DN6B,EAAU7B,UACxBA,EAAM,GAAKiC,EAAAC,MAAOlC,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKiC,EAAAC,MAAOlC,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKiC,EAAAC,MAAOlC,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKiC,EAAAC,MAAMlC,EAAM,GAAI,EAAG,GACvBA,WAOOW,EAASX,OACnBuB,EAAIvB,EAAM,GACVuB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEdC,EAAIxB,EAAM,GACVwB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,OAEd3Y,EAAImX,EAAM,UACVnX,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,WAGD0Y,EAAC,IAASC,EAAC,IAAS3Y,EAAC,UADfb,IAAbgY,EAAM,GAAmB,EAAIA,EAAM,IACG,mDC5MlCmC,EAAMnJ,EAAOsC,EAAKC,UACzBxG,KAAKuG,IAAIvG,KAAKwG,IAAIvC,EAAOsC,GAAMC,sVAY3B6G,WAIGrN,KAELA,KAAKsN,KAGR,SAAa3N,OACTC,EAAyBI,KAAMuN,IAAI5N,UACjCC,EAAI,EAAIA,GAAK,GAed4N,WAIGxN,KAELA,KAAKyN,KAGR,SAAa9N,UACRK,KAAK0N,IAAI/N,GAAKK,KAAK2N,gBAiBhBC,EAAuBjO,EAAGC,EAAGwI,EAAII,EAAIH,EAAII,OACjDpE,EAAKgE,EAAKD,EACV9D,EAAKmE,EAAKD,KACL,IAAPnE,GAAmB,IAAPC,EAAQ,KAChBuJ,IAAMlO,EAAIyI,GAAM/D,GAAMzE,EAAI4I,GAAMlE,IAAOD,EAAKA,EAAKC,EAAKA,GACxDuJ,EAAI,GACNzF,EAAKC,EACLG,EAAKC,GACIoF,EAAI,IACbzF,GAAM/D,EAAKwJ,EACXrF,GAAMlE,EAAKuJ,UAGRC,EAAgBnO,EAAGC,EAAGwI,EAAII,YAWnBsF,EAAgB1F,EAAII,EAAIH,EAAII,OACpCpE,EAAKgE,EAAKD,EACV9D,EAAKmE,EAAKD,SACTnE,EAAKA,EAAKC,EAAKA,WAURyJ,EAAkBjN,WAC1BzE,EAAIyE,EAAI9M,OAELG,EAAI,EAAGA,EAAIkI,EAAGlI,IAAC,SAElB6Z,EAAS7Z,EACT8Z,EAAQjO,KAAKkO,IAAIpN,EAAI3M,GAAGA,IACnBqY,EAAIrY,EAAI,EAAGqY,EAAInQ,EAAGmQ,IAAC,KACpB2B,EAAWnO,KAAKkO,IAAIpN,EAAI0L,GAAGrY,IAC7Bga,EAAWF,IACbA,EAAQE,EACRH,EAASxB,MAIC,IAAVyB,EAAW,OACN,SAIHxR,EAAMqE,EAAIkN,GAChBlN,EAAIkN,GAAUlN,EAAI3M,GAClB2M,EAAI3M,GAAKsI,UAGA5D,EAAI1E,EAAI,EAAG0E,EAAIwD,EAAGxD,YACnBuV,GAAQtN,EAAIjI,GAAG1E,GAAK2M,EAAI3M,GAAGA,GACxBka,EAAIla,EAAGka,EAAIhS,EAAI,EAAGgS,IACrBla,GAAKka,EACPvN,EAAIjI,GAAGwV,GAAK,EAEZvN,EAAIjI,GAAGwV,IAAMD,EAAOtN,EAAI3M,GAAGka,WAO7B1O,EAAC,IAAO7E,MAAMuB,GACX4N,EAAI5N,EAAI,EAAG4N,GAAK,EAAGA,IAAC,CAC3BtK,EAAEsK,GAAKnJ,EAAImJ,GAAG5N,GAAKyE,EAAImJ,GAAGA,WACjB3Q,EAAI2Q,EAAI,EAAG3Q,GAAK,EAAGA,IAC1BwH,EAAIxH,GAAG+C,IAAMyE,EAAIxH,GAAG2Q,GAAKtK,EAAEsK,UAGxBtK,WASO2O,EAAUC,UACC,IAAjBA,EAAwBvO,KAAKwO,YASvBC,EAAUC,UAChBA,EAAiB1O,KAAKwO,GAAM,aAUtBG,EAAO9a,EAAGC,OAClB0Y,EAAI3Y,EAAIC,SACP0Y,EAAI1Y,EAAI,EAAI0Y,EAAI1Y,EAAI0Y,WAWboC,EAAK/a,EAAGC,EAAG6L,UAClB9L,EAAI8L,GAAK7L,EAAID,8rBCmINgb,EAAOxa,EAAYN,OAC5BM,EAAWya,QAAO,OACd,MAEH5X,EAAanD,EAAUmD,cAE3BA,EAAa7C,EAAW0a,eACxB7X,GAAc7C,EAAW2a,cAAa,OAE/B,MAEHC,EAAOlb,EAAUkb,YAChBA,EAAO5a,EAAW6a,SAAWD,GAAQ5a,EAAW8a,YAGzDC,EAvQA,SAAA5f,GAGK,SACH6f,EAAY3f,OAAZoB,EAAAV,KACQkf,EAAc3f,EAAAC,OAAM,GAAKF,UACxB4f,EAAYvW,QAEnBjI,EAAAtB,EAAAW,KAAAC,KAAMkf,IAAWlf,MAMZmf,kBAAoB,KAMzBze,EAAK0e,cAAgB,KAMrB1e,EAAK2e,iBAAmB,KAMxB3e,EAAK4e,UAAY,KAGbhgB,EAAQqF,SACVjE,EAAKiE,OAASrF,EAAQqF,QAGpBrF,EAAQmB,KACVC,EAAK6e,OAAOjgB,EAAQmB,KAGtBC,EAAK+R,iBACH+M,EAAAC,mBAAmBC,EAAArf,QAAcsf,QACjCjf,EAAKkf,iCAGDjX,EAASrJ,EAAQqJ,OACQrJ,EAAQqJ,OACnC,YACJjI,EAAKmf,UAAUlX,YAnDCmX,EAAAb,EAAA7f,GA0DlB6f,EAAA/e,UAAA6f,eAAc,SAACC,OACPC,EAAQD,GAAqB,UACnCC,EAAMrb,KAAI5E,MACHigB,GAOThB,EAAA/e,UAAAggB,oBAAmB,SAACC,OACZC,EAASD,GAAuB,UACtCC,EAAOxb,KAAI5E,KAAMqgB,iBACVD,GASTnB,EAAA/e,UAAA0I,UAAS,kBACyB5I,KAAOuS,IAAImN,EAAArf,QAAcsf,SAAY,MAMvEV,EAAA/e,UAAAogB,eAAc,eACN3X,EAAM3I,KAAQ4I,mBACZD,EAAiCA,EAAO4X,WAA/Bjc,EAAAjE,QAAYmE,WAM/Bya,EAAA/e,UAAAsgB,oBAAmB,gBACZC,WAMPxB,EAAA/e,UAAA0f,4BAA2B,gBAChBP,mBACPze,EAAAoC,cAAahD,KAAMqf,uBACdA,iBAAmB,UAEpB1W,EAAM3I,KAAQ4I,YAChBD,IAAM3I,KACHqf,iBAAmBze,EAAAC,OACtB8H,EACA+X,EAAArgB,QAAUsgB,OAAM3gB,KACXwgB,oBAAmBxgB,YAIvBygB,WAQPxB,EAAA/e,UAAA0gB,YAAW,SAACxb,eACAka,eAGEA,UAAUsB,YAAYxb,GAHf,IACNyb,SAAO,SAAEC,UAAYA,EAAO,QAa3C7B,EAAA/e,UAAAyE,OAAM,SAACnC,EAAYuJ,OACXrD,EAAa1I,KAAQ2F,iBAEvB+C,EAAcqY,aAAave,GAAU,OAChCkG,EAAcvF,YAAYX,EAAYuJ,IAgBjDkT,EAAA/e,UAAAqf,OAAM,SAAC9e,QACI0e,oBACPve,EAAAoC,cAAahD,KAAMmf,wBACdA,kBAAoB,MAEtB1e,GAAGT,KACDygB,eAEErB,gBACPxe,EAAAoC,cAAahD,KAAMof,oBACdA,cAAgB,MAEnB3e,SACG0e,kBAAoBve,EAAAC,OACvBJ,EACA4C,EAAAhD,QAAgBiD,YAAU,SAChB0d,OAEFzd,EADmEyd,EACpCxe,WAAWe,iBAC1CU,EAAUjE,KAAQqgB,eAAc,GAEtCzP,EAAAC,QACGtN,EAAiB8F,MAAI,SAAW4X,UACxBA,EAAgBxc,QAAUR,EAAWQ,SAE9C,IAEFlB,EAAiBqB,KAAKX,gBAIrBmb,cAAgBxe,EAAAC,OAAMb,KAAO0gB,EAAArgB,QAAUsgB,OAAQlgB,EAAIkE,OAAQlE,QAC3DggB,YAUTxB,EAAA/e,UAAA2f,UAAS,SAAClX,QACHoS,IAAI2E,EAAArf,QAAcsf,OAAQhX,IAOjCsW,EAAA/e,UAAAyF,YAAW,uBACC2Z,YAAStf,KACZsf,UAAStf,KAAQG,uBAEZmf,WAMdL,EAAA/e,UAAAuF,YAAW,wBACK6Z,WAQhBL,EAAA/e,UAAAC,eAAc,kBACL,MAMT8e,EAAA/e,UAAA6C,gBAAe,gBACR8c,UAAU,MACfzgB,EAAAc,UAAM6C,gBAAehD,KAAAC,OAEzBif,EA/OA,CAAoBiC,EAAA7gB,4mBCwPpB8gB,EAtSA,SAAA/hB,GAGK,SACHgiB,EAAY9hB,OAAZoB,EACEtB,EAAAW,KAAAC,OAAAA,KAKMqhB,EAAa9hB,EAAAC,OAAM,GAAKF,UAE9B+hB,EAAW3B,EAAArf,QAAcihB,cACHze,IAApBvD,EAAQiiB,QAAwBjiB,EAAQiiB,QAAU,EACpD3Q,EAAAC,OAA8C,iBAAhCwQ,EAAW3B,EAAArf,QAAcihB,SAAuB,IAE9DD,EAAW3B,EAAArf,QAAcmhB,cACH3e,IAApBvD,EAAQof,SAAwBpf,EAAQof,QAC1C2C,EAAW3B,EAAArf,QAAcohB,SAAWniB,EAAQqC,OAC5C0f,EAAW3B,EAAArf,QAAcqhB,qBACG7e,IAA1BvD,EAAQsf,cAA8Btf,EAAQsf,cAAgBvJ,EAAAA,EAChEgM,EAAW3B,EAAArf,QAAcshB,qBACG9e,IAA1BvD,EAAQqf,cAA8Brf,EAAQqf,cAAgB,EAChE0C,EAAW3B,EAAArf,QAAcuhB,eACH/e,IAApBvD,EAAQwf,QAAwBxf,EAAQwf,SAAWzJ,EAAAA,EACrDgM,EAAW3B,EAAArf,QAAcwhB,eACHhf,IAApBvD,EAAQyf,QAAwBzf,EAAQyf,QAAU1J,EAAAA,EAMpD3U,EAAKohB,gBACsBjf,IAAzBwe,EAAWzf,UAA0BtC,EAAQsC,UAAS,kBACjDyf,EAAWzf,UAElBlB,EAAKqhB,cAAcV,GAMnB3gB,EAAKshB,OAAS,cA1CMC,EAAAb,EAAAhiB,GAgDtBgiB,EAAAlhB,UAAAgiB,aAAY,uBACEJ,YAUdV,EAAAlhB,UAAAmgB,cAAa,SAAC8B,GAC6B,IACnCC,EAAKpiB,KACJgiB,QAAM,CAETvd,MAAKzE,KACLuH,aAAyB1E,IAAhBsf,GAAmCA,GAE1CxgB,EAAM3B,KAAQqiB,mBACpBD,EAAMb,QAAUzE,EAAAC,MAAMnN,KAAK0S,MAA0B,IAArBtiB,KAAMuiB,cAAsB,IAAK,EAAG,GACpEH,EAAM/d,YAAWrE,KAAQsgB,iBACzB8B,EAAM1D,QAAO1e,KAAQwiB,aACrBJ,EAAM3O,OAAMzT,KAAQkI,YACpBka,EAAMzgB,YACOkB,IAAXlB,EAAuBA,GAA2B,IAAlBygB,EAAM7a,QAAoB8N,EAAAA,EAAW,EACvE+M,EAAMxD,cAAa5e,KAAQyiB,mBAC3BL,EAAMzD,cAAgB/O,KAAKwG,IAAGpW,KAAM0iB,mBAAoB,GACxDN,EAAMtD,QAAO9e,KAAQ2iB,aACrBP,EAAMrD,QAAO/e,KAAQ4iB,kBAChBZ,OAASI,EAEPA,GASThB,EAAAlhB,UAAA6f,eAAc,SAACC,UACNzZ,EAAAC,YAST4a,EAAAlhB,UAAAggB,oBAAmB,SAACC,UACX5Z,EAAAC,YAUT4a,EAAAlhB,UAAAgI,UAAS,uBAC6DqK,IAClEmN,EAAArf,QAAcwiB,SAUlBzB,EAAAlhB,UAAAuiB,iBAAgB,uBACqBlQ,IAAImN,EAAArf,QAAcqhB,iBASvDN,EAAAlhB,UAAAwiB,iBAAgB,uBACqBnQ,IAAImN,EAAArf,QAAcshB,iBASvDP,EAAAlhB,UAAAyiB,WAAU,uBAC2BpQ,IAAImN,EAAArf,QAAcuhB,WASvDR,EAAAlhB,UAAA0iB,WAAU,uBAC2BrQ,IAAImN,EAAArf,QAAcwhB,WASvDT,EAAAlhB,UAAAqiB,WAAU,uBAC2BhQ,IAAImN,EAAArf,QAAcihB,UAOvDF,EAAAlhB,UAAAogB,eAAc,kBACL/Z,EAAAC,YAST4a,EAAAlhB,UAAAsiB,WAAU,uBAC4BjQ,IAAImN,EAAArf,QAAcmhB,UAUxDJ,EAAAlhB,UAAAmiB,UAAS,uBAC4B9P,IAAImN,EAAArf,QAAcohB,UAUvDL,EAAAlhB,UAAA4iB,UAAS,SAACrP,QACHsH,IAAI2E,EAAArf,QAAcwiB,OAAQpP,IASjC2N,EAAAlhB,UAAA6iB,iBAAgB,SAACnE,QACV7D,IAAI2E,EAAArf,QAAcqhB,eAAgB9C,IASzCwC,EAAAlhB,UAAA8iB,iBAAgB,SAACrE,QACV5D,IAAI2E,EAAArf,QAAcshB,eAAgBhD,IAWzCyC,EAAAlhB,UAAA+iB,WAAU,SAAClE,QACJhE,IAAI2E,EAAArf,QAAcwhB,SAAU9C,IAWnCqC,EAAAlhB,UAAAgjB,WAAU,SAACpE,QACJ/D,IAAI2E,EAAArf,QAAcuhB,SAAU9C,IASnCsC,EAAAlhB,UAAAijB,WAAU,SAAC5B,GACT3Q,EAAAC,OAAqB,iBAAP0Q,EAAsB,SAC/BxG,IAAI2E,EAAArf,QAAcihB,QAASC,IASlCH,EAAAlhB,UAAAkjB,WAAU,SAAC1E,QACJ3D,IAAI2E,EAAArf,QAAcmhB,QAAS9C,IAUlC0C,EAAAlhB,UAAAmjB,UAAS,SAACC,QACHvI,IAAI2E,EAAArf,QAAcohB,QAAS6B,IAMlClC,EAAAlhB,UAAA6C,gBAAe,gBACJif,cACFA,OAAOvd,MAAQ,UACfud,OAAS,MAEhB5iB,EAAAc,UAAM6C,gBAAehD,KAAAC,OAEzBohB,EApSA,CAAwB5B,EAAAnf,8rBC5BxBkjB,EAAA,SAAAnkB,GAKK,SACHokB,EAAYjhB,EAAMkY,EAAKgJ,OAAvB/iB,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAOVU,EAAK+Z,IAAMA,EAQX/Z,EAAK+iB,SAAWA,WAtBaC,EAAAF,EAAApkB,GAwBjCokB,EAxBA,CAAiCG,EAAAtjB,SAqEjCujB,EAAA,SAAAxkB,GAGK,SACHykB,EAAYC,OAAZpjB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAuG,EAAAwd,OAAOrjB,GAMPA,EAAKsjB,QAAU,UAEInhB,IAAfihB,GACFpjB,EAAKqhB,cAAc+B,YApBAJ,EAAAG,EAAAzkB,GA8BvBykB,EAAA3jB,UAAAqS,IAAG,SAACkI,OACE5G,cACKmQ,SAAOhkB,KAASgkB,QAAQ7H,eAAe1B,KAC9C5G,EAAK7T,KAAQgkB,QAAQvJ,IAEhB5G,GAQTgQ,EAAA3jB,UAAA+jB,QAAO,uBACQD,SAAW3R,OAAO6R,KAAIlkB,KAAMgkB,UAAO,IAQlDH,EAAA3jB,UAAAikB,cAAa,uBACEH,SAAWzkB,EAAAC,OAAM,QAAUwkB,UAAO,IAMjDH,EAAA3jB,UAAAkkB,cAAa,wBACGJ,SAOhBH,EAAA3jB,UAAAmkB,OAAM,SAAC5J,EAAKgJ,OACNa,EACJA,EAAYC,EAAmB9J,QAC1B3X,cAAa,IAAKygB,EAAYe,EAAW7J,EAAKgJ,IACnDa,EAAYtjB,EAAAX,QAAgBY,oBACvB6B,cAAa,IAAKygB,EAAYe,EAAW7J,EAAKgJ,KAUrDI,EAAA3jB,UAAA6a,IAAG,SAACN,EAAK5G,EAAO2Q,OACRC,EAAMzkB,KAAQgkB,UAAOhkB,KAAUgkB,QAAO,OACxCQ,EACFC,EAAOhK,GAAO5G,WAER4P,EAAWgB,EAAOhK,GACxBgK,EAAOhK,GAAO5G,EACV4P,IAAa5P,GAAK7T,KACfqkB,OAAO5J,EAAKgJ,KAYvBI,EAAA3jB,UAAA6hB,cAAa,SAAC0C,EAAQD,WACT/J,KAAOgK,EAAMzkB,KACjB+a,IAAIN,EAAKgK,EAAOhK,GAAM+J,IAS/BX,EAAA3jB,UAAAwkB,gBAAe,SAAC/b,GACTA,EAAOqb,SAGZzkB,EAAAC,OAAMQ,KAAMgkB,UAAOhkB,KAAUgkB,QAAO,IAAQrb,EAAOqb,UASrDH,EAAA3jB,UAAAykB,MAAK,SAAClK,EAAK+J,WACAR,SAAWvJ,KAAGza,KAASgkB,QAAO,KAC/BP,EAAQzjB,KAAQgkB,QAAQvJ,eAClBuJ,QAAQvJ,GAChBlb,EAAAqlB,QAAO5kB,KAAMgkB,WAAOhkB,KACjBgkB,QAAU,MAEZQ,GAAUxkB,KACRqkB,OAAO5J,EAAKgJ,KAIzBI,EA1IA,CAAyBgB,EAAAxkB,SA+InBykB,EAAoB,YAMVP,EAAmB9J,UAC1BqK,EAAqB3I,eAAe1B,GACvCqK,EAAqBrK,GACpBqK,EAAqBrK,GAAG,UAAgBA,MAG/CsK,EAAenB,0ECjKfoB,EA9DA,WAGK,SACHC,EAAY1iB,GAGPvC,KACEklB,mBAIFllB,KACEmlB,iBAMFnlB,KACEuC,KAAOA,EAMTvC,KACE+L,OAAS,YAQhBkZ,EAAA/kB,UAAAklB,eAAc,gBACPD,kBAAmB,GAO1BF,EAAA/kB,UAAAmlB,gBAAe,gBACRH,oBAAqB,GAE9BD,EA9CA,2ECPAK,EAOE,CADArkB,eAAc,+nBC2GAskB,EAAQ9K,MAClB/P,MAAM8B,QAAQiO,GAAG,IAAA,IACV1W,EAAI,EAAGC,EAAKyW,EAAI7W,OAAQG,EAAIC,IAAMD,EACzCnD,EAAAoC,cAAcyX,EAAI1W,SAGpBnD,EAAAoC,cAA8DyX,OAIlE+K,EAhHA,SAAApmB,YACEqmB,QAAA/kB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKglB,UAAY,WARIC,EAAAF,EAAArmB,GAevBqmB,EAAAvlB,UAAAugB,QAAO,kBACEiF,eACF5iB,cAAc4d,EAAArgB,QAAUsgB,SAS/B8E,EAAAvlB,UAAA0lB,YAAW,uBACGF,WAYdD,EAAAvlB,UAAA2lB,GAAE,SAACtjB,EAAMujB,MACHpb,MAAM8B,QAAQjK,GAAI,SACdwjB,EAAMxjB,EAAKqB,OACXsgB,EAAI,IAAOxZ,MAAMqb,GACdhiB,EAAI,EAAGA,EAAIgiB,IAAOhiB,EACzBmgB,EAAKngB,GAAKnD,EAAAC,OAAMb,KAAOuC,EAAKwB,GAAI+hB,UAE3B5B,SAEAtjB,EAAAC,OAAMb,KAA8BuC,EAAOujB,IAatDL,EAAAvlB,UAAA8lB,KAAI,SAACzjB,EAAMujB,OACLrL,KACA/P,MAAM8B,QAAQjK,GAAI,KACdwjB,EAAMxjB,EAAKqB,OACjB6W,EAAG,IAAO/P,MAAMqb,WACPhiB,EAAI,EAAGA,EAAIgiB,IAAOhiB,EACzB0W,EAAI1W,GAAKnD,EAAAqlB,WAAUjmB,KAAOuC,EAAKwB,GAAI+hB,QAGrCrL,EAAM7Z,EAAAqlB,WAAUjmB,KAA8BuC,EAAOujB,UAElC,EAAYI,OAASzL,EACnCA,GASTgL,EAAAvlB,UAAAimB,GAAE,SAAC5jB,EAAMujB,OACDrL,EAA6BqL,EAAUI,UACzCzL,EACF8K,EAAQ9K,WACC/P,MAAM8B,QAAQjK,GAAI,IAAA,IAClBwB,EAAI,EAAGC,EAAKzB,EAAKqB,OAAQG,EAAIC,IAAMD,EAAC/D,KACtC0S,oBAAoBnQ,EAAKwB,GAAI+hB,aAG/BpT,oBAAoBnQ,EAAMujB,IAGrCL,EA9FA,CAAyBW,EAAA/lB,klBCwKzBgmB,EA/JA,SAAAjnB,GAGK,SACHknB,EAAYC,OAAZ7lB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK8lB,aAAeD,EAMpB7lB,EAAK+lB,iBAAmB,KAMxB/lB,EAAKgmB,aAAe,KAMpBhmB,EAAKimB,WAAa,cA7BDC,EAAAN,EAAAlnB,GAoCnBknB,EAAApmB,UAAAuS,iBAAgB,SAAClQ,EAAMujB,MAChBvjB,GAASujB,OAGRe,EAAS7mB,KAAQ2mB,aAAU3mB,KAAU2mB,WAAU,IAC/CG,EAAmBD,EAAUtkB,KAAUskB,EAAUtkB,GAAI,KAChB,IAAvCukB,EAAiBjb,QAAQia,IAC3BgB,EAAiBliB,KAAKkhB,KAc1BQ,EAAApmB,UAAA4C,cAAa,SAACikB,GACqC,IAC3C/F,EAAkB,iBAAL+F,EAAkB,IAAOpD,EAAAtjB,QAAM0mB,GAASA,EACrDxkB,EAAOye,EAAIze,KACZye,EAAIjV,SACPiV,EAAIjV,OAAM/L,KAAQwmB,cAAYxmB,UAG5BgnB,EADEH,EAAS7mB,KAAQ2mB,YAAU3mB,KAAS2mB,WAAWpkB,MAEjDskB,EAAS,KACLI,EAAWjnB,KAAQ0mB,eAAY1mB,KAAU0mB,aAAY,IACrDQ,EAAelnB,KACdymB,mBAAgBzmB,KAAUymB,iBAAgB,IAC3ClkB,KAAQ0kB,IACZA,EAAY1kB,GAAQ,EACpB2kB,EAAgB3kB,GAAQ,KAExB0kB,EAAY1kB,WACLwB,EAAI,EAAGC,EAAK6iB,EAAUjjB,OAAQG,EAAIC,IAAMD,MAU7B,KARhBijB,kBADmBH,EAAU9iB,GACqC8iB,EAChE9iB,GACCojB,YAAYnG,GAEqD6F,EAClE9iB,GACChE,KAAIC,KAAOghB,KAEWA,EAAIkE,mBAAkB,CAC/C8B,GAAY,aAIdC,EAAY1kB,GACY,IAAtB0kB,EAAY1kB,GAAW,KACrB6kB,EAAKF,EAAgB3kB,cAClB2kB,EAAgB3kB,GAChB6kB,KAAEpnB,KACF0S,oBAAoBnQ,EAAMgH,EAAA8d,aAE1BJ,EAAY1kB,UAEdykB,IAOXV,EAAApmB,UAAA6C,gBAAe,gBACR4jB,YAAcpnB,EAAAib,MAAKxa,KAAM2mB,aAUhCL,EAAApmB,UAAAonB,aAAY,SAAC/kB,eACEokB,YAAU3mB,KAAS2mB,WAAWpkB,SAAUM,GAQvDyjB,EAAApmB,UAAAwC,YAAW,SAAC6kB,gBACAZ,aAGHY,EACHA,KAAQvnB,KAAS2mB,WACjBtU,OAAO6R,KAAIlkB,KAAM2mB,YAAY/iB,OAAS,IAO5C0iB,EAAApmB,UAAAwS,oBAAmB,SAACnQ,EAAMujB,OAClBe,EAAS7mB,KAAQ2mB,YAAU3mB,KAAS2mB,WAAWpkB,MACjDskB,EAAS,KACL1Z,EAAQ0Z,EAAUhb,QAAQia,IAClB,IAAV3Y,SACOsZ,kBAAoBlkB,KAAIvC,KAASymB,kBAExCI,EAAU1Z,GAAS5D,EAAA8d,YACZZ,iBAAiBlkB,KAExBskB,EAAUW,OAAOra,EAAO,GACC,IAArB0Z,EAAUjjB,eAAY5D,KACZ2mB,WAAWpkB,OAMnC+jB,EA7JA,CAAqB3c,EAAAtJ,6KCdRonB,EACS,mBAAbpV,OAAO7S,OACV6S,OAAO7S,OAAM,SACHuM,EAAQ2b,MACZ3b,MAAAA,EAAuC,MAAA,IAC/B4b,UAAS,sDAGfC,EAASvV,OAAOtG,GACbhI,EAAI,EAAGC,EAAK2G,UAAU/G,OAAQG,EAAIC,IAAMD,EAAC,KAC1C4E,EAASgC,UAAU5G,MACrB4E,MAAAA,UACS8R,KAAO9R,EACZA,EAAOwT,eAAe1B,KACxBmN,EAAOnN,GAAO9R,EAAO8R,WAKtBmN,YAOCC,EAAMC,WACTC,KAAYD,SACdA,EAAOC,OAYLC,EACS,mBAAb3V,OAAOoS,OACVpS,OAAOoS,OAAM,SACHqD,OACFrD,EAAM,WACDsD,KAAYD,EACrBrD,EAAO7f,KAAKkjB,EAAOC,WAEdtD,YAQCwD,EAAQH,OAClBC,MACCA,KAAYD,EAAM,OACd,SAEDC,2EClEVG,EA8BE,CAxBAvH,OAAM,SAONwH,MAAK,QAELC,KAAI,OACJC,MAAK,QACLC,YAAW,cACXC,MAAK,QACLC,SAAQ,WACRC,UAAS,YACTC,SAAQ,WACRC,KAAI,OACJC,MAAK,QACLC,QAAO,UACPC,SAAQ,WACRC,KAAI,OACJC,OAAM,SACNC,UAAS,YACTC,MAAK,6KCSSC,EAAOpd,EAAQxJ,EAAMujB,EAAUsD,EAAUC,MACnDD,GAAYA,IAAard,IAC3B+Z,EAAWA,EAAS3kB,KAAKioB,IAEvBC,EAAQ,KACJC,EAAmBxD,EACzBA,EAAQ,WACN/Z,EAAO2G,oBAAoBnQ,EAAMujB,GACjCwD,EAAiBxe,MAAK9K,KAAO2K,gBAG3B4e,EAAS,CACbxd,OAAQA,EACRxJ,KAAMA,EACNujB,SAAUA,UAEZ/Z,EAAO0G,iBAAiBlQ,EAAMujB,GACvByD,WAuBOC,EAAWzd,EAAQxJ,EAAMujB,EAAUsD,UAC1CD,EAAOpd,EAAQxJ,EAAMujB,EAAUsD,GAAU,YAYlCK,EAAchP,GACxBA,GAAOA,EAAI1O,SACb0O,EAAI1O,OAAO2G,oBAAoB+H,EAAIlY,KAAMkY,EAAIqL,UAC7CvmB,EAAAib,MAAMC,6EC/FViP,EAUE,CATApI,QAAO,UACPE,QAAO,UACPqB,OAAM,SACNpB,QAAO,SACPC,eAAc,gBACdC,eAAc,gBACdE,SAAQ,UACRD,SAAQ,UACRjC,OAAM,kFCTRgK,EAuCE,CAjCAC,UAAS,YAOTC,WAAU,aAQVvmB,WAAU,aAQV0B,YAAW,cASX8kB,eAAc,0FCrChBC,EAKE,CAJAvlB,UAAS,YACTwlB,QAAO,UACPzlB,MAAK,QACL4jB,MAAK,oRC2BS8B,EAAI9iB,EAAY+iB,UAC9B/iB,EAAW,KAAO+iB,EAAM,GACxB/iB,EAAW,KAAO+iB,EAAM,GACjB/iB,WAuMOgjB,EAAOC,EAAaC,WAC9Bxf,GAAS,EACJ9G,EAAIqmB,EAAYxmB,OAAS,EAAGG,GAAK,IAAKA,EAAC,GAC1CqmB,EAAYrmB,IAAMsmB,EAAYtmB,GAAC,CACjC8G,GAAS,eAINA,WAqBOyf,EAAOnjB,EAAYuI,OAC3B6a,EAAW3a,KAAKD,IAAID,GACpB8a,EAAW5a,KAAKC,IAAIH,GACpBH,EAAIpI,EAAW,GAAKojB,EAAWpjB,EAAW,GAAKqjB,EAC/Chb,EAAIrI,EAAW,GAAKojB,EAAWpjB,EAAW,GAAKqjB,SACrDrjB,EAAW,GAAKoI,EAChBpI,EAAW,GAAKqI,EACTrI,WAoBOsjB,EAAMtjB,EAAYujB,UAChCvjB,EAAW,IAAMujB,EACjBvjB,EAAW,IAAMujB,EACVvjB,WA+GOwjB,EAAMxjB,EAAYO,MAC5BA,EAAWM,WAAQ,KACfG,EAAaC,EAAAC,SAASX,EAAWQ,aACjC0iB,EAAaC,EAAc1jB,EAAYO,EAAYS,GACrDyiB,IACFzjB,EAAW,IAAMyjB,EAAaziB,UAG3BhB,WAQO0jB,EAAc1jB,EAAYO,EAAYojB,OAC9C7iB,EAAmBP,EAAWQ,YAChC0iB,EAAa,KAEfljB,EAAWM,aACVb,EAAW,GAAKc,EAAiB,IAAMd,EAAW,GAAKc,EAAiB,IAAC,KAEpE8iB,EACJD,GAAyB1iB,EAAAC,SAASJ,GACpC2iB,EAAahb,KAAKoK,OACf7S,EAAW,GAAKc,EAAiB,IAAM8iB,UAGrCH,iDC9aOI,EAAUC,EAAQxpB,EAAOypB,OACjCC,OACctoB,IAAlBqoB,EAA8BD,EAAOG,QAAQF,GAAa,GAASD,EACjEI,EAAUF,EAAatf,QAAO,YAClCwf,GAAsB,IAAZA,EAAiBF,EAAavnB,OAASynB,GAChC5pB,EACb0pB,EAAY,IACRzgB,MAAM,EAAIjJ,EAAQ4pB,GAASta,KAAI,KAAQoa,qkBCyBjDG,EApCA,SAAAlsB,GAOK,SACHmsB,EAAYhpB,EAAMipB,EAA2BC,EAAgBC,OAA7DhrB,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAQVU,EAAKirB,sBAAwBH,EAO7B9qB,EAAK8B,WAAaipB,EAQlB/qB,EAAKkrB,QAAUF,WAhCOG,EAAAN,EAAAnsB,GAkC1BmsB,EAlCA,CAA0B5H,EAAAtjB,qPCebyrB,EAAY,YAgBZC,EAAkB,kBAgBlBC,EAAa,aASbC,EAAe,eAMtBC,EAAS,IAAOC,OAAM,iYASxBpb,KAAI,IAAA,KAGFqb,EAAmB,0DAeZC,EAAiB,SAAaC,OACnCC,EAAQD,EAASC,MAAML,OACxBK,EAAK,OACD,aAEHhrB,EAAK,CACTirB,WAAU,SACV3lB,KAAI,QACJtF,MAAK,SACLkrB,OAAM,SACNC,QAAO,UAEA3oB,EAAI,EAAGC,EAAKooB,EAAoBxoB,OAAQG,EAAIC,IAAMD,EAAC,KACpD8P,EAAQ0Y,EAAMxoB,EAAI,QACVlB,IAAVgR,IACFtS,EAAM6qB,EAAoBroB,IAAM8P,UAGpCtS,EAAMorB,SAAWprB,EAAMqrB,OAAOvZ,MAAK,QAC5B9R,k3BC5BIsrB,EAAW,kBAMXC,EAAgB,OAMhBC,EAAc,QAMdC,EAAe,GAMfC,EAAwB,EAMxBC,EAAe,QAMfC,EAAoB,GAMpBC,EAAkB,OAMlBC,EAAgB,SAMhBC,EAAmB,SAMnBC,EAAc,CAAI,EAAG,EAAG,EAAG,GAM3BC,EAAmB,EAKnBC,EAAY,IAAOjO,EAAAnf,SAUT,IAAO+lB,EAAA/lB,SACnB2a,QAAO,WAChB0S,QAAQC,KAAI,8BAKX,IAMCC,EA8GEC,EAnHFC,EAAiB,KAURC,EAAW,GAMXC,EAAY,eAMnBC,EAAUC,EAJRrnB,EAAI,QACJsnB,EAAc,sBACdpI,EAAMoI,EAAevqB,OACrBwqB,EAAI,2BAQP,SACMC,EAAYC,EAAWC,EAAYC,WACtCC,GAAY,EACP1qB,EAAI,EAAGA,EAAIgiB,IAAOhiB,EAAC,KACpB2qB,EAAgBP,EAAepqB,MACrCmqB,EAAiBS,EACfL,EAAS,IAASC,EAAU,IAAS1nB,EAAO6nB,EAC5CN,GAEEI,GAAcE,EAAa,KACvBjtB,EAAQktB,EACZL,EAAS,IAEPC,EAAU,IAEV1nB,EACA2nB,EAAU,IAEVE,EACFN,GAIFK,EAAYA,GAAahtB,GAASysB,WAGlCO,WAMGG,YACHC,GAAO,EACLC,EAAQrB,EAAaxJ,UAClBlgB,EAAI,EAAGC,EAAK8qB,EAAMlrB,OAAQG,EAAIC,IAAMD,EAAC,KACtCgrB,EAAOD,EAAM/qB,GACf0pB,EAAalb,IAAIwc,GAjDT,MAkDNV,EAAYvjB,MAAK9K,KAAO+uB,EAAK1b,MAAK,QACpC9T,EAAAib,MAAMuT,GAEND,EAAiB,KACjBF,OAAc/qB,EACd4qB,EAAa1S,IAAIgU,EAvDT,OAyDRtB,EAAa1S,IAAIgU,EAAMtB,EAAalb,IAAIwc,GAAQ,GAAG,GACnDF,GAAO,IAITA,IACFG,cAAcf,GACdA,OAAWprB,mBAIEypB,OACTyC,EAAOltB,EAAAotB,kBAAkB3C,MAC1ByC,UAGCpC,EAAWoC,EAAKpC,SACb5oB,EAAI,EAAGC,EAAK2oB,EAAS/oB,OAAQG,EAAIC,IAAMD,EAAC,KACzC6oB,EAASD,EAAS5oB,GAClB0W,EAAMsU,EAAKxtB,MAAK,KAAUwtB,EAAKtC,OAAM,KAAUG,OACvB/pB,IAA1B4qB,EAAalb,IAAIkI,KACnBgT,EAAa1S,IAAIN,EA9EP,KA8EqB,GAC1B4T,EAAYU,EAAKxtB,MAAOwtB,EAAKtC,OAAQG,KACxCa,EAAa1S,IAAIN,EAAK,GAAG,QACR5X,IAAborB,IACFA,EAAWiB,YAAYN,EAAO,SAnFjB,GA+FZO,WAKM7C,OACX5qB,EAASqsB,EAAYzB,MACXzpB,MAAVnB,EAAmB,IACjBsP,EAAAC,wBAAuB,KACnB8d,EAAOltB,EAAAotB,kBAAkB3C,GACzB8C,EAAUC,EAAY/C,EAAQ,MAIpC5qB,GAHmB4tB,MAAM3S,OAAOoS,EAAKvC,aACjC,IACA7P,OAAOoS,EAAKvC,cAGb4C,EAAQG,wBAA0BH,EAAQI,+BAExC3B,KACHA,EAAiBxsB,SAASC,cAAa,QACxBmuB,UAAS,IACxB5B,EAAetsB,MAAMmuB,UAAS,IAC9B7B,EAAetsB,MAAMouB,UAAS,OAC9B9B,EAAetsB,MAAMG,OAAM,OAC3BmsB,EAAetsB,MAAMquB,QAAO,IAC5B/B,EAAetsB,MAAMsuB,OAAM,OAC3BhC,EAAetsB,MAAMC,SAAQ,WAC7BqsB,EAAetsB,MAAM0D,QAAO,QAC5B4oB,EAAetsB,MAAMuuB,KAAI,YAE3BjC,EAAetsB,MAAMwtB,KAAOzC,EAC5BjrB,SAASsa,KAAKC,YAAYiS,GAC1BnsB,EAASmsB,EAAekC,aACxB1uB,SAASsa,KAAKzY,YAAY2qB,GAE5BE,EAAYzB,GAAY5qB,SAEnBA,GAQR,SACM2tB,EAAYN,EAAMX,UACpBN,IACHA,EAAiBhpB,EAAAkrB,sBAAsB,EAAG,IAExCjB,GAAQnB,IACVE,EAAeiB,KAAOA,EACtBnB,EAAcE,EAAeiB,MAExBjB,EAAemC,YAAY7B,YAQpBO,EAAiBI,EAAMX,UAC9BiB,EAAYN,EAAMX,GAAM3sB,eAUjByuB,EAAyBnB,EAAMX,EAAMrS,MAC/CqS,KAAQrS,EAAK,OACRA,EAAMqS,OAET3sB,EAAQktB,EAAiBI,EAAMX,UACrCrS,EAAMqS,GAAQ3sB,EACPA,WAUO0uB,EAAkBpB,EAAMqB,EAAOC,WACvCC,EAAWF,EAAMxsB,OACnBnC,EAAQ,EACHsC,EAAI,EAAGA,EAAIusB,IAAYvsB,EAAC,KACzBwsB,EAAe5B,EAAiBI,EAAMqB,EAAMrsB,IAClDtC,EAAQmO,KAAKwG,IAAI3U,EAAO8uB,GACxBF,EAAOzrB,KAAK2rB,UAEP9uB,WASO+uB,EAAe5E,EAAS7kB,EAAU0pB,EAASC,GACxC,IAAb3pB,IACF6kB,EAAQ+E,UAAUF,EAASC,GAC3B9E,EAAQgF,OAAO7pB,GACf6kB,EAAQ+E,WAAWF,GAAUC,aAiBjBG,EACdjF,EACA5d,EACAuT,EACAuP,EACAC,EACAC,EACAC,EACAC,EACA3hB,EACAC,EACAkb,GAEAkB,EAAQuF,OAEQ,IAAZ5P,IACFqK,EAAQwF,aAAe7P,GAErBvT,GACF4d,EAAQyF,aAAavmB,MAAM8gB,EAAS5d,GAGhB8iB,EAAcQ,qBAElC1F,EAAQ+E,UAAUphB,EAAGC,GACrBoc,EAAQlB,MAAMA,EAAM,GAAIA,EAAM,IAsC/B,SAC+B6G,EAAO3F,WACjC0F,EAAsBC,EAAMD,oBACzBvtB,EAAI,EAAGC,EAAKstB,EAAoB1tB,OAAQG,EAAIC,EAAID,GAAK,EACxD2G,MAAM8B,QAAQ8kB,EAAoBvtB,EAAI,IACxC6nB,EAAQ0F,EAAoBvtB,IAAI+G,MAC9B8gB,EACA0F,EAAoBvtB,EAAI,IAG1B6nB,EAAQ0F,EAAoBvtB,IAAMutB,EAAoBvtB,EAAI,GA/C5DytB,CAA+CV,EAAelF,IACrDlB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCkB,EAAQ+E,UAAUphB,EAAGC,GACrBoc,EAAQlB,MAAMA,EAAM,GAAIA,EAAM,IAC9BkB,EAAQ6F,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIFtF,EAAQ6F,UAC8DX,EACpEC,EACAC,EACAC,EACAC,EACA3hB,EACAC,EACAyhB,EAAIvG,EAAM,GACVwG,EAAIxG,EAAM,IAIdkB,EAAQ8F,yQCvcMC,EACdC,EACAC,EACAC,EACAC,OAEMC,EACJF,GAAkBA,EAAeluB,OAC7BkuB,EAAeG,QACfjhB,EAAAC,wBAAuB,IACnBa,gBAAgB8f,GAAa,IAAKC,GAAc,KACpDxwB,SAASC,cAAa,iBACxBswB,IACFI,EAAOvwB,MAAQmwB,GAEbC,IACFG,EAAOtwB,OAASmwB,GAG8BG,EAAOE,WAAU,KAE/DH,YAsCYI,EAAYC,EAASC,OAC7BC,EAASD,EAAQpvB,WACnBqvB,GACFA,EAAOC,aAAaH,EAASC,YAQjBG,EAAWthB,UAClBA,GAAQA,EAAKjO,WAAaiO,EAAKjO,WAAWC,YAAYgO,GAAQ,cAMvDuhB,EAAevhB,QACtBA,EAAKwhB,WACVxhB,EAAKhO,YAAYgO,EAAKwhB,oBAYVC,EAAgBzhB,EAAM0hB,WAC9BC,EAAc3hB,EAAK4hB,WAEhB/uB,EAAI,KAAWA,EAAC,KACjBgvB,EAAWF,EAAY9uB,GACvBivB,EAAWJ,EAAS7uB,OAGrBgvB,IAAaC,EAAQ,MAKtBD,IAAaC,IAKZD,EAMAC,EAOL9hB,EAAKjP,aAAa+wB,EAAUD,IAN1B7hB,EAAKhO,YAAY6vB,KACfhvB,GAPFmN,EAAK0K,YAAYoX,i3BCs9CvBC,EA38CA,SAAA7zB,GAGK,SACH8zB,EAAY5zB,OAAZoB,EACEtB,EAAAW,KAAAC,OAAAA,KAEMmzB,EAo3CP,SAC4B7zB,GAG1B,IACC8zB,EAAsB,UACUvwB,IAAhCvD,EAAQ8zB,sBACVA,EACoC,iBAA3B9zB,EAAQ8zB,oBACX/xB,SAASgyB,eAAe/zB,EAAQ8zB,qBAChC9zB,EAAQ8zB,qBAKb,IAeC3zB,EAaAG,EAcA0zB,EAzCE7O,EAAM,GAEN8O,EACJj0B,EAAQk0B,QAC2C,mBAAzBl0B,EAAQk0B,OAAQC,UACXn0B,EAAQk0B,OAAM,IACrCE,EAAArzB,QAAU,CAAEmzB,OAAmCl0B,EAAQk0B,SACjE/O,EAAOkP,EAAAtzB,QAAYuzB,YAAcL,EAEjC9O,EAAOkP,EAAAtzB,QAAYwzB,QAAUv0B,EAAQyM,OAErC0Y,EAAOkP,EAAAtzB,QAAYyzB,WACAjxB,IAAjBvD,EAAQy0B,KAAqBz0B,EAAQy0B,KAAI,IAAOC,EAAA3zB,aAGzBwC,IAArBvD,EAAQG,WACNiL,MAAM8B,QAAQlN,EAAQG,UACxBA,EAAQ,IAAOw0B,EAAA5zB,QAAWf,EAAQG,SAASqI,UAE3C8I,EAAAC,OACsD,mBAA1BvR,EAAQG,SAAUy0B,SAC5C,IAEFz0B,EAAsCH,EAAQG,gBAKrBoD,IAAzBvD,EAAQM,eACN8K,MAAM8B,QAAQlN,EAAQM,cACxBA,EAAY,IAAOq0B,EAAA5zB,QAAWf,EAAQM,aAAakI,UAEnD8I,EAAAC,OAC0D,mBAA9BvR,EAAQM,aAAcs0B,SAEhD,IAEFt0B,EAA0CN,EAAQM,oBAK7BiD,IAArBvD,EAAQg0B,SACN5oB,MAAM8B,QAAQlN,EAAQg0B,UACxBA,EAAQ,IAAOW,EAAA5zB,QAAWf,EAAQg0B,SAASxrB,UAE3C8I,EAAAC,OACsD,mBAA1BvR,EAAQg0B,SAAUY,SAC5C,IAEFZ,EAAWh0B,EAAQg0B,UAGrBA,EAAQ,IAAOW,EAAA5zB,eAIfZ,SAAUA,EACVG,aAAcA,EACdwzB,oBAAqBA,EACrBE,SAAUA,EACV7O,OAAQA,GAj8CgB0P,CAAsB70B,UAG9CoB,EAAK0zB,yBAA2B1zB,EAAK2zB,mBAAmBlzB,KAAKT,GAM7DA,EAAK4zB,sBACyBzxB,IAA5BvD,EAAQi1B,gBAAgCj1B,EAAQi1B,gBAAkB,GAMpE7zB,EAAK8zB,iBACoB3xB,IAAvBvD,EAAQm1B,WACJn1B,EAAQm1B,WACRzjB,EAAA0jB,mBAMNh0B,EAAKi0B,yBAMLj0B,EAAKk0B,mBAKLl0B,EAAKm0B,gBAA6C,gBAC3CD,wBAAqB/xB,OACrBiyB,aAAaC,KAAKC,QACvB7zB,KAAKT,GAMPA,EAAKu0B,4BAA8BtuB,EAAAuuB,SAMnCx0B,EAAKy0B,4BAA8BxuB,EAAAuuB,SAMnCx0B,EAAK00B,YAAc,EAMnB10B,EAAK20B,YAAc,KAOnB30B,EAAK40B,gBAAkB,KAMvB50B,EAAK60B,yBAA2B,KAMhC70B,EAAK80B,uBAAyB,KAM9B90B,EAAK+0B,gCAAkC,KAMvC/0B,EAAKg1B,UAAYr0B,SAASC,cAAa,OACvCZ,EAAKg1B,UAAU9zB,UAAS,eACT,iBAAsB4Q,OAAM,YAAc,IACzD9R,EAAKg1B,UAAUn0B,MAAMC,SAAQ,WAC7Bd,EAAKg1B,UAAUn0B,MAAMo0B,SAAQ,SAC7Bj1B,EAAKg1B,UAAUn0B,MAAME,MAAK,OAC1Bf,EAAKg1B,UAAUn0B,MAAMG,OAAM,OAM3BhB,EAAKk1B,kBAAoBv0B,SAASC,cAAa,OAC/CZ,EAAKk1B,kBAAkBr0B,MAAMC,SAAQ,WACrCd,EAAKk1B,kBAAkBr0B,MAAMI,OAAM,IACnCjB,EAAKk1B,kBAAkBr0B,MAAME,MAAK,OAClCf,EAAKk1B,kBAAkBr0B,MAAMG,OAAM,OACnChB,EAAKk1B,kBAAkBr0B,MAAMs0B,cAAa,OAC1Cn1B,EAAKk1B,kBAAkBh0B,UAAS,sBAChClB,EAAKg1B,UAAU9Z,YAAYlb,EAAKk1B,mBAMhCl1B,EAAKo1B,2BAA6Bz0B,SAASC,cAAa,OACxDZ,EAAKo1B,2BAA2Bv0B,MAAMC,SAAQ,WAC9Cd,EAAKo1B,2BAA2Bv0B,MAAMI,OAAM,IAC5CjB,EAAKo1B,2BAA2Bv0B,MAAME,MAAK,OAC3Cf,EAAKo1B,2BAA2Bv0B,MAAMG,OAAM,OAC5ChB,EAAKo1B,2BAA2Bv0B,MAAMs0B,cAAa,OACnDn1B,EAAKo1B,2BAA2Bl0B,UAAS,gCACzClB,EAAKg1B,UAAU9Z,YAAYlb,EAAKo1B,4BAMhCp1B,EAAKq1B,wBAA0B,KAM/Br1B,EAAKs1B,eAAiB12B,EAAQ22B,cAM9Bv1B,EAAKw1B,qBAAuB/C,EAAgBC,oBAM5C1yB,EAAKy1B,gBAAkB,KAMvBz1B,EAAKjB,SAAW0zB,EAAgB1zB,UAAQ,IAAQw0B,EAAA5zB,QAMhDK,EAAKd,aAAeuzB,EAAgBvzB,cAAY,IAAQq0B,EAAA5zB,QAMxDK,EAAK01B,UAAYjD,EAAgBG,SAOjC5yB,EAAK21B,gBAAe,GAMpB31B,EAAK4e,UAAY,KAMjB5e,EAAK41B,cAML51B,EAAK61B,qBAAoB,GAMzB71B,EAAK81B,WAAU,IAAOC,EAAAp2B,QACpBK,EAAKg2B,gBAAgBv1B,KAAKT,GAC1BA,EAAKi2B,kBAAkBx1B,KAAKT,IAG9BA,EAAK+R,iBACH+M,EAAAC,mBAAmBkU,EAAAtzB,QAAYuzB,YAC/BlzB,EAAKk2B,0BAEPl2B,EAAK+R,iBACH+M,EAAAC,mBAAmBkU,EAAAtzB,QAAYyzB,MAC/BpzB,EAAKm2B,oBAEPn2B,EAAK+R,iBACH+M,EAAAC,mBAAmBkU,EAAAtzB,QAAYy2B,MAC/Bp2B,EAAKq2B,oBAEPr2B,EAAK+R,iBACH+M,EAAAC,mBAAmBkU,EAAAtzB,QAAYwzB,QAC/BnzB,EAAKs2B,sBAKPt2B,EAAKqhB,cAAcoR,EAAgB1O,QAEnC/jB,EAAKjB,SAASwJ,QAIT,SACOguB,GACRA,EAAQ1X,OAAMvf,OACdmB,KAAKT,IAGTA,EAAKjB,SAASgT,iBACZykB,EAAA72B,QAAoB82B,IAGjB,SACOpQ,GACRA,EAAMriB,QAAQ6a,OAAMvf,OACpBmB,KAAKT,IAGTA,EAAKjB,SAASgT,iBACZykB,EAAA72B,QAAoB+2B,OAGjB,SACOrQ,GACRA,EAAMriB,QAAQ6a,OAAO,OACrBpe,KAAKT,IAGTA,EAAKd,aAAaqJ,QAIb,SACOouB,GACRA,EAAY9X,OAAMvf,OAClBmB,KAAKT,IAGTA,EAAKd,aAAa6S,iBAChBykB,EAAA72B,QAAoB82B,IAGjB,SACOpQ,GACRA,EAAMriB,QAAQ6a,OAAMvf,OACpBmB,KAAKT,IAGTA,EAAKd,aAAa6S,iBAChBykB,EAAA72B,QAAoB+2B,OAGjB,SACOrQ,GACRA,EAAMriB,QAAQ6a,OAAO,OACrBpe,KAAKT,IAGTA,EAAK01B,UAAUntB,QAAQvI,EAAK42B,oBAAoBn2B,KAAKT,IAErDA,EAAK01B,UAAU3jB,iBACbykB,EAAA72B,QAAoB82B,IAGjB,SACOpQ,QACHuQ,oBAC4CvQ,EAAMriB,UAEvDvD,KAAKT,IAGTA,EAAK01B,UAAU3jB,iBACbykB,EAAA72B,QAAoB+2B,OAGjB,SACOrQ,OAEFwQ,EADyDxQ,EAAMriB,QAClD8yB,aACR30B,IAAP00B,UAAgBv3B,KACNq2B,gBAAgBkB,EAAGE,YAEjC1Q,EAAMriB,QAAQ6a,OAAO,OACrBpe,KAAKT,aA9Tcg3B,EAAAxE,EAAA9zB,GAsUzB8zB,EAAAhzB,UAAAC,eAAc,qBACFmN,MAAK,oDAQjB4lB,EAAAhzB,UAAAy3B,WAAU,SAACV,QACJW,cAAchzB,KAAKqyB,IAY1B/D,EAAAhzB,UAAA23B,eAAc,SAACR,QACRS,kBAAkBlzB,KAAKyyB,IAU9BnE,EAAAhzB,UAAA63B,SAAQ,SAACtzB,GACKzE,KAAQg4B,gBAAgBvE,YAC7B7uB,KAAKH,IAQdyuB,EAAAhzB,UAAA+3B,WAAU,SAACC,QACJC,cAAcvzB,KAAKszB,IAQ1BhF,EAAAhzB,UAAAo3B,oBAAmB,SAACY,OACZX,EAAKW,EAAQV,aACR30B,IAAP00B,IAAgBv3B,KACbq2B,gBAAgBkB,EAAGE,YAAcS,GAExCA,EAAQ3Y,OAAMvf,OAOhBkzB,EAAAhzB,UAAA6C,gBAAe,gBACRq1B,UAAU,MACfh5B,EAAAc,UAAM6C,gBAAehD,KAAAC,OAqBvBkzB,EAAAhzB,UAAAm4B,sBAAqB,SAACjzB,EAAOE,EAAUgzB,WAC3BjD,iBAGJluB,EAAUnH,KAAQu4B,+BAA+BnzB,GAEjDC,OACyBxC,KAF/By1B,OAA8Bz1B,IAAhBy1B,EAA4BA,EAAW,IAEvCjzB,aAA6BizB,EAAYjzB,aAAe,EAChEE,OACwB1C,IAA5By1B,EAAY/yB,YAA4B+yB,EAAY/yB,YAAcgE,EAAAC,KAC9DpC,GAA4C,IAA7BkxB,EAAYlxB,yBACrBkY,UAAUpY,2BACpBC,EAAUnH,KACLq1B,YACLhwB,EACA+B,EACA9B,EACA,KACAC,EACA,QAYJ2tB,EAAAhzB,UAAAs4B,mBAAkB,SAACpzB,EAAOkzB,OAClBG,EAAQ,eACTJ,sBACHjzB,GAAK,SACKoC,GACRixB,EAAS7zB,KAAK4C,KAEhB8wB,GAEKG,GAwBTvF,EAAAhzB,UAAAiF,oBAAmB,SAACC,EAAOE,EAAUgzB,WACzBjD,iBAGJ/1B,EAAUg5B,GAAW,GACrBjzB,OACqBxC,IAAzBvD,EAAQ+F,aAA6B/F,EAAQ+F,aAAe,EACxDE,EAAcjG,EAAQiG,aAAegE,EAAAC,iBAC/B8V,UAAUna,oBACpBC,EAAKpF,KACAq1B,YACLhwB,EACAC,EACAC,KAYJ2tB,EAAAhzB,UAAAw4B,kBAAiB,SAACtzB,EAAOkzB,YACbjD,YAAW,OACZ,MAEHluB,EAAUnH,KAAQu4B,+BAA+BnzB,GAEjDG,OACwB1C,KAF9By1B,OAA8Bz1B,IAAhBy1B,EAA4BA,EAAW,IAEvC/yB,YAA4B+yB,EAAY/yB,YAAcgE,EAAAC,KAC9DnE,OACyBxC,IAA7By1B,EAAYjzB,aAA6BizB,EAAYjzB,aAAe,EAChE+B,GAA4C,IAA7BkxB,EAAYlxB,yBACrBkY,UAAUhW,uBACpBnC,EAAUnH,KACLq1B,YACLhwB,EACA+B,EACA7B,EACA,OAUJ2tB,EAAAhzB,UAAAy4B,mBAAkB,SAAC5R,eACL6R,uBAAsB54B,KAAM64B,cAAc9R,KAQxDmM,EAAAhzB,UAAA44B,2BAA0B,SAAC/R,eACbwR,+BAA8Bv4B,KAAM64B,cAAc9R,KAShEmM,EAAAhzB,UAAA24B,cAAa,SAAC9R,OACNgS,EAAgB/4B,KAAQ01B,UAAUsD,wBAClCC,qBAEgBlS,EACWA,EAAOmS,eAAe,GACtBnS,SAG/BkS,EAAcE,QAAUJ,EAAiBjJ,KACzCmJ,EAAcG,QAAUL,EAAiBM,MAa7CnG,EAAAhzB,UAAAo5B,UAAS,uBACkD/mB,IACvDohB,EAAAtzB,QAAYwzB,SAWhBX,EAAAhzB,UAAAq5B,iBAAgB,eACRxtB,EAAM/L,KAAQs5B,wBACLz2B,IAAXkJ,EACkB,iBAANA,EACV1K,SAASgyB,eAAetnB,GACxBA,EAEG,MAWXmnB,EAAAhzB,UAAA04B,uBAAsB,SAACxzB,UACdo0B,EAAAC,iBAAgBz5B,KAChBu4B,+BAA+BnzB,GAAKpF,KACpC05B,UAAUC,kBAUnBzG,EAAAhzB,UAAAq4B,+BAA8B,SAACnzB,OACvB5C,EAAUxC,KAAQq1B,mBACnB7yB,EAGImE,EAAAmE,MACLtI,EAAWkE,2BACXtB,EAAM0C,SAJD,MAeXorB,EAAAhzB,UAAA03B,YAAW,uBACGn4B,UASdyzB,EAAAhzB,UAAAi4B,YAAW,uBACG/B,WAWdlD,EAAAhzB,UAAA05B,eAAc,SAACrC,OACPW,EAAOl4B,KAAQq2B,gBAAgBkB,EAAGE,wBACrB50B,IAAZq1B,EAAwBA,EAAU,MAW3ChF,EAAAhzB,UAAA43B,gBAAe,uBACDl4B,cASdszB,EAAAhzB,UAAA83B,cAAa,uBAC4BzlB,IAAIohB,EAAAtzB,QAAYuzB,aAQzDV,EAAAhzB,UAAAuzB,UAAS,kBACKzzB,KAAQg4B,gBAAgBvE,aAOtCP,EAAAhzB,UAAA25B,WAAU,mBACFt2B,EAAgBvD,KAAQg4B,gBAAgB9X,sBACrCnc,EAAI,EAAGC,EAAKT,EAAiBK,OAAQG,EAAIC,IAAMD,EAAC,KAEjD4E,EADQpF,EAAiBQ,GAAGU,MACuCmE,eACrED,GAAUA,EAAOmxB,QAAO,OACnB,SAGJ,GAUT5G,EAAAhzB,UAAA65B,uBAAsB,SAAC5yB,OACf6yB,EAAiBR,EAAAS,mBACrB9yB,EAAUnH,KACL05B,UAAUC,6BAELO,+BAA+BF,IAS7C9G,EAAAhzB,UAAAg6B,+BAA8B,SAAC/yB,OACvB3E,EAAUxC,KAAQq1B,mBACnB7yB,EAGImE,EAAAmE,MACLtI,EAAWiE,2BACXU,EAAWW,MAAM,EAAG,IAJf,MAaXorB,EAAAhzB,UAAAyF,YAAW,uBACG2Z,WASd4T,EAAAhzB,UAAAi6B,QAAO,uBAC0D5nB,IAC7DohB,EAAAtzB,QAAYy2B,OAWhB5D,EAAAhzB,UAAAw5B,QAAO,uBAC4BnnB,IAAIohB,EAAAtzB,QAAYyzB,OAQnDZ,EAAAhzB,UAAA8B,YAAW,uBACG0zB,WAUdxC,EAAAhzB,UAAAk6B,oBAAmB,uBACLxE,mBAUd1C,EAAAhzB,UAAAm6B,6BAA4B,uBACdvE,4BAMd5C,EAAAhzB,UAAAo6B,iBAAgB,eACRC,EAAav6B,KAAQu5B,0BACpBgB,EAAgBA,EAAcC,cAAgBn5B,UAUvD6xB,EAAAhzB,UAAAw2B,gBAAe,SAAC+D,EAAMC,EAAeC,EAAYC,UACxCnE,EAAAC,gBAAe12B,KACfq1B,YACLoF,EACAC,EACAC,EACAC,IAQJ1H,EAAAhzB,UAAAm0B,mBAAkB,SAACwG,EAActT,OACzBhlB,EAAOglB,GAAYsT,EAAat4B,KAChCu4B,EAAe,IAAOC,EAAA16B,QAAgBkC,EAAIvC,KAAQ66B,QACnDG,sBAAsBF,IAM7B5H,EAAAhzB,UAAA86B,sBAAqB,SAACF,WACVzF,iBAKJ4F,EAA6CH,EAAgBG,cAC7D3W,EAAY2W,EAAc14B,QAE9B+hB,IAAc4W,EAAA76B,QAAiB86B,aAC/B7W,IAAc5D,EAAArgB,QAAU6oB,OACxB5E,IAAc5D,EAAArgB,QAAUwoB,QAAO,KAEzBuS,EAAGp7B,KAAQs6B,mBACXe,EAAQr7B,KAAQ01B,UAAU4F,YAAWt7B,KAClC01B,UAAU4F,cACfF,EACErvB,EAA8BkvB,EAAclvB,eAI3C+pB,2BAA2ByF,SAASxvB,MAKvCsvB,IAAaD,EAAMA,EAAII,gBAAkBH,GAAUE,SAASxvB,GAAM,UAKxE+uB,EAAgBt4B,WAAUxC,KAAQq1B,aACU,SAAnCvyB,cAAcg4B,WACfW,EAAiBz7B,KAAQ83B,kBAAkB5D,WAAWpsB,QACnD/D,EAAI03B,EAAkB73B,OAAS,EAAGG,GAAK,EAAGA,IAAC,KAC5CszB,EAAcoE,EAAkB13B,MAEpCszB,EAAY50B,WAAMzC,MACjBq3B,EAAYqE,aAAS17B,KAChBu5B,uBAIKlC,EAAYlQ,YAAY2T,IACxBA,EAAgB5V,mBAAkB,SAUrDgO,EAAAhzB,UAAAy7B,iBAAgB,eACRn5B,EAAUxC,KAAQq1B,YAWlBuG,EAAS57B,KAAQw2B,eAClBoF,EAAUhX,UAAO,KAChBiX,EAAe77B,KAAQs0B,iBACvBwH,EAAcD,KACdr5B,EAAU,KACNu5B,EAAQv5B,EAAWw5B,aACrBD,EAAME,EAAA57B,QAAS67B,YAAcH,EAAME,EAAA57B,QAAS87B,aAAW,KACnDC,EAAmBrH,KAAKC,MAAQxyB,EAAW65B,KAAO,EACxDR,EAAkBO,EAAmB,EAAI,EACzCN,EAAcM,EAAmB,EAAI,GAGrCR,EAAUU,kBAAoBT,IAChCD,EAAUW,eACVX,EAAUY,cAAcX,EAAiBC,KAK3Ct5B,IAAUxC,KACL0C,YAAYW,EAAAhD,QAAgBypB,iBAChCtnB,EAAWi6B,SAAOz8B,KACbw2B,WAAW8F,mBAAet8B,KAC1B65B,cAAU75B,KAEXsf,UAAUhd,oBACbe,EAAAhD,QAAgBypB,eAChBtnB,WAIEkH,EAAmB1J,KAAQu2B,qBACxBxyB,EAAI,EAAGC,EAAK0F,EAAoB9F,OAAQG,EAAIC,IAAMD,EACzD2F,EAAoB3F,GAAC/D,KAAQwC,GAE/BkH,EAAoB9F,OAAS,GAM/BsvB,EAAAhzB,UAAA62B,mBAAkB,gBACP2C,YAAO15B,KAAY05B,UAAUgD,gBAAY18B,KAC3C05B,UAAUiD,mBAAmB,QAG/Bh4B,UAMPuuB,EAAAhzB,UAAA82B,qBAAoB,eAMduD,UACKjB,cACPiB,EAAav6B,KAAQu5B,yBAGdxD,wBAAuB,SACrBhyB,EAAI,EAAGC,EAAEhE,KAAQm2B,gBAAgBvyB,OAAQG,EAAIC,IAAMD,EAC1DnD,EAAAoC,cAAahD,KAAMm2B,gBAAgBpyB,SAEhCoyB,gBAAkB,UAClBT,UAAUhjB,oBACbgO,EAAArgB,QAAUioB,YAAWtoB,KAChBo0B,+BAEFsB,UAAUhjB,oBACbgO,EAAArgB,QAAU6oB,MAAKlpB,KACVo0B,+BAEoBvxB,SAAlByzB,gBACP5jB,oBAAoBgO,EAAArgB,QAAU2oB,OAAMhpB,KAAOs2B,eAAe,QACrDA,mBAAgBzzB,QAElBkzB,wBAAwBhsB,eACxBgsB,wBAA0B,KAC/BjxB,EAAA83B,WAAU58B,KAAM01B,cAGb6E,WAsBQ9f,KATX8f,EAAc3e,YAAW5b,KAAM01B,gBACrBpW,YAAStf,KACZsf,UAAStf,KAAQG,uBAGnB41B,wBAAuB,IAAO8G,EAAAx8B,QAAsBL,KAAAA,KAElDg2B,gBAEW8G,EAAAz8B,QAAmBL,KAC9B+1B,wBAAwBtjB,iBAC3BqqB,EAAAz8B,QAAoBoa,GAAGza,KAClBg7B,sBAAsB75B,KAAInB,YAG9B01B,UAAUjjB,iBACbiO,EAAArgB,QAAUioB,YAAWtoB,KAChBo0B,0BACL,QAEGsB,UAAUjjB,iBACbiO,EAAArgB,QAAU6oB,MAAKlpB,KACVo0B,2BACLpjB,EAAA+rB,yBAAuB,CAAI3qB,SAAS,QAGhCghB,EAAmBpzB,KAASk2B,qBACjBl2B,KACRk2B,qBADLqE,OAECpE,gBAAe,CAClBv1B,EAAAC,OACEuyB,EACA1S,EAAArgB,QAAUwoB,QAAO7oB,KACZq0B,mBAAkBr0B,MAGzBY,EAAAC,OACEuyB,EACA1S,EAAArgB,QAAUyoB,SAAQ9oB,KACbq0B,mBAAkBr0B,YAKjBs2B,qBACHA,cAAat2B,KAAQg9B,WAAW77B,KAAInB,MACzCwS,OAAOC,iBAAiBiO,EAAArgB,QAAU2oB,OAAMhpB,KAAOs2B,eAAe,cA1DvDhX,YACP2d,aAAYj9B,KAAM20B,+BACbA,8BAA2B9xB,OAC3B0zB,qBAAqB3yB,OAAS,OAC9B0b,UAAUvV,eACVuV,UAAY,WAEVsV,qBACPsI,qBAAoBl9B,KAAM40B,yBACrBA,wBAAqB/xB,QAqDzBm6B,cAQP9J,EAAAhzB,UAAAy2B,kBAAiB,gBACVhyB,UAMPuuB,EAAAhzB,UAAAi9B,2BAA0B,gBACnBx4B,UAMPuuB,EAAAhzB,UAAA22B,mBAAkB,gBACPtB,2BACP30B,EAAAoC,cAAahD,KAAMu1B,+BACdA,yBAA2B,WAEzBC,yBACP50B,EAAAoC,cAAahD,KAAMw1B,6BACdA,uBAAyB,UAE1BzB,EAAI/zB,KAAQ05B,UACd3F,SACGqJ,2BAEA7H,yBAA2B30B,EAAAC,OAC9BkzB,EACA/yB,EAAAX,QAAgBY,eAAcjB,KACzBm9B,2BAA0Bn9B,WAG5Bw1B,uBAAyB50B,EAAAC,OAC5BkzB,EACArT,EAAArgB,QAAUsgB,OAAM3gB,KACXm9B,2BAA0Bn9B,MAIjC+zB,EAAK4I,mBAAmB,SAErBh4B,UAMPuuB,EAAAhzB,UAAA02B,yBAAwB,gBACbnB,uCACFA,gCAAgCxsB,QAAQrI,EAAAoC,oBACxCyyB,gCAAkC,UAEnClC,EAAUvzB,KAAQg4B,gBACpBzE,IAAUvzB,KACPy1B,gCAA+B,CAClC70B,EAAAC,OAAO0yB,EAAYvyB,EAAAX,QAAgBY,eAAcjB,KAAO2E,OAAM3E,MAC9DY,EAAAC,OAAO0yB,EAAY7S,EAAArgB,QAAUsgB,OAAM3gB,KAAO2E,OAAM3E,aAG/C2E,UAMPuuB,EAAAhzB,UAAAm9B,WAAU,wBACMhI,aAOhBnC,EAAAhzB,UAAAo9B,WAAU,gBACC1I,oBACPsI,qBAAoBl9B,KAAM40B,yBAEvBC,mBAMP3B,EAAAhzB,UAAAgB,WAAU,mBACFsE,EAAWxF,KAAQg4B,gBAAgB9X,sBAChCnc,EAAI,EAAGC,EAAKwB,EAAY5B,OAAQG,EAAIC,IAAMD,EAAC,KAC5CU,EAAQe,EAAYzB,GAAGU,MACzBA,EAAMgB,eACRhB,EAAMkB,cAAc43B,uBAS1BrK,EAAAhzB,UAAAyE,OAAM,gBACK2a,gBAAyCzc,IAAhC7C,KAAS40B,qBAAgC50B,KACpD40B,mBAAqB4I,sBAAqBx9B,KAAM60B,mBAWzD3B,EAAAhzB,UAAAu9B,cAAa,SAACxG,eACAW,cAAc8F,OAAOzG,IAUnC/D,EAAAhzB,UAAAy9B,kBAAiB,SAACtG,eACJS,kBAAkB4F,OAAOrG,IAUvCnE,EAAAhzB,UAAA09B,YAAW,SAACn5B,UACEzE,KAAQg4B,gBAAgBvE,YACtBiK,OAAOj5B,IAUvByuB,EAAAhzB,UAAA29B,cAAa,SAAC3F,eACAC,cAAcuF,OAAOxF,IAOnChF,EAAAhzB,UAAA40B,aAAY,SAACuH,OAAb37B,EAAAV,KACQ6G,EAAI7G,KAAQm6B,UACZpG,EAAI/zB,KAAQ05B,UACZoE,EAAkB99B,KAAQq1B,YAE5B7yB,EAAa,aACJK,IAATgE,GAAsBk3B,EAAAC,QAAQn3B,IAASktB,GAAQA,EAAKkK,QAAK,KACrDjC,EAAYjI,EAAKmK,SAAQl+B,KACxBq1B,YAAWr1B,KAAQq1B,YAAY2G,eAAYn5B,GAE5Cc,EAAYowB,EAAKxT,WACvB/d,EAAU,CACRi6B,SAAS,EACTh2B,2BAA0BzG,KAAOi1B,4BACjCkJ,cAAe,KACf1qB,OAAQrL,EAAAg2B,kBACNz6B,EAAUqD,OACVrD,EAAUmD,WACVnD,EAAUoD,SACVF,GAEFsG,MAAKnN,KAAOo1B,cACZlxB,WAAY,EACZX,iBAAgBvD,KAAOg4B,gBAAgB9X,sBACvCuU,WAAUz0B,KAAOw0B,YACjB9tB,2BAA0B1G,KAAOm1B,4BACjCzrB,oBAAmB,GACnB7C,KAAMA,EACN+0B,UAAS57B,KAAOw2B,WAChB6F,KAAMA,EACNgC,UAAS,GACT16B,UAAWA,EACXq4B,UAAWA,EACXsC,YAAW,YAIVjJ,YAAc7yB,OACd8c,UAAUnc,YAAYX,GAEvBA,EAAU,IACRA,EAAWi6B,SAAOz8B,KACf2E,SAEP+F,MAAMxK,UAAU0E,KAAKkG,MAAK9K,KACnBu2B,qBACL/zB,EAAWkH,qBAGTo0B,IACa99B,KACPs1B,kBACJltB,EAAAwc,QAAO5kB,KAAMs1B,mBACZltB,EAAAyC,OAAOrI,EAAWiR,OAAMzT,KAAOs1B,yBAE7BxyB,cAAa,IACZy7B,EAAAl+B,QAASm+B,EAAAn+B,QAAao+B,UAASz+B,KAAQ89B,SAExCxI,gBAAkBltB,EAAAs2B,oBAAmB1+B,KAAMs1B,kBAI1Ct1B,KACHs1B,kBACJ9yB,EAAWw5B,UAAUC,EAAA57B,QAAS67B,aAC9B15B,EAAWw5B,UAAUC,EAAA57B,QAAS87B,eAC9B/zB,EAAAyC,OAAOrI,EAAWiR,OAAMzT,KAAOs1B,wBAG3BxyB,cAAa,IACZy7B,EAAAl+B,QAASm+B,EAAAn+B,QAAas+B,QAAO3+B,KAAQwC,IAE3C4F,EAAAw2B,MAAMp8B,EAAWiR,OAAMzT,KAAOs1B,uBAI7BxyB,cAAa,IAAKy7B,EAAAl+B,QAASm+B,EAAAn+B,QAAawpB,WAAU7pB,KAAQwC,SAErDmyB,2BAAwB30B,KAC3B20B,yBAA2BkK,YAAU,WACxCn+B,EAAKi0B,8BAA2B9xB,EAChCnC,EAAKi7B,qBACJ,KAUPzI,EAAAhzB,UAAA4+B,cAAa,SAACvL,QACPxY,IAAI4Y,EAAAtzB,QAAYuzB,WAAYL,IASnCL,EAAAhzB,UAAA8a,QAAO,SAACnU,QACDkU,IAAI4Y,EAAAtzB,QAAYy2B,KAAMjwB,IAU7BqsB,EAAAhzB,UAAAk4B,UAAS,SAACrsB,QACHgP,IAAI4Y,EAAAtzB,QAAYwzB,OAAQ9nB,IAS/BmnB,EAAAhzB,UAAA6+B,QAAO,SAAChL,QACDhZ,IAAI4Y,EAAAtzB,QAAYyzB,KAAMC,IAQ7Bb,EAAAhzB,UAAA88B,WAAU,eACFzC,EAAav6B,KAAQu5B,mBAEvB1yB,OAAOhE,KACP03B,EAAa,KACTyE,EAAgBljB,iBAAiBye,GACjC94B,EACJ84B,EAAc0E,YACdC,WAAWF,EAA+B,iBAC1CE,WAAWF,EAA2B,aACtCE,WAAWF,EAA4B,cACvCE,WAAWF,EAAgC,kBACvCt9B,EACJ64B,EAAcxK,aACdmP,WAAWF,EAA8B,gBACzCE,WAAWF,EAA0B,YACrCE,WAAWF,EAA6B,eACxCE,WAAWF,EAAiC,mBACzC1P,MAAM7tB,IAAW6tB,MAAM5tB,KAC1BmF,EAAI,CAAIpF,EAAOC,GACVq8B,EAAAC,QAAQn3B,IAEX6mB,QAAQC,KAAI,2EAOb3S,QAAQnU,QACRu2B,uBAOPlK,EAAAhzB,UAAAk9B,oBAAmB,eACXrJ,EAAI/zB,KAAQ05B,aACd3F,EAAI,KACFltB,OAAOhE,EACLm8B,EAAgBljB,iBAAgB9b,KAAM01B,WACxCsJ,EAAcv9B,OAASu9B,EAAct9B,SACvCmF,EAAI,CACF2V,SAASwiB,EAAcv9B,MAAO,IAC9B+a,SAASwiB,EAAct9B,OAAQ,MAGnCqyB,EAAKoL,gBAAgBt4B,KAG3BqsB,EAt3CA,CAA2B1T,EAAAnf,koBC5HrB++B,EACE,SAQRC,EAAA,SAAAjgC,GAKK,SACHkgC,EAAY/8B,EAAMg9B,EAAaC,OAA/B9+B,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAOVU,EAAKgE,QAAU66B,EAOf7+B,EAAKyM,MAAQqyB,WArBoBC,EAAAH,EAAAlgC,GAuBrCkgC,EAvBA,CAAqC3b,EAAAtjB,SA6QrCq/B,EAjOA,SAAAtgC,GAIK,SACHugC,EAAY3f,EAAWsY,OAAvB53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUg5B,GAAW,MAM3B53B,EAAKk/B,UAAYtgC,EAAQugC,OAMzBn/B,EAAKo/B,OAAS9f,GAAqB,GAE/Btf,EAAKk/B,QAAO,IAAA,IACL77B,EAAI,EAAGC,EAAKtD,EAAKo/B,OAAOl8B,OAAQG,EAAIC,IAAMD,EACjDrD,EAAKq/B,cAAcr/B,EAAKo/B,OAAO/7B,GAAIA,UAIvCrD,EAAKs/B,yBA5BgBP,EAAAE,EAAAvgC,GAmCvBugC,EAAAz/B,UAAAsa,MAAK,qBACSylB,YAAc,GAACjgC,KACpBkgC,OAWTP,EAAAz/B,UAAAigC,OAAM,SAACx0B,WACI5H,EAAI,EAAGC,EAAK2H,EAAI/H,OAAQG,EAAIC,IAAMD,EAAC/D,KACrC4E,KAAK+G,EAAI5H,iBAYlB47B,EAAAz/B,UAAA+I,QAAO,SAACmG,WACA6Q,EAAKjgB,KAAQ8/B,OACV/7B,EAAI,EAAGC,EAAKic,EAAMrc,OAAQG,EAAIC,IAAMD,EAC3CqL,EAAE6Q,EAAMlc,GAAIA,EAAGkc,IAYnB0f,EAAAz/B,UAAAg0B,SAAQ,uBACM4L,QASdH,EAAAz/B,UAAAkgC,KAAI,SAACjzB,eACS2yB,OAAO3yB,IASrBwyB,EAAAz/B,UAAA+/B,UAAS,uBACK1tB,IAAI6sB,IASlBO,EAAAz/B,UAAAmgC,SAAQ,SAAClzB,EAAOmzB,QACLV,SAAO5/B,KACT+/B,cAAcO,QAEhBR,OAAOtY,OAAOra,EAAO,EAAGmzB,QACxBN,qBACAl9B,cAAa,IACZu8B,EAAgBnI,EAAA72B,QAAoB82B,IAAKmJ,EAAMnzB,KAUvDwyB,EAAAz/B,UAAAggC,IAAG,uBACWK,SAAQvgC,KAAMigC,YAAc,IAS1CN,EAAAz/B,UAAA0E,KAAI,SAAC07B,QACMV,SAAO5/B,KACT+/B,cAAcO,OAEfr0B,EAACjM,KAAQigC,wBACVI,SAASp0B,EAAGq0B,QACLL,aASdN,EAAAz/B,UAAAw9B,OAAM,SAAC4C,WACC30B,EAAG3L,KAAQ8/B,OACR/7B,EAAI,EAAGC,EAAK2H,EAAI/H,OAAQG,EAAIC,IAAMD,KACrC4H,EAAI5H,KAAOu8B,EAAI,OAAAtgC,KACLugC,SAASx8B,IAa3B47B,EAAAz/B,UAAAqgC,SAAQ,SAACpzB,OACDqzB,EAAIxgC,KAAQ8/B,OAAO3yB,eACpB2yB,OAAOtY,OAAOra,EAAO,QACrB6yB,qBACAl9B,cAAa,IACZu8B,EAAgBnI,EAAA72B,QAAoB+2B,OAAQoJ,EAAMrzB,IAEjDqzB,GASTb,EAAAz/B,UAAAugC,MAAK,SAACtzB,EAAOmzB,OACLr0B,EAACjM,KAAQigC,eACX9yB,EAAQlB,EAAC,MACF2zB,SAAO5/B,KACT+/B,cAAcO,EAAMnzB,OAErBqzB,EAAIxgC,KAAQ8/B,OAAO3yB,QACpB2yB,OAAO3yB,GAASmzB,OAChBx9B,cAAa,IACZu8B,EAAgBnI,EAAA72B,QAAoB+2B,OAAQoJ,EAAMrzB,SAEnDrK,cAAa,IACZu8B,EAAgBnI,EAAA72B,QAAoB82B,IAAKmJ,EAAMnzB,iBAG5C1E,EAAIwD,EAAGxD,EAAI0E,IAAS1E,EAACzI,KACvBqgC,SAAS53B,OAAG5F,QAEdw9B,SAASlzB,EAAOmzB,KAOzBX,EAAAz/B,UAAA8/B,cAAa,gBACNjlB,IAAIqkB,EAAep/B,KAAO8/B,OAAOl8B,SAQxC+7B,EAAAz/B,UAAA6/B,cAAa,SAACO,EAAMI,WACT38B,EAAI,EAAGC,EAAEhE,KAAQ8/B,OAAOl8B,OAAQG,EAAIC,IAAMD,UACxC+7B,OAAO/7B,KAAOu8B,GAAQv8B,IAAM28B,EAAU,MAAA,IACnC3tB,EAAA1S,QAAe,KAIjCs/B,EA/NA,CAAyBngB,EAAAnf,iFC1DzBsgC,EAaE,CAPAxJ,IAAG,MAMHC,OAAM,2rBCsBFwJ,EACE,SAuNRC,EA5MA,SAAAzhC,GAGK,SACH0hC,EAAYxI,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAW,GACrBpZ,EAAsC3f,EAAAC,OAAM,GAAKF,UAChD4f,EAAYsU,WAEfA,EAASl0B,EAAQk0B,cAErB9yB,EAAAtB,EAAAW,KAAAC,KAAMkf,IAAWlf,MAMZ+gC,oBAAmB,GAMxBrgC,EAAKsgC,cAAa,GAElBtgC,EAAK+R,iBACH+M,EAAAC,mBAAmBmhB,GACnBlgC,EAAKugC,sBAGHzN,EACE9oB,MAAM8B,QAAQgnB,GAChBA,EAAM,IAAOS,EAAA5zB,QAAWmzB,EAAO1rB,QAAK,CAAK+3B,QAAQ,IAEjDjvB,EAAAC,OAAiD,mBAAhB2iB,EAAQU,SAA0B,IAGrEV,EAAM,IAAOS,EAAA5zB,aAAWwC,EAAS,CAAGg9B,QAAQ,IAG9Cn/B,EAAKwgC,UAAU1N,YAxCM2N,EAAAL,EAAA1hC,GA8CvB0hC,EAAA5gC,UAAAkhC,mBAAkB,gBACX3gB,WAMPqgB,EAAA5gC,UAAA+gC,qBAAoB,gBACbF,oBAAoB93B,QAAQrI,EAAAoC,oBAC5B+9B,oBAAoBn9B,OAAS,MAE5B4vB,EAAMxzB,KAAQyzB,oBAMT8D,UALNwJ,oBAAoBn8B,KACvBhE,EAAAC,OAAO2yB,EAAQ0D,EAAA72B,QAAoB82B,IAAGn3B,KAAOqhC,iBAAgBrhC,MAC7DY,EAAAC,OAAO2yB,EAAQ0D,EAAA72B,QAAoB+2B,OAAMp3B,KAAOshC,oBAAmBthC,OAGxDA,KAASghC,cAAahhC,KAC5BghC,cAAczJ,GAAItuB,QAAQrI,EAAAoC,eAEjCzD,EAAAib,MAAKxa,KAAMghC,uBAELO,EAAc/N,EAAOU,WAClBnwB,EAAI,EAAGC,EAAKu9B,EAAY39B,OAAQG,EAAIC,EAAID,IAAC,KAC1CU,EAAQ88B,EAAYx9B,QACrBi9B,cAAcz6B,EAAAwd,OAAOtf,IAAK,CAC7B7D,EAAAC,OACE4D,EACAzD,EAAAX,QAAgBY,eAAcjB,KACzBohC,mBAAkBphC,MAGzBY,EAAAC,OAAO4D,EAAOic,EAAArgB,QAAUsgB,OAAM3gB,KAAOohC,mBAAkBphC,YAItDygB,WAOPqgB,EAAA5gC,UAAAmhC,iBAAgB,SAACG,OACT/8B,EAAoD+8B,EAAgB98B,aACrEs8B,cAAcz6B,EAAAwd,OAAOtf,IAAK,CAC7B7D,EAAAC,OACE4D,EACAzD,EAAAX,QAAgBY,eAAcjB,KACzBohC,mBAAkBphC,MAGzBY,EAAAC,OAAO4D,EAAOic,EAAArgB,QAAUsgB,OAAM3gB,KAAOohC,mBAAkBphC,YAEpDygB,WAOPqgB,EAAA5gC,UAAAohC,oBAAmB,SAACE,OACZ/8B,EAAoD+8B,EAAgB98B,QACpE+V,EAAMlU,EAAAwd,OAAOtf,QACdu8B,cAAcvmB,GAAKxR,QAAQrI,EAAAoC,2BACpBg+B,cAAcvmB,QACrBgG,WAWPqgB,EAAA5gC,UAAAuzB,UAAS,uBACsFlhB,IAC3FquB,IAYJE,EAAA5gC,UAAAghC,UAAS,SAAC1N,QACHzY,IAAI6lB,EAAiBpN,IAO5BsN,EAAA5gC,UAAA6f,eAAc,SAACC,OACPC,OAAsBpd,IAAdmd,EAA0BA,EAAS,eAC5CyT,YAAYxqB,SAAO,SAAWxE,GACjCA,EAAMsb,eAAeE,MAEhBA,GAOT6gB,EAAA5gC,UAAAggB,oBAAmB,SAACC,OACZC,OAAwBvd,IAAfsd,EAA2BA,EAAU,GAE9CshB,EAAMrhB,EAAOxc,YAEd6vB,YAAYxqB,SAAO,SAAWxE,GACjCA,EAAMyb,oBAAoBE,cAGtBshB,EAAa1hC,KAAQqgB,gBAClBtc,EAAI09B,EAAKz9B,EAAKoc,EAAOxc,OAAQG,EAAIC,EAAID,IAAC,KACvCE,EAAamc,EAAOrc,GAC1BE,EAAWsd,SAAWmgB,EAAcngB,QACpCtd,EAAWya,QAAUza,EAAWya,SAAWgjB,EAAchjB,QACzDza,EAAW2a,cAAgBhP,KAAKuG,IAC9BlS,EAAW2a,cACX8iB,EAAc9iB,eAEhB3a,EAAW0a,cAAgB/O,KAAKwG,IAC9BnS,EAAW0a,cACX+iB,EAAc/iB,eAEhB1a,EAAW6a,QAAUlP,KAAKwG,IAAInS,EAAW6a,QAAS4iB,EAAc5iB,SAChE7a,EAAW8a,QAAUnP,KAAKuG,IAAIlS,EAAW8a,QAAS2iB,EAAc3iB,cACnClc,IAAzB6+B,EAAcjuB,cACU5Q,IAAtBoB,EAAWwP,OACbxP,EAAWwP,OAASrL,EAAAu5B,gBAClB19B,EAAWwP,OACXiuB,EAAcjuB,QAGhBxP,EAAWwP,OAASiuB,EAAcjuB,eAKjC2M,GAMT0gB,EAAA5gC,UAAAogB,eAAc,kBACLhc,EAAAjE,QAAYkE,OAEvBu8B,EA1MA,CAAyB5f,EAAA7gB,2iBCuDzBuhC,EAjGA,SAAAxiC,GAOK,SACHyiC,EAAYt/B,EAAM9B,EAAKw6B,EAAe6G,EAAcrW,OAApD/qB,EACEtB,EAAAW,KAAAC,KAAMuC,EAAM9B,EAAKgrB,IAAczrB,YAQ/BU,EAAKu6B,cAAgBA,EAMrBv6B,EAAKqhC,OAAS,KAMdrhC,EAAKshC,YAAc,KASnBthC,EAAKuhC,cAA4Bp/B,IAAjBi/B,GAA6BA,WAtCnBI,EAAAL,EAAAziC,GA8C5BiT,OAAAC,eAAIuvB,EAAA3hC,UAAA,QAAK,4BACG6hC,SAAM/hC,KACT+hC,OAAM/hC,KAAQS,IAAIo4B,cAAa74B,KAAMi7B,qBAEhC8G,qBAEJ38B,QACH28B,OAAS38B,mCAShBiN,OAAAC,eAAIuvB,EAAA3hC,UAAA,aAAU,4BACF8hC,cAAWhiC,KACdgiC,YAAWhiC,KAAQS,IAAIm4B,uBAAsB54B,KAAMoF,aAE9C48B,0BAEC76B,QACR66B,YAAc76B,mCAQrB06B,EAAA3hC,UAAAklB,eAAc,WACZhmB,EAAAc,UAAMklB,eAAcrlB,KAAAC,yBACAA,KAASi7B,eACLj7B,KAAOi7B,cAAe7V,kBAShDyc,EAAA3hC,UAAAmlB,gBAAe,WACbjmB,EAAAc,UAAMmlB,gBAAetlB,KAAAC,0BACAA,KAASi7B,eACNj7B,KAAOi7B,cAAe5V,mBAGlDwc,EA/FA,CAA8BtD,EAAAl+B,2iBCwB9B8hC,EAzBA,SAAA/iC,GAKK,SACHgjC,EAAY7/B,EAAM9B,EAAKgrB,OAAvB/qB,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAOVU,EAAKD,IAAMA,EAOXC,EAAK8B,gBAAgCK,IAAnB4oB,EAA+BA,EAAiB,cArB/C4W,EAAAD,EAAAhjC,GAuBvBgjC,EAvBA,CAAuBze,EAAAtjB,soBCgYvBiiC,EA7XA,SAAAljC,GAIK,SACHmjC,EAAY9hC,EAAKw1B,OAAjBv1B,EACEtB,EAAAW,KAAAC,KAAMS,IAAGT,KAOTU,EAAK2F,KAAO5F,EAMZC,EAAK8hC,gBAML9hC,EAAK+hC,gBAAiB,EAMtB/hC,EAAKgiC,WAAY,EAMjBhiC,EAAKiiC,kBAAiB,GAMtBjiC,EAAKs1B,eAAiBC,EAClBA,EAAgBjlB,EAAA0jB,mBAChB1jB,EAAA0jB,mBAQJh0B,EAAKkiC,MAAQ,SAEPl+B,EAAUhE,EAAK2F,KAAKrE,qBAM1BtB,EAAKmiC,gBAAkB,EAMvBniC,EAAKoiC,gBAAe,GAEpBpiC,EAAKU,SAAWsD,EAMhBhE,EAAKqiC,wBAA0BniC,EAAAC,OAC7B6D,EACAw2B,EAAA76B,QAAiB86B,YACjBz6B,EAAKsiC,mBACLtiC,GAOFA,EAAKuiC,0BAMLviC,EAAKwiC,oBAAsBtiC,EAAAC,OACzB6D,EACAw2B,EAAA76B,QAAiB8iC,YACjBziC,EAAK0iC,YACL1iC,GAMFA,EAAK2iC,sBAAwB3iC,EAAK4iC,iBAAiBniC,KAAKT,GAExDA,EAAKU,SAASqR,iBACZiO,EAAArgB,QAAU4oB,UACVvoB,EAAK2iC,wBACLryB,EAAA+rB,yBAAuB,CAAI3qB,SAAS,aA3GLmxB,EAAAhB,EAAAnjC,GAoHnCmjC,EAAAriC,UAAAsjC,cAAa,SAACC,OACRC,EAAQ,IAAO3I,EAAA16B,QACjBy8B,EAAAz8B,QAAoBkoB,MAAKvoB,KACpBqG,KACLo9B,QAEG3gC,cAAc4gC,QACU7gC,SAApB2/B,iBAEPvF,aAAYj9B,KAAMwiC,sBACbA,qBAAkB3/B,EACvB6gC,EAAQ,IAAO3I,EAAA16B,QACby8B,EAAAz8B,QAAoBmoB,SAAQxoB,KACvBqG,KACLo9B,QAEG3gC,cAAc4gC,SAGdlB,gBAAkB3D,WACgB,gBAE9B2D,qBAAkB3/B,MACjB8gC,EAAQ,IAAO5I,EAAA16B,QACnBy8B,EAAAz8B,QAAoBujC,YAAW5jC,KAC1BqG,KACLo9B,QAEG3gC,cAAc6gC,IACnBxiC,KAAInB,MACN,MAYNuiC,EAAAriC,UAAA2jC,sBAAqB,SAACJ,OACd1c,EAAQ0c,EAGZ1c,EAAMxkB,MAAQu6B,EAAAz8B,QAAoByjC,WAClC/c,EAAMxkB,MAAQu6B,EAAAz8B,QAAoB0jC,qBAAa/jC,KAEnC8iC,gBAAgB/b,EAAMid,WACzBjd,EAAMxkB,MAAQu6B,EAAAz8B,QAAoB86B,cAAWn7B,KACjD8iC,gBAAgB/b,EAAMid,YAAa,QAErCnB,gBAAkBxwB,OAAO6R,KAAIlkB,KAAM8iC,iBAAiBl/B,QAQ3D2+B,EAAAriC,UAAA+jC,iBAAgB,SAACR,QACVI,sBAAsBJ,OACrBC,EAAQ,IAAO3I,EAAA16B,QACnBy8B,EAAAz8B,QAAoByjC,UAAS9jC,KACxBqG,KACLo9B,QAEG3gC,cAAc4gC,QASZjB,iBACJiB,EAASve,mBAAgBnlB,KACpB0iC,WAAS1iC,KACVkkC,qBAAqBT,IAAYzjC,KAEjCwjC,cAAaxjC,KAAM4iC,OAGG,SAApBC,uBACFF,kBAAkB15B,QAAQrI,EAAAoC,oBAC1B2/B,kBAAkB/+B,OAAS,OAC3B8+B,WAAY,OACZE,MAAQ,OAUjBL,EAAAriC,UAAAgkC,qBAAoB,SAACT,UACY,IAAxBA,EAAaU,QAQtB5B,EAAAriC,UAAA8iC,mBAAkB,SAACS,QACZhB,eAA0C,IAA5BziC,KAAQ6iC,qBACtBgB,sBAAsBJ,OACrBC,EAAQ,IAAO3I,EAAA16B,QACnBy8B,EAAAz8B,QAAoB86B,YAAWn7B,KAC1BqG,KACLo9B,WAMS1b,UAJNjlB,cAAc4gC,QAGdd,MAAK,GACaa,EAAY,KAC3B5vB,EAAQ4vB,EAAa1b,QACtB6a,MAAM7a,GAAwB,mBAALlU,EAAuBtK,EAAA8d,KAAOxT,KAGxB,SAA7B8uB,kBAAkB/+B,OAAY,KAC/Bw3B,EAAGp7B,KAAQqG,KAAKi0B,wBACjBqI,kBAAkB/9B,KACrBhE,EAAAC,OACEu6B,EACA0B,EAAAz8B,QAAoB8iC,YAAWnjC,KAC1BokC,mBAAkBpkC,MAGzBY,EAAAC,OAAOu6B,EAAK0B,EAAAz8B,QAAoByjC,UAAS9jC,KAAOikC,iBAAgBjkC,MAchEY,EAAAC,OAAMb,KACCoB,SACL07B,EAAAz8B,QAAoB0jC,cAAa/jC,KAC5BikC,iBAAgBjkC,YAIhBoB,SAASk6B,aAAWt7B,KAASoB,SAASk6B,gBAAkBF,GAAGp7B,KAC7D2iC,kBAAkB/9B,KACrBhE,EAAAC,OAAMb,KACCoB,SAASk6B,cACdwB,EAAAz8B,QAAoByjC,UAAS9jC,KACxBikC,iBAAgBjkC,SAa/BuiC,EAAAriC,UAAAkkC,mBAAkB,SAACX,WAIRY,UAAUZ,GAAY,MACxBf,WAAY,MACXgB,EAAQ,IAAO3I,EAAA16B,QACnBy8B,EAAAz8B,QAAoBikC,YAAWtkC,KAC1BqG,KACLo9B,EAAYzjC,KACP0iC,gBAEF5/B,cAAc4gC,KAWvBnB,EAAAriC,UAAAkjC,YAAW,SAACK,QACLR,0BAA4BQ,MAC3BxB,KAAQjiC,KAAW4iC,QAAK5iC,KAASqkC,UAAUZ,SAC5C3gC,cAAa,IACZi4B,EAAA16B,QAAgBojC,EAAalhC,KAAIvC,KAAOqG,KAAMo9B,EAAcxB,KAYpEM,EAAAriC,UAAAojC,iBAAgB,SAACvc,OAGTkU,EAAaj7B,KAAQijC,0BAEvBhI,IAAiBA,EAAc9V,kBACT,kBAAhB4B,EAAMwd,aAAiD,IAArBxd,EAAMwd,YAEhDxd,EAAM3B,kBAUVmd,EAAAriC,UAAAmkC,UAAS,SAACZ,eAEDf,WACL9yB,KAAKkO,IAAI2lB,EAAatK,QAAOn5B,KAAQ4iC,MAAMzJ,SAAOn5B,KAC3Cg2B,gBACPpmB,KAAKkO,IAAI2lB,EAAarK,QAAOp5B,KAAQ4iC,MAAMxJ,SAAOp5B,KAASg2B,gBAO/DuM,EAAAriC,UAAA6C,gBAAe,gBACJmgC,sBACPtiC,EAAAoC,cAAahD,KAAMkjC,0BACdA,oBAAsB,WAExB9hC,SAASsR,oBACZgO,EAAArgB,QAAU4oB,UAASjpB,KACdqjC,4BAGEN,0BACPniC,EAAAoC,cAAahD,KAAM+iC,8BACdA,wBAA0B,WAG5BJ,kBAAkB15B,QAAQrI,EAAAoC,oBAC1B2/B,kBAAkB/+B,OAAS,OAE3BxC,SAAW,KAChBhC,EAAAc,UAAM6C,gBAAehD,KAAAC,OAEzBuiC,EA3XA,CAAqCnc,EAAA/lB,8FCJrCmkC,EA6CE,CAtCAZ,YAAW,cAOXrb,MAAO7H,EAAArgB,QAAUkoB,MAOjBC,SAAU9H,EAAArgB,QAAUmoB,SAOpB8b,YAAW,cAQXnB,YAAW,cAEXhI,YAAW,cACX2I,UAAS,YACTW,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZb,cAAa,yFC7Cfc,EASE,CARA1B,YAAW,cACXhI,YAAW,cACX2I,UAAS,YACTW,YAAW,cACXC,WAAU,aACVC,aAAY,eACZC,aAAY,eACZb,cAAa,yFCTfe,EAqBE,CAfAjb,WAAU,aAOV4U,UAAS,YAOTE,QAAO,mFCpBToG,EAKE,CAJAnR,WAAU,aACVkD,KAAI,OACJjD,OAAM,SACNC,KAAI,onBCgHNkR,EAhHA,SAAA5lC,GAIK,SACH6lC,EAAYC,EAAsBC,OAAlCzkC,EACEtB,EAAAW,KAAAC,MAIK,SACO0E,UACDwgC,EAAqBp6B,MAAM,KAAMpG,MAKvC,SACOA,UAC2CA,EAAQ,GAAI0gC,yBAKnE1kC,EAAK2kC,uBAAyB3kC,EAAK4kC,iBAAiBnkC,KAAKT,GAMzDA,EAAK6kC,oBAAsBJ,EAM3BzkC,EAAK8kC,cAAgB,EAMrB9kC,EAAK+kC,kBAAiB,YA1CFC,EAAAT,EAAA7lC,GAiDtB6lC,EAAA/kC,UAAAylC,QAAO,SAACjhC,OACAkhC,EAAQxmC,EAAAc,UAAMylC,QAAO5lC,KAAAC,KAAC0E,GACxBkhC,GACWlhC,EAAQ,GAChB+N,iBAAiBiO,EAAArgB,QAAUsgB,OAAM3gB,KAAOqlC,+BAExCO,GAMTX,EAAA/kC,UAAAo8B,gBAAe,uBACDkJ,eAOdP,EAAA/kC,UAAAolC,iBAAgB,SAACve,OACT0T,EAAmD1T,EAAMhb,OACzDqW,EAAQqY,EAAKla,cAEhBka,EAAKoL,MAAQzjB,IAAU0jB,EAAAzlC,QAAU0lC,QAClC3jB,IAAU0jB,EAAAzlC,QAAU8nB,OACpB/F,IAAU0jB,EAAAzlC,QAAU2lC,MAAK,CAEzBvL,EAAK/nB,oBAAoBgO,EAAArgB,QAAUsgB,OAAM3gB,KAAOqlC,4BAC1CY,EAAUxL,EAAK2K,SACjBa,KAAOjmC,KAASylC,gCACNA,kBAAkBQ,UACvBT,oBAEJD,wBAQTN,EAAA/kC,UAAAs8B,cAAa,SAACX,EAAiBC,WAElBrB,EAAMwL,EADbC,EAAW,OAGRV,cAAgB3J,GACrBqK,EAAWpK,GAAW97B,KACjBmmC,WAAa,GAGlBF,GADAxL,EAAIz6B,KAAoDomC,UAAU,IACnDhB,SACP3K,EAAKla,aACCulB,EAAAzlC,QAAUgmC,MAAUJ,KAAOjmC,KAASylC,yBAC3CA,kBAAkBQ,IAAW,SAC3BT,gBACLU,EACFzL,EAAK6L,SAIbrB,EA9GA,CAAwBsB,EAAAlmC,kBA0HRmmC,EACdhkC,EACAi4B,EACAC,EACAC,EACAC,OAIKp4B,KAAgBk4B,KAAiBl4B,EAAW87B,aAAW,OACnDiI,EAAA5d,SAEJnmB,EAAW87B,YAAY5D,GAAeD,EAAK2K,UAAM,OAC7CmB,EAAA5d,SAQH3hB,EAASxE,EAAWmB,UAAUqD,OAC9B4R,EAAS+hB,EAAW,GAAK3zB,EAAO,GAChC6R,EAAS8hB,EAAW,GAAK3zB,EAAO,UAEpC,MAAQ4I,KAAK0N,IAAIsd,GACjBhrB,KAAK62B,KAAK7tB,EAASA,EAASC,EAASA,GAAU+hB,iICtJtC8L,EAAOrxB,EAAAA,EA4PpBsxB,EA9OA,WAIK,SACHC,EAAYC,EAAkBC,GAIzB9mC,KACE+mC,kBAAoBF,EAKtB7mC,KACEgnC,aAAeF,EAKjB9mC,KACEinC,UAAS,GAKXjnC,KACEknC,YAAW,GAKblnC,KACEmnC,gBAAe,UAMtBP,EAAA1mC,UAAAsa,MAAK,gBACEysB,UAAUrjC,OAAS,OACnBsjC,YAAYtjC,OAAS,EAC1BrE,EAAAib,MAAKxa,KAAMmnC,kBAObP,EAAA1mC,UAAAkmC,QAAO,eACCgB,EAAQpnC,KAAQinC,UAChBI,EAAUrnC,KAAQknC,YAClBxiC,EAAU0iC,EAAS,GACF,GAAnBA,EAASxjC,QACXwjC,EAASxjC,OAAS,EAClByjC,EAAWzjC,OAAS,IAEpBwjC,EAAS,GAAKA,EAASlH,MACvBmH,EAAW,GAAKA,EAAWnH,WACtBoH,QAAQ,QAETC,EAAUvnC,KAAQgnC,aAAatiC,sBACzByiC,gBAAgBI,GACrB7iC,GAQTkiC,EAAA1mC,UAAAylC,QAAO,SAACjhC,GACNkM,EAAAC,SAAM7Q,KAAQgnC,aAAatiC,KAAO1E,KAAUmnC,iBAAkB,QACxDK,EAAQxnC,KAAQ+mC,kBAAkBriC,UACpC8iC,GAAYd,SACTO,UAAUriC,KAAKF,QACfwiC,YAAYtiC,KAAK4iC,QACjBL,gBAAennC,KAAMgnC,aAAatiC,KAAY,OAC9C+iC,UAAU,EAACznC,KAAOinC,UAAUrjC,OAAS,IACnC,IAQXgjC,EAAA1mC,UAAAimC,SAAQ,uBACMc,UAAUrjC,QASxBgjC,EAAA1mC,UAAAwnC,mBAAkB,SAACv6B,UACF,EAARA,EAAY,GASrBy5B,EAAA1mC,UAAAynC,oBAAmB,SAACx6B,UACH,EAARA,EAAY,GASrBy5B,EAAA1mC,UAAA0nC,gBAAe,SAACz6B,UACNA,EAAQ,GAAM,GAOxBy5B,EAAA1mC,UAAA2nC,SAAQ,eACF9jC,MACCA,GAAC/D,KAASinC,UAAUrjC,QAAU,GAAK,EAAGG,GAAK,EAAGA,IAAC/D,KAC7CsnC,QAAQvjC,IAOjB6iC,EAAA1mC,UAAA0kB,QAAO,kBAC4B,SAArBqiB,UAAUrjC,QAOxBgjC,EAAA1mC,UAAA4nC,YAAW,SAACrtB,UACHA,KAAGza,KAASmnC,iBAOrBP,EAAA1mC,UAAA6nC,SAAQ,SAACrjC,eACKojC,YAAW9nC,KAAMgnC,aAAatiC,KAO5CkiC,EAAA1mC,UAAAonC,QAAO,SAACn6B,WACAi6B,EAAQpnC,KAAQinC,UAChBI,EAAUrnC,KAAQknC,YAClBc,EAAQZ,EAASxjC,OACjBc,EAAU0iC,EAASj6B,GACnBq6B,EAAWH,EAAWl6B,GACtB86B,EAAa96B,EAEZA,EAAQ66B,GAAS,GAAC,KACjBE,EAAMloC,KAAQ0nC,mBAAmBv6B,GACjCg7B,EAAMnoC,KAAQ2nC,oBAAoBx6B,GAElCi7B,EACJD,EAASH,GAASX,EAAWc,GAAUd,EAAWa,GAC9CC,EACAD,EAENd,EAASj6B,GAASi6B,EAASgB,GAC3Bf,EAAWl6B,GAASk6B,EAAWe,GAC/Bj7B,EAAQi7B,EAGVhB,EAASj6B,GAASzI,EAClB2iC,EAAWl6B,GAASq6B,OACfC,UAAUQ,EAAY96B,IAQ7By5B,EAAA1mC,UAAAunC,UAAS,SAACQ,EAAY96B,WACdi6B,EAAQpnC,KAAQinC,UAChBI,EAAUrnC,KAAQknC,YAClBxiC,EAAU0iC,EAASj6B,GACnBq6B,EAAWH,EAAWl6B,GAErBA,EAAQ86B,GAAU,KACjBI,EAAWroC,KAAQ4nC,gBAAgBz6B,QACrCk6B,EAAWgB,GAAeb,SAC5BJ,EAASj6B,GAASi6B,EAASiB,GAC3BhB,EAAWl6B,GAASk6B,EAAWgB,GAC/Bl7B,EAAQk7B,EAKZjB,EAASj6B,GAASzI,EAClB2iC,EAAWl6B,GAASq6B,GAMtBZ,EAAA1mC,UAAAq8B,aAAY,eAMN73B,EAASX,EAAGyjC,EALVX,EAAgB7mC,KAAQ+mC,kBACxBK,EAAQpnC,KAAQinC,UAChBI,EAAUrnC,KAAQknC,YACpB/5B,EAAQ,EACNlB,EAAIm7B,EAASxjC,WAEdG,EAAI,EAAGA,EAAIkI,IAAKlI,GAEnByjC,EAAWX,EADXniC,EAAU0iC,EAASrjC,MAEH2iC,SAAI1mC,KACNmnC,gBAAennC,KAAMgnC,aAAatiC,KAE9C2iC,EAAWl6B,GAASq6B,EACpBJ,EAASj6B,KAAWzI,GAGxB0iC,EAASxjC,OAASuJ,EAClBk6B,EAAWzjC,OAASuJ,OACf06B,YAETjB,EA5OA,2EChBA0B,EAUE,CATAjC,KAAM,EACNrc,QAAS,EACT+b,OAAQ,EAKR5d,MAAO,EACP6d,MAAO,siCCmxDN,SACMuC,EAAkBjjC,EAAUkjC,GACnC3J,YAAU,WACRv5B,EAASkjC,KACR,YAOWC,EAAuBnpC,WACduD,IAAnBvD,EAAQmU,OAAoB,KACxBi1B,OAC+B7lC,IAAnCvD,EAAQqpC,wBACJrpC,EAAQqpC,8BAEPC,EAAAC,aAAavpC,EAAQmU,OAAQnU,EAAQwpC,oBAAqBJ,OAG7DhhC,EAAa8xB,EAAAuP,iBAAiBzpC,EAAQoI,WAAU,iBAC3B,IAAvBpI,EAAQ0pC,YAAuBthC,EAAWuhC,WAAQ,KAC9Cx1B,EAAS/L,EAAWQ,YAAYJ,eACtC2L,EAAO,IAAM4B,EAAAA,EACb5B,EAAO,GAAK4B,EAAAA,EACLuzB,EAAAC,aAAap1B,GAAQ,GAAO,UAG9Bm1B,EAAAM,cAQOC,EAA2B7pC,OACrC8pC,EACAxqB,EACAD,EAOAG,OACkBjc,IAApBvD,EAAQwf,QAAwBxf,EAAQwf,QAxnDnB,EA0nDnBC,OACkBlc,IAApBvD,EAAQyf,QAAwBzf,EAAQyf,QAPnB,GASjBsqB,OACmBxmC,IAAvBvD,EAAQ+pC,WAA2B/pC,EAAQ+pC,WATnB,EAWpBL,OACmBnmC,IAAvBvD,EAAQ0pC,YAA2B1pC,EAAQ0pC,WAEvCN,OACmC7lC,IAAvCvD,EAAQgqC,4BACJhqC,EAAQgqC,2BAGRC,OACuB1mC,IAA3BvD,EAAQiqC,gBAA+BjqC,EAAQiqC,eAE3C7hC,EAAa8xB,EAAAuP,iBAAiBzpC,EAAQoI,WAAU,aAChD8hC,EAAa9hC,EAAWQ,YAC1B4gC,EAAsBxpC,EAAQwpC,oBAC9Br1B,EAASnU,EAAQmU,UAChBu1B,GAAev1B,IAAU/L,EAAWuhC,aACvCH,GAAsB,EACtBr1B,EAAS+1B,QAGiB3mC,IAAxBvD,EAAQmqC,YAAyB,KAC7BA,EAAcnqC,EAAQmqC,YAC5B7qB,EAAgB6qB,EAAY3qB,GAC5BH,OAC2B9b,IAAzB4mC,EAAY1qB,GACR0qB,EAAY1qB,GACZ0qB,EAAYA,EAAY7lC,OAAS,GAGrCwlC,EADE9pC,EAAQoqC,oBACaC,EAAAC,wBACrBH,EACAf,GACCI,GAAuBr1B,EACxB81B,GAGqBI,EAAAE,uBACrBjrB,EACAD,EACA+pB,GACCI,GAAuBr1B,EACxB81B,YAUEO,GALQN,EAGV55B,KAAKwG,IAAIhO,EAAAC,SAASmhC,GAAaphC,EAAA2hC,UAAUP,IADxC,IAAMQ,EAAAC,gBAAgBD,EAAA3pC,QAAM6pC,SAAYxiC,EAAWyiC,oBAI/CC,EAAAC,kBAAoBz6B,KAAK06B,IA/DV,EArnDH,GAsrDfC,EACJT,EACAl6B,KAAK06B,IAnEiB,EAmEME,SAIR3nC,KADtB+b,EAAgBtf,EAAQsf,eAEtBE,EAAU,EAEVF,EAAgBkrB,EAAuBl6B,KAAK06B,IAAIjB,EAAYvqB,QAKxCjc,KADtB8b,EAAgBrf,EAAQqf,iBAIlBA,OAFoB9b,IAApBvD,EAAQyf,aACoBlc,IAA1BvD,EAAQsf,cACMA,EAAgBhP,KAAK06B,IAAIjB,EAAYtqB,GAErC+qB,EAAuBl6B,KAAK06B,IAAIjB,EAAYtqB,GAG9CwrB,GAKpBxrB,EACED,EACAlP,KAAKoK,MACHpK,KAAK0N,IAAIsB,EAAgBD,GAAiB/O,KAAK0N,IAAI+rB,IAEvD1qB,EAAgBC,EAAgBhP,KAAK06B,IAAIjB,EAAYtqB,EAAUD,GAG7DsqB,EADE9pC,EAAQoqC,oBACaC,EAAAc,kBACrBpB,EACAzqB,EACAD,EACA+pB,GACCI,GAAuBr1B,EACxB81B,GAGqBI,EAAAE,uBACrBjrB,EACAD,EACA+pB,GACCI,GAAuBr1B,EACxB81B,UAKJmB,WAAYtB,EACZxqB,cAAeA,EACfD,cAAeA,EACfG,QAASA,EACTuqB,WAAYA,YAQAsB,EAAyBrrC,WAEVuD,IAA3BvD,EAAQsrC,gBAA+BtrC,EAAQsrC,eAC/B,KACVC,EAAoBvrC,EAAQurC,8BACRhoC,IAAtBgoC,IAAyD,IAAtBA,EAC9BC,EAAAC,oBACwB,IAAtBF,EACFC,EAAA5B,KAC0B,iBAAjB2B,EACTC,EAAAE,cAAcH,GAEdC,EAAA5B,YAGF4B,EAAAG,iBASKC,EAAgBC,WAC1BA,EAAUC,cAAgBD,EAAUE,eACjCzjC,EAAAiD,OAAiBsgC,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,gBAa1C,SACMC,EAAkBvkC,EAAYN,EAAMrF,EAAUsF,EAAYC,OAE3DwjB,EAAW3a,KAAKD,KAAK5I,GACvByjB,EAAW5a,KAAKC,KAAK9I,GACrB4kC,EAAOxkC,EAAW,GAAKojB,EAAWpjB,EAAW,GAAKqjB,EAClDohB,EAAOzkC,EAAW,GAAKojB,EAAWpjB,EAAW,GAAKqjB,UACtDmhB,IAAS9kC,EAAK,GAAK,EAAIrF,EAAS,IAAMsF,GAKfyjB,GAJvBqhB,IAASpqC,EAAS,GAAKqF,EAAK,GAAK,GAAKC,IAGtC0jB,GAAYA,GAEIohB,EAAOrhB,EAAWohB,EAAOnhB,OAK3CqhB,EA9uDA,SAAAzsC,GAGK,SACH0sC,EAAYxT,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUC,EAAAC,OAAM,GAAK84B,UAM3B53B,EAAKqrC,OAAM,CAAI,EAAG,GAMlBrrC,EAAKsrC,YAAW,GAMhBtrC,EAAKurC,oBAOLvrC,EAAKwrC,YAAc1S,EAAAuP,iBAAiBzpC,EAAQoI,WAAU,aAMtDhH,EAAKyrC,cAAa,CAAI,IAAK,KAM3BzrC,EAAK0rC,cAAgB,KAMrB1rC,EAAK2rC,kBAML3rC,EAAK4rC,gBAML5rC,EAAK6rC,mBAAgB1pC,EAEjBvD,EAAQ0H,SACV1H,EAAQ0H,OAASwyB,EAAAS,mBAAmB36B,EAAQ0H,OAAQtG,EAAKwrC,cAEvD5sC,EAAQmU,SACVnU,EAAQmU,OAAS+lB,EAAAgT,eAAeltC,EAAQmU,OAAQ/S,EAAKwrC,cAGvDxrC,EAAK+rC,cAAcntC,YAvEJotC,EAAAZ,EAAA1sC,GA8EjB0sC,EAAA5rC,UAAAusC,cAAa,SAACntC,GAGT,IAGGqtC,EAA2BxD,EAA2B7pC,GAKzDU,KACE4sC,eAAiBD,EAAyB/tB,cAK5C5e,KACE6sC,eAAiBF,EAAyBhuB,cAK5C3e,KACE8sC,YAAcH,EAAyBtD,WAKzCrpC,KACE+sC,aAAeztC,EAAQmqC,YAKzBzpC,KACEgtC,SAAW1tC,EAAQswB,QAKrB5vB,KACEitC,SAAWN,EAAyB7tB,YAEnCouB,EAAmBzE,EAAuBnpC,GAC1C8pC,EAAuBuD,EAAyBjC,WAChDyC,EAAqBxC,EAAyBrrC,GAKjDU,KACEotC,aAAY,CACfpmC,OAAQkmC,EACRpmC,WAAYsiC,EACZriC,SAAUomC,QAGPE,iBAAiCxqC,IAArBvD,EAAQyH,SAAyBzH,EAAQyH,SAAW,QAChEumC,uBACgBzqC,IAAnBvD,EAAQ0H,OAAuB1H,EAAQ0H,OAAS,WAEvBnE,IAAvBvD,EAAQwH,WAAwB9G,KAC7ButC,cAAcjuC,EAAQwH,iBACDjE,IAAjBvD,EAAQuf,MAAkB7e,KAC9BwtC,QAAQluC,EAAQuf,WAGlBkD,cAhEW,IAqEb/hB,KACEytC,SAAWnuC,GAYlB+S,OAAAC,eAAIw5B,EAAA5rC,UAAA,UAAO,4BACG8sC,uBAEFpd,OACN8d,EAAU1tC,KAAQgtC,cACjBA,SAAWpd,MACV5oB,EAAMhH,KAAQ2tC,eAChB3mC,EAAM,KACF4mC,EAAahe,GAAO,CAAK,EAAG,EAAG,EAAG,GACxC8d,EAAaA,GAAU,CAAK,EAAG,EAAG,EAAG,OAC/B5mC,EAAU9G,KAAQ6tC,gBAClBpd,EACH3pB,EAAa,GACb8mC,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDld,EACH5pB,EAAa,GACb8mC,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,SACzDN,kBAAiB,CAAEtmC,EAAO,GAAKypB,EAASzpB,EAAO,GAAK0pB,sCAY7Dob,EAAA5rC,UAAA4tC,mBAAkB,SAACC,OACXzuC,EAAUC,EAAAC,OAAM,QAAUiuC,sBAGL5qC,IAAvBvD,EAAQwH,WACVxH,EAAQwH,WAAU9G,KAAQ6tC,gBAE1BvuC,EAAQuf,KAAI7e,KAAQguC,UAItB1uC,EAAQ0H,OAAMhH,KAAQiuC,oBAGtB3uC,EAAQyH,SAAQ/G,KAAQkuC,cAEjB3uC,EAAAC,OAAM,GAAKF,EAASyuC,IAoC7BjC,EAAA5rC,UAAAu8B,QAAO,SAAC0R,QACGlQ,UAAKj+B,KAAY08B,gBAAY18B,KAC/B28B,mBAAmB,WAEpByR,EAAI,IAAO1jC,MAAMC,UAAU/G,QACxBG,EAAI,EAAGA,EAAIqqC,EAAKxqC,SAAUG,EAAC,KAC9BzE,EAAUqL,UAAU5G,GACpBzE,EAAQ0H,UACV1H,EAAUC,EAAAC,OAAM,GAAKF,IACb0H,OAASwyB,EAAAS,mBACf36B,EAAQ0H,OAAMhH,KACT25B,kBAGLr6B,EAAQ+uC,UACV/uC,EAAUC,EAAAC,OAAM,GAAKF,IACb+uC,OAAS7U,EAAAS,mBACf36B,EAAQ+uC,OAAMruC,KACT25B,kBAGTyU,EAAKrqC,GAAKzE,OAEPgvC,gBAAgBxjC,MAAK9K,KAAOouC,IAMnCtC,EAAA5rC,UAAAouC,gBAAe,SAACH,OAEV7oC,EADAipC,EAAiB5jC,UAAU/G,UAG7B2qC,EAAiB,GACkB,mBAA5B5jC,UAAU4jC,EAAiB,KAElCjpC,EAAWqF,UAAU4jC,EAAiB,KACpCA,SAEMtQ,QAAK,KAEP7b,EAAQzX,UAAU4jC,EAAiB,UACrCnsB,EAAMpb,QAAMhH,KACTstC,kBAAkBlrB,EAAMpb,aAEZnE,IAAfuf,EAAMvD,MAAkB7e,KACrBwtC,QAAQprB,EAAMvD,WAEEhc,IAAnBuf,EAAMrb,UAAsB/G,KACzBqtC,YAAYjrB,EAAMrb,eAErBzB,GACFijC,EAAkBjjC,GAAU,YAI5ByT,EAAQgc,KAAKC,MACbhuB,EAAMhH,KAAQosC,cAActkC,QAC5BhB,EAAU9G,KAAQqsC,kBAClBtlC,EAAQ/G,KAAQssC,gBACdkC,EAAM,GACHzqC,EAAI,EAAGA,EAAIwqC,IAAkBxqC,EAAC,KAC/BzE,EAA2CqL,UAAU5G,GAErDonC,EAAS,CACbpyB,MAAOA,EACP01B,UAAU,EACVJ,OAAQ/uC,EAAQ+uC,OAChBK,cAA+B7rC,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAC9DC,OAAQrvC,EAAQqvC,QAAUC,EAAAC,SAC1BvpC,SAAUA,MAGRhG,EAAQ0H,SACVmkC,EAAUC,aAAepkC,EACzBmkC,EAAUE,aAAe/rC,EAAQ0H,OAAOc,QACxCd,EAASmkC,EAAUE,mBAGAxoC,IAAjBvD,EAAQuf,MACVssB,EAAUG,iBAAmBxkC,EAC7BqkC,EAAUI,iBAAgBvrC,KAAQ8uC,qBAAqBxvC,EAAQuf,MAC/D/X,EAAaqkC,EAAUI,kBACdjsC,EAAQwH,aACjBqkC,EAAUG,iBAAmBxkC,EAC7BqkC,EAAUI,iBAAmBjsC,EAAQwH,WACrCA,EAAaqkC,EAAUI,uBAGA1oC,IAArBvD,EAAQyH,SAAsB,CAChCokC,EAAUK,eAAiBzkC,MACrBmjB,EACJpN,EAAAiyB,OAAOzvC,EAAQyH,SAAWA,EAAW6I,KAAKwO,GAAI,EAAIxO,KAAKwO,IAAMxO,KAAKwO,GACpE+sB,EAAUM,eAAiB1kC,EAAWmjB,EACtCnjB,EAAWokC,EAAUM,eAInBP,EAAgBC,GAClBA,EAAUsD,UAAW,EAGrB11B,GAASoyB,EAAUuD,SAErBF,EAAO5pC,KAAKumC,QAETa,YAAYpnC,KAAK4pC,QACjBQ,QAAQ/S,EAAA57B,QAAS67B,UAAW,QAC5B+S,qBAQPnD,EAAA5rC,UAAAw8B,aAAY,uBACEqP,OAAO9P,EAAA57B,QAAS67B,WAAa,GAQ3C4P,EAAA5rC,UAAAgvC,eAAc,uBACAnD,OAAO9P,EAAA57B,QAAS87B,aAAe,GAO7C2P,EAAA5rC,UAAAivC,iBAAgB,eAEVd,OADCW,QAAQ/S,EAAA57B,QAAS67B,WAASl8B,KAAQ+rC,OAAO9P,EAAA57B,QAAS67B,oBAE9Cn4B,EAAI,EAAGC,EAAEhE,KAAQgsC,YAAYpoC,OAAQG,EAAIC,IAAMD,EAAC,KACjDyqC,EAAMxuC,KAAQgsC,YAAYjoC,MAC5ByqC,EAAO,GAAGlpC,UACZijC,EAAkBiG,EAAO,GAAGlpC,UAAU,IAEnC+oC,EAAM,IAAA,IACA5lC,EAAI,EAAG2mC,EAAKZ,EAAO5qC,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KACvC0iC,EAAYqD,EAAO/lC,OACpB0iC,EAAUsD,SAAQ,CACrBJ,EAASlD,EAAUkD,oBAMtBrC,YAAYpoC,OAAS,OACrB2oC,cAAgB8B,GAMvBvC,EAAA5rC,UAAA+uC,kBAAiB,mBACkBpsC,SAAxBopC,sBACP/O,qBAAoBl9B,KAAMisC,0BACrBA,yBAAsBppC,QAEnB65B,wBAGJ1H,EAAMD,KAAKC,MACbqa,GAAO,EACFtrC,EAAC/D,KAAQgsC,YAAYpoC,OAAS,EAAGG,GAAK,IAAKA,EAAC,SAC7CyqC,EAAMxuC,KAAQgsC,YAAYjoC,GAC5BurC,GAAiB,EACZ7mC,EAAI,EAAG2mC,EAAKZ,EAAO5qC,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KACvC0iC,EAAYqD,EAAO/lC,OACrB0iC,EAAUsD,cAGRc,EAAUva,EAAMmW,EAAUpyB,MAC5By2B,EACFrE,EAAUuD,SAAW,EAAIa,EAAUpE,EAAUuD,SAAW,EACtDc,GAAY,GACdrE,EAAUsD,UAAW,EACrBe,EAAW,GAEXF,GAAiB,MAEbG,EAAWtE,EAAUwD,OAAOa,MAC9BrE,EAAUC,aAAY,KAClBrzB,EAAKozB,EAAUC,aAAa,GAC5BjzB,EAAKgzB,EAAUC,aAAa,GAG5B77B,EAAIwI,EAAK03B,GAFJtE,EAAUE,aAAa,GAEFtzB,GAC1BvI,EAAI2I,EAAKs3B,GAFJtE,EAAUE,aAAa,GAEFlzB,QAC3Bi0B,cAAa,CAAI78B,EAAGC,MAEvB27B,EAAUG,kBAAoBH,EAAUI,iBAAgB,KACpDzkC,EACS,IAAb2oC,EACItE,EAAUI,iBACVJ,EAAUG,iBACVmE,GACGtE,EAAUI,iBAAmBJ,EAAUG,qBAC5CH,EAAUkD,OAAM,KACZxnC,EAAI7G,KAAQ0vC,iBAAgB1vC,KAAMkuC,eAClCyB,EAAqB3vC,KAAQotC,aAAatmC,WAC9CA,EACA,EACAD,GACA,QAEGulC,cAAapsC,KAAQ4vC,oBACxBD,EACAxE,EAAUkD,aAGThC,kBAAoBvlC,OACpB+oC,mBAAkB,WAGMhtC,IAA7BsoC,EAAUK,qBACmB3oC,IAA7BsoC,EAAUM,eAA4B,KAEhC1kC,EACS,IAAb0oC,EACI3yB,EAAAiyB,OAAO5D,EAAUM,eAAiB77B,KAAKwO,GAAI,EAAIxO,KAAKwO,IACpDxO,KAAKwO,GACL+sB,EAAUK,eACViE,GACGtE,EAAUM,eAAiBN,EAAUK,mBAC1CL,EAAUkD,OAAM,KACZyB,EAAmB9vC,KAAQotC,aAAarmC,SAC5CA,GACA,QAEGqlC,cAAapsC,KAAQ+vC,sBACxBD,EACA3E,EAAUkD,aAGT/B,gBAAkBvlC,UAEpB8oC,mBAAkB,GACvBR,GAAO,GACFlE,EAAUsD,SAAQ,UAIrBa,EAAc,MACXtD,YAAYjoC,GAAK,UACjBirC,QAAQ/S,EAAA57B,QAAS67B,WAAW,OAC3B52B,EAAWkpC,EAAO,GAAGlpC,SACvBA,GACFijC,EAAkBjjC,GAAU,SAK7B0mC,YAAWhsC,KAAQgsC,YAAYgE,OAAOC,SACvCZ,QAAqCxsC,IAAjC7C,KAASisC,sBAAiCjsC,KAC3CisC,oBAAsBzO,sBAAqBx9B,KACzCivC,kBAAkB9tC,KAAInB,UAUjC8rC,EAAA5rC,UAAA6vC,sBAAqB,SAAChpC,EAAUsnC,OAC1BrnC,EACEkpC,EAAalwC,KAAQiuC,gCACLprC,IAAlBqtC,IACFlpC,EAAM,CAAIkpC,EAAc,GAAK7B,EAAO,GAAI6B,EAAc,GAAK7B,EAAO,IAClEzmC,EAAAgpB,OAAiB5pB,EAAQD,EAAQ/G,KAAQkuC,eACzCtmC,EAAAuoC,IAAcnpC,EAAQqnC,IAEjBrnC,GAQT8kC,EAAA5rC,UAAA0vC,oBAAmB,SAAC9oC,EAAYunC,OAC1BrnC,EACEkpC,EAAalwC,KAAQiuC,oBACrBmC,EAAiBpwC,KAAQ6tC,qBACThrC,IAAlBqtC,QAAqDrtC,IAAtButC,IAOjCppC,EAAM,CALJqnC,EAAO,GACNvnC,GAAcunC,EAAO,GAAK6B,EAAc,IAAOE,EAEhD/B,EAAO,GACNvnC,GAAcunC,EAAO,GAAK6B,EAAc,IAAOE,WAG7CppC,GAST8kC,EAAA5rC,UAAAwvC,iBAAgB,SAACW,OACTxpC,EAAI7G,KAAQmsC,iBACdkE,EAAY,KACRpf,EAAIpqB,EAAK,GACTqqB,EAAIrqB,EAAK,UAEb+I,KAAKkO,IAAImT,EAAIrhB,KAAKD,IAAI0gC,IACpBzgC,KAAKkO,IAAIoT,EAAIthB,KAAKC,IAAIwgC,IACxBzgC,KAAKkO,IAAImT,EAAIrhB,KAAKC,IAAIwgC,IACpBzgC,KAAKkO,IAAIoT,EAAIthB,KAAKD,IAAI0gC,YAGnBxpC,GAWXilC,EAAA5rC,UAAAi/B,gBAAe,SAACmR,QACTnE,cAAgBzhC,MAAM8B,QAAQ8jC,GAC/BA,EAASxoC,QAAK,CACb,IAAK,UACA40B,gBAAY18B,KACf28B,mBAAmB,IAU5BmP,EAAA5rC,UAAAytC,UAAS,eACD3mC,EAAMhH,KAAQiuC,2BACfjnC,EAGEwyB,EAAAC,iBAAiBzyB,EAAMhH,KAAO25B,iBAF5B3yB,GASX8kC,EAAA5rC,UAAA+tC,kBAAiB,uBAC4D17B,IACzEg+B,EAAAlwC,QAAamwC,SAOjB1E,EAAA5rC,UAAAuwC,eAAc,uBACArD,cAMdtB,EAAA5rC,UAAAwwC,uBAAsB,uBACRjD,SAAS/D,qBAOvBoC,EAAA5rC,UAAAg+B,SAAQ,SAACyS,eACW9tC,IAAd8tC,GACFA,EAAU,GAAC3wC,KAAS+rC,OAAO,GAC3B4E,EAAU,GAAC3wC,KAAS+rC,OAAO,GACpB4E,QAEK5E,OAAOjkC,SAcvBgkC,EAAA5rC,UAAA0wC,gBAAe,SAACN,OACR78B,EAAMzT,KAAQ6wC,wBAAwBP,UACrC9W,EAAAsX,aAAar9B,EAAMzT,KAAO25B,kBAQnCmS,EAAA5rC,UAAA2wC,wBAAuB,SAACP,OAChBzpC,EAAOypC,GAAQtwC,KAAS+wC,+BACxB/pC,EAAMhH,KAA8DiuC,oBAC1Er9B,EAAAC,OAAO7J,EAAQ,OACTF,EAAU9G,KAAgC6tC,gBAChDj9B,EAAAC,YAAsBhO,IAAfiE,EAA0B,OAC3BC,EAAQ/G,KAAgCkuC,qBAC9Ct9B,EAAAC,YAAoBhO,IAAbkE,EAAwB,GAExBqB,EAAAg2B,kBAAkBp3B,EAAQF,EAAYC,EAAUF,IAQzDilC,EAAA5rC,UAAAuiB,iBAAgB,uBACFmqB,gBAQdd,EAAA5rC,UAAAwiB,iBAAgB,uBACFmqB,gBAQdf,EAAA5rC,UAAA0iB,WAAU,uBAC2BouB,qBAAoBhxC,KAChD6sC,iBASTf,EAAA5rC,UAAA+iB,WAAU,SAACpE,QACJ4tB,cAAazsC,KAAM8tC,mBAAkB,CAAE/uB,QAASF,MAQvDitB,EAAA5rC,UAAAyiB,WAAU,uBAC2BquB,qBAAoBhxC,KAChD4sC,iBASTd,EAAA5rC,UAAAgjB,WAAU,SAACrE,QACJ4tB,cAAazsC,KAAM8tC,mBAAkB,CAAEhvB,QAASD,MAQvDitB,EAAA5rC,UAAA+wC,uBAAsB,SAACC,QAChBzE,cAAazsC,KAAM8tC,mBAAkB,CAAEpE,oBAAqBwH,MAQnEpF,EAAA5rC,UAAAy5B,cAAa,uBACCuS,aASdJ,EAAA5rC,UAAA2tC,cAAa,uBACkCt7B,IAAIg+B,EAAAlwC,QAAa8wC,aAShErF,EAAA5rC,UAAAkxC,eAAc,uBACArE,cAWdjB,EAAA5rC,UAAAmxC,uBAAsB,SAAC59B,EAAQ68B,eACjBgB,+BACV9X,EAAAgT,eAAe/4B,EAAMzT,KAAO25B,iBAC5B2W,IAWJxE,EAAA5rC,UAAAoxC,+BAA8B,SAAC79B,EAAQ68B,OAC/BzpC,EAAOypC,GAAQtwC,KAAS0vC,mBACxB6B,EAAcnpC,EAAAC,SAASoL,GAAU5M,EAAK,GACtC2qC,EAAcppC,EAAA2hC,UAAUt2B,GAAU5M,EAAK,UACtC+I,KAAKwG,IAAIm7B,EAAaC,IAS/B1F,EAAA5rC,UAAAuxC,8BAA6B,SAACC,OACtBC,EAAQD,GAAa,EACrB9yB,EAAa5e,KAAQ4xC,yBAAwB5xC,KAAM4sC,gBACnDjuB,EAAa3e,KAAQ6sC,eACrBz2B,EAAMxG,KAAK0N,IAAIsB,EAAgBD,GAAiB/O,KAAK0N,IAAIq0B,mBAMnD99B,UACW+K,EAAgBhP,KAAK06B,IAAIqH,EAAO99B,EAAQuC,KAYjE01B,EAAA5rC,UAAAguC,YAAW,uBAC0B37B,IAAIg+B,EAAAlwC,QAAawxC,WAStD/F,EAAA5rC,UAAA4xC,8BAA6B,SAACJ,OACtBK,EAAWniC,KAAK0N,IAAIo0B,GAAa,GACjC9yB,EAAa5e,KAAQ4xC,yBAAwB5xC,KAAM4sC,gBACnDjuB,EAAa3e,KAAQ6sC,eACrBz2B,EAAMxG,KAAK0N,IAAIsB,EAAgBD,GAAiBozB,kBAM1CjrC,UACM8I,KAAK0N,IAAIsB,EAAgB9X,GAAcirC,EAAW37B,IAYtE01B,EAAA5rC,UAAA6wC,6BAA4B,SAACV,OACvBxpC,EAAI7G,KAAQ0vC,iBAAiBW,GAC3BzgB,EAAO5vB,KAAQgtC,gBACjBpd,IACF/oB,EAAI,CACFA,EAAK,GAAK+oB,EAAQ,GAAKA,EAAQ,GAC/B/oB,EAAK,GAAK+oB,EAAQ,GAAKA,EAAQ,KAG5B/oB,GAMTilC,EAAA5rC,UAAAqgB,SAAQ,eACA7Y,EAAU1H,KAAQ25B,gBAClB7yB,EAAU9G,KAA+B6tC,gBACzC9mC,EAAQ/G,KAAQkuC,cAClBlnC,EAAMhH,KAA6DiuC,oBACjEre,EAAO5vB,KAAQgtC,YACjBpd,EAAO,KACHoiB,EAAWhyC,KAAQ+wC,+BACzB/pC,EAAS0kC,EACP1kC,EAAMhH,KACD0vC,mBAAgB,CACpBsC,EAAY,GAAK,EAAIpiB,EAAQ,GAAIoiB,EAAY,GAAK,EAAIpiB,EAAQ,IAC/D9oB,EACAC,UAIFC,OAAQA,EAAOc,MAAM,GACrBJ,gBAA2B7E,IAAf6E,EAA2BA,EAAa,KACpDZ,WAAYA,EACZC,SAAUA,EACV8X,KAAI7e,KAAOguC,YAWflC,EAAA5rC,UAAA8tC,QAAO,eACDnvB,EACE/X,EAAU9G,KAAQ6tC,4BACLhrC,IAAfiE,IACF+X,EAAI7e,KAAQgxC,qBAAqBlqC,IAE5B+X,GASTitB,EAAA5rC,UAAA8wC,qBAAoB,SAAClqC,OAEfsP,EAAKizB,EADLxzB,EAAM7V,KAAQitC,UAAY,UAErBF,aAAY,KACbkF,EAAUrnC,EAAAsnC,kBAAiBlyC,KAAM+sC,aAAcjmC,EAAY,GACjE+O,EAASo8B,EACT77B,EAAGpW,KAAQ+sC,aAAakF,GAEtB5I,EADE4I,GAAOjyC,KAAS+sC,aAAanpC,OAAS,EAC3B,EAEAwS,EAAGpW,KAAQ+sC,aAAakF,EAAU,QAGjD77B,EAAGpW,KAAQ4sC,eACXvD,EAAUrpC,KAAQ8sC,mBAEbj3B,EAASjG,KAAK0N,IAAIlH,EAAMtP,GAAc8I,KAAK0N,IAAI+rB,IASxDyC,EAAA5rC,UAAA4uC,qBAAoB,SAACjwB,WACVkuB,aAAY,SACVA,aAAanpC,QAAU,EAAC,OACxB,MAEHuuC,EAAYr1B,EAAAC,MAChBnN,KAAKoK,MAAM6E,GACX,EAAC7e,KACI+sC,aAAanpC,OAAS,GAEvBylC,EAAUrpC,KACT+sC,aAAaoF,GAASnyC,KAAS+sC,aAAaoF,EAAY,eAExDpF,aAAaoF,GAClBviC,KAAK06B,IAAIjB,EAAYvsB,EAAAC,MAAM8B,EAAOszB,EAAW,EAAG,gBAI3CvF,eAAiBh9B,KAAK06B,IAAGtqC,KAAM8sC,YAAajuB,EAAI7e,KAAQitC,WAenEnB,EAAA5rC,UAAAkyC,IAAG,SAACC,EAAkB/Z,GACqC,IACrD7wB,KACJmJ,EAAAC,OACEnG,MAAM8B,QAAQ6lC,IACqD,mBAAvCA,EAAkBC,sBAE9C,IAEE5nC,MAAM8B,QAAQ6lC,GAAgB,CAChCzhC,EAAAC,QAAQzI,EAAAwc,QAAQytB,GAAmB,QAC7B5+B,EAAS+lB,EAAAgT,eAAe6F,EAAgBryC,KAAO25B,iBACrDlyB,EAAW8qC,EAAAC,WAAkB/+B,WACpB4+B,EAAiBI,YAAcC,EAAAryC,QAAasyC,OAAM,CACrDl/B,EAAS+lB,EAAAgT,eACb6F,EAAiBnqC,YAASlI,KACrB25B,kBAEPlyB,EAAW8qC,EAAAC,WAAkB/+B,IACpBmd,OAAM5wB,KAAMkuC,cAAe9lC,EAAAulC,UAAUl6B,aAExCm/B,EAAiBpZ,EAAAqZ,oBAErBprC,EADEmrC,EACoEP,EACnEzT,QACA5wB,UAAU4kC,EAAc5yC,KAAO25B,iBAEvB0Y,OAIVS,YAAYrrC,EAAU6wB,IAO7BwT,EAAA5rC,UAAA4yC,YAAW,SAACrrC,EAAU6wB,OACdh5B,EAAUg5B,GAAW,GACvBzxB,EAAOvH,EAAQuH,KACdA,IACHA,EAAI7G,KAAQ+wC,oCAKVpyB,EAHEiR,OACgB/sB,IAApBvD,EAAQswB,QAAwBtwB,EAAQswB,QAAO,CAAI,EAAG,EAAG,EAAG,GACxDqiB,OAA8BpvC,IAApBvD,EAAQ2yC,SAAwB3yC,EAAQ2yC,QAGtDtzB,OAD4B9b,IAA1BvD,EAAQqf,cACMrf,EAAQqf,mBACK9b,IAApBvD,EAAQyf,QACJ/e,KAAQ8uC,qBAAqBxvC,EAAQyf,SAElC,UAEZg0B,EAAStrC,EAASurC,qBAGlBjsC,EAAQ/G,KAAQkuC,cAChB3jB,EAAW3a,KAAKD,KAAK5I,GACvByjB,EAAW5a,KAAKC,KAAK9I,GACrBksC,EAAU59B,EAAAA,EACV69B,EAAU79B,EAAAA,EACV89B,GAAW99B,EAAAA,EACX+9B,GAAW/9B,EAAAA,EACTS,EAASrO,EAAS4rC,YACftvC,EAAI,EAAGC,EAAK+uC,EAAOnvC,OAAQG,EAAIC,EAAID,GAAK+R,EAAM,KAC/C61B,EAAOoH,EAAOhvC,GAAKwmB,EAAWwoB,EAAOhvC,EAAI,GAAKymB,EAC9CohB,EAAOmH,EAAOhvC,GAAKymB,EAAWuoB,EAAOhvC,EAAI,GAAKwmB,EACpD0oB,EAAUrjC,KAAKuG,IAAI88B,EAAStH,GAC5BuH,EAAUtjC,KAAKuG,IAAI+8B,EAAStH,GAC5BuH,EAAUvjC,KAAKwG,IAAI+8B,EAASxH,GAC5ByH,EAAUxjC,KAAKwG,IAAIg9B,EAASxH,OAI1B9kC,EAAU9G,KAAQsxC,+BAA8B,CACjD2B,EAASC,EAASC,EAASC,IAC3BvsC,EAAK,GAAK+oB,EAAQ,GAAKA,EAAQ,GAAI/oB,EAAK,GAAK+oB,EAAQ,GAAKA,EAAQ,KAErE9oB,EAAawoB,MAAMxoB,GACf6X,EACA/O,KAAKwG,IAAItP,EAAY6X,GACzB7X,EAAU9G,KAAQ4xC,yBAAyB9qC,EAAYmrC,EAAU,EAAI,GAGrEznB,GAAYA,MACR8oB,GAAcL,EAAUE,GAAW,EACnCI,GAAcL,EAAUE,GAAW,EAGjCI,GAFNF,IAAgB1jB,EAAQ,GAAKA,EAAQ,IAAM,EAAK9oB,GAEnByjB,GAD7BgpB,IAAgB3jB,EAAQ,GAAKA,EAAQ,IAAM,EAAK9oB,GACK0jB,EAC/CipB,EAAUF,EAAahpB,EAAW+oB,EAAa9oB,EAC/CxjB,EAAMhH,KAAQ0zC,qBAAoB,CAAEF,EAASC,GAAU3sC,GACvDxB,EAAWhG,EAAQgG,SAAWhG,EAAQgG,SAAWiE,EAAA8d,UAE9BxkB,IAArBvD,EAAQovC,SAAsB1uC,KAC3BsuC,gBAAe,CAEhBxnC,WAAYA,EACZE,OAAQA,EACR0nC,SAAUpvC,EAAQovC,SAClBC,OAAQrvC,EAAQqvC,QAElBrpC,SAGG+mC,kBAAoBvlC,OACpBslC,cAAgBplC,OAChB6oC,mBAAkB,GAAO,GAC9BtH,EAAkBjjC,GAAU,KAWhCwmC,EAAA5rC,UAAAyzC,SAAQ,SAACxsC,EAAYN,EAAMrF,QACpBoyC,iBACHpa,EAAAS,mBAAmB9yB,EAAUnH,KAAO25B,iBACpC9yB,EACArF,IASJsqC,EAAA5rC,UAAA0zC,iBAAgB,SAACzsC,EAAYN,EAAMrF,QAC5B8rC,kBACH5B,EACEvkC,EACAN,EACArF,EAAQxB,KACH6tC,gBAAa7tC,KACbkuC,iBAaXpC,EAAA5rC,UAAA2zC,qBAAoB,SAAC7sC,EAAQF,EAAYC,EAAUF,OAC7CitC,EACElkB,EAAO5vB,KAAQgtC,YACjBpd,GAAW5oB,EAAM,KACbgrC,EAAWhyC,KAAQ+wC,8BAA8BhqC,GACjDgtC,EAAgBrI,EACpB1kC,EACAH,EAAI,CACHmrC,EAAY,GAAK,EAAIpiB,EAAQ,GAAIoiB,EAAY,GAAK,EAAIpiB,EAAQ,IAC/D9oB,EACAC,GAEF+sC,EAAW,CACT9sC,EAAO,GAAK+sC,EAAc,GAC1B/sC,EAAO,GAAK+sC,EAAc,WAGvBD,GAMThI,EAAA5rC,UAAA+9B,MAAK,wBACWgQ,0BAAgDprC,IAA/B7C,KAAW6tC,iBAQ5C/B,EAAA5rC,UAAA8zC,aAAY,SAACC,OACLjtC,EAASwyB,EAAAC,iBAAgBz5B,KAAMosC,cAAapsC,KAAO25B,sBACpDua,UAAS,CACZltC,EAAO,GAAKitC,EAAiB,GAC7BjtC,EAAO,GAAKitC,EAAiB,MAQjCnI,EAAA5rC,UAAAi0C,qBAAoB,SAACF,OACbjtC,EAAMhH,KAAQosC,mBACfkB,kBAAiB,CACpBtmC,EAAO,GAAKitC,EAAiB,GAC7BjtC,EAAO,GAAKitC,EAAiB,MAWjCnI,EAAA5rC,UAAAk0C,iBAAgB,SAACC,EAAOC,OAChBjG,EACJiG,GAAc9a,EAAAS,mBAAmBqa,EAAUt0C,KAAO25B,sBAC/C4a,yBAAyBF,EAAOhG,IASvCvC,EAAA5rC,UAAAq0C,yBAAwB,SAACF,EAAOC,OACxBE,EAAQx0C,KAAQ08B,gBAAY18B,KAAWkvC,iBACvCroC,EAAI7G,KAAQ0vC,iBAAgB1vC,KAAMkuC,eAClCuG,EAAaz0C,KAAQotC,aAAatmC,WAAU9G,KAC3CqsC,kBAAoBgI,EACzB,EACAxtC,EACA2tC,GAGEF,IAAUt0C,KACPosC,cAAapsC,KAAQ4vC,oBAAoB6E,EAAeH,SAG1DjI,mBAAqBgI,OACrBxE,qBAUP/D,EAAA5rC,UAAAw0C,WAAU,SAACxqB,EAAOoqB,QACXF,iBAAiBxkC,KAAK06B,IAAGtqC,KAAM8sC,aAAc5iB,GAAQoqB,IAU5DxI,EAAA5rC,UAAAy0C,eAAc,SAACzqB,EAAOoqB,GAChBA,IACFA,EAAa9a,EAAAS,mBAAmBqa,EAAUt0C,KAAO25B,uBAE9Cib,uBAAuB1qB,EAAOoqB,IAOrCxI,EAAA5rC,UAAA00C,uBAAsB,SAAC1qB,EAAOoqB,OACtBE,EAAQx0C,KAAQ08B,gBAAY18B,KAAWkvC,iBACvC2F,EAAW70C,KAAQotC,aAAarmC,SAAQ/G,KACvCssC,gBAAkBpiB,EACvBsqB,GAEEF,IAAUt0C,KACPosC,cAAapsC,KAAQ+vC,sBAAsB8E,EAAaP,SAE1DhI,iBAAmBpiB,OACnB2lB,qBASP/D,EAAA5rC,UAAAg0C,UAAS,SAACltC,QACHsmC,kBAAkB9T,EAAAS,mBAAmBjzB,EAAMhH,KAAO25B,mBAOzDmS,EAAA5rC,UAAAotC,kBAAiB,SAACtmC,QACXolC,cAAgBplC,OAChB6oC,qBAQP/D,EAAA5rC,UAAA8uC,QAAO,SAAC8F,EAAM5qB,eACP6hB,OAAO+I,IAAS5qB,OAChBzJ,eACOsrB,OAAO+I,IASrBhJ,EAAA5rC,UAAAqtC,cAAa,SAACzmC,QACPulC,kBAAoBvlC,OACpB+oC,qBASP/D,EAAA5rC,UAAAmtC,YAAW,SAACtmC,QACLulC,gBAAkBvlC,OAClB8oC,qBAQP/D,EAAA5rC,UAAAstC,QAAO,SAAC3uB,QACD0uB,cAAavtC,KAAM8uC,qBAAqBjwB,KAW/CitB,EAAA5rC,UAAA2vC,kBAAiB,SAACkF,EAAsBC,OAChCR,EAAQx0C,KACP08B,gBAAY18B,KAAWkvC,kBAAoB8F,EAG5CH,EAAW70C,KAAQotC,aAAarmC,SAAQ/G,KACvCssC,gBACLkI,GAEI3tC,EAAI7G,KAAQ0vC,iBAAiBmF,GAC7BJ,EAAaz0C,KAAQotC,aAAatmC,WAAU9G,KAC3CqsC,kBACL,EACAxlC,EACA2tC,GAEIS,EAASj1C,KAAQotC,aAAapmC,OAAMhH,KACnCosC,cACLqI,EACA5tC,EACA2tC,EAAQx0C,KACH6zC,qBAAoB7zC,KAClBosC,cACLqI,EACAI,EACAhuC,SAIK0L,IAAIg+B,EAAAlwC,QAAawxC,YAAcgD,GAAW70C,KAC5C+a,IAAIw1B,EAAAlwC,QAAawxC,SAAUgD,QAEzBtiC,IAAIg+B,EAAAlwC,QAAa8wC,cAAgBsD,GAAaz0C,KAChD+a,IAAIw1B,EAAAlwC,QAAa8wC,WAAYsD,QAG5BliC,IAAIg+B,EAAAlwC,QAAamwC,SACtB5oC,EAAAiD,OAAM7K,KAAMuS,IAAIg+B,EAAAlwC,QAAamwC,QAASyE,IAASj1C,KAE3C+a,IAAIw1B,EAAAlwC,QAAamwC,OAAQyE,QAGvBvY,iBAAmBqY,GAAoB/0C,KACzCmvC,wBAEF5C,mBAAgB1pC,GAYvBipC,EAAA5rC,UAAAy8B,mBAAkB,SAACuY,EAAcC,EAAyBb,OAClD5F,OAA4B7rC,IAAjBqyC,EAA6BA,EAAe,IACvDlpC,EAAYmpC,GAA2B,EAEvCN,EAAW70C,KAAQotC,aAAarmC,SAAQ/G,KAAMssC,iBAC9CzlC,EAAI7G,KAAQ0vC,iBAAiBmF,GAC7BJ,EAAaz0C,KAAQotC,aAAatmC,WAAU9G,KAC3CqsC,kBACLrgC,EACAnF,GAEIouC,EAASj1C,KAAQotC,aAAapmC,OAAMhH,KACnCosC,cACLqI,EACA5tC,GACA,EAAK7G,KACA6zC,qBAAoB7zC,KAClBosC,cACLqI,EACAI,EACAhuC,OAIa,IAAb6nC,IAAc1uC,KAAUusC,0BACrBF,kBAAoBoI,OACpBnI,gBAAkBuI,OAClBzI,cAAgB6I,YAChBpF,wBAIDxB,EACJiG,IAA4B,IAAb5F,EAAc1uC,KAAQusC,mBAAgB1pC,QAClD0pC,mBAAgB1pC,OAGdgrC,kBAAoB4G,GAAaz0C,KACjCkuC,gBAAkB2G,GAAW70C,KAC5BiuC,qBACLrmC,EAAAiD,OAAM7K,KAAMiuC,oBAAqBgH,UAEzBvY,gBAAY18B,KACdmvC,wBAGFb,gBAAe,CAClBvnC,SAAU8tC,EACV7tC,OAAQiuC,EACRnuC,WAAY2tC,EACZ/F,SAAUA,EACVC,OAAQC,EAAAwG,QACR/G,OAAQA,MAWdvC,EAAA5rC,UAAAm1C,iBAAgB,gBACT1Y,mBAAmB,QAEnBqS,QAAQ/S,EAAA57B,QAAS87B,YAAa,IAWrC2P,EAAA5rC,UAAAo1C,eAAc,SAACJ,EAAcC,EAAyBb,OAC9CjG,EACJiG,GAAc9a,EAAAS,mBAAmBqa,EAAUt0C,KAAO25B,sBAC/C4b,uBAAuBL,EAAcC,EAAyB9G,IAUrEvC,EAAA5rC,UAAAq1C,uBAAsB,SAACL,EAAcC,EAAyBb,QACvDtF,QAAQ/S,EAAA57B,QAAS87B,aAAa,QAE9BQ,mBAAmBuY,EAAcC,EAAyBb,IAUjExI,EAAA5rC,UAAAwzC,qBAAoB,SAACrI,EAAcmK,OAC3B3uC,EAAI7G,KAAQ0vC,iBAAgB1vC,KAAMkuC,2BAC5Bd,aAAapmC,OACvBqkC,EACAmK,GAAoBx1C,KAAS6tC,gBAC7BhnC,IAaJilC,EAAA5rC,UAAAu1C,mBAAkB,SAACC,EAAYC,OACvBC,EAAS51C,KAAQ8uC,qBAAqB4G,eAChC1E,qBAAoBhxC,KACzB4xC,yBAAyBgE,EAAWD,KAa7C7J,EAAA5rC,UAAA0xC,yBAAwB,SAACrG,EAAkBoK,OACnC3pC,EAAY2pC,GAAiB,EAC7B9uC,EAAI7G,KAAQ0vC,iBAAgB1vC,KAAMkuC,2BAE5Bd,aAAatmC,WAAWykC,EAAkBv/B,EAAWnF,IAErEilC,EA1/CA,CAAmBtsB,EAAAnf,iFC1RnBw1C,EAUE,CATAC,MAAK,QACLC,YAAW,aACXC,YAAW,aACXC,QAAO,UACPC,YAAW,aACXC,kBAAiB,kBACjBC,cAAa,eACbC,oBAAmB,qBACnB1D,OAAM,qHCXL,IACG2D,EAAK,CAKTpM,QAAO,UAKPqM,KAAI,KAKJC,OAAM,IAKNC,OAAM,SAKNC,YAAW,cAKXC,OAAM,SASKC,EAAe,GAE5BA,EAAgBN,EAAMpM,SAAY,EAAIt6B,KAAKwO,GAAK,QAAW,IAC3Dw4B,EAAgBN,EAAMC,MAAQ,MAC9BK,EAAgBN,EAAME,QAAU,EAChCI,EAAgBN,EAAMK,QAAU,KAAO,SAEvCE,EAAeP,0EChDfQ,EAGE,CAFA5a,UAAW,EACXC,YAAa,2ECFf4a,EAIE,CAHAvG,OAAM,SACNW,WAAU,aACVU,SAAQ,sICFGmF,EAAmB,GAMnBC,EAAoB,8vBC4FjBC,EAAeC,EAAOC,EAAYC,OAC5CzvB,UACe/kB,IAAfu0C,EAAwB,SACjBrzC,EAAI,EAAGC,EAAKmzC,EAAMvzC,OAAQG,EAAIC,IAAMD,EAC3CqzC,EAAWrzC,GAAKozC,EAAMpzC,GAExB6jB,EAASwvB,OAETxvB,EAASuvB,EAAMrvC,eAEV8f,WASO0vB,EAAkBH,EAAOC,EAAYC,WAChCx0C,IAAfu0C,GAA4BD,IAAUC,EAAU,SACzCrzC,EAAI,EAAGC,EAAKmzC,EAAMvzC,OAAQG,EAAIC,IAAMD,EAC3CqzC,EAAWrzC,GAAKozC,EAAMpzC,GAExBozC,EAAQC,SAEHD,WAUOI,EAAc7vC,GAC5B8vC,EAAArH,IAAQzoC,EAAW+vC,UAAW/vC,GAC9BgwC,EAAAvH,IAAiBzoC,EAAYA,EAAYwvC,YAmB3BS,EAAIC,SACU,iBAAdA,EACVJ,EAAAjlC,IAA+BqlC,GACJA,GAAmB,cAuBpCC,EAAmBnwC,EAAYZ,EAAYgxC,EAAOC,OAE5DC,EACEC,GAFNvwC,EAAaiwC,EAAIjwC,IAESwwC,4BACtBD,EAAM,IACRD,EAAkBC,EAAOnxC,EAAYgxC,GACjCC,GAAaA,IAAcrwC,EAAWywC,YAClCC,EAAgB1wC,EAAWyiC,sBAE/B6N,EACGA,EAAkBI,EAAiBpO,EAAAC,gBAAgB8N,aAIpDM,EAAQ3wC,EAAWywC,cACpBE,GAASrO,EAAA3pC,QAAM6pC,UAAY6N,GAAcA,GAAa/N,EAAA3pC,QAAM6pC,QAC/D8N,EAAkBlxC,WA4BZsxC,EAvBAE,EAAaC,EACjB7wC,EACAiwC,EAAG,iBAEDW,IAAehB,GAAqBe,IAAUrO,EAAA3pC,QAAM6pC,QAEtD8N,EAAkBlxC,EAAaY,EAAWyiC,4BAEtCqO,EAAQ,CACVV,EAAM,GAAKhxC,EAAa,EACxBgxC,EAAM,GACNA,EAAM,GAAKhxC,EAAa,EACxBgxC,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKhxC,EAAa,EACxBgxC,EAAM,GACNA,EAAM,GAAKhxC,EAAa,GAE1B0xC,EAAWF,EAAWE,EAAUA,EAAU,GAG1CR,GAFcS,EAAAC,YAAYF,EAAS1wC,MAAM,EAAG,GAAI0wC,EAAS1wC,MAAM,EAAG,IACnD2wC,EAAAC,YAAYF,EAAS1wC,MAAM,EAAG,GAAI0wC,EAAS1wC,MAAM,EAAG,KAC9B,OAKjBjF,KAHhBu1C,EAAgBL,EAClB/N,EAAAC,gBAAgB8N,GAChBrwC,EAAWyiC,sBAEb6N,GAAmBI,WAIlBJ,WAUOW,EAAyBC,aArGVA,GAC7BA,EAAY3vC,QAAQsuC,GAqGpBsB,CAAeD,GACfA,EAAY3vC,SAAO,SAAWN,GAC5BiwC,EAAY3vC,SAAO,SAAW6vC,GACxBnwC,IAAWmwC,GACbpB,EAAAvH,IAAiBxnC,EAAQmwC,EAAa5B,kBA8C9B6B,EAAiBrxC,EAAYsxC,UACtCtxC,EAEuB,iBAAVA,EACTiwC,EAAIjwC,GAEuBA,EAJ3BiwC,EAAIqB,YAmFCC,EAAW9xC,EAAY+xC,UAC9BC,EACLhyC,EAAU,iBAEStE,IAAnBq2C,EAA+BA,EAAc,sBAoCjCE,EAAWC,EAAaC,MAClCD,IAAgBC,EAAW,OACtB,MAEHC,EAAaF,EAAYlB,aAAemB,EAAYnB,kBACtDkB,EAAY5B,YAAc6B,EAAY7B,WAGlBc,EAA4Bc,EAAaC,KACtCpC,IAHlBqC,WAgBKhB,EACdiB,EACAC,OAEMC,EAAaF,EAAiB/B,UAC9BkC,EAAkBF,EAAsBhC,UAC1CmC,EAAgBlC,EAAAnlC,IAAiBmnC,EAAYC,UAC5CC,IACHA,EAAgBtC,GAEXsC,WAaOC,EAAalxC,EAAQmwC,UAG5BP,EAFkBZ,EAAIhvC,GACCgvC,EAAImB,aAkBpBK,EAAUhyC,EAAYwB,EAAQmwC,UACtBe,EAAalxC,EAAQmwC,EACpCc,CAAczyC,OAAYtE,EAAWsE,EAAWvD,iBAezCk2C,EAAgBrmC,EAAQ9K,EAAQmwC,EAAap/B,OACrDkgC,EAAgBC,EAAalxC,EAAQmwC,UACpC1wC,EAAA2xC,eAAetmC,EAAQmmC,OAAe/2C,EAAW6W,GAyBvD,IApQDsgC,EACAC,EACAC,EACAC,EAkQEC,EAAiB,cA2BLC,WACPD,WAmBOE,EAAiBnzC,EAAYqyC,UACtCY,EAGEjB,EAAUhyC,EAAYqyC,EAAkBY,GAFtCjzC,WAYKozC,EAAmBpzC,EAAYqzC,UACxCJ,EAGEjB,EAAUhyC,EAAYizC,EAAgBI,GAFpCrzC,WAYKszC,EAAahnC,EAAQ+lC,UAC9BY,EAGEN,EAAgBrmC,EAAQ+lC,EAAkBY,GAFxC3mC,WAYKinC,EAAejnC,EAAQ+mC,UAChCJ,EAGEN,EAAgBrmC,EAAQ2mC,EAAgBI,GAFtC/mC,EAkDTklC,EAAyBgC,EAAAC,aACzBjC,EAAyBkC,EAAAD,aAnZzBZ,EAuZEa,EAAAD,YAtZFX,EAuZEU,EAAAC,YAtZFV,EAuZES,EAAAG,aAtZFX,EAuZEQ,EAAAI,WArZFf,EAAa/wC,SAAO,SAAWowC,GAC7BY,EAAahxC,SAAO,SAAWqwC,GAC7B5B,EAAAvH,IAAiBkJ,EAAaC,EAAaY,GAC3CxC,EAAAvH,IAAiBmJ,EAAaD,EAAac,iqBC/QpCa,EAAS,QAMTC,EAAYrrC,KAAKwO,GAAK48B,EAMtBE,EAAM,EAAKD,GAAYA,EAAWA,EAAWA,GAM7CE,EAAY,EAAI,KAAM,GAAK,IAAK,IAOhCC,EAAaJ,EAASprC,KAAK0N,IAAI1N,KAAKyrC,IAAIzrC,KAAKwO,GAAK,IAM/Dk9B,EAAA,SAAAl8C,GAGK,SACHm8C,EAAYroC,UACV9T,EAAAW,KAAAC,KAAA,CACEkT,KAAMA,EACNmlC,MAAOrO,EAAA3pC,QAAMm2C,OACb/iC,OAAQynC,EACRM,QAAQ,EACRC,YAAaN,EACbO,mBAAkB,SAAY50C,EAAYgxC,UACjChxC,EAAagW,EAAAI,KAAK46B,EAAM,GAAKkD,mBAZXW,EAAAJ,EAAAn8C,GAgBjCm8C,EAhBA,CAAiCK,EAAAv7C,SAwBpBw7C,EAAW,KAClBP,EAAkB,iBAClBA,EAAkB,mBAClBA,EAAkB,mBAClBA,EAAkB,mBAClBA,EAAkB,0DAWRQ,EAAa3E,EAAOC,EAAYC,OACxCzzC,EAASuzC,EAAMvzC,OACfm4C,EAAY1E,EAAgB,EAAIA,EAAgB,EAClDzvB,EAASwvB,OACEv0C,IAAX+kB,IAGAA,EAFEm0B,EAAY,EAEL5E,EAAMrvC,QAET,IAAO4C,MAAM9G,YAGdG,EAAI,EAAGA,EAAIH,EAAQG,GAAKg4C,EAAS,CACxCn0B,EAAO7jB,GAAMk3C,EAAY9D,EAAMpzC,GAAM,QACjCyL,EAAIwrC,EAASprC,KAAK0N,IAAI1N,KAAKyrC,IAAKzrC,KAAKwO,KAAO+4B,EAAMpzC,EAAI,GAAK,IAAO,MAClEyL,EAAI4rC,EACN5rC,EAAI4rC,EACK5rC,GAAK4rC,IACd5rC,GAAK4rC,GAEPxzB,EAAO7jB,EAAI,GAAKyL,SAEXoY,WAWOo0B,EAAW7E,EAAOC,EAAYC,OACtCzzC,EAASuzC,EAAMvzC,OACfm4C,EAAY1E,EAAgB,EAAIA,EAAgB,EAClDzvB,EAASwvB,OACEv0C,IAAX+kB,IAGAA,EAFEm0B,EAAY,EAEL5E,EAAMrvC,QAET,IAAO4C,MAAM9G,YAGdG,EAAI,EAAGA,EAAIH,EAAQG,GAAKg4C,EAC/Bn0B,EAAO7jB,GAAM,IAAMozC,EAAMpzC,GAAMk3C,EAC/BrzB,EAAO7jB,EAAI,GACR,IAAM6L,KAAKqsC,KAAKrsC,KAAKuN,IAAIg6B,EAAMpzC,EAAI,GAAKi3C,IAAYprC,KAAKwO,GAAK,UAE5DwJ,wFCwITs0B,EA3NA,WAGK,SACHC,EAAY78C,GAIPU,KACEo8C,MAAQ98C,EAAQ4T,KAQlBlT,KACEq8C,OAAsD/8C,EAAQ+4C,MAQhEr4C,KACEs8C,aAA6Bz5C,IAAnBvD,EAAQmU,OAAuBnU,EAAQmU,OAAS,KAQ5DzT,KACEu8C,kBACqB15C,IAAxBvD,EAAQm8C,YAA4Bn8C,EAAQm8C,YAAc,KAKzDz7C,KACEw8C,sBACyB35C,IAA5BvD,EAAQm9C,gBAAgCn9C,EAAQm9C,gBAAe,MAK9Dz8C,KACE08C,aAA6B75C,IAAnBvD,EAAQk8C,QAAuBl8C,EAAQk8C,OAKnDx7C,KACE28C,aAAS38C,KAAW08C,UAAO18C,KAASs8C,SAKtCt8C,KACE48C,wBAA0Bt9C,EAAQo8C,mBAKpC17C,KACE68C,iBAAmB,KAKrB78C,KACE88C,eAAiBx9C,EAAQ84C,qBAMhC+D,EAAAj8C,UAAA8H,SAAQ,uBACM20C,WAQdR,EAAAj8C,UAAAu3C,QAAO,uBACO2E,OAQdD,EAAAj8C,UAAAgI,UAAS,uBACKo0C,SAQdH,EAAAj8C,UAAAi4C,SAAQ,uBACMkE,QAUdF,EAAAj8C,UAAAiqC,iBAAgB,uBACF2S,gBAAkB9S,EAAAC,gBAAejqC,KAAMq8C,SAQrDF,EAAAj8C,UAAA68C,eAAc,uBACAR,cAcdJ,EAAAj8C,UAAA88C,mBAAkB,uBACJR,kBAQdL,EAAAj8C,UAAA+oC,SAAQ,uBACMyT,SAQdP,EAAAj8C,UAAA+8C,UAAS,SAACzB,QACHkB,QAAUlB,OACVmB,aAAenB,IAAMx7C,KAASs8C,UAMrCH,EAAAj8C,UAAAg9C,mBAAkB,uBACJL,kBAMdV,EAAAj8C,UAAAi9C,mBAAkB,SAACC,QACZP,iBAAmBO,GAQ1BjB,EAAAj8C,UAAA4iB,UAAS,SAACrP,QACH6oC,QAAU7oC,OACVkpC,aAAS38C,KAAW08C,UAAWjpC,IAStC0oC,EAAAj8C,UAAAm9C,eAAc,SAAC5B,QACRc,aAAed,GAStBU,EAAAj8C,UAAAo9C,sBAAqB,SAACC,QACfX,wBAA0BW,GAQjCpB,EAAAj8C,UAAAg4C,uBAAsB,uBACR0E,yBAEhBT,EAzNA,sjBC/BaqB,EAAM,EAAI,KAAM,GAAK,IAAK,IAM1BC,EAdS,QAcU7tC,KAAKwO,GAAe,IAUpDs/B,EAAA,SAAAt+C,GAIK,SACHu+C,EAAYzqC,EAAM0qC,UAChBx+C,EAAAW,KAAAC,KAAA,CACEkT,KAAMA,EACNmlC,MAAOrO,EAAA3pC,QAAM6pC,QACbz2B,OAAQ+pC,EACRf,gBAAiBmB,EACjBpC,QAAQ,EACRpD,cAAeqF,EACfhC,YAAa+B,iBAbcK,EAAAF,EAAAv+C,GAgBjCu+C,EAhBA,CAAiC/B,EAAAv7C,SAwBpBy9C,EAAW,KAClBJ,EAAkB,cAClBA,EAAkB,YAAY,WAC9BA,EAAkB,qCAClBA,EAAkB,gCAClBA,EAAkB,+CAA+C,gIC3DpE,IACCK,EAAK,YAKOC,IACdD,EAAK,YAQSE,EAAI/qC,UAEhB6qC,EAAM7qC,IACN6qC,EAAM7qC,EAAKgrC,QAAO,yCAAA,aAClB,cASYC,EAAIjrC,EAAMxL,GACxBq2C,EAAM7qC,GAAQxL,0IC1BZ02C,EAAU,YAKEC,IACdD,EAAU,YAWIE,EAAI31C,EAAQmwC,EAAar/B,OACjCigC,EAAa/wC,EAAO8uC,UACpBkC,EAAkBb,EAAYrB,UAC9BiC,KAAc0E,IAClBA,EAAW1E,GAAU,IAEvB0E,EAAW1E,GAAYC,GAAmBlgC,WA6B5B8kC,EAAI7E,EAAYC,OAC1B3rC,SACA0rC,KAAc0E,GAAczE,KAAmByE,EAAW1E,KAC5D1rC,EAAYowC,EAAW1E,GAAYC,IAE9B3rC,qIC3CIwwC,EAAiB,mBAWdC,EAAYlwC,EAAIM,EAAI6vC,OAC5BC,EAASD,GAAcF,EACvBI,EAAO9hC,EAAA+hC,UAAUtwC,EAAG,IACpBuwC,EAAOhiC,EAAA+hC,UAAUhwC,EAAG,IACpBkwC,GAAeD,EAAOF,GAAQ,EAC9BI,EAAcliC,EAAA+hC,UAAUhwC,EAAG,GAAKN,EAAG,IAAM,EACzC9K,EACJmM,KAAKC,IAAIkvC,GAAenvC,KAAKC,IAAIkvC,GACjCnvC,KAAKC,IAAImvC,GACPpvC,KAAKC,IAAImvC,GACTpvC,KAAKD,IAAIivC,GACThvC,KAAKD,IAAImvC,UACN,EAAIH,EAAS/uC,KAAKqvC,MAAMrvC,KAAK62B,KAAKhjC,GAAImM,KAAK62B,KAAK,EAAIhjC,aAyL7Cy7C,EAAO3wC,EAAI4wC,EAAUC,EAASV,OACtCC,EAASD,GAAcF,EACvBI,EAAO9hC,EAAA+hC,UAAUtwC,EAAG,IACpB8wC,EAAOviC,EAAA+hC,UAAUtwC,EAAG,IACpB+wC,EAAOH,EAAWR,EAClBY,EAAM3vC,KAAK4vC,KACf5vC,KAAKC,IAAI+uC,GAAQhvC,KAAKD,IAAI2vC,GACxB1vC,KAAKD,IAAIivC,GAAQhvC,KAAKC,IAAIyvC,GAAQ1vC,KAAKD,IAAIyvC,IAEzCK,EACJJ,EACAzvC,KAAKqvC,MACHrvC,KAAKC,IAAIuvC,GAAWxvC,KAAKC,IAAIyvC,GAAQ1vC,KAAKD,IAAIivC,GAC9ChvC,KAAKD,IAAI2vC,GAAQ1vC,KAAKC,IAAI+uC,GAAQhvC,KAAKC,IAAI0vC,WAEvCziC,EAAA4iC,UAAUD,GAAM3iC,EAAA4iC,UAAUH,oICtOpBI,EAAalsC,EAAQmsC,EAAYlX,mBAUnC1hC,EAAQF,EAAYD,EAAMg5C,EAAcC,MAC5C94C,EAAM,KACF+4C,EAAYH,EAAa,EAAI/4C,EAAK,GAAKC,EACvCk5C,EAAaJ,EAAa,EAAI/4C,EAAK,GAAKC,EACxCm5C,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAClDrrC,EAAOhB,EAAO,GAAKssC,EAAY,EAAIE,EACnCtrC,EAAOlB,EAAO,GAAKssC,EAAY,EAAIE,EACnCvrC,EAAOjB,EAAO,GAAKusC,EAAa,EAAIE,EACpCtrC,EAAOnB,EAAO,GAAKusC,EAAa,EAAIE,EAIpCzrC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,GAGrBC,EAAOE,IAETA,EADAF,GAAQE,EAAOF,GAAQ,OAIrBnF,EAAIuN,EAAAC,MAAM/V,EAAO,GAAIyN,EAAME,GAC3BnF,EAAIsN,EAAAC,MAAM/V,EAAO,GAAI0N,EAAME,GACzBy/B,EAAQ,GAAKvtC,SAGf+4C,GAAgBnX,IAClBn5B,IACG8kC,EAAQzkC,KAAK0N,IAAI,EAAI1N,KAAKwG,IAAI,EAAG3B,EAAOzN,EAAO,IAAMqtC,GACtDA,EAAQzkC,KAAK0N,IAAI,EAAI1N,KAAKwG,IAAI,EAAGpP,EAAO,GAAK2N,GAAQ0/B,GACvD7kC,IACG6kC,EAAQzkC,KAAK0N,IAAI,EAAI1N,KAAKwG,IAAI,EAAG1B,EAAO1N,EAAO,IAAMqtC,GACtDA,EAAQzkC,KAAK0N,IAAI,EAAI1N,KAAKwG,IAAI,EAAGpP,EAAO,GAAK4N,GAAQy/B,KAGjD9kC,EAAGC,cAYH2wC,EAAKn5C,UACZA,yNCxDN,SACMo5C,EACPt5C,EACAu5C,EACAC,EACA/W,OAEMgI,EAAcnpC,EAAAC,SAASg4C,GAAaC,EAAa,GACjD9O,EAAcppC,EAAA2hC,UAAUsW,GAAaC,EAAa,UAEpD/W,EACK35B,KAAKuG,IAAIrP,EAAY8I,KAAKwG,IAAIm7B,EAAaC,IAE7C5hC,KAAKuG,IAAIrP,EAAY8I,KAAKuG,IAAIo7B,EAAaC,IAcjD,SACM+O,EAA2Bz5C,EAAY8X,EAAeD,OACzD9Y,EAAS+J,KAAKuG,IAAIrP,EAAY8X,UAGlC/Y,GACE+J,KAAK0N,IAAI,EAHG,GAGS1N,KAAKwG,IAAI,EAAGtP,EAAa8X,EAAgB,IAHlD,GAIZ,EACED,IACF9Y,EAAS+J,KAAKwG,IAAIvQ,EAAQ8Y,GAC1B9Y,GACE+J,KAAK0N,IAAI,EARC,GAQW1N,KAAKwG,IAAI,EAAGuI,EAAgB7X,EAAa,IARpD,GAUV,GAEGgW,EAAAC,MAAMlX,EAAQ8Y,EAAgB,EAAmB,EAAhBC,YAU1B4hC,EACd/W,EACAgX,EACAC,EACAC,mBAUY75C,EAAYkF,EAAWnF,EAAMg5C,WAClBh9C,IAAfiE,EAAwB,KACpB8X,EAAgB6qB,EAAY,GAC5B9qB,EAAgB8qB,EAAYA,EAAY7lC,OAAS,GACjDg9C,EAAeF,EACjBN,EACExhC,EACA8hC,EACA75C,EACA85C,GAEF/hC,KAGAihC,cAC4Bh9C,IAAf49C,GAA2BA,EAInCF,EACLz5C,EACA85C,EACAjiC,GALO7B,EAAAC,MAAMjW,EAAY6X,EAAeiiC,OAStCC,EAASjxC,KAAKuG,IAAIyqC,EAAc95C,GAChCg6C,EAAIlxC,KAAKoK,MAAMpP,EAAAsnC,kBAAkBzI,EAAaoX,EAAQ70C,WACxDy9B,EAAYqX,GAAKF,GAAgBE,EAAIrX,EAAY7lC,OAAS,EACrD6lC,EAAYqX,EAAI,GAElBrX,EAAYqX,cAiBXC,EACdpP,EACA/yB,EACAoiC,EACAP,EACAC,EACAC,mBAUY75C,EAAYkF,EAAWnF,EAAMg5C,WAClBh9C,IAAfiE,EAAwB,KACpB85C,EAAeF,EACjBN,EACExhC,EACA8hC,EACA75C,EACA85C,GAEF/hC,EACED,OACkB9b,IAAtBm+C,EAAkCA,EAAoB,KAGpDnB,cAC4Bh9C,IAAf49C,GAA2BA,EAInCF,EACLz5C,EACA85C,EACAjiC,GALO7B,EAAAC,MAAMjW,EAAY6X,EAAeiiC,OAUtCK,EAAerxC,KAAKsxC,KACxBtxC,KAAK0N,IAAIsB,EAAgBgiC,GAAgBhxC,KAAK0N,IAAIq0B,GAFlC,MAIZ97B,GAAU7J,GAAa,GAJX,MAI8B,GAC1C60C,EAASjxC,KAAKuG,IAAIyqC,EAAc95C,GAChCq6C,EAAkBvxC,KAAKoK,MAC3BpK,KAAK0N,IAAIsB,EAAgBiiC,GAAUjxC,KAAK0N,IAAIq0B,GAAS97B,GAEjDurC,EAAYxxC,KAAKwG,IAAI6qC,EAAcE,GACnC1M,EAAgB71B,EAAgBhP,KAAK06B,IAAIqH,EAAOyP,UAC/CtkC,EAAAC,MAAM03B,EAAe91B,EAAeiiC,cAgBnCS,EACdziC,EACAD,EACA8hC,EACAC,EACAC,mBAUY75C,EAAYkF,EAAWnF,EAAMg5C,WAClBh9C,IAAfiE,EAAwB,KACpB85C,EAAeF,EACjBN,EACExhC,EACA8hC,EACA75C,EACA85C,GAEF/hC,cAC0B/b,IAAf49C,GAA2BA,IAE1BZ,EAGTU,EACLz5C,EACA85C,EACAjiC,GALO7B,EAAAC,MAAMjW,EAAY6X,EAAeiiC,6MCzNlCU,EAAQv6C,eACLlE,IAAbkE,EACK,kBAUKw6C,EAAKx6C,eACFlE,IAAbkE,EACKA,kBAUKy6C,EAAcv1C,OACtBw1C,EAAS,EAAI7xC,KAAKwO,GAAMnS,kBAOlBlF,EAAU84C,UACdA,EACK94C,OAGQlE,IAAbkE,EACFA,EAAW6I,KAAKoK,MAAMjT,EAAW06C,EAAQ,IAAOA,mBAaxCC,EAAiBC,OACzBC,EAAYD,GAAiB7kC,EAAA+hC,UAAU,mBAOjC93C,EAAU84C,UACdA,EACK94C,OAGQlE,IAAbkE,EACE6I,KAAKkO,IAAI/W,IAAa66C,EACjB,EAEA76C,yDCvED86C,EAAOpkC,UACd7N,KAAK06B,IAAI7sB,EAAG,YASLqkC,EAAQrkC,UACf,EAAIokC,EAAO,EAAIpkC,YASRskC,EAAStkC,UAChB,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,WASjBukC,EAAOvkC,UACdA,uiCCbTwkC,EAAA,SAAA7iD,GAWK,SACH8iD,EAAYr5C,EAAas5C,EAAYC,OAArC1hD,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK2hD,MAAK,GAMV3hD,EAAK4hD,4BAA6B,EAMlC5hD,EAAK6hD,mBAAqB,KAM1B7hD,EAAK8hD,WAAY,EAMjB9hD,EAAK+hD,mBAAoB,EAMzB/hD,EAAKgiD,mBAAoB,EAMzBhiD,EAAKiiD,yBAA2B,UAEb9/C,IAAfs/C,GAA4BC,GAC9B1hD,EAAKkiD,mBACHT,EAC8Bt5C,GAEhCnI,EAAK2hD,MAAQD,GAEb1hD,EAAKmiD,eACiEh6C,EACpEs5C,YAlEcW,EAAAZ,EAAA9iD,GA4EpB8iD,EAAAhiD,UAAA6iD,iBAAgB,SAACC,QACLptC,gBAGRhL,EAAAu1B,OAAMngC,KAAM4V,gBAAiBotC,EAAWhQ,sBAHjBhzC,KAClB4V,gBAAkBotC,EAAWhQ,qBAAqBlrC,aAIpDu6C,MAAMz9C,KAAI5E,KAAM4V,gBAAgBhS,aAChC6c,WAQPyhC,EAAAhiD,UAAA0+B,MAAK,eACGqkB,EAAO,IAAOf,EAAOliD,KACpB4V,gBAAgB9N,QAAK9H,KACrBkjD,OAAMljD,KACNqiD,MAAMv6C,gBAEbm7C,EAAQv+B,gBAAe1kB,MAChBijD,GAUTf,EAAAhiD,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,UAC7BA,EAAqBj7C,EAAAk7C,yBAAwBtjD,KAAMkI,YAAaqH,EAAGC,GAC9D6zC,QAEAZ,mBAAiBziD,KAAS4lB,qBAC5B48B,UAAY5yC,KAAK62B,KACpB8c,EAAAC,qBAAoBxjD,KACb4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACL,SAGC2sC,kBAAiBziD,KAAQ4lB,eAEzB29B,EAAAE,wBAAuBzjD,KACvB4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OAAM9V,KACNwiD,WACL,EACAjzC,EACAC,EACA4zC,EACAC,KASJnB,EAAAhiD,UAAAwjD,WAAU,SAACn0C,EAAGC,UACLm0C,EAAAC,sBAAqB5jD,KACrB6jD,6BACL,EAAC7jD,KACIqiD,MAAKriD,KACL8V,OACLvG,EACAC,IASJ0yC,EAAAhiD,UAAA4jD,QAAO,kBACEC,EAAAC,YAAehkD,KACf6jD,6BACL,EAAC7jD,KACIqiD,MAAKriD,KACL8V,SAiBTosC,EAAAhiD,UAAA+jD,eAAc,SAACC,OACTtuC,cACc/S,IAAdqhD,GACFtuC,EAAe5V,KAAQ6jD,6BAA6B/7C,QACpDq8C,EAAAC,kBAAkBxuC,EAAiB,EAAC5V,KAAOqiD,MAAKriD,KAAO8V,OAAQouC,IAE/DtuC,EAAe5V,KAAQ4V,gBAGlByuC,EAAAC,wBAAwB1uC,EAAiB,EAAC5V,KAAOqiD,MAAKriD,KAAO8V,SAMtEosC,EAAAhiD,UAAAqkD,QAAO,uBACOlC,OAMdH,EAAAhiD,UAAAskD,qBAAoB,mBACTlC,4BAA0BtiD,KAAS4lB,cAAW,KAC/C6+B,EAAar8C,EAAAulC,UAAS3tC,KAAMkI,kBAC7Bq6C,mBAAqBmC,EAAAC,wBAAuB3kD,KAC1C6jD,6BACL,EAAC7jD,KACIqiD,MAAKriD,KACL8V,OACL2uC,EACA,QAEGnC,2BAA0BtiD,KAAQ4lB,0BAE7B28B,oBASdL,EAAAhiD,UAAA0kD,iBAAgB,sBACHC,EAAAxkD,QAAKL,KAAMwkD,uBAAwBM,EAAAzkD,QAAe0kD,MAU/D7C,EAAAhiD,UAAA8kD,mBAAkB,uBACJ3C,MAAMz+C,QAapBs+C,EAAAhiD,UAAA+kD,cAAa,SAAC93C,UACRA,EAAQ,GAACnN,KAASqiD,MAAMz+C,QAAUuJ,EAC7B,SAEE+3C,EAAA7kD,QAAUL,KACd4V,gBAAgB9N,MACT,IAAVqF,EAAc,EAACnN,KAAQqiD,MAAMl1C,EAAQ,GAACnN,KACjCqiD,MAAMl1C,IAAKnN,KAEbkjD,SASThB,EAAAhiD,UAAAilD,eAAc,mBACNjC,EAAMljD,KAAQkjD,OACdttC,EAAe5V,KAAQ4V,gBACvBwvC,EAAIplD,KAAQqiD,MACZ2B,EAAW,GACbnuC,EAAS,EACJ9R,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACXi/C,EAAU,IAAOkC,EAAA7kD,QACrBuV,EAAgB9N,MAAM+N,EAAQzJ,GAC9B82C,GAEFc,EAAYp/C,KAAKo+C,GACjBntC,EAASzJ,SAEJ43C,GAMT9B,EAAAhiD,UAAA2jD,2BAA0B,mBACfnB,mBAAiB1iD,KAAS4lB,cAAW,KACtChQ,EAAe5V,KAAQ4V,gBACzBuuC,EAAAkB,uBAAuBzvC,EAAiB,EAAC5V,KAAOqiD,MAAKriD,KAAO8V,QAAM9V,KAC/D2iD,yBAA2B/sC,QAE3B+sC,yBAA2B/sC,EAAgB9N,aAC3C66C,yBAAyB/+C,OAASugD,EAAAC,kBAAiBpkD,KACjD2iD,yBACL,EAAC3iD,KACIqiD,MAAKriD,KACL8V,cAGJ4sC,kBAAiB1iD,KAAQ4lB,0BAEpB+8B,0BAQdT,EAAAhiD,UAAAolD,8BAA6B,SAACC,OACtBC,EAAyB,GACzBC,EAAc,UACpBD,EAA0B5hD,OAAS8hD,EAAAC,cAAa3lD,KACzC4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACLlG,KAAK62B,KAAK8e,GACVC,EACA,EACAC,OAESvD,EACTsD,EACAV,EAAAzkD,QAAeulD,GACfH,IASJvD,EAAAhiD,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAa41C,SAStBiM,EAAAhiD,UAAA2lD,iBAAgB,SAACpyC,UACRqyC,EAAAC,0BAAyB/lD,KACzB6jD,6BACL,EAAC7jD,KACIqiD,MAAKriD,KACL8V,OACLrC,IAUJyuC,EAAAhiD,UAAA2iD,eAAc,SAACh6C,EAAas5C,QACrB6D,UAAU7D,EAAYt5C,EAAa,QAC9B+M,kBAAe5V,KAClB4V,gBAAe,QAEhBwvC,EAAOa,EAAAC,wBAAuBlmD,KAC7B4V,gBACL,EACA/M,EAAW7I,KACN8V,OAAM9V,KACNqiD,YAEFzsC,gBAAgBhS,OAAyB,IAAhBwhD,EAAKxhD,OAAe,EAAIwhD,EAAKA,EAAKxhD,OAAS,QACpE6c,WAETyhC,EA3XA,CAAsBiE,EAAA9lD,SA6XtB+lD,EAAenE,WAcCoE,EAASr/C,EAAQ23C,EAAQ2H,EAAOC,WACxCt6C,EAAIq6C,GAAgB,GAEpB1wC,EAAe,GACZ7R,EAAI,EAAGA,EAAIkI,IAAKlI,EACvB6G,EAAAu1B,OACEvqB,EACA6iC,EAAA5iC,OAAa7O,EAAQ23C,EAAS,EAAI/uC,KAAKwO,GAAKra,EAAKkI,EAAGs6C,WAGxD3wC,EAAgBhR,KAAKgR,EAAgB,GAAIA,EAAgB,QAC9CqsC,EAAQrsC,EAAiBkvC,EAAAzkD,QAAeulD,GAAE,CACnDhwC,EAAgBhS,kBAUJ4iD,EAAW/yC,OACnBgB,EAAOhB,EAAO,GACdiB,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdmC,EAAe,CACnBnB,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,cAESutC,EAAQrsC,EAAiBkvC,EAAAzkD,QAAeulD,GAAE,CACnDhwC,EAAgBhS,kBAaJ6iD,EAAWC,EAAQC,EAAWC,WACtCC,EAAQF,GAAwB,GAChC7wC,EAAS4wC,EAAOrT,YAChB6P,EAASwD,EAAOI,YAChB9/C,EAAS0/C,EAAO/Y,YAChBoZ,EAAcjxC,GAAU+wC,EAAQ,GAChCjxC,EAAe,IAAOlL,MAAMq8C,GACzBhjD,EAAI,EAAGA,EAAIgjD,EAAahjD,GAAK+R,EAAM,CAC1CF,EAAgB7R,GAAK,EACrB6R,EAAgB7R,EAAI,GAAK,UAChB0E,EAAI,EAAGA,EAAIqN,EAAQrN,IAC1BmN,EAAgB7R,EAAI0E,GAAKzB,EAAOyB,OAG9B28C,EAAI,CAAIxvC,EAAgBhS,QACxBq/C,EAAO,IAAOhB,EAAQrsC,EAAiBstC,EAAQkC,UACrD4B,EAAY/D,EAASj8C,EAAQ0/C,EAAOO,YAAaL,GAC1C3D,WAWO+D,EAAY/D,EAASj8C,EAAQ23C,EAAQiI,WAC7ChxC,EAAkBqtC,EAAQjQ,qBAC1Bl9B,EAASmtC,EAAQ5P,YACjBwT,EAAQjxC,EAAgBhS,OAASkS,EAAS,EAC1CoxC,EAAaN,GAAwB,EAClC7iD,EAAI,EAAGA,GAAK8iD,IAAS9iD,EAAC,KACvB8R,EAAS9R,EAAI+R,EACbpG,EAAQw3C,EAAiC,EAAnBpqC,EAAAiyB,OAAOhrC,EAAG8iD,GAAaj3C,KAAKwO,GAAMyoC,EAC9DjxC,EAAgBC,GAAU7O,EAAO,GAAK23C,EAAS/uC,KAAKD,IAAID,GACxDkG,EAAgBC,EAAS,GAAK7O,EAAO,GAAK23C,EAAS/uC,KAAKC,IAAIH,GAE9DuzC,EAAQxiC,mFCzfV0mC,EAKE,CAJAvB,GAAE,KACFwB,IAAG,MACHrC,IAAG,MACHsC,KAAI,kpBC6KNC,EAvKA,SAAAloD,GAKK,SACHmoD,EAAY1+C,EAAas5C,OAAzBzhD,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK8hD,WAAY,EAMjB9hD,EAAK+hD,mBAAoB,OAEN5/C,IAAfs/C,GAA6Bz3C,MAAM8B,QAAQ3D,EAAY,IAMzDnI,EAAKmiD,eAC0Dh6C,EAC7Ds5C,GAPFzhD,EAAKkiD,mBACHT,EAC8Bt5C,YAxBb2+C,EAAAD,EAAAnoD,GAuCvBmoD,EAAArnD,UAAA0+B,MAAK,sBACQ2oB,EAAUvnD,KAAM4V,gBAAgB9N,QAAK9H,KAASkjD,SAU3DqE,EAAArnD,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,UAC7BA,EAAqBj7C,EAAAk7C,yBAAwBtjD,KAAMkI,YAAaqH,EAAGC,GAC9D6zC,QAEAZ,mBAAiBziD,KAAS4lB,qBAC5B48B,UAAY5yC,KAAK62B,KACpB8c,EAAAkE,gBAAeznD,KACR4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACL,SAGC2sC,kBAAiBziD,KAAQ4lB,eAEzB29B,EAAAmE,mBAAkB1nD,KAClB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OAAM9V,KACNwiD,WACL,EACAjzC,EACAC,EACA4zC,EACAC,KASJkE,EAAArnD,UAAA4jD,QAAO,kBACEC,EAAAf,WAAchjD,KACd4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,SASTyxC,EAAArnD,UAAA+jD,eAAc,kBACLI,EAAAsD,mBAAkB3nD,KAClB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,SASTyxC,EAAArnD,UAAAolD,8BAA6B,SAACC,OACtBC,EAAyB,UAC/BA,EAA0B5hD,OAAS8hD,EAAAkC,eAAc5nD,KAC1C4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACLyvC,EACAC,EACA,OAES+B,EAAW/B,EAA2BV,EAAAzkD,QAAeulD,KAQlE2B,EAAArnD,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAa21C,aAStBuR,EAAArnD,UAAA2lD,iBAAgB,SAACpyC,UACR,GAST8zC,EAAArnD,UAAA2iD,eAAc,SAACh6C,EAAas5C,QACrB6D,UAAU7D,EAAYt5C,EAAa,QAC9B+M,kBAAe5V,KAClB4V,gBAAe,SAEjBA,gBAAgBhS,OAASqiD,EAAA4B,mBAAkB7nD,KACzC4V,gBACL,EACA/M,EAAW7I,KACN8V,aAEF2K,WAET8mC,EArKA,CAAyBpB,EAAA9lD,2sBC4STynD,EAAmB5E,OAC7BptC,SACAotC,GAAU4B,EAAAzkD,QAAeulD,GAC3B9vC,EAAS,EACAotC,GAAU4B,EAAAzkD,QAAe+mD,KAAOlE,GAAU4B,EAAAzkD,QAAe0kD,IAClEjvC,EAAS,EACAotC,GAAU4B,EAAAzkD,QAAegnD,OAClCvxC,EAAS,GAEmBA,WAShBiyC,EAAgBC,EAAgBh6C,EAAWi6C,OACnDryC,EAAkBoyC,EAAehV,wBAClCp9B,OAGGE,EAASkyC,EAAe3U,mBACvB6U,EAAAC,YACLvyC,EACA,EACAA,EAAgBhS,OAChBkS,EACA9H,EACAi6C,GAVgB,OACX,SAcXG,EAlVA,SAAAhpD,YACEipD,QAAA3nD,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKwiD,OAAS4B,EAAAzkD,QAAeulD,GAM7BllD,EAAKoV,OAAS,EAMdpV,EAAKkV,gBAAkB,cApBE0yC,EAAAD,EAAAjpD,GA4B3BipD,EAAAnoD,UAAAqoD,cAAa,SAAC90C,UACLrL,EAAAogD,kCAAiCxoD,KACjC4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACLrC,IAQJ40C,EAAAnoD,UAAA+jD,eAAc,kBACL19C,EAAAC,YAQT6hD,EAAAnoD,UAAAuoD,mBAAkB,uBACJ7yC,gBAAgB9N,MAAM,EAAC9H,KAAO8V,SAM5CuyC,EAAAnoD,UAAA8yC,mBAAkB,uBACJp9B,iBAQdyyC,EAAAnoD,UAAAwoD,kBAAiB,uBACH9yC,gBAAgB9N,MAAK9H,KAC1B4V,gBAAgBhS,OAAM5D,KAAQ8V,SASvCuyC,EAAAnoD,UAAA4mD,UAAS,uBACK5D,QAQdmF,EAAAnoD,UAAAoyC,sBAAqB,SAACiT,WACXoD,6BAA0B3oD,KAAU4lB,qBACtCgjC,yCAA2C,OAC3CD,2BAA0B3oD,KAAQ4lB,eAKvC2/B,EAAmB,GACgC,IAD/BvlD,KACd4oD,0CACJrD,GAAgBvlD,KAAS4oD,yCAAwC,OAAA5oD,SAK/D6oD,EAAkB7oD,KAAQslD,8BAC9BC,UAEgCsD,EAAmB7V,qBACvBpvC,OAAM5D,KAAQ4V,gBAAgBhS,OACnDilD,QAQFD,yCAA2CrD,SAUpD8C,EAAAnoD,UAAAolD,8BAA6B,SAACC,gBAO9B8C,EAAAnoD,UAAAmzC,UAAS,uBACKv9B,QAOduyC,EAAAnoD,UAAA0iD,mBAAkB,SAACM,EAAQttC,QACpBE,OAASgyC,EAAmB5E,QAC5BA,OAASA,OACTttC,gBAAkBA,GAQzByyC,EAAAnoD,UAAA2iD,eAAc,SAACh6C,EAAas5C,GAC1B57C,EAAAC,YASF6hD,EAAAnoD,UAAA8lD,UAAS,SAAC9C,EAAQr6C,EAAaigD,GACR,IACjBhzC,KACAotC,EACFptC,EAASgyC,EAAmB5E,gBAEnBn/C,EAAI,EAAGA,EAAI+kD,IAAW/kD,EAAC,CAAA,GACH,IAAvB8E,EAAYjF,mBACTs/C,OAAS4B,EAAAzkD,QAAeulD,aACxB9vC,OAAS,GAGdjN,EAAoCA,EAAY,GAIpDq6C,EA6GH,SACyBptC,OACtBotC,EACU,GAAVptC,EACFotC,EAAS4B,EAAAzkD,QAAeulD,GACL,GAAV9vC,EACTotC,EAAS4B,EAAAzkD,QAAe+mD,IACL,GAAVtxC,IACTotC,EAAS4B,EAAAzkD,QAAegnD,aAEmCnE,EAvHhD6F,CADTjzC,EAASjN,EAAYjF,aAGlBs/C,OAASA,OACTptC,OAASA,GAYhBuyC,EAAAnoD,UAAA65C,eAAc,SAACtgC,QACJ7D,kBACP6D,EAAWzZ,KAAM4V,gBAAe5V,KAAO4V,gBAAe5V,KAAO8V,aACxD2K,YAWT4nC,EAAAnoD,UAAA0wB,OAAM,SAAClhB,EAAO2+B,OACNz4B,EAAe5V,KAAQgzC,wBACzBp9B,EAAe,KACXE,EAAM9V,KAAQqzC,YACpB6U,EAAAt3B,OACEhb,EACA,EACAA,EAAgBhS,OAChBkS,EACApG,EACA2+B,EACAz4B,QAEG6K,YAaT4nC,EAAAnoD,UAAAwqB,MAAK,SAACva,EAAI64C,EAAQ1U,OACZlkC,EAAK44C,OACEnmD,IAAPuN,IACFA,EAAKD,OAEHk+B,EAASiG,EACRjG,IACHA,EAASjmC,EAAAulC,UAAS3tC,KAAMkI,kBAEpB0N,EAAe5V,KAAQgzC,wBACzBp9B,EAAe,KACXE,EAAM9V,KAAQqzC,YACpB6U,EAAAx9B,MACE9U,EACA,EACAA,EAAgBhS,OAChBkS,EACA3F,EACAC,EACAi+B,EACAz4B,QAEG6K,YAWT4nC,EAAAnoD,UAAAywB,UAAS,SAAC/X,EAAQC,OACVjD,EAAe5V,KAAQgzC,wBACzBp9B,EAAe,KACXE,EAAM9V,KAAQqzC,YACpB6U,EAAAv3B,UACE/a,EACA,EACAA,EAAgBhS,OAChBkS,EACA8C,EACAC,EACAjD,QAEG6K,YAGX4nC,EAzRA,CAA6BY,EAAA5oD,soBCMvB6oD,EAAeviD,EAAAuuB,SAuTrBi0B,EAzSA,SAAA/pD,YACEgqD,QAAA1oD,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK47C,QAAUl0C,EAAAihD,cAMf3oD,EAAK4oD,iBAAkB,EAMvB5oD,EAAKkoD,yCAA2C,EAMhDloD,EAAKioD,2BAA6B,EAUlCjoD,EAAK6oD,4BAA8BhgD,EAAAigD,YAAU,SAC3CC,EACAlE,EACAmE,OAEKA,EAAa,OAAA1pD,KACJsyC,sBAAsBiT,OAE9B3mB,EAAK5+B,KAAQ4+B,eACnBA,EAAMmb,eAAe2P,GACd9qB,EAAM0T,sBAAsBiT,eA9ClBoE,EAAAP,EAAAhqD,GAyDrBgqD,EAAAlpD,UAAA0pD,oBAAmB,SAACrE,EAAkBmE,eACxBH,4BAA2BvpD,KAChC4lB,cACL2/B,EACAmE,IASJN,EAAAlpD,UAAA0+B,MAAK,kBACIr4B,EAAAC,YAWT4iD,EAAAlpD,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,UAC1B98C,EAAAC,YAQT4iD,EAAAlpD,UAAAwjD,WAAU,SAACn0C,EAAGC,OACNq6C,EAAK7pD,KAAQ8pD,gBAAe,CAAEv6C,EAAGC,WAChCq6C,EAAM,KAAOt6C,GAAKs6C,EAAM,KAAOr6C,GAWxC45C,EAAAlpD,UAAA4pD,gBAAe,SAAChS,EAAOiS,OACf3G,EAAe2G,GAAmC,CAAIC,IAAKA,iBAC5D7G,eAAerL,EAAM,GAAIA,EAAM,GAAIsL,EAAc/tC,EAAAA,GAC/C+tC,GAUTgG,EAAAlpD,UAAA+pD,qBAAoB,SAAC9iD,eACPu8C,WAAWv8C,EAAW,GAAIA,EAAW,KASnDiiD,EAAAlpD,UAAAqoD,cAAa,SAAC90C,UACLlN,EAAAC,YAST4iD,EAAAlpD,UAAAgI,UAAS,SAAC4L,WACCw1C,iBAAetpD,KAAS4lB,cAAW,KACpCnS,EAAMzT,KAAQuoD,cAAavoD,KAAMs8C,UACnChtB,MAAM7b,EAAO,KAAO6b,MAAM7b,EAAO,MACnCrL,EAAAs2B,oBAAoBjrB,QAEjB61C,gBAAetpD,KAAQ4lB,qBAEvBxd,EAAA8hD,eAAclqD,KAAMs8C,QAASxoC,IAWtCs1C,EAAAlpD,UAAA0wB,OAAM,SAAClhB,EAAO2+B,GACZ9nC,EAAAC,YAaF4iD,EAAAlpD,UAAAwqB,MAAK,SAACva,EAAI64C,EAAQ1U,GAChB/tC,EAAAC,YAYF4iD,EAAAlpD,UAAAiqD,SAAQ,SAACvI,eACKtP,sBAAsBsP,EAAYA,IAWhDwH,EAAAlpD,UAAAoyC,sBAAqB,SAACiT,UACbh/C,EAAAC,YAQT4iD,EAAAlpD,UAAAuyC,QAAO,kBACElsC,EAAAC,YAYT4iD,EAAAlpD,UAAA65C,eAAc,SAACtgC,GACblT,EAAAC,YASF4iD,EAAAlpD,UAAA2lD,iBAAgB,SAACpyC,UACRlN,EAAAC,YAWT4iD,EAAAlpD,UAAAywB,UAAS,SAAC/X,EAAQC,GAChBtS,EAAAC,YAkBF4iD,EAAAlpD,UAAA8N,UAAS,SAACrF,EAAQmwC,GACsC,IAChDsR,EAAa5wB,EAAAjnB,IAAc5J,GAC3B8Q,EACJ2wC,EAAWjS,YAAcnO,EAAA3pC,QAAMq2C,YAAW,SAC5B2T,EAAeC,EAAgBx0C,OACjCy0C,EAAcH,EAAWliD,YACzBsiD,EAAkBJ,EAAWrN,iBAC7BryB,EAAQtiB,EAAA2hC,UAAUygB,GAAmBpiD,EAAA2hC,UAAUwgB,UACrD5jD,EAAAC,QACEsiD,EACAsB,EAAgB,GAChBA,EAAgB,GAChB9/B,GACCA,EACD,EACA,EACA,GAEFw9B,EAAAC,YACEkC,EACA,EACAA,EAAczmD,OACdkS,EACAozC,EACAoB,GAEK9wB,EAAAixB,aAAaL,EAAYtR,EAAzBtf,CACL6wB,EACAC,EACAx0C,IAGJ0jB,EAAAixB,aAAaL,EAAYtR,eAC1BiB,eAAetgC,SAGxB2vC,EAvSA,CAAuB5pC,EAAAnf,uDCxBPqqD,EACd90C,EACAC,EACAzJ,EACA0J,EACA9H,EACAi6C,WAEM0C,EAAO1C,GAAmB,GAC5BlkD,EAAI,EACC0E,EAAIoN,EAAQpN,EAAI2D,EAAK3D,GAAKqN,EAAM,KACjCvG,EAAIqG,EAAgBnN,GACpB+G,EAAIoG,EAAgBnN,EAAI,GAC9BkiD,EAAK5mD,KAAOiK,EAAU,GAAKuB,EAAIvB,EAAU,GAAKwB,EAAIxB,EAAU,GAC5D28C,EAAK5mD,KAAOiK,EAAU,GAAKuB,EAAIvB,EAAU,GAAKwB,EAAIxB,EAAU,UAE1Di6C,GAAY0C,EAAK/mD,QAAUG,IAC7B4mD,EAAK/mD,OAASG,GAET4mD,WAaOC,EACdh1C,EACAC,EACAzJ,EACA0J,EACApG,EACA2+B,EACA4Z,WAEM0C,EAAO1C,GAAmB,GAC1Bt4C,EAAMC,KAAKD,IAAID,GACfG,EAAMD,KAAKC,IAAIH,GACfm7C,EAAUxc,EAAO,GACjByc,EAAUzc,EAAO,GACnBtqC,EAAI,EACC0E,EAAIoN,EAAQpN,EAAI2D,EAAK3D,GAAKqN,EAAM,KACjC8C,EAAShD,EAAgBnN,GAAKoiD,EAC9BhyC,EAASjD,EAAgBnN,EAAI,GAAKqiD,EACxCH,EAAK5mD,KAAO8mD,EAAUjyC,EAASjJ,EAAMkJ,EAAShJ,EAC9C86C,EAAK5mD,KAAO+mD,EAAUlyC,EAAS/I,EAAMgJ,EAASlJ,UACrCsO,EAAIxV,EAAI,EAAGwV,EAAIxV,EAAIqN,IAAUmI,EACpC0sC,EAAK5mD,KAAO6R,EAAgBqI,UAG5BgqC,GAAY0C,EAAK/mD,QAAUG,IAC7B4mD,EAAK/mD,OAASG,GAET4mD,WAeOI,EACdn1C,EACAC,EACAzJ,EACA0J,EACA3F,EACAC,EACAi+B,EACA4Z,WAEM0C,EAAO1C,GAAmB,GAC1B4C,EAAUxc,EAAO,GACjByc,EAAUzc,EAAO,GACnBtqC,EAAI,EACC0E,EAAIoN,EAAQpN,EAAI2D,EAAK3D,GAAKqN,EAAM,KACjC8C,EAAShD,EAAgBnN,GAAKoiD,EAC9BhyC,EAASjD,EAAgBnN,EAAI,GAAKqiD,EACxCH,EAAK5mD,KAAO8mD,EAAU16C,EAAKyI,EAC3B+xC,EAAK5mD,KAAO+mD,EAAU16C,EAAKyI,UAClBoF,EAAIxV,EAAI,EAAGwV,EAAIxV,EAAIqN,IAAUmI,EACpC0sC,EAAK5mD,KAAO6R,EAAgBqI,UAG5BgqC,GAAY0C,EAAK/mD,QAAUG,IAC7B4mD,EAAK/mD,OAASG,GAET4mD,WAaOK,EACdp1C,EACAC,EACAzJ,EACA0J,EACA8C,EACAC,EACAovC,WAEM0C,EAAO1C,GAAmB,GAC5BlkD,EAAI,EACC0E,EAAIoN,EAAQpN,EAAI2D,EAAK3D,GAAKqN,EAAM,CACvC60C,EAAK5mD,KAAO6R,EAAgBnN,GAAKmQ,EACjC+xC,EAAK5mD,KAAO6R,EAAgBnN,EAAI,GAAKoQ,UAC5BoF,EAAIxV,EAAI,EAAGwV,EAAIxV,EAAIqN,IAAUmI,EACpC0sC,EAAK5mD,KAAO6R,EAAgBqI,UAG5BgqC,GAAY0C,EAAK/mD,QAAUG,IAC7B4mD,EAAK/mD,OAASG,GAET4mD,wcCnIN,SACMM,EACPr1C,EACAs1C,EACAC,EACAr1C,EACAvG,EACAC,EACA4zC,OAMIvtC,EAJEmC,EAAKpC,EAAgBs1C,GACrB9yC,EAAKxC,EAAgBs1C,EAAU,GAC/Bj3C,EAAK2B,EAAgBu1C,GAAWnzC,EAChC9D,EAAK0B,EAAgBu1C,EAAU,GAAK/yC,KAE/B,IAAPnE,GAAmB,IAAPC,EACd2B,EAASq1C,WAEHztC,IAAMlO,EAAIyI,GAAM/D,GAAMzE,EAAI4I,GAAMlE,IAAOD,EAAKA,EAAKC,EAAKA,MACxDuJ,EAAI,EACN5H,EAASs1C,UACA1tC,EAAI,EAAC,SACL1Z,EAAI,EAAGA,EAAI+R,IAAU/R,EAC5Bq/C,EAAar/C,GAAK+Y,EAAAsuC,KAChBx1C,EAAgBs1C,EAAUnnD,GAC1B6R,EAAgBu1C,EAAUpnD,GAC1B0Z,eAGJ2lC,EAAax/C,OAASkS,GAGtBD,EAASq1C,OAGJnnD,EAAI,EAAGA,EAAI+R,IAAU/R,EAC5Bq/C,EAAar/C,GAAK6R,EAAgBC,EAAS9R,GAE7Cq/C,EAAax/C,OAASkS,WAaRu1C,EAAgBz1C,EAAiBC,EAAQzJ,EAAK0J,EAAQM,OAChE4B,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,OAC7BA,GAAUC,EAAQD,EAASzJ,EAAKyJ,GAAUC,EAAM,KAC7CmC,EAAKrC,EAAgBC,GACrBwC,EAAKzC,EAAgBC,EAAS,GAC9By1C,EAAexuC,EAAAyuC,gBAAUvzC,EAAII,EAAIH,EAAII,GACvCizC,EAAel1C,IACjBA,EAAMk1C,GAERtzC,EAAKC,EACLG,EAAKC,SAEAjC,WAWOo1C,EACd51C,EACAC,EACAuvC,EACAtvC,EACAM,WAESrS,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACjBqS,EAAMi1C,EAAgBz1C,EAAiBC,EAAQzJ,EAAK0J,EAAQM,GAC5DP,EAASzJ,SAEJgK,WAWOq1C,EACd71C,EACAC,EACA61C,EACA51C,EACAM,WAESrS,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACnBqS,EAAMo1C,EAAqB51C,EAAiBC,EAAQuvC,EAAMtvC,EAAQM,GAClEP,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvBwS,WAiBOu1C,EACd/1C,EACAC,EACAzJ,EACA0J,EACA81C,EACAC,EACAt8C,EACAC,EACA4zC,EACAC,EACAyI,MAEIj2C,GAAUzJ,EAAG,OACRi3C,MAELt/C,EAAGwnD,KACU,IAAbK,EAAc,KAEhBL,EAAkBzuC,EAAAyuC,gBAChBh8C,EACAC,EACAoG,EAAgBC,GAChBD,EAAgBC,EAAS,KAELwtC,EAAkB,KACjCt/C,EAAI,EAAGA,EAAI+R,IAAU/R,EACxBq/C,EAAar/C,GAAK6R,EAAgBC,EAAS9R,UAE7Cq/C,EAAax/C,OAASkS,EACfy1C,SAEAlI,UAGL0I,EAAWD,GAA2B,CAAI9B,IAAKA,KACjD78C,EAAQ0I,EAASC,EACd3I,EAAQf,MACb6+C,EACEr1C,EACAzI,EAAQ2I,EACR3I,EACA2I,EACAvG,EACAC,EACAu8C,IAEFR,EAAkBzuC,EAAAyuC,gBAAUh8C,EAAGC,EAAGu8C,EAAS,GAAIA,EAAS,KAClC1I,EAAkB,KACtCA,EAAqBkI,EAChBxnD,EAAI,EAAGA,EAAI+R,IAAU/R,EACxBq/C,EAAar/C,GAAKgoD,EAAShoD,GAE7Bq/C,EAAax/C,OAASkS,EACtB3I,GAAS2I,OAYT3I,GACE2I,EACAlG,KAAKwG,KACDxG,KAAK62B,KAAK8kB,GAAmB37C,KAAK62B,KAAK4c,IACvCuI,EACA,EACF,MAIJC,IAEFZ,EACEr1C,EACAxJ,EAAM0J,EACND,EACAC,EACAvG,EACAC,EACAu8C,IAEFR,EAAkBzuC,EAAAyuC,gBAAUh8C,EAAGC,EAAGu8C,EAAS,GAAIA,EAAS,KAClC1I,GAAkB,KACtCA,EAAqBkI,EAChBxnD,EAAI,EAAGA,EAAI+R,IAAU/R,EACxBq/C,EAAar/C,GAAKgoD,EAAShoD,GAE7Bq/C,EAAax/C,OAASkS,SAGnButC,WAiBO2I,EACdp2C,EACAC,EACAuvC,EACAtvC,EACA81C,EACAC,EACAt8C,EACAC,EACA4zC,EACAC,EACAyI,WAEMC,EAAWD,GAA2B,CAAI9B,IAAKA,KAC5CjmD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACjBs/C,EAAqBsI,EACnB/1C,EACAC,EACAzJ,EACA0J,EACA81C,EACAC,EACAt8C,EACAC,EACA4zC,EACAC,EACA0I,GAEFl2C,EAASzJ,SAEJi3C,WAiBO4I,EACdr2C,EACAC,EACA61C,EACA51C,EACA81C,EACAC,EACAt8C,EACAC,EACA4zC,EACAC,EACAyI,WAEMC,EAAWD,GAA2B,CAAI9B,IAAKA,KAC5CjmD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACnBs/C,EAAqB2I,EACnBp2C,EACAC,EACAuvC,EACAtvC,EACA81C,EACAC,EACAt8C,EACAC,EACA4zC,EACAC,EACA0I,GAEFl2C,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvBy/C,iDCpUO6I,EAAkBt2C,EAAiBC,EAAQ1O,EAAY2O,WAC5D/R,EAAI,EAAGC,EAAKmD,EAAWvD,OAAQG,EAAIC,IAAMD,EAChD6R,EAAgBC,KAAY1O,EAAWpD,UAElC8R,WAUOs2C,EACdv2C,EACAC,EACAhN,EACAiN,WAES/R,EAAI,EAAGC,EAAK6E,EAAYjF,OAAQG,EAAIC,IAAMD,UAC3CoD,EAAa0B,EAAY9E,GACtB0E,EAAI,EAAGA,EAAIqN,IAAUrN,EAC5BmN,EAAgBC,KAAY1O,EAAWsB,UAGpCoN,WAWOu2C,EACdx2C,EACAC,EACAw2C,EACAv2C,EACAssC,WAEMgD,EAAOhD,GAAmB,GAC5Br+C,EAAI,EACC0E,EAAI,EAAG2mC,EAAKid,EAAazoD,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KAC7C2D,EAAM+/C,EACVv2C,EACAC,EACAw2C,EAAa5jD,GACbqN,GAEFsvC,EAAKrhD,KAAOqI,EACZyJ,EAASzJ,SAEXg5C,EAAKxhD,OAASG,EACPqhD,WAWOkH,EACd12C,EACAC,EACA02C,EACAz2C,EACA02C,WAEMd,EAAQc,GAAqB,GAC/BzoD,EAAI,EACC0E,EAAI,EAAG2mC,EAAKmd,EAAc3oD,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KAC9C28C,EAAOgH,EACXx2C,EACAC,EACA02C,EAAc9jD,GACdqN,EACA41C,EAAM3nD,IAER2nD,EAAM3nD,KAAOqhD,EACbvvC,EAASuvC,EAAKA,EAAKxhD,OAAS,UAE9B8nD,EAAM9nD,OAASG,EACR2nD,mbCROe,EACd72C,EACAC,EACAzJ,EACA0J,EACAyvC,EACAC,EACAkH,OAEMzgD,GAAKG,EAAMyJ,GAAUC,KACvB7J,EAAI,EAAC,MACA4J,EAASzJ,EAAKyJ,GAAUC,EAC7B0vC,EAA0BkH,KAAsB92C,EAAgBC,GAChE2vC,EAA0BkH,KACxB92C,EAAgBC,EAAS,UAEtB62C,EAEmB,IACtBC,EAAO,IAAOjiD,MAAMuB,GAC1B0gD,EAAQ,GAAK,EACbA,EAAQ1gD,EAAI,GAAK,MACW,IACtB2gD,EAAK,CAAI/2C,EAAQzJ,EAAM0J,GACzB3I,EAAQ,EACLy/C,EAAMhpD,OAAS,GAAC,SACfipD,EAAOD,EAAM1sB,MACb4sB,EAAQF,EAAM1sB,MAChB6sB,EAAqB,EACnB/0C,EAAKpC,EAAgBk3C,GACrB10C,EAAKxC,EAAgBk3C,EAAQ,GAC7B70C,EAAKrC,EAAgBi3C,GACrBx0C,EAAKzC,EAAgBi3C,EAAO,GACzB9oD,EAAI+oD,EAAQh3C,EAAQ/R,EAAI8oD,EAAM9oD,GAAK+R,EAAM,KAC1CvG,EAAIqG,EAAgB7R,GACpByL,EAAIoG,EAAgB7R,EAAI,GACxBipD,EAAkBlwC,EAAAmwC,uBAAuB19C,EAAGC,EAAGwI,EAAII,EAAIH,EAAII,GAC7D20C,EAAkBD,IACpB5/C,EAAQpJ,EACRgpD,EAAqBC,GAGrBD,EAAqBxH,IACvBoH,GAASx/C,EAAQ0I,GAAUC,GAAU,EACjCg3C,EAAQh3C,EAAS3I,GACnBy/C,EAAMhoD,KAAKkoD,EAAO3/C,GAEhBA,EAAQ2I,EAAS+2C,GACnBD,EAAMhoD,KAAKuI,EAAO0/C,QAIf9oD,EAAI,EAAGA,EAAIkI,IAAKlI,EACnB4oD,EAAQ5oD,KACVyhD,EAA0BkH,KACxB92C,EAAgBC,EAAS9R,EAAI+R,GAC/B0vC,EAA0BkH,KACxB92C,EAAgBC,EAAS9R,EAAI+R,EAAS,WAGrC42C,WAeOQ,EACdt3C,EACAC,EACAuvC,EACAtvC,EACAyvC,EACAC,EACAkH,EACAjH,WAES1hD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACjB2oD,EAAmBD,EACjB72C,EACAC,EACAzJ,EACA0J,EACAyvC,EACAC,EACAkH,GAEFjH,EAAe7gD,KAAK8nD,GACpB72C,EAASzJ,SAEJsgD,WAwGOS,EAAKt5C,EAAO+tC,UACnBA,EAAYhyC,KAAK0S,MAAMzO,EAAQ+tC,YAsBxBwL,EACdx3C,EACAC,EACAzJ,EACA0J,EACA8rC,EACA4D,EACAkH,MAGI72C,GAAUzJ,EAAG,OACRsgD,MAWLz0C,EAAII,EARJL,EAAKm1C,EAAKv3C,EAAgBC,GAAS+rC,GACnCxpC,EAAK+0C,EAAKv3C,EAAgBC,EAAS,GAAI+rC,GAC3C/rC,GAAUC,EAEV0vC,EAA0BkH,KAAsB10C,EAChDwtC,EAA0BkH,KAAsBt0C,QAK9CH,EAAKk1C,EAAKv3C,EAAgBC,GAAS+rC,GACnCvpC,EAAK80C,EAAKv3C,EAAgBC,EAAS,GAAI+rC,IACvC/rC,GAAUC,IACI1J,SAKZo5C,EAA0BkH,KAAsBz0C,EAChDutC,EAA0BkH,KAAsBr0C,EACzCq0C,QAEFz0C,GAAMD,GAAMK,GAAMD,QACpBvC,EAASzJ,GAAG,KAEX8L,EAAKi1C,EAAKv3C,EAAgBC,GAAS+rC,GACnCtpC,EAAK60C,EAAKv3C,EAAgBC,EAAS,GAAI+rC,MAC7C/rC,GAAUC,EAENoC,GAAMD,GAAMK,GAAMD,OAIhBpI,EAAMgI,EAAKD,EACX9H,EAAMmI,EAAKD,EAEX/H,EAAM6H,EAAKF,EACX1H,EAAMgI,EAAKF,EAKfnI,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3D+H,EAAKC,EACLG,EAAKC,IAMPktC,EAA0BkH,KAAsBz0C,EAChDutC,EAA0BkH,KAAsBr0C,EAChDL,EAAKC,EACLG,EAAKC,EACLJ,EAAKC,EACLG,EAAKC,WAGPktC,EAA0BkH,KAAsBz0C,EAChDutC,EAA0BkH,KAAsBr0C,EACzCq0C,WAeOW,EACdz3C,EACAC,EACAuvC,EACAtvC,EACA8rC,EACA4D,EACAkH,EACAjH,WAES1hD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACjB2oD,EAAmBU,EACjBx3C,EACAC,EACAzJ,EACA0J,EACA8rC,EACA4D,EACAkH,GAEFjH,EAAe7gD,KAAK8nD,GACpB72C,EAASzJ,SAEJsgD,WAeOY,EACd13C,EACAC,EACA61C,EACA51C,EACA8rC,EACA4D,EACAkH,EACAa,WAESxpD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACb0hD,EAAc,GACpBiH,EAAmBW,EACjBz3C,EACAC,EACAuvC,EACAtvC,EACA8rC,EACA4D,EACAkH,EACAjH,GAEF8H,EAAgB3oD,KAAK6gD,GACrB5vC,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvB8oD,iDChdOc,EACd53C,EACAC,EACAzJ,EACA0J,EACA23C,WAEM5kD,OAAkChG,IAApB4qD,EAAgCA,EAAe,GAC/D1pD,EAAI,EACC0E,EAAIoN,EAAQpN,EAAI2D,EAAK3D,GAAKqN,EACjCjN,EAAY9E,KAAO6R,EAAgB9N,MAAMW,EAAGA,EAAIqN,UAElDjN,EAAYjF,OAASG,EACd8E,WAWO6kD,EACd93C,EACAC,EACAuvC,EACAtvC,EACA63C,WAEMtB,OAAoCxpD,IAArB8qD,EAAiCA,EAAgB,GAClE5pD,EAAI,EACC0E,EAAI,EAAG2mC,EAAKgW,EAAKxhD,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KACrC2D,EAAMg5C,EAAK38C,GACjB4jD,EAAatoD,KAAOypD,EAClB53C,EACAC,EACAzJ,EACA0J,EACAu2C,EAAatoD,IAEf8R,EAASzJ,SAEXigD,EAAazoD,OAASG,EACfsoD,WAYOuB,EACdh4C,EACAC,EACA61C,EACA51C,EACA+3C,WAEMtB,OACkB1pD,IAAtBgrD,EAAkCA,EAAiB,GACjD9pD,EAAI,EACC0E,EAAI,EAAG2mC,EAAKsc,EAAM9nD,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KACtC28C,EAAOsG,EAAMjjD,GACnB8jD,EAAcxoD,KAAO2pD,EACnB93C,EACAC,EACAuvC,EACAtvC,EACAy2C,EAAcxoD,IAEhB8R,EAASuvC,EAAKA,EAAKxhD,OAAS,UAE9B2oD,EAAc3oD,OAASG,EAChBwoD,6LChFOuB,EAAWl4C,EAAiBC,EAAQzJ,EAAK0J,WACnDi4C,EAAY,EACZ/1C,EAAKpC,EAAgBxJ,EAAM0J,GAC3BsC,EAAKxC,EAAgBxJ,EAAM0J,EAAS,GACjCD,EAASzJ,EAAKyJ,GAAUC,EAAM,KAC7BmC,EAAKrC,EAAgBC,GACrBwC,EAAKzC,EAAgBC,EAAS,GACpCk4C,GAAa31C,EAAKH,EAAKD,EAAKK,EAC5BL,EAAKC,EACLG,EAAKC,SAEA01C,EAAY,WAULC,EAAYp4C,EAAiBC,EAAQuvC,EAAMtvC,WACrDc,EAAO,EACF7S,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACjB6S,GAAQk3C,EAAWl4C,EAAiBC,EAAQzJ,EAAK0J,GACjDD,EAASzJ,SAEJwK,WAUOq3C,EAAar4C,EAAiBC,EAAQ61C,EAAO51C,WACvDc,EAAO,EACF7S,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACnB6S,GAAQo3C,EAAYp4C,EAAiBC,EAAQuvC,EAAMtvC,GACnDD,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvBgT,isBCgETs3C,EAzGA,SAAA9uD,GAIK,SACH+uD,EAAYtlD,EAAas5C,OAAzBzhD,EACEtB,EAAAW,KAAAC,OAAAA,YACAU,EAAKmiD,eAAeh6C,EAAas5C,YAPjBiM,EAAAD,EAAA/uD,GAelB+uD,EAAAjuD,UAAA0+B,MAAK,eACGkZ,EAAK,IAAOqW,EAAKnuD,KAAM4V,gBAAgB9N,QAAK9H,KAASkjD,eAC3DpL,EAAMpzB,gBAAe1kB,MACd83C,GAUTqW,EAAAjuD,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,OAC3BztC,EAAe5V,KAAQ4V,gBACvB21C,EAAkBzuC,EAAAyuC,gBACtBh8C,EACAC,EACAoG,EAAgB,GAChBA,EAAgB,OAEd21C,EAAkBlI,EAAkB,SAChCvtC,EAAM9V,KAAQ8V,OACX/R,EAAI,EAAGA,EAAI+R,IAAU/R,EAC5Bq/C,EAAar/C,GAAK6R,EAAgB7R,UAEpCq/C,EAAax/C,OAASkS,EACfy1C,SAEAlI,GASX8K,EAAAjuD,UAAA+jD,eAAc,uBACCruC,gBAAe5V,KAAa4V,gBAAgB9N,QAA7B,IAQ9BqmD,EAAAjuD,UAAAqoD,cAAa,SAAC90C,UACLrL,EAAAimD,6BAA4BruD,KAAM4V,gBAAiBnC,IAQ5D06C,EAAAjuD,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAay1C,OAStBqY,EAAAjuD,UAAA2lD,iBAAgB,SAACpyC,UACRrL,EAAAs7C,WAAWjwC,EAAMzT,KAAO4V,gBAAgB,GAAC5V,KAAQ4V,gBAAgB,KAQ1Eu4C,EAAAjuD,UAAA2iD,eAAc,SAACh6C,EAAas5C,QACrB6D,UAAU7D,EAAYt5C,EAAa,QAC9B+M,kBAAe5V,KAClB4V,gBAAe,SAEjBA,gBAAgBhS,OAASqiD,EAAAqI,kBAAiBtuD,KACxC4V,gBACL,EACA/M,EAAW7I,KACN8V,aAEF2K,WAET0tC,EAvGA,CAAoBhI,EAAA9lD,yLCIJkuD,EACd34C,EACAC,EACAuvC,EACAtvC,EACA04C,EACAC,EACAxG,WAEIlkD,EAAGC,EAAIuL,EAAGyI,EAAIC,EAAIG,EAAIC,EACpB7I,EAAIg/C,EAAYC,EAAoB,GAEpCC,EAAa,GAEVtyC,EAAI,EAAGuyC,EAAKvJ,EAAKxhD,OAAQwY,EAAIuyC,IAAMvyC,EAAC,KACrChQ,EAAMg5C,EAAKhpC,OACjBpE,EAAKpC,EAAgBxJ,EAAM0J,GAC3BsC,EAAKxC,EAAgBxJ,EAAM0J,EAAS,GAC/B/R,EAAI8R,EAAQ9R,EAAIqI,EAAKrI,GAAK+R,EAC7BmC,EAAKrC,EAAgB7R,GACrBsU,EAAKzC,EAAgB7R,EAAI,IACpByL,GAAK4I,GAAMC,GAAM7I,GAAO4I,GAAM5I,GAAKA,GAAK6I,KAC3C9I,GAAMC,EAAI4I,IAAOC,EAAKD,IAAQH,EAAKD,GAAMA,EACzC02C,EAAc9pD,KAAK2K,IAErByI,EAAKC,EACLG,EAAKC,MAKLu2C,EAAS5E,IACT6E,GAAoBx5C,EAAAA,MACxBq5C,EAAclrD,KAAKoH,EAAAkkD,2BACnB92C,EAAK02C,EAAc,GACd3qD,EAAI,EAAGC,EAAK0qD,EAAc9qD,OAAQG,EAAIC,IAAMD,EAAC,CAChDkU,EAAKy2C,EAAc3qD,OACbgrD,EAAgBn/C,KAAKkO,IAAI7F,EAAKD,GAChC+2C,EAAgBF,IAClBt/C,GAAKyI,EAAKC,GAAM,EACZ0rC,EAAAC,sBAAsBhuC,EAAiBC,EAAQuvC,EAAMtvC,EAAQvG,EAAGC,KAClEo/C,EAASr/C,EACTs/C,EAAmBE,IAGvB/2C,EAAKC,SAEHqX,MAAMs/B,KAGRA,EAASJ,EAAYC,IAEnBxG,GACFA,EAASrjD,KAAKgqD,EAAQp/C,EAAGq/C,GAClB5G,IAEC2G,EAAQp/C,EAAGq/C,YAaPG,EACdp5C,EACAC,EACA61C,EACA51C,EACA04C,WAEIS,EAAc,GACTlrD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACnBkrD,EAAiBV,EACf34C,EACAC,EACAuvC,EACAtvC,EACA04C,EACA,EAAIzqD,EACJkrD,GAEFp5C,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvBqrD,yPChGOC,EACdt5C,EACAC,EACAzJ,EACA0J,EACArC,UAEgBrL,EAAA+mD,cACd17C,GAIG,SACOtM,UACAioD,EACNx5C,EACAC,EACAzJ,EACA0J,EACA3O,EAAW,GACXA,EAAW,gBAgBHioD,EACdx5C,EACAC,EACAzJ,EACA0J,EACAvG,EACAC,WASI6/C,EAAK,EACLr3C,EAAKpC,EAAgBxJ,EAAM0J,GAC3BsC,EAAKxC,EAAgBxJ,EAAM0J,EAAS,GACjCD,EAASzJ,EAAKyJ,GAAUC,EAAM,KAC7BmC,EAAKrC,EAAgBC,GACrBwC,EAAKzC,EAAgBC,EAAS,GAChCuC,GAAM5I,EACJ6I,EAAK7I,IAAMyI,EAAKD,IAAOxI,EAAI4I,IAAO7I,EAAIyI,IAAOK,EAAKD,GAAM,GAC1Di3C,IAEOh3C,GAAM7I,IAAMyI,EAAKD,IAAOxI,EAAI4I,IAAO7I,EAAIyI,IAAOK,EAAKD,GAAM,GAClEi3C,IAEFr3C,EAAKC,EACLG,EAAKC,SAEO,IAAPg3C,WAYOC,EACd15C,EACAC,EACAuvC,EACAtvC,EACAvG,EACAC,MAEoB,IAAhB41C,EAAKxhD,OAAY,OACZ,MAEJwrD,EAAqBx5C,EAAiBC,EAAQuvC,EAAK,GAAItvC,EAAQvG,EAAGC,GAAC,OAC/D,UAEAzL,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,KAExCqrD,EAAqBx5C,EAAiBwvC,EAAKrhD,EAAI,GAAIqhD,EAAKrhD,GAAI+R,EAAQvG,EAAGC,GAAC,OAEjE,SAGJ,WAYO+/C,EACd35C,EACAC,EACA61C,EACA51C,EACAvG,EACAC,MAEqB,IAAjBk8C,EAAM9nD,OAAY,OACb,UAEAG,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,MACfurD,EAAsB15C,EAAiBC,EAAQuvC,EAAMtvC,EAAQvG,EAAGC,GAAC,OAC5D,EAETqG,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvB,gSC1HO4rD,EACd55C,EACAC,EACAzJ,EACA0J,EACArC,OAEMg8C,EAAoBrnD,EAAAsnD,sBACxBtnD,EAAAihD,cACAzzC,EACAC,EACAzJ,EACA0J,WAEG1N,EAAA4Q,WAAWvF,EAAQg8C,OAGpBrnD,EAAAunD,eAAel8C,EAAQg8C,KAGvBA,EAAkB,IAAMh8C,EAAO,IAAMg8C,EAAkB,IAAMh8C,EAAO,KAGpEg8C,EAAkB,IAAMh8C,EAAO,IAAMg8C,EAAkB,IAAMh8C,EAAO,IAGjEm8C,EAAA3mD,QACL2M,EACAC,EACAzJ,EACA0J,GAMG,SACO+5C,EAAQC,UACT1nD,EAAA2nD,kBAAkBt8C,EAAQo8C,EAAQC,kBAa/BE,EACdp6C,EACAC,EACAuvC,EACAtvC,EACArC,WAES1P,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,IAEzCyrD,EAAqB55C,EAAiBC,EAAQuvC,EAAKrhD,GAAI+R,EAAQrC,GAAM,OAE9D,EAEToC,EAASuvC,EAAKrhD,UAET,WAgFOksD,EACdr6C,EACAC,EACAuvC,EACAtvC,EACArC,gBAzEAmC,EACAC,EACAzJ,EACA0J,EACArC,YAEI+7C,EAAqB55C,EAAiBC,EAAQzJ,EAAK0J,EAAQrC,IAI7DkwC,EAAAuM,qBACEt6C,EACAC,EACAzJ,EACA0J,EACArC,EAAO,GACPA,EAAO,KAMTkwC,EAAAuM,qBACEt6C,EACAC,EACAzJ,EACA0J,EACArC,EAAO,GACPA,EAAO,KAMTkwC,EAAAuM,qBACEt6C,EACAC,EACAzJ,EACA0J,EACArC,EAAO,GACPA,EAAO,KAMTkwC,EAAAuM,qBACEt6C,EACAC,EACAzJ,EACA0J,EACArC,EAAO,GACPA,EAAO,KAuBN08C,CAAqBv6C,EAAiBC,EAAQuvC,EAAK,GAAItvC,EAAQrC,GAAM,OACjE,KAEW,IAAhB2xC,EAAKxhD,OAAY,OACZ,UAEAG,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,GAEzC4/C,EAAAyM,yBACEx6C,EACAwvC,EAAKrhD,EAAI,GACTqhD,EAAKrhD,GACL+R,EACArC,KAIC+7C,EACC55C,EACAwvC,EAAKrhD,EAAI,GACTqhD,EAAKrhD,GACL+R,EACArC,GAAM,OAGD,SAIN,WAWO48C,EACdz6C,EACAC,EACA61C,EACA51C,EACArC,WAES1P,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,MAEjBksD,EAA0Br6C,EAAiBC,EAAQuvC,EAAMtvC,EAAQrC,GAAM,OAEhE,EAEToC,EAASuvC,EAAKA,EAAKxhD,OAAS,UAEvB,iDCrNO0sD,EAAQ16C,EAAiBC,EAAQzJ,EAAK0J,EAAQxQ,WAGxDirD,EAFEV,EAAM,CAAIj6C,EAAgBC,GAASD,EAAgBC,EAAS,IAC5Di6C,EAAM,GAELj6C,EAASC,EAAS1J,EAAKyJ,GAAUC,EAAM,IAC5Cg6C,EAAO,GAAKl6C,EAAgBC,EAASC,GACrCg6C,EAAO,GAAKl6C,EAAgBC,EAASC,EAAS,GAC9Cy6C,EAAMjrD,EAASuqD,EAAQC,GAChB,OACES,EAETV,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,UAEd,oRChBOU,EAAsB56C,EAAiBC,EAAQzJ,EAAK0J,WAG9D26C,EAAO,EACPz4C,EAAKpC,EAAgBxJ,EAAM0J,GAC3BsC,EAAKxC,EAAgBxJ,EAAM0J,EAAS,GACjCD,EAASzJ,EAAKyJ,GAAUC,EAAM,KAC7BmC,EAAKrC,EAAgBC,GACrBwC,EAAKzC,EAAgBC,EAAS,GACpC46C,IAASx4C,EAAKD,IAAOK,EAAKD,GAC1BJ,EAAKC,EACLG,EAAKC,SAES,IAATo4C,OAAa5tD,EAAY4tD,EAAO,WAgBzBC,EACd96C,EACAC,EACAuvC,EACAtvC,EACAouC,WAEMyM,OAAsB9tD,IAAdqhD,GAA0BA,EAC/BngD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACX6sD,EAAcJ,EAClB56C,EACAC,EACAzJ,EACA0J,MAEQ,IAAN/R,MACG4sD,GAASC,IAAkBD,IAAUC,EAAW,OAC5C,UAGJD,IAAUC,IAAkBD,GAASC,EAAW,OAC5C,EAGX/6C,EAASzJ,SAEJ,WAgBOykD,EACdj7C,EACAC,EACA61C,EACA51C,EACAouC,WAESngD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,OAEhB2sD,EAAuB96C,EAAiBC,EAAQuvC,EAAMtvC,EAAQouC,GAAS,OAEjE,EAELkB,EAAKxhD,SACPiS,EAASuvC,EAAKA,EAAKxhD,OAAS,WAGzB,WAgBOktD,EACdl7C,EACAC,EACAuvC,EACAtvC,EACAouC,WAEMyM,OAAsB9tD,IAAdqhD,GAA0BA,EAC/BngD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACX6sD,EAAcJ,EAClB56C,EACAC,EACAzJ,EACA0J,IAGM,IAAN/R,EACK4sD,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CG,EAAAloD,YAAmB+M,EAAiBC,EAAQzJ,EAAK0J,GAEnDD,EAASzJ,SAEJyJ,WAgBOm7C,EACdp7C,EACAC,EACA61C,EACA51C,EACAouC,WAESngD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAC3C8R,EAASi7C,EACPl7C,EACAC,EACA61C,EAAM3nD,GACN+R,EACAouC,UAGGruC,iDCxKOo7C,EAAYr7C,EAAiBC,EAAQzJ,EAAK0J,QACjDD,EAASzJ,EAAM0J,GAAM,SACjB/R,EAAI,EAAGA,EAAI+R,IAAU/R,EAAC,KACvBsI,EAAMuJ,EAAgBC,EAAS9R,GACrC6R,EAAgBC,EAAS9R,GAAK6R,EAAgBxJ,EAAM0J,EAAS/R,GAC7D6R,EAAgBxJ,EAAM0J,EAAS/R,GAAKsI,EAEtCwJ,GAAUC,EACV1J,GAAO0J,oFCaKo7C,EAAQrqD,UACfA,EAAK,GAAK,GAAKA,EAAK,GAAK,WAUlBsqD,EAAMtqD,EAAMwtC,EAAO/D,eAChBztC,IAAbytC,IACFA,EAAQ,CAAI,EAAG,IAEjBA,EAAS,GAAMzpC,EAAK,GAAKwtC,EAAQ,GAAO,EACxC/D,EAAS,GAAMzpC,EAAK,GAAKwtC,EAAQ,GAAO,EACjC/D,WAYO8gB,EAAOvqD,EAAMypC,UACvB5lC,MAAM8B,QAAQ3F,GACTA,QAEUhE,IAAbytC,EACFA,EAAQ,CAAIzpC,EAAMA,IAElBypC,EAAS,GAAKzpC,EACdypC,EAAS,GAAKzpC,GAETypC,uTCrBK+gB,EAAS/4B,OACjBh5B,EAAUg5B,GAAyB,GAEnC74B,EAAQ,IAAOw0B,EAAA5zB,oBAEgBwC,IAAjBvD,EAAQuf,MAAqBvf,EAAQuf,OAEvDpf,EAASmF,KAAI,IAAK0sD,EAAAjxD,QAAKf,EAAQiyD,oBAGQ1uD,IAAnBvD,EAAQsxB,QAAuBtxB,EAAQsxB,SAE3DnxB,EAASmF,KAAI,IAAK4sD,EAAAnxD,QAAOf,EAAQmyD,sBAIT5uD,IAAxBvD,EAAQoyD,aAA4BpyD,EAAQoyD,cAE5CjyD,EAASmF,KAAI,IAAK+sD,EAAAtxD,QAAYf,EAAQsyD,qBAGjCnyD,smBC8SToyD,EAtUA,SAAAzyD,GAGK,SACH0yD,EAAYx5B,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,IAEzC53B,EAAAtB,EAAAW,KAAAC,KAAA,CACE0E,QAASrD,SAASC,cAAa,OAC/BqD,OAAQrF,EAAQqF,OAChBoH,OAAQzM,EAAQyM,gBAObgmD,WAAa1wD,SAASC,cAAa,MAMxCZ,EAAKsxD,gBACmBnvD,IAAtBvD,EAAQ2yD,WAA0B3yD,EAAQ2yD,UAM5CvxD,EAAKwxD,eAAiBxxD,EAAKsxD,WAM3BtxD,EAAKyxD,0BAA+CtvD,IAAxBvD,EAAQ8yD,YAMpC1xD,EAAK2xD,kBACqBxvD,IAAxBvD,EAAQ8yD,aAA4B9yD,EAAQ8yD,YAEzC1xD,EAAK2xD,eACR3xD,EAAKsxD,YAAa,OAGdpwD,OACkBiB,IAAtBvD,EAAQsC,UAA0BtC,EAAQsC,UAAS,iBAE/C0wD,OACiBzvD,IAArBvD,EAAQgzD,SAAyBhzD,EAAQgzD,SAAQ,eAE7CC,OACwB1vD,IAA5BvD,EAAQizD,gBACJjzD,EAAQizD,gBACR3wD,EAAS,UAET4wD,OACsB3vD,IAA1BvD,EAAQkzD,cAA8BlzD,EAAQkzD,cAAa,IAEvDC,OAC0B5vD,IAA9BvD,EAAQmzD,kBACJnzD,EAAQmzD,kBACR7wD,EAAS,YAES,iBAAb4wD,GAKT9xD,EAAKgyD,eAAiBrxD,SAASC,cAAa,QAC5CZ,EAAKgyD,eAAeC,YAAcH,EAClC9xD,EAAKgyD,eAAe9wD,UAAY6wD,GAEhC/xD,EAAKgyD,eAAiBF,MAGlBjhC,OAA0B1uB,IAAlBvD,EAAQiyB,MAAsBjyB,EAAQiyB,MAAK,IAEzC,iBAALA,GAKT7wB,EAAKkyD,OAASvxD,SAASC,cAAa,QACpCZ,EAAKkyD,OAAOD,YAAcphC,EAC1B7wB,EAAKkyD,OAAOhxD,UAAY2wD,GAExB7xD,EAAKkyD,OAASrhC,MAGVshC,EACJnyD,EAAK2xD,eAAiB3xD,EAAKsxD,WAAatxD,EAAKgyD,eAAiBhyD,EAAKkyD,OAMrElyD,EAAKoyD,cAAgBzxD,SAASC,cAAa,UAC3CZ,EAAKoyD,cAAcC,aAAY,OAAO,UACtCryD,EAAKoyD,cAAcC,aAAY,gBAAkBrlD,QAAQhN,EAAKsxD,aAC9DtxD,EAAKoyD,cAAcE,MAAQV,EAC3B5xD,EAAKoyD,cAAcl3C,YAAYi3C,GAE/BnyD,EAAKoyD,cAAcrgD,iBACjBiO,EAAArgB,QAAUkoB,MACV7nB,EAAKuyD,aAAa9xD,KAAKT,IACvB,OAGIwyD,EACJtxD,EAAS,IAETC,EAAAC,mBAAkB,IAElBD,EAAAsxD,eACCzyD,EAAKsxD,YAActxD,EAAK2xD,aAAY,IAASxwD,EAAAuxD,gBAAe,KAC5D1yD,EAAK2xD,aAAY,GAAA,qBACd3tD,EAAUhE,EAAKgE,eACrBA,EAAQ9C,UAAYsxD,EACpBxuD,EAAQkX,YAAYlb,EAAKoyD,eACzBpuD,EAAQkX,YAAYlb,EAAKqxD,YAOzBrxD,EAAK2yD,sBAAqB,GAM1B3yD,EAAK0B,kBAAmB,WAzIFkxD,EAAAxB,EAAA1yD,GAkJxB0yD,EAAA5xD,UAAAqzD,2BAA0B,SAAC/wD,OAItB,IACGgxD,EAAM,GAMNC,EAAmB,GAErBrB,GAAc,EACZ7uD,EAAmBf,EAAWe,iBAC3BQ,EAAI,EAAGC,EAAKT,EAAiBK,OAAQG,EAAIC,IAAMD,EAAC,KACjDE,EAAaV,EAAiBQ,MAC/BI,EAAAC,OAAOH,EAAYzB,EAAWmB,gBAI7BgF,EAA6D1E,EAAWQ,MAAOmE,eAChFD,OAIC+qD,EAAoB/qD,EAAOgrD,qBAC5BD,OAICE,EAAeF,EAAkBlxD,MAClCoxD,KAILxB,EACEA,IAAuD,IAAxCzpD,EAAOkrD,6BAEpBnpD,MAAM8B,QAAQonD,WACPnrD,EAAI,EAAG2mC,EAAKwkB,EAAahwD,OAAQ6E,EAAI2mC,IAAM3mC,EAC5CmrD,EAAanrD,KAAM+qD,IACvBC,EAAoB7uD,KAAKgvD,EAAanrD,IACtC+qD,EAAOI,EAAanrD,KAAM,QAIxBmrD,KAAgBJ,IACpBC,EAAoB7uD,KAAKgvD,GACzBJ,EAAOI,IAAgB,kBAInBzB,sBAAoBnyD,KACvB8zD,eAAe1B,GAEfqB,GAOT3B,EAAA5xD,UAAA6zD,eAAc,SAACvxD,MACRA,OAQCoxD,EAAY5zD,KAAQuzD,2BAA2B/wD,GAE/Ckc,EAAUk1C,EAAahwD,OAAS,UAC7BxB,kBAAoBsc,SACtBha,QAAQnD,MAAM0D,QAAUyZ,EAAO,GAAA,YAC/Btc,iBAAmBsc,IAGtB9T,EAAAC,OAAO+oD,EAAY5zD,KAAOqzD,wBAI9BvuD,EAAAkvD,eAAch0D,KAAM+xD,oBAGXhuD,EAAI,EAAGC,EAAK4vD,EAAahwD,OAAQG,EAAIC,IAAMD,EAAC,KAC7CW,EAAUrD,SAASC,cAAa,MACtCoD,EAAQ+qB,UAAYmkC,EAAa7vD,QAC5BguD,WAAWn2C,YAAYlX,QAGzB2uD,sBAAwBO,aA5BlBxxD,wBACFsC,QAAQnD,MAAM0D,QAAO,YACrB7C,kBAAmB,IAiC9B0vD,EAAA5xD,UAAA+yD,aAAY,SAAClsC,GACXA,EAAM3B,sBACD6uC,qBACA/B,eAAclyD,KAAQgyD,YAM7BF,EAAA5xD,UAAA+zD,cAAa,gBACNvvD,QAAQwvD,UAAUC,OAAOtyD,EAAAuxD,sBACrBpB,WACPltD,EAAAsvD,YAAWp0D,KAAM0yD,eAAc1yD,KAAO4yD,QAEtC9tD,EAAAsvD,YAAWp0D,KAAM4yD,OAAM5yD,KAAO0yD,qBAE3BV,YAAUhyD,KAASgyD,gBACnBc,cAAcC,aAAY,gBAAkBrlD,QAAM1N,KAAOgyD,cAQhEF,EAAA5xD,UAAAm0D,eAAc,uBACAhC,cAQdP,EAAA5xD,UAAA4zD,eAAc,SAAC1B,QACJC,eAAiBD,SAGrBC,aAAeD,OACf1tD,QAAQwvD,UAAUC,OAAM,yBACpBjC,gBAAclyD,KAChBi0D,kBAWTnC,EAAA5xD,UAAAo0D,aAAY,SAACrC,QACNC,eAAiBD,OACZI,cAAYryD,KAASgyD,aAAeC,QAGzCgC,iBASPnC,EAAA5xD,UAAAq0D,aAAY,uBACEvC,YAQdF,EAAA5xD,UAAAyE,OAAM,SAAC6vD,QACAT,eAAeS,EAAShyD,aAEjCsvD,EApUA,CAA0B2C,EAAAp0D,+lBCiH1Bq0D,EAlHA,SAAAt1D,GAGK,SACHu1D,EAAYr1D,OAAZoB,EACEtB,EAAAW,KAAAC,OAAAA,KAEM0E,EAAUpF,EAAQoF,eACpBA,GAAYpF,EAAQyM,QAAWrH,EAAQnD,MAAMs0B,gBAC/CnxB,EAAQnD,MAAMs0B,cAAa,QAO7Bn1B,EAAKgE,QAAUA,GAAoB,KAMnChE,EAAKk0D,QAAU,KAMfl0D,EAAK2F,KAAO,KAMZ3F,EAAKm0D,aAAY,GAEbv1D,EAAQqF,SACVjE,EAAKiE,OAASrF,EAAQqF,QAGpBrF,EAAQyM,QACVrL,EAAK03B,UAAU94B,EAAQyM,iBAzCP+oD,EAAAH,EAAAv1D,GAgDpBu1D,EAAAz0D,UAAA6C,gBAAe,WACb+B,EAAA83B,WAAU58B,KAAM0E,SAChBtF,EAAAc,UAAM6C,gBAAehD,KAAAC,OAQvB20D,EAAAz0D,UAAAuC,OAAM,uBACQ4D,MAUdsuD,EAAAz0D,UAAAqf,OAAM,SAAC9e,QACI4F,MACPvB,EAAA83B,WAAU58B,KAAM0E,iBAETX,EAAI,EAAGC,EAAEhE,KAAQ60D,aAAajxD,OAAQG,EAAIC,IAAMD,EACvDnD,EAAAoC,cAAahD,KAAM60D,aAAa9wD,UAE7B8wD,aAAajxD,OAAS,OACtByC,KAAO5F,OACH4F,SACKrG,KAAQ40D,QAAO50D,KAClB40D,QACLn0D,EAAI45B,gCACDze,YAAW5b,KAAM0E,cACfC,SAAW4E,EAAA8d,MAAIrnB,KACjB60D,aAAajwD,KAChBhE,EAAAC,OAAOJ,EAAK+9B,EAAAn+B,QAAawpB,WAAU7pB,KAAO2E,OAAM3E,OAGpDS,EAAIkE,WASRgwD,EAAAz0D,UAAAyE,OAAM,SAAC6vD,KAWPG,EAAAz0D,UAAAk4B,UAAS,SAACrsB,QACH6oD,QACU,iBAAN7oD,EAAsB1K,SAASgyB,eAAetnB,GAAUA,GAErE4oD,EAhHA,CAAsBn1C,EAAAnf,klBCwItB00D,EApJA,SAAA31D,GAGK,SACH41D,EAAY18B,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEzC53B,EAAAtB,EAAAW,KAAAC,KAAA,CACE0E,QAASrD,SAASC,cAAa,OAC/BqD,OAAQrF,EAAQqF,OAChBoH,OAAQzM,EAAQyM,mBAGZnK,OACkBiB,IAAtBvD,EAAQsC,UAA0BtC,EAAQsC,UAAS,YAE/C2vB,OAA0B1uB,IAAlBvD,EAAQiyB,MAAsBjyB,EAAQiyB,MAAK,IAEnD0jC,OACyBpyD,IAA7BvD,EAAQ21D,iBACJ31D,EAAQ21D,iBAAgB,aAO9Bv0D,EAAKkyD,OAAS,KAEE,iBAALrhC,GACT7wB,EAAKkyD,OAASvxD,SAASC,cAAa,QACpCZ,EAAKkyD,OAAOhxD,UAAYqzD,EACxBv0D,EAAKkyD,OAAOD,YAAcphC,IAE1B7wB,EAAKkyD,OAASrhC,EACd7wB,EAAKkyD,OAAOsB,UAAU/jB,IAAI8kB,QAGtB3C,EAAWhzD,EAAQgzD,SAAWhzD,EAAQgzD,SAAQ,iBAE9CnuB,EAAS9iC,SAASC,cAAa,UACrC6iC,EAAOviC,UAAYA,EAAS,SAC5BuiC,EAAO4uB,aAAY,OAAO,UAC1B5uB,EAAO6uB,MAAQV,EACfnuB,EAAOvoB,YAAYlb,EAAKkyD,QAExBzuB,EAAO1xB,iBACLiO,EAAArgB,QAAUkoB,MACV7nB,EAAKuyD,aAAa9xD,KAAKT,IACvB,OAGIwyD,EACJtxD,EAAS,IAASC,EAAAC,mBAAkB,IAASD,EAAAsxD,cACzCzuD,EAAUhE,EAAKgE,eACrBA,EAAQ9C,UAAYsxD,EACpBxuD,EAAQkX,YAAYuoB,GAEpBzjC,EAAKw0D,gBAAkB51D,EAAQ61D,WAAa71D,EAAQ61D,gBAAatyD,EAMjEnC,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAMrEhuC,EAAK20D,eAAiCxyD,IAArBvD,EAAQg2D,UAAyBh2D,EAAQg2D,SAM1D50D,EAAK60D,eAAY1yD,EAEbnC,EAAK20D,WACP30D,EAAKgE,QAAQwvD,UAAU/jB,IAAItuC,EAAA2zD,uBA/EZC,EAAAT,EAAA51D,GAuFnB41D,EAAA90D,UAAA+yD,aAAY,SAAClsC,GACXA,EAAM3B,sBACuBviB,SAApBqyD,gBAA6Bl1D,KAC/Bk1D,uBAEAQ,eAOTV,EAAA90D,UAAAw1D,YAAW,eAEH3hC,EADG/zB,KAAQyC,SACAi3B,aACZ3F,OAKChtB,EAAWgtB,EAAKma,mBACLrrC,IAAbkE,SACOquD,UAAY,GAAKruD,GAAY,EAAI6I,KAAKwO,KAAQ,EACrD2V,EAAK0I,QAAO,CACV11B,SAAU,EACV2nC,SAAQ1uC,KAAOo1D,UACfzmB,OAAQC,EAAAwG,UAGVrhB,EAAKsZ,YAAY,MAUvB2nB,EAAA90D,UAAAyE,OAAM,SAAC6vD,OACChyD,EAAagyD,EAAShyD,cACvBA,OAGCuE,EAAWvE,EAAWmB,UAAUoD,YAClCA,GAAQ/G,KAASu1D,UAAS,KACtBvnD,EAAS,UAAejH,EAAQ,eAC7BsuD,UAAS,KACV95B,EAAQv7B,KAAQ0E,QAAQwvD,UAAU34B,SAAS15B,EAAA2zD,cAC5Cj6B,GAAyB,IAAbx0B,EAENw0B,GAAyB,IAAbx0B,GAAc/G,KAC9B0E,QAAQwvD,UAAUx2B,OAAO77B,EAAA2zD,cAHDx1D,KACxB0E,QAAQwvD,UAAU/jB,IAAItuC,EAAA2zD,mBAK1B5C,OAAOrxD,MAAMyM,UAAYA,OAE3BunD,UAAYxuD,IAErBiuD,EAlJA,CAAqBP,EAAAp0D,klBC8HrBs1D,EA9HA,SAAAv2D,GAGK,SACHw2D,EAAYt9B,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEzC53B,EAAAtB,EAAAW,KAAAC,KAAA,CACE0E,QAASrD,SAASC,cAAa,OAC/ByK,OAAQzM,EAAQyM,mBAGZnK,OACkBiB,IAAtBvD,EAAQsC,UAA0BtC,EAAQsC,UAAS,UAE/CsoB,OAA0BrnB,IAAlBvD,EAAQ4qB,MAAsB5qB,EAAQ4qB,MAAQ,EAEtD2rC,OACwBhzD,IAA5BvD,EAAQu2D,gBACJv2D,EAAQu2D,gBACRj0D,EAAS,MAETk0D,OACyBjzD,IAA7BvD,EAAQw2D,iBACJx2D,EAAQw2D,iBACRl0D,EAAS,OAETm0D,OACoBlzD,IAAxBvD,EAAQy2D,YAA4Bz2D,EAAQy2D,YAAW,IACnDC,OACqBnzD,IAAzBvD,EAAQ02D,aAA6B12D,EAAQ02D,aAAY,IAErDC,OACuBpzD,IAA3BvD,EAAQ22D,eAA+B32D,EAAQ22D,eAAc,UACzDC,OACwBrzD,IAA5BvD,EAAQ42D,gBACJ52D,EAAQ42D,gBAAe,WAGvBC,EAAY90D,SAASC,cAAa,UACxC60D,EAAUv0D,UAAYi0D,EACtBM,EAAUpD,aAAY,OAAO,UAC7BoD,EAAUnD,MAAQiD,EAClBE,EAAUv6C,YACU,iBAAXm6C,EACH10D,SAAS+0D,eAAeL,GACxBA,GAGNI,EAAU1jD,iBACRiO,EAAArgB,QAAUkoB,MACV7nB,EAAKuyD,aAAa9xD,KAAKT,EAAMwpB,IAC7B,OAGImsC,EAAah1D,SAASC,cAAa,UACzC+0D,EAAWz0D,UAAYk0D,EACvBO,EAAWtD,aAAY,OAAO,UAC9BsD,EAAWrD,MAAQkD,EACnBG,EAAWz6C,YACU,iBAAZo6C,EACH30D,SAAS+0D,eAAeJ,GACxBA,GAGNK,EAAW5jD,iBACTiO,EAAArgB,QAAUkoB,MACV7nB,EAAKuyD,aAAa9xD,KAAKT,GAAOwpB,IAC9B,OAGIgpC,EACJtxD,EAAS,IAASC,EAAAC,mBAAkB,IAASD,EAAAsxD,cACzCzuD,EAAUhE,EAAKgE,eACrBA,EAAQ9C,UAAYsxD,EACpBxuD,EAAQkX,YAAYu6C,GACpBzxD,EAAQkX,YAAYy6C,GAMpB31D,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,aAlFtD4nB,EAAAV,EAAAx2D,GA0FjBw2D,EAAA11D,UAAA+yD,aAAY,SAAC/oC,EAAOnD,GAClBA,EAAM3B,sBACDmxC,aAAarsC,IAOpB0rC,EAAA11D,UAAAq2D,aAAY,SAACrsC,OAEL6J,EADG/zB,KAAQyC,SACAi3B,aACZ3F,OAKCyiC,EAAcziC,EAAKia,kBACLnrC,IAAhB2zD,EAAyB,KACrBC,EAAU1iC,EAAK0hB,mBAAmB+gB,EAActsC,QAC7CkrC,UAAY,GACfrhC,EAAK2I,gBACP3I,EAAKob,mBAEPpb,EAAK0I,QAAO,CACV5d,KAAM43C,EACN/nB,SAAQ1uC,KAAOo1D,UACfzmB,OAAQC,EAAAwG,WAGVrhB,EAAKyZ,QAAQipB,MAIrBb,EA5HA,CAAmBnB,EAAAp0D,+VCkDHq2D,EAASp+B,OACjBh5B,EAAUg5B,GAAyB,GAEnC14B,EAAY,IAAOq0B,EAAA5zB,QAEnBs2D,EAAO,IAAOC,EAAAv2D,SAAQ,KAAQ,IAAM,iBAGTwC,IAA/BvD,EAAQu3D,oBACJv3D,EAAQu3D,qBAGZj3D,EAAagF,KAAI,IAAKkyD,EAAAz2D,eAIMwC,IAA5BvD,EAAQy3D,iBAAgCz3D,EAAQy3D,kBAEhDn3D,EAAagF,KAAI,IACXoyD,EAAA32D,QAAe,CACjB6pB,MAAO5qB,EAAQ23D,UACfvoB,SAAUpvC,EAAQ43D,sBAKYr0D,IAApBvD,EAAQ63D,SAAwB73D,EAAQ63D,UAEtDv3D,EAAagF,KAAI,IACXwyD,EAAA/2D,QAAO,CACTP,YAAaR,EAAQQ,YACrB62D,QAASA,WAMW9zD,IAAxBvD,EAAQ+3D,aAA4B/3D,EAAQ+3D,cAE5Cz3D,EAAagF,KAAI,IAAK0yD,EAAAj3D,eAGgBwC,IAAtBvD,EAAQi4D,WAA0Bj4D,EAAQi4D,YAE1D33D,EAAagF,KAAI,IACX4yD,EAAAn3D,QAAS,CACXquC,SAAUpvC,EAAQ43D,sBAKcr0D,IAArBvD,EAAQm4D,UAAyBn4D,EAAQm4D,YAExD73D,EAAagF,KAAI,IAAK8yD,EAAAr3D,SACtBT,EAAagF,KAAI,IACX+yD,EAAAt3D,QAAY,CACd6pB,MAAO5qB,EAAQ23D,UACfvoB,SAAUpvC,EAAQ43D,uBAMKr0D,IAA3BvD,EAAQs4D,gBAA+Bt4D,EAAQs4D,iBAE/Ch4D,EAAagF,KAAI,IACXizD,EAAAx3D,QAAc,CAChBP,YAAaR,EAAQQ,YACrB4uC,SAAUpvC,EAAQ43D,sBAMIr0D,IAA1BvD,EAAQw4D,eAA8Bx4D,EAAQw4D,gBAE9Cl4D,EAAagF,KAAI,IACXmzD,EAAA13D,QAAQ,CACVquC,SAAUpvC,EAAQ43D,gBAKjBt3D,kjBCzGTo4D,EA5CA,SAAA54D,GAGK,SACH64D,EAAY3/B,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUg5B,GAAyB,UAMzC53B,EAAKw3D,OAAS54D,EAAQ4qB,MAAQ5qB,EAAQ4qB,MAAQ,EAM9CxpB,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,aAnB3CypB,EAAAF,EAAA74D,GA4B5B64D,EAAA/3D,UAAAinB,YAAW,SAAC2T,OACNs9B,GAAY,KACZt9B,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoBmoB,SAAQ,KAChDqS,EAA0CC,EAAgBG,cAC1Dx6B,EAAMq6B,EAAgBr6B,IACtB4tC,EAASvT,EAAgB3zB,WACzB+iB,EAAQ2Q,EAAaw9B,UAAQr4D,KAASk4D,OAAMl4D,KAAQk4D,OACpDnkC,EAAOtzB,EAAIi5B,UACjB4+B,EAAAC,YAAYxkC,EAAM7J,EAAOmkB,EAAMruC,KAAOo1D,WACtCv6B,EAAazV,iBACbgzC,GAAY,SAENA,GAEZH,EA1CA,CAA8BK,EAAAj4D,8pBCyFdm4D,EAAIzkC,EAAM7J,EAAOgrB,OACzBhF,EAAgBnc,EAAKka,uBACvBiC,EAAa,KACTlpC,EAAM,CAAIkpC,EAAc,GAAKhmB,EAAM,GAAIgmB,EAAc,GAAKhmB,EAAM,IACtE6J,EAAKua,gBAAe,CAClBI,cAA2B7rC,IAAjBqyC,EAA6BA,EAAe,IACtDvG,OAAQC,EAAA6pB,OACRzxD,OAAQ+sB,EAAK2f,qBAAqB1sC,eAWxB0xD,EAAY3kC,EAAM7J,EAAOoqB,EAAYY,OAC7CshB,EAAcziC,EAAKia,kBAELnrC,IAAhB2zD,OAIEC,EAAU1iC,EAAK0hB,mBAAmB+gB,EAActsC,GAChDuqB,EAAgB1gB,EAAK+a,qBAAqB2nB,GAE5C1iC,EAAK2I,gBACP3I,EAAKob,mBAEPpb,EAAK0I,QAAO,CACV31B,WAAY2tC,EACZpG,OAAQiG,EACR5F,cAA2B7rC,IAAjBqyC,EAA6BA,EAAe,IACtDvG,OAAQC,EAAAwG,eAIZujB,EAlHA,SAAAv5D,GAGK,SACHw5D,EAAYtgC,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,YAEIs4B,GAAeA,EAAYnR,cAC7BzmB,EAAKymB,YAAcmR,EAAYnR,aAOjCzmB,EAAK2F,KAAO,KAEZ3F,EAAKm4D,WAAU,YAjBOC,EAAAF,EAAAx5D,GA0BxBw5D,EAAA14D,UAAAw7B,UAAS,uBAC6BnpB,IAAIwmD,EAAA14D,QAAoB24D,SAQ9DJ,EAAA14D,UAAAuC,OAAM,uBACQ4D,MASduyD,EAAA14D,UAAAinB,YAAW,SAAC2T,UACH,GAST89B,EAAA14D,UAAA24D,UAAS,SAACI,QACHl+C,IAAIg+C,EAAA14D,QAAoB24D,OAAQC,IASvCL,EAAA14D,UAAAqf,OAAM,SAAC9e,QACA4F,KAAO5F,GAEhBm4D,EApEA,CAA0Bp5C,EAAAnf,iFCxB1B64D,EAEE,CADAF,OAAM,gmBCoLRG,EA1JA,SAAA/5D,GAGK,SACHg6D,EAAY9gC,OAAZ53B,EACEtB,EAAAW,KAAAC,KAAA,CACEq5D,SAAU9vD,EAAA+vD,cAGNh6D,EAAUg5B,GAAyB,GAMzC53B,EAAK64D,SAAWj6D,EAAQq3D,QAKxBj2D,EAAK84D,aAAe,KAKpB94D,EAAK+4D,mBAKL/4D,EAAKg5D,UAAW,MAEVC,EAAYr6D,EAAQq6D,UACtBr6D,EAAQq6D,UACRC,EAAAC,IAAID,EAAAE,eAAgBF,EAAAG,sBAMxBr5D,EAAKs5D,WAAa16D,EAAQQ,YACtB85D,EAAAC,IAAID,EAAAK,kBAAmBN,GACvBA,EAMJj5D,EAAKw5D,YAAa,WAhDAC,EAAAf,EAAAh6D,GAuDpBg6D,EAAAl5D,UAAAk6D,gBAAe,SAACt/B,QACJ4+B,gBACHA,UAAW,OACXj3D,SAASi3B,UAAU2b,wBAEpBglB,EAAcr6D,KAAQq6D,eACtBC,EAAWC,EAAAD,SAAqBD,MAClCA,EAAez2D,QAAM5D,KAASy5D,4BACvBF,UAAQv5D,KACVu5D,SAASiB,OAAOF,EAAS,GAAIA,EAAS,SAEpCd,aAAY,KACbtvC,EAAK,MACJsvC,aAAa,GAAKc,EAAS,GAChCA,EAAS,GAACt6D,KAASw5D,aAAa,IAG5BzlC,EADM+G,EAAgBr6B,IACXi5B,UACjB9xB,EAAA8iB,MAAgBR,EAAO6J,EAAK8Z,iBAC5BjmC,EAAAgpB,OAAiB1G,EAAO6J,EAAKma,eAC7Bna,EAAKogB,qBAAqBjqB,cAEdqvC,eAGTA,SAASptD,aAEXqtD,aAAec,OACfb,mBAAqBY,EAAez2D,OACzCk3B,EAAgBG,cAAc7V,kBAQhCg0C,EAAAl5D,UAAAu6D,cAAa,SAAC3/B,OACNr6B,EAAMq6B,EAAgBr6B,IACtBszB,EAAOtzB,EAAIi5B,aACkB,SAA1B2gC,eAAez2D,OAAY,UACxBs2D,YAAUl6D,KAASu5D,UAAQv5D,KAASu5D,SAASntD,MAAG,KAClD+yC,EAAQn/C,KAAQu5D,SAAS7gB,cACzBhpC,EAAK1P,KAAQu5D,SAASmB,WACtB1zD,EAAS+sB,EAAKka,oBACd0sB,EAAWl6D,EAAIy5B,+BAA+BlzB,GAC9C2jD,EAAOlqD,EAAI83B,+BAA8B,CAC7CoiC,EAAS,GAAKxb,EAAWvvC,KAAKD,IAAID,GAClCirD,EAAS,GAAKxb,EAAWvvC,KAAKC,IAAIH,KAEpCqkB,EAAKua,gBAAe,CAClBtnC,OAAQ+sB,EAAK2f,qBAAqBiX,GAClCjc,SAAU,IACVC,OAAQC,EAAAwG,sBAGHskB,gBACFA,UAAW,EAChB3lC,EAAKuhB,mBAEA,cAEEikB,eAGFA,SAASptD,aAEXqtD,aAAe,MACb,GASXJ,EAAAl5D,UAAA06D,gBAAe,SAAC9/B,WACLu/B,eAAez2D,OAAS,GAAC5D,KAASg6D,WAAWl/B,GAAe,KAE7D/G,EADM+G,EAAgBr6B,IACXi5B,sBACZ8/B,aAAe,KAEhBzlC,EAAK2I,gBACP3I,EAAKob,wBAEEoqB,UAAQv5D,KACVu5D,SAASptD,aAIX+tD,WAAUl6D,KAAQq6D,eAAez2D,OAAS,GACxC,SAEA,GAGbw1D,EAxJA,CAAsBmB,EAAAl6D,unBCkLNw6D,EAAShlC,WACjBjyB,EAASiyB,EAAcjyB,OACzBu1B,EAAU,EACVC,EAAU,EACLr1B,EAAI,EAAGA,EAAIH,EAAQG,IAC1Bo1B,GAAWtD,EAAc9xB,GAAGo1B,QAC5BC,GAAWvD,EAAc9xB,GAAGq1B,eAEtBD,EAAUv1B,EAAQw1B,EAAUx1B,OAiBtCk3D,EAhMA,SAAA17D,GAGK,SACH27D,EAAYziC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,UAEzC53B,EAAAtB,EAAAW,KAAAC,KACgEV,IAAOU,KAGnEV,EAAQs7D,kBACVl6D,EAAKk6D,gBAAkBt7D,EAAQs7D,iBAG7Bt7D,EAAQ86D,kBACV15D,EAAK05D,gBAAkB96D,EAAQ86D,iBAG7B96D,EAAQ07D,kBACVt6D,EAAKs6D,gBAAkB17D,EAAQ07D,iBAG7B17D,EAAQm7D,gBACV/5D,EAAK+5D,cAAgBn7D,EAAQm7D,eAG3Bn7D,EAAQ+5D,WACV34D,EAAK24D,SAAW/5D,EAAQ+5D,UAO1B34D,EAAKu6D,wBAAyB,EAM9Bv6D,EAAKw6D,iBAAgB,GAMrBx6D,EAAK25D,eAAc,YA/CUc,EAAAJ,EAAA37D,GAwD/B27D,EAAA76D,UAAAk7D,gBAAe,uBACDf,eAAez2D,QAS7Bm3D,EAAA76D,UAAA06D,gBAAe,SAAC9/B,UACP,GAQTigC,EAAA76D,UAAAk6D,gBAAe,SAACt/B,KAUhBigC,EAAA76D,UAAAinB,YAAW,SAAC2T,OACLA,EAAgBG,cAAa,OACzB,MAGLm9B,GAAY,UACXiD,uBAAuBvgC,QACnBmgC,2BACHngC,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoBikC,iBACzC81B,gBAAgBt/B,GAErBA,EAAgBG,cAAc7V,yBACrB0V,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoByjC,UAAS,KACxDw3B,EAASt7D,KAAQy6D,cAAc3/B,QAChCmgC,uBACHK,GAASt7D,KAASq6D,eAAez2D,OAAS,WAG1Ck3B,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoB86B,YAAW,KACnDogC,EAAOv7D,KAAQ46D,gBAAgB9/B,QAChCmgC,uBAAyBM,EAC9BnD,EAASp4D,KAAQq5D,SAASkC,QACjBzgC,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoB8iC,aAAWnjC,KAC3Dg7D,gBAAgBlgC,UAGjBs9B,GAQV2C,EAAA76D,UAAA86D,gBAAe,SAAClgC,KAQhBigC,EAAA76D,UAAAu6D,cAAa,SAAC3/B,UACL,GASTigC,EAAA76D,UAAAm5D,SAAQ,SAACkC,UACAA,GAOTR,EAAA76D,UAAAm7D,uBAAsB,SAACvgC,MAqCtB,SAC6BA,OACxBv4B,EAAOu4B,EAAgBv4B,YAE3BA,IAASu6B,EAAAz8B,QAAoB86B,aAC7B54B,IAASu6B,EAAAz8B,QAAoBikC,aAC7B/hC,IAASu6B,EAAAz8B,QAAoByjC,UA1CzB03B,CAAuB1gC,GAAe,KAClCn4B,EAAQm4B,EAAgBG,cAExB1D,EAAK50B,EAAMqhC,UAAUvM,WACvBqD,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoByjC,iBAAS9jC,KAC3Ck7D,iBAAiB3jC,IACpBuD,EAAgBv4B,MAAQu6B,EAAAz8B,QAAoB86B,aAE5C5D,KAAEv3B,KAASk7D,oBAF4Cl7D,KAC3Dk7D,iBAAiB3jC,GAAM50B,QAKzB03D,eAAiB96D,EAAAk8D,UAASz7D,KAAMk7D,oBAG3CH,EAjKA,CAAiCzC,EAAAj4D,ydCzBjBq7D,EAAIvtB,OACZwtB,EAAahxD,UAIhB,OAAA,SACcoc,WACX60C,GAAO,EACF73D,EAAI,EAAGC,EAAK23D,EAAW/3D,OAAQG,EAAIC,IAC1C43D,EAAOA,GAAQD,EAAW53D,GAAGgjB,MADmBhjB,UAM3C63D,OA6BEC,EAAgB,SAAa/gC,OAClCG,EAAoEH,EAAgBG,qBAExFA,EAAc6gC,UACZ7gC,EAAc8gC,SAAW9gC,EAAc+gC,UACzC/gC,EAAco9B,UAsBL4D,EAAiB,SAAal1C,UAClCA,EAAMtmB,IAAI84B,mBAAmB2iC,aAAY,aAXhC,SAAan1C,UACtBA,EAAMhb,OAAOwtB,mBAAmBgC,SAASl6B,SAAS86D,eAWrDC,CAAMr1C,IAWCs1C,EAAS9yD,EAAAC,KAsBT8yD,EAAiB,SAAaxhC,OACnCG,EAA2CH,EAAgBG,qBAClC,GAAxBA,EAAckJ,UAAiBnzB,EAAAurD,QAAUvrD,EAAAwrD,KAAOvhC,EAAc+gC,UAsD1DS,GA5CQlzD,EAAA+vD,MA4CM,SAAax+B,OAChCG,EAAoEH,EAAgBG,qBAEvFA,EAAc6gC,UACb7gC,EAAc8gC,SAAW9gC,EAAc+gC,WACxC/gC,EAAco9B,WA8BNqE,EAAY,SAAa5hC,OAC9BG,EAAoEH,EAAgBG,qBAEvFA,EAAc6gC,UACb7gC,EAAc8gC,SAAW9gC,EAAc+gC,UACzC/gC,EAAco9B,UAYLsE,EAAiB,SAAa7hC,OAEnC8hC,EADoE9hC,EAAgBG,cACpClvB,OAAQ6wD,cAChD,UAAPA,GAA8B,WAAPA,GAA+B,aAAPA,GAU3CC,EAAS,SAAa/hC,OAC3B2I,EAAoE3I,EACvEG,qBACHrqB,EAAAC,YAAwBhO,IAAjB4gC,EAA4B,IAEJ,SAAxBA,EAAaq5B,aA0CTC,EAAa,SAAajiC,OAC/B2I,EAAoE3I,EACvEG,qBACHrqB,EAAAC,YAAwBhO,IAAjB4gC,EAA4B,IAC5BA,EAAau5B,WAAqC,IAAxBv5B,EAAaU,ilBC7KhD84B,EA9FA,SAAA79D,GAGK,SACH89D,EAAY5kC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,UAEzC53B,EAAAtB,EAAAW,KAAAC,KAAA,CACEq5D,SAAU9vD,EAAA+vD,eAOPU,WAAa16D,EAAQq6D,UAAYr6D,EAAQq6D,UAAYC,EAAAuD,iBAM1Dz8D,EAAK08D,gBAAav6D,EAMlBnC,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,aA3BhD2uB,EAAAH,EAAA99D,GAkCvB89D,EAAAh9D,UAAAk6D,gBAAe,SAACt/B,MACT8+B,EAAA0D,UAAUxiC,QAITr6B,EAAMq6B,EAAgBr6B,IACtBszB,EAAOtzB,EAAIi5B,aACb3F,EAAK0c,iBAAiB1pC,WAAa+jC,EAAAG,aAGjCpkC,EAAOpG,EAAI05B,UACXtkB,EAASilB,EAAgB11B,MACzBq8C,EAAQ7xC,KAAKqvC,MAAMp4C,EAAK,GAAK,EAAIgP,EAAO,GAAIA,EAAO,GAAKhP,EAAK,GAAK,WAChDhE,SAAfu6D,WAAwB,KACzBlzC,EAAQu3B,EAAKzhD,KAAQo9D,WAC3BrpC,EAAK6gB,wBAAwB1qB,QAE1BkzC,WAAa3b,KAQpByb,EAAAh9D,UAAAu6D,cAAa,SAAC3/B,UACP8+B,EAAA0D,UAAUxiC,KAIHA,EAAgBr6B,IACXi5B,UACZ4b,eAAct1C,KAAMo1D,YAClB,IAQT8H,EAAAh9D,UAAA06D,gBAAe,SAAC9/B,WACT8+B,EAAA0D,UAAUxiC,QAKb8+B,EAAA2D,kBAAkBziC,KAAe96B,KAC5Bg6D,WAAWl/B,MAEJA,EAAgBr6B,IACxBi5B,UAAU2b,wBACT+nB,gBAAav6D,GACX,KAKbq6D,EA5FA,CAAyB3C,EAAAl6D,klBCwEzBm9D,EAhEA,SAAAp+D,GAGK,SACHq+D,EAAYnlC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEnCqhC,EAAYr6D,EAAQq6D,UAAYr6D,EAAQq6D,UAAYC,EAAA8D,oBAE1Dh9D,EAAAtB,EAAAW,KAAAC,KAAA,CACE25D,UAAWA,EACX/3D,UAAWtC,EAAQsC,WAAS,cAC5B+7D,QAASr+D,EAAQq+D,iBAOdvI,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAMrEhuC,EAAKk9D,UAAuB/6D,IAAhBvD,EAAQu+D,KAAoBv+D,EAAQu+D,aAzB7BC,EAAAL,EAAAr+D,GAgCrBq+D,EAAAv9D,UAAA69D,SAAQ,SAACh3C,OACDtmB,EAAGT,KAAQyC,SACXsxB,EAAqDtzB,EAAIi5B,UACzD7yB,EAAkDpG,EAAI05B,UACxD1mB,EAAMzT,KAAQg+D,cAAc91D,oBAEvB01D,KAAI,KACLK,EAAYlqC,EAAK8c,wBAAwBhqC,GACzCq3D,EAAiB91D,EAAA+1D,8BAA6B,CAClD19D,EAAIy5B,+BAA+B9xB,EAAAg2D,cAAc3qD,IACjDhT,EAAIy5B,+BAA+B9xB,EAAAi2D,YAAY5qD,MAE3C6qD,EAASvqC,EAAKud,+BAA+B4sB,EAAgBr3D,GAEnEuB,EAAAm2D,gBAAgBN,EAAW,EAAIK,GAC/B7qD,EAASwqD,MAGLn3D,EAAaitB,EAAK6d,yBACtB7d,EAAKud,+BAA+B79B,EAAQ5M,IAExCG,EAAS+sB,EAAK2f,qBAAqBtrC,EAAAulC,UAAUl6B,GAAS3M,GAE5DitB,EAAKua,gBAAe,CAClBxnC,WAAYA,EACZE,OAAQA,EACR0nC,SAAQ1uC,KAAOo1D,UACfzmB,OAAQC,EAAAwG,WAGdqoB,EA9DA,CAAuBe,EAAAn+D,+nBCJjBo+D,EAMI,WANJA,EAaG,UAbHA,EAoBE,SApBFA,EA2BK,YAQXC,EAAA,SAAAt/D,GAKK,SACHu/D,EAAYp8D,EAAM4E,EAAY2zB,OAA9Bp6B,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAQVU,EAAKyG,WAAaA,EAOlBzG,EAAKo6B,gBAAkBA,WAtBO8jC,EAAAD,EAAAv/D,GAwBlCu/D,EAxBA,CAAkCh7C,EAAAtjB,SAoLlCw+D,EA9IA,SAAAz/D,GAGK,SACH0/D,EAAYxmC,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUg5B,GAAyB,UAMzC53B,EAAKq+D,KAAI,IAAOC,EAAA3+D,QAAUf,EAAQsC,WAAS,cAM3ClB,EAAKu+D,cAA+Bp8D,IAApBvD,EAAQq+D,QAAwBr+D,EAAQq+D,QAAU,GAE9Dr+D,EAAQy+D,WACVr9D,EAAKq9D,SAAWz+D,EAAQy+D,UAO1Br9D,EAAKw+D,YAAc,KAMnBx+D,EAAKs5D,WAAa16D,EAAQq6D,UAAYr6D,EAAQq6D,UAAYC,EAAA2D,kBAM1D78D,EAAKy+D,iBAAmB7/D,EAAQ8/D,gBAC5B9/D,EAAQ8/D,gBACR1+D,EAAK2+D,gCA3CST,EAAAE,EAAA1/D,GAuDpB0/D,EAAA5+D,UAAAm/D,uBAAsB,SAACvkC,EAAiBwkC,EAAYC,OAC5C99D,EAAQ89D,EAAS,GAAKD,EAAW,GACjC59D,EAAS69D,EAAS,GAAKD,EAAW,UACjC79D,EAAQA,EAAQC,EAASA,GAAM1B,KAASi/D,UAQjDH,EAAA5+D,UAAA89D,YAAW,uBACGe,KAAKf,eAOnBc,EAAA5+D,UAAAk6D,gBAAe,SAACt/B,QACTikC,KAAKS,UAASx/D,KAAMk/D,YAAapkC,EAAgB11B,YAEjDtC,cAAa,IACZ47D,EACFD,EACA3jC,EAAgB3zB,WAChB2zB,KAUNgkC,EAAA5+D,UAAAu6D,cAAa,SAAC3/B,QACPikC,KAAKx/C,OAAO,UAEXkgD,EAAWz/D,KAAQm/D,iBACvBrkC,EAAe96B,KACVk/D,YACLpkC,EAAgB11B,cAEdq6D,GAAWz/D,KACR+9D,SAASjjC,QAEXh4B,cAAa,IACZ47D,EACFe,EAAchB,EAA0BA,EACxC3jC,EAAgB3zB,WAChB2zB,KAGG,GAQTgkC,EAAA5+D,UAAA06D,gBAAe,SAAC9/B,gBACLk/B,WAAWl/B,UACbokC,YAAcpkC,EAAgB11B,WAC9B25D,KAAKx/C,OAAOub,EAAgBr6B,UAC5Bs+D,KAAKS,UAASx/D,KAAMk/D,YAAWl/D,KAAOk/D,kBACtCp8D,cAAa,IACZ47D,EACFD,EACA3jC,EAAgB3zB,WAChB2zB,KAGG,IAUXgkC,EAAA5+D,UAAA69D,SAAQ,SAACh3C,KACX+3C,EA5IA,CAAsBvE,EAAAl6D,wjBCwBtBq/D,EA5HA,SAAAtgE,GAGK,SACHugE,EAAY/9D,OAAZlB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKk/D,UAAY,KAMjBl/D,EAAKU,SAAWC,SAASC,cAAa,OACtCZ,EAAKU,SAASG,MAAMC,SAAQ,WAC5Bd,EAAKU,SAASG,MAAMs0B,cAAa,OACjCn1B,EAAKU,SAASQ,UAAS,UAAeA,EAMtClB,EAAK2F,KAAO,KAMZ3F,EAAKw+D,YAAc,KAMnBx+D,EAAKm/D,UAAY,cAtCGC,EAAAH,EAAAvgE,GA4CtBugE,EAAAz/D,UAAA6C,gBAAe,gBACRwc,OAAO,OAMdogD,EAAAz/D,UAAA6/D,QAAO,eACCT,EAAUt/D,KAAQk/D,YAClBK,EAAQv/D,KAAQ6/D,UAChBG,EAAE,KACFz+D,EAAKvB,KAAQoB,SAASG,MAC5BA,EAAMuuB,KAAOlgB,KAAKuG,IAAImpD,EAAW,GAAIC,EAAS,IAAMS,EACpDz+D,EAAM83B,IAAMzpB,KAAKuG,IAAImpD,EAAW,GAAIC,EAAS,IAAMS,EACnDz+D,EAAME,MAAQmO,KAAKkO,IAAIyhD,EAAS,GAAKD,EAAW,IAAMU,EACtDz+D,EAAMG,OAASkO,KAAKkO,IAAIyhD,EAAS,GAAKD,EAAW,IAAMU,GAMzDL,EAAAz/D,UAAAqf,OAAM,SAAC9e,WACI4F,KAAI,MACNA,KAAK+zB,sBAAsBl3B,YAAWlD,KAAMoB,cAC3CG,EAAKvB,KAAQoB,SAASG,MAC5BA,EAAMuuB,KAAI,UACVvuB,EAAM83B,IAAG,UACT93B,EAAME,MAAK,UACXF,EAAMG,OAAM,eAET2E,KAAO5F,OACH4F,MAAIrG,KACNqG,KAAK+zB,sBAAsBxe,YAAW5b,KAAMoB,WAQrDu+D,EAAAz/D,UAAAs/D,UAAS,SAACF,EAAYC,QACfL,YAAcI,OACdO,UAAYN,OACZU,8BACAF,WAMPJ,EAAAz/D,UAAA+/D,uBAAsB,eACdX,EAAUt/D,KAAQk/D,YAClBK,EAAQv/D,KAAQ6/D,UAOhBh3D,EANM,CACVy2D,GACCA,EAAW,GAAIC,EAAS,IACzBA,GACCA,EAAS,GAAID,EAAW,KAEA7+D,IAAGT,KACvBqG,KAAKkyB,+BAA8Bv4B,KACnCqG,MAGPwC,EAAY,GAAKA,EAAY,GAAGf,aACtB83D,eAGHA,UAAU/c,eAAc,CAAEh6C,IAHd7I,KACZ4/D,UAAS,IAAOrtB,EAAAlyC,QAAO,CAAEwI,KASlC82D,EAAAz/D,UAAA89D,YAAW,uBACG4B,WAEhBD,EA1HA,CAAwBh2D,EAAAtJ,+lBCmHxB6/D,EAxFA,SAAA9gE,GAGK,SACH+gE,EAAY7nC,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUg5B,GAAW,UAO3B53B,EAAK0/D,kBAAiB,SAAatlC,UAE/B8+B,EAAAE,eAAeh/B,IAAoB8+B,EAAAyG,kBAAkBvlC,IAQzDp6B,EAAKs5D,gBACmBn3D,IAAtBvD,EAAQq6D,UACJr6D,EAAQq6D,UACRj5D,EAAK0/D,kBAMX1/D,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAMrEhuC,EAAK4/D,iBACoBz9D,IAAvBvD,EAAQihE,WAA2BjhE,EAAQihE,WAAa,aAxCpCC,EAAAL,EAAA/gE,GAmDxB+gE,EAAAjgE,UAAAinB,YAAW,SAAC2T,OACNs9B,GAAY,KACZt9B,EAAgBv4B,MAAQme,EAAArgB,QAAUwoB,QAAO,KACrC43C,EAAyC3lC,EAAgBG,cACzDylC,EAAUD,EAASC,gBAElB1G,WAAWl/B,KACf4lC,GAAWC,EAAAtgE,QAAQugE,MAClBF,GAAWC,EAAAtgE,QAAQ2U,MACnB0rD,GAAWC,EAAAtgE,QAAQ4U,OACnByrD,GAAWC,EAAAtgE,QAAQwgE,IAAE,KAGjB9sC,EADM+G,EAAgBr6B,IACXi5B,UACXonC,EAAgB/sC,EAAK8Z,gBAAa7tC,KAAUsgE,YAC9C1nD,EAAS,EACXC,EAAS,EACP6nD,GAAWC,EAAAtgE,QAAQugE,KACrB/nD,GAAUioD,EACDJ,GAAWC,EAAAtgE,QAAQ2U,KAC5B4D,GAAUkoD,EACDJ,GAAWC,EAAAtgE,QAAQ4U,MAC5B2D,EAASkoD,EAETjoD,EAASioD,MAEL52C,EAAK,CAAItR,EAAQC,GACvBjR,EAAAgpB,OAAiB1G,EAAO6J,EAAKma,eAC7BoqB,EAAAyI,IAAIhtC,EAAM7J,EAAKlqB,KAAOo1D,WACtBqL,EAASr7C,iBACTgzC,GAAY,UAGRA,GAEZ+H,EAtFA,CAA0B7H,EAAAj4D,iFC1B1B2gE,EAKE,CAJAhsD,KAAM,GACN6rD,GAAI,GACJ5rD,MAAO,GACP2rD,KAAM,gkBC+ERK,EA7DA,SAAA7hE,GAGK,SACH8hE,EAAY5oC,OAAZ53B,EACEtB,EAAAW,KAAAC,OAAAA,KAEMV,EAAUg5B,GAAyB,UAMzC53B,EAAKs5D,WAAa16D,EAAQq6D,UAAYr6D,EAAQq6D,UAAYC,EAAAyG,kBAM1D3/D,EAAKw3D,OAAS54D,EAAQ4qB,MAAQ5qB,EAAQ4qB,MAAQ,EAM9CxpB,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,aAzB9CyyB,EAAAD,EAAA9hE,GAoCzB8hE,EAAAhhE,UAAAinB,YAAW,SAAC2T,OACNs9B,GAAY,KAEdt9B,EAAgBv4B,MAAQme,EAAArgB,QAAUwoB,SAClCiS,EAAgBv4B,MAAQme,EAAArgB,QAAUyoB,SAAQ,KAEpC23C,EAAyC3lC,EAAgBG,cACzDmmC,EAAWX,EAASW,iBAEnBpH,WAAWl/B,KACfsmC,GAAQ,IAAQC,WAAW,IAAMD,GAAQ,IAAQC,WAAW,IAAC,KAExD5gE,EAAMq6B,EAAgBr6B,IACtBypB,EACJk3C,GAAQ,IAAQC,WAAW,GAACrhE,KAASk4D,QAAMl4D,KAASk4D,OAChDnkC,EAAOtzB,EAAIi5B,UACjB4+B,EAAAC,YAAYxkC,EAAM7J,OAAOrnB,EAAS7C,KAAOo1D,WACzCqL,EAASr7C,iBACTgzC,GAAY,UAGRA,GAEZ8I,EA3DA,CAA2B5I,EAAAj4D,6ECrBxB,IAoHHihE,EAnHA,WAMK,SACHC,EAAYC,EAAOC,EAAaC,GAI3B1hE,KACE2hE,OAASH,EAKXxhE,KACE4hE,aAAeH,EAKjBzhE,KACE6hE,OAASH,EAKX1hE,KACE8hE,QAAO,GAKT9hE,KACE+hE,OAAS,EAKX/hE,KACEgiE,iBAAmB,SAM1BT,EAAArhE,UAAAiM,MAAK,gBACE21D,QAAQl+D,OAAS,OACjBm+D,OAAS,OACTC,iBAAmB,GAO1BT,EAAArhE,UAAAs6D,OAAM,SAACjrD,EAAGC,QACHsyD,QAAQl9D,KAAK2K,EAAGC,EAAGulB,KAAKC,QAM/BusC,EAAArhE,UAAAkM,IAAG,mBACQ01D,QAAQl+D,OAAS,SAGjB,MAEH89D,EAAQ3sC,KAAKC,MAAGh1B,KAAU6hE,OAC1BI,EAASjiE,KAAQ8hE,QAAQl+D,OAAS,UAC/Bk+D,QAAQG,EAAY,GAAKP,SAGzB,UAILQ,EAAaD,EAAY,EACtBC,EAAa,GAACliE,KAAS8hE,QAAQI,EAAa,GAAKR,GACtDQ,GAAc,MAGVxzB,EAAQ1uC,KAAQ8hE,QAAQG,EAAY,GAACjiE,KAAS8hE,QAAQI,EAAa,MAIrExzB,EAAW,IAAO,GAAE,OACf,MAGHz6B,EAAEjU,KAAQ8hE,QAAQG,GAASjiE,KAAS8hE,QAAQI,GAC5ChuD,EAAElU,KAAQ8hE,QAAQG,EAAY,GAACjiE,KAAS8hE,QAAQI,EAAa,eAC9DH,OAASnyD,KAAKqvC,MAAM/qC,EAAID,QACxB+tD,iBAAmBpyD,KAAK62B,KAAKxyB,EAAKA,EAAKC,EAAKA,GAAMw6B,OAC3CszB,iBAAgBhiE,KAAQ4hE,cAMtCL,EAAArhE,UAAAw4C,YAAW,uBACIkpB,aAAY5hE,KAAQgiE,kBAAgBhiE,KAAS2hE,QAM5DJ,EAAArhE,UAAAw6D,SAAQ,uBACMqH,QAEhBR,EAjHA,8nBCEaY,EAAI,CACfC,SAAQ,WACRl5C,MAAK,SAwRPm5C,EA7PA,SAAAjjE,GAGK,SACHkjE,EAAYhqC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,IAEzC53B,EAAAtB,EAAAW,KAAAC,KACgEV,IAAOU,MAOlEuiE,YAAc,EAMnB7hE,EAAK8hE,WAAa,EAMlB9hE,EAAK8hD,eAAiC3/C,IAArBvD,EAAQssD,SAAyBtsD,EAAQssD,SAAW,EAMrElrD,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAMrEhuC,EAAK+hE,cAA+B5/D,IAApBvD,EAAQojE,QAAwBpjE,EAAQojE,QAAU,GAMlEhiE,EAAKiiE,gBACmB9/D,IAAtBvD,EAAQsjE,WAA0BtjE,EAAQsjE,UAM5CliE,EAAKmiE,0BAC6BhgE,IAAhCvD,EAAQoqC,qBACJpqC,EAAQoqC,wBAGRiwB,EAAYr6D,EAAQq6D,UAAYr6D,EAAQq6D,UAAYC,EAAAkJ,cAM1DpiE,EAAKs5D,WAAa16D,EAAQQ,YACtB85D,EAAAC,IAAID,EAAAK,kBAAmBN,GACvBA,EAMJj5D,EAAKqiE,YAAc,KAMnBriE,EAAKsiE,gBAAangE,EAMlBnC,EAAKuiE,WAMLviE,EAAKwiE,WAAQrgE,EAObnC,EAAKyiE,kBAAoB,IAKzBziE,EAAK0iE,mBAOL1iE,EAAK2iE,cAAgB,aA5GIC,EAAAhB,EAAAljE,GAkH3BkjE,EAAApiE,UAAAqjE,gBAAe,gBACRH,wBAAqBvgE,EAChB7C,KAAQyC,SAASi3B,UACtB4b,oBACHzyC,EAAS7C,KACJwiE,WAAUxiE,KAASwiE,WAAa,EAAI,GAAI,EAAM,EAACxiE,KAC/C+iE,cAUTT,EAAApiE,UAAAinB,YAAW,SAAC2T,YACAk/B,WAAWl/B,GAAe,OAC3B,KAEIA,EAAgBv4B,OAChBme,EAAArgB,QAAU6oB,MAAK,OACnB,MAaLgB,EAVEzpB,EAAMq6B,EAAgBr6B,IACtB+iE,EAAwC1oC,EAAgBG,iBAC9DuoC,EAAWp+C,sBAEFu9C,aAAU3iE,KACZ+iE,YAAcjoC,EAAgB3zB,YAMjC2zB,EAAgBv4B,MAAQme,EAAArgB,QAAU6oB,QACpCgB,EAAQs5C,EAAW3qD,OACf7H,EAAAyyD,SAAWD,EAAWE,YAAcC,WAAWC,kBACjD15C,GAASlZ,EAAA0jB,oBAEP8uC,EAAWE,YAAcC,WAAWE,iBACtC35C,GAAS,KAIC,IAAVA,EAAW,OACN,OAEFs4C,WAAat4C,MAGd8K,EAAMD,KAAKC,WAEOnyB,SAAfmgE,aAAwBhjE,KAC1BgjE,WAAahuC,UAGVkuC,OAASluC,EAAGh1B,KAAQgjE,WAAUhjE,KAAQmjE,qBAAiBnjE,KAC1DkjE,MAAQtzD,KAAKkO,IAAIoM,GAAS,EAAIi4C,EAAKC,SAAWD,EAAKj5C,WAGpD6K,EAAOtzB,EAAIi5B,kBAEVwpC,QAAUf,EAAKC,WAClBruC,EAAK2c,2BAAsB1wC,KAAW6iE,iCAE/BO,mBACPnmC,aAAYj9B,KAAMojE,qBAEdrvC,EAAK2I,gBACP3I,EAAKob,mBAEPpb,EAAKshB,yBAEF+tB,mBAAqBvkC,WAAU7+B,KAC7BujE,gBAAgBpiE,KAAInB,MAAAA,KACpByiE,UAEP1uC,EAAK2gB,YAAYxqB,EAAKlqB,KAAQqjE,cAAarjE,KAAO+iE,kBAC7CC,WAAahuC,GACX,OAGJutC,aAAer4C,MAEd45C,EAAWl0D,KAAKwG,IAAGpW,KAAMyiE,UAAYztC,EAAGh1B,KAAQgjE,YAAa,UAEnE/lC,aAAYj9B,KAAMijE,iBACbA,WAAapkC,WAAU7+B,KACrB+jE,iBAAiB5iE,KAAInB,KAAOS,GACjCqjE,IAGK,GAOTxB,EAAApiE,UAAA6jE,iBAAgB,SAACtjE,OACTszB,EAAOtzB,EAAIi5B,UACb3F,EAAK2I,gBACP3I,EAAKob,uBAEHjlB,GACDpN,EAAAC,MAAK/c,KACCuiE,aAAWviE,KACVwiD,UAASxiD,KAAQqjE,cAAarjE,KAC/BwiD,UAASxiD,KAAQqjE,eAAarjE,KAC5BqjE,eACPtvC,EAAK2c,0BAAsB1wC,KAAW6iE,wBAExC34C,EAAQA,EAASA,EAAQ,EAAI,GAAI,EAAM,GAEzCouC,EAAAC,YAAYxkC,EAAM7J,EAAKlqB,KAAO+iE,YAAW/iE,KAAOo1D,gBAE3C8N,WAAQrgE,OACR0/D,YAAc,OACdQ,YAAc,UACdC,gBAAangE,OACbogE,gBAAapgE,GASpBy/D,EAAApiE,UAAA8jE,eAAc,SAACpB,QACRD,WAAaC,EACbA,IAAS5iE,KACP+iE,YAAc,OAGzBT,EA3PA,CAA6BhK,EAAAj4D,qkBCuH7B4jE,EA1IA,SAAA7kE,GAGK,SACH8kE,EAAY5rC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEnC6rC,EAAgE7kE,SAEjE6kE,EAAe9K,WAClB8K,EAAe9K,SAAW9vD,EAAA+vD,QAG5B54D,EAAAtB,EAAAW,KAAAC,KAAMmkE,IAAcnkE,MAMfokE,QAAU,KAMf1jE,EAAK08D,gBAAav6D,EAMlBnC,EAAK2jE,WAAY,EAMjB3jE,EAAK4jE,eAAiB,EAMtB5jE,EAAK6jE,gBAAmC1hE,IAAtBvD,EAAQklE,UAA0BllE,EAAQklE,UAAY,GAMxE9jE,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,aAjD/C+1B,EAAAP,EAAA9kE,GAwDxB8kE,EAAAhkE,UAAAk6D,gBAAe,SAACt/B,OACV4pC,EAAgB,EAEdC,EAAM3kE,KAAQq6D,eAAe,GAC7BuK,EAAM5kE,KAAQq6D,eAAe,GAG7B3qD,EAAQE,KAAKqvC,MACjB2lB,EAAOxrC,QAAUurC,EAAOvrC,QACxBwrC,EAAOzrC,QAAUwrC,EAAOxrC,iBAGFt2B,SAAfu6D,WAAwB,KACzBlzC,EAAQxa,EAAK1P,KAAQo9D,gBACtBkH,gBAAkBp6C,QACbm6C,WAAaz0D,KAAKkO,IAAG9d,KAAMskE,gBAActkE,KAASukE,aAAUvkE,KAC/DqkE,WAAY,GAEnBK,EAAgBx6C,OAEbkzC,WAAa1tD,MAEZjP,EAAMq6B,EAAgBr6B,IACtBszB,EAAOtzB,EAAIi5B,aACb3F,EAAK0c,iBAAiB1pC,WAAa+jC,EAAAG,aAOjClS,EAAmBt4B,EAAIuB,cAAcg3B,wBACrCshC,EAAWC,EAAAD,SAAoBt6D,KAAMq6D,gBAC3CC,EAAS,IAAMvhC,EAAiBjJ,KAChCwqC,EAAS,IAAMvhC,EAAiBM,SAC3B+qC,QAAU3jE,EAAI83B,+BAA+B+hC,QAGzC+J,YACP5jE,EAAIkE,SACJovB,EAAK6gB,uBAAuB8vB,EAAa1kE,KAAOokE,YASpDF,EAAAhkE,UAAAu6D,cAAa,SAAC3/B,gBACHu/B,eAAez2D,OAAS,KACnBk3B,EAAgBr6B,IACXi5B,UACZ4b,eAAct1C,KAAMo1D,YAClB,IAWX8O,EAAAhkE,UAAA06D,gBAAe,SAAC9/B,WACLu/B,eAAez2D,QAAU,EAAC,KAC3BnD,EAAMq6B,EAAgBr6B,gBACvB2jE,QAAU,UACVhH,gBAAav6D,OACbwhE,WAAY,OACZC,eAAiB,OACZrJ,wBACRx6D,EAAIi5B,UAAU2b,oBAET,SAEA,GAGb6uB,EAxIA,CAA0B3J,EAAAl6D,wjBCkH1BwkE,EArHA,SAAAzlE,GAGK,SACH0lE,EAAYxsC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEnC6rC,EAAgE7kE,SAEjE6kE,EAAe9K,WAClB8K,EAAe9K,SAAW9vD,EAAA+vD,QAG5B54D,EAAAtB,EAAAW,KAAAC,KAAMmkE,IAAcnkE,MAMfokE,QAAU,KAMf1jE,EAAK00D,eAAiCvyD,IAArBvD,EAAQovC,SAAyBpvC,EAAQovC,SAAW,IAMrEhuC,EAAKqkE,mBAAgBliE,EAMrBnC,EAAKskE,gBAAkB,WArCHC,EAAAH,EAAA1lE,GA4CtB0lE,EAAA5kE,UAAAk6D,gBAAe,SAACt/B,OACVoqC,EAAa,EAEXP,EAAM3kE,KAAQq6D,eAAe,GAC7BuK,EAAM5kE,KAAQq6D,eAAe,GAC7BpmD,EAAK0wD,EAAOxrC,QAAUyrC,EAAOzrC,QAC7BjlB,EAAKywD,EAAOvrC,QAAUwrC,EAAOxrC,QAG7B+lB,EAAWvvC,KAAK62B,KAAKxyB,EAAKA,EAAKC,EAAKA,QAEfrR,SAAlBkiE,gBACPG,EAAUllE,KAAQ+kE,cAAgB5lB,QAE/B4lB,cAAgB5lB,MAEf1+C,EAAMq6B,EAAgBr6B,IACtBszB,EAAOtzB,EAAIi5B,UAEC,GAAdwrC,IAAiBllE,KACdglE,gBAAkBE,OAInBnsC,EAAmBt4B,EAAIuB,cAAcg3B,wBACrCshC,EAAWC,EAAAD,SAAoBt6D,KAAMq6D,gBAC3CC,EAAS,IAAMvhC,EAAiBjJ,KAChCwqC,EAAS,IAAMvhC,EAAiBM,SAC3B+qC,QAAU3jE,EAAI83B,+BAA+B+hC,GAGlD75D,EAAIkE,SACJovB,EAAKwgB,yBAAyB2wB,EAAUllE,KAAOokE,UAQjDU,EAAA5kE,UAAAu6D,cAAa,SAAC3/B,WACHu/B,eAAez2D,OAAS,EAAC,KAE1BmwB,EADM+G,EAAgBr6B,IACXi5B,UACX1tB,EAAShM,KAAQglE,gBAAkB,EAAI,GAAI,SACjDjxC,EAAKuhB,eAAct1C,KAAMo1D,UAAWppD,IAC7B,SAEA,GASX84D,EAAA5kE,UAAA06D,gBAAe,SAAC9/B,WACLu/B,eAAez2D,QAAU,EAAC,KAC3BnD,EAAMq6B,EAAgBr6B,gBACvB2jE,QAAU,UACVW,mBAAgBliE,OAChBmiE,gBAAkB,OACb/J,wBACRx6D,EAAIi5B,UAAU2b,oBAET,SAEA,GAGbyvB,EAnHA,CAAwBvK,EAAAl6D,wjBCexB8kE,EAjBA,SAAA/lE,GAGK,SACHgmE,EAAY9sC,UACVl5B,EAAAW,KAAAC,KAAMs4B,IAAWt4B,YALKqlE,EAAAD,EAAAhmE,GAYxBgmE,EAAAllE,UAAAC,eAAc,sBACDmlE,EAAAjlE,QAAyBL,OAExColE,EAfA,CAA0BG,EAAAllE,klBC4CpBmlE,EACQ,cAgMdC,EAlLA,SAAArmE,GAGK,SACHsmE,EAAYptC,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAyB,GAEnCpZ,EAAc3f,EAAAC,OAAM,GAAKF,iBAExB4f,EAAY3d,aACZ2d,EAAYymD,oBACZzmD,EAAY0mD,4BACZ1mD,EAAY2mD,wBACnBnlE,EAAAtB,EAAAW,KAAAC,KAAMkf,IAAWlf,MAMZ8lE,gBACmBjjE,IAAtBvD,EAAQymE,WAA0BzmE,EAAQymE,UAM5CrlE,EAAKslE,mBACsBnjE,IAAzBvD,EAAQqmE,aAA6BrmE,EAAQqmE,aAAe,IAO9DjlE,EAAKulE,OAAS,KAOdvlE,EAAKwlE,oBAAiBrjE,EAEtBnC,EAAKylE,SAAS7mE,EAAQiC,OAMtBb,EAAK0lE,2BAC8BvjE,IAAjCvD,EAAQsmE,sBACJtmE,EAAQsmE,qBAOdllE,EAAK2lE,6BACgCxjE,IAAnCvD,EAAQumE,wBACJvmE,EAAQumE,gCA5DYS,EAAAZ,EAAAtmE,GAmE5BsmE,EAAAxlE,UAAAqmE,aAAY,uBACET,YAiBdJ,EAAAxlE,UAAA0gB,YAAW,SAACxb,UACHhG,EAAAc,UAAM0gB,YAAW7gB,KAAAC,KAACoF,IAM3BsgE,EAAAxlE,UAAAsmE,gBAAe,uBACDR,eAOdN,EAAAxlE,UAAAumE,eAAc,uBACoEl0D,IAC9EizD,IAUJE,EAAAxlE,UAAAwmE,SAAQ,uBACMT,QAQdP,EAAAxlE,UAAAymE,iBAAgB,uBACFT,gBAOdR,EAAAxlE,UAAA0mE,wBAAuB,uBACTR,uBAOdV,EAAAxlE,UAAA2mE,0BAAyB,uBACXR,yBAOdX,EAAAxlE,UAAA2E,gBAAe,SAACrC,GACTA,EAAW27B,gBACd37B,EAAW27B,cAAa,IAAO2oC,EAAAC,GAAP,CAAa,IAEvB/mE,KAAO2F,cAAed,gBAAgBrC,IAOxDkjE,EAAAxlE,UAAA8mE,eAAc,SAACC,QACRlsD,IAAIyqD,EAAuByB,IAalCvB,EAAAxlE,UAAAimE,SAAQ,SAACe,QACFjB,YAAuBpjE,IAAdqkE,EAA0BA,EAAYC,EAAAC,wBAC/ClB,eACW,OAAdgB,OAAqBrkE,EAAYskE,EAAAE,WAAernE,KAAMimE,aACnDxlD,WAETilD,EAhLA,CAA8BvhE,EAAA9D,kDC5EpBod,EAAE1Z,EAAF0Z,EAAoJ6pD,EAAAC,QAAlJxjE,EAAsJ,iCAAkC0Z,EAAE+pD,EAAEprD,EAAEjN,EAAE1L,EAAEytB,aAAau2C,EAAEx7D,EAAEy7D,EAAEj5D,EAAEJ,EAAEs5D,QAAQt5D,EAAEI,GAAC,IAAMJ,EAAEI,EAAE,IAAG,KAAMm5D,EAAEv5D,EAAEI,EAAE,EAAEyN,EAAEwrD,EAAEj5D,EAAE,EAAEoL,EAAEjK,KAAK0N,IAAIsqD,GAAGx4D,EAAE,GAAGQ,KAAKuN,IAAI,EAAEtD,EAAE,GAAGguD,EAAE,GAAGj4D,KAAK62B,KAAK5sB,EAAEzK,GAAGw4D,EAAEx4D,GAAGw4D,IAAI1rD,EAAE0rD,EAAE,EAAE,GAAE,EAAG,GAA+EH,EAAEx7D,EAAEy7D,EAA9E93D,KAAKwG,IAAI3H,EAAEmB,KAAKoK,MAAM0tD,EAAExrD,EAAE9M,EAAEw4D,EAAEC,IAAMj4D,KAAKuG,IAAI9H,EAAEuB,KAAKoK,MAAM0tD,GAAGE,EAAE1rD,GAAG9M,EAAEw4D,EAAEC,IAAcF,OAAOG,EAAE77D,EAAEy7D,GAAGx4D,EAAET,EAAEc,EAAElB,MAAMtK,EAAEkI,EAAEwC,EAAEi5D,GAAGC,EAAE17D,EAAEoC,GAAGy5D,GAAG,GAAG/jE,EAAEkI,EAAEwC,EAAEJ,GAAGa,EAAEK,GAAC,KAAOxL,EAAEkI,EAAEiD,EAAEK,GAAGL,IAAIK,IAAIo4D,EAAE17D,EAAEiD,GAAG44D,GAAG,GAAG54D,SAASy4D,EAAE17D,EAAEsD,GAAGu4D,GAAG,GAAGv4D,IAAI,IAAIo4D,EAAE17D,EAAEwC,GAAGq5D,GAAG/jE,EAAEkI,EAAEwC,EAAEc,GAAGxL,EAAEkI,IAAIsD,EAAElB,GAAGkB,GAAGm4D,IAAIj5D,EAAEc,EAAE,GAAGm4D,GAAGn4D,IAAIlB,EAAEkB,EAAE,KAAKi4D,EAAEprD,EAAEjN,GAAG,EAAE1L,GAAG+jE,EAAE5jE,OAAO,EAAEstB,GAAGjlB,YAAYlI,EAAEyjE,EAAEr+D,EAAE8C,OAAOmQ,EAAEorD,EAAEr+D,GAAGq+D,EAAEr+D,GAAGq+D,EAAEv7D,GAAGu7D,EAAEv7D,GAAGmQ,WAAWnQ,EAAEu7D,EAAEr+D,UAAUq+D,EAAEr+D,GAAE,EAAGq+D,EAAEr+D,EAAE,EAAE,MAAMiT,EAAC,SAAUorD,YAAYA,IAAIA,EAAE,GAACxnE,KAAO+nE,YAAYn4D,KAAKwG,IAAI,EAAEoxD,GAACxnE,KAAOgoE,YAAYp4D,KAAKwG,IAAI,EAAExG,KAAKsxC,KAAK,GAAElhD,KAAM+nE,cAAW/nE,KAAQwa,kBAAkBrL,EAAEq4D,EAAEr+D,EAAE8+D,OAAOA,EAAC,OAAQ9+D,EAAE0C,QAAQ27D,WAAWE,EAAE,EAAEA,EAAEv+D,EAAEvF,OAAO8jE,IAAC,GAAMO,EAAET,EAAEr+D,EAAEu+D,IAAC,OAAUA,SAAQ,WAAYjkE,EAAE+jE,EAAEr+D,GAAG+nB,EAAEs2C,EAAE,EAAEA,EAAE50C,SAAShvB,OAAOuF,EAAEq+D,YAAYt2C,EAAEs2C,EAAEr+D,EAAE8+D,EAAEP,EAAEj5D,GAAGA,IAAIA,EAAEq5D,EAAE,OAAOr5D,EAAEgG,KAAK,EAAA,EAAIhG,EAAEiG,KAAK,EAAA,EAAIjG,EAAEkG,MAAK,EAAA,EAAKlG,EAAEmG,MAAK,EAAA,UAAavG,EAAElF,EAAEkF,EAAE45D,EAAE55D,IAAC,KAAQs5D,EAAEH,EAAE50C,SAASvkB,GAAGu5D,EAAEn5D,EAAE+4D,EAAEU,KAAKR,EAAEC,GAAGA,UAAUl5D,WAAWm5D,EAAEJ,EAAEr+D,UAAUq+D,EAAE/yD,KAAK7E,KAAKuG,IAAIqxD,EAAE/yD,KAAKtL,EAAEsL,MAAM+yD,EAAE9yD,KAAK9E,KAAKuG,IAAIqxD,EAAE9yD,KAAKvL,EAAEuL,MAAM8yD,EAAE7yD,KAAK/E,KAAKwG,IAAIoxD,EAAE7yD,KAAKxL,EAAEwL,MAAM6yD,EAAE5yD,KAAKhF,KAAKwG,IAAIoxD,EAAE5yD,KAAKzL,EAAEyL,MAAM4yD,WAAWtrD,EAAEsrD,EAAEr+D,UAAUq+D,EAAE/yD,KAAKtL,EAAEsL,cAAcoF,EAAE2tD,EAAEr+D,UAAUq+D,EAAE9yD,KAAKvL,EAAEuL,cAActF,EAAEo4D,UAAUA,EAAE7yD,KAAK6yD,EAAE/yD,OAAO+yD,EAAE5yD,KAAK4yD,EAAE9yD,eAAemzD,EAAEL,UAAUA,EAAE7yD,KAAK6yD,EAAE/yD,MAAM+yD,EAAE5yD,KAAK4yD,EAAE9yD,eAAeyzD,EAAEX,EAAEr+D,UAAUq+D,EAAE/yD,MAAMtL,EAAEsL,MAAM+yD,EAAE9yD,MAAMvL,EAAEuL,MAAMvL,EAAEwL,MAAM6yD,EAAE7yD,MAAMxL,EAAEyL,MAAM4yD,EAAE5yD,cAAc/F,EAAE24D,EAAEr+D,UAAUA,EAAEsL,MAAM+yD,EAAE7yD,MAAMxL,EAAEuL,MAAM8yD,EAAE5yD,MAAMzL,EAAEwL,MAAM6yD,EAAE/yD,MAAMtL,EAAEyL,MAAM4yD,EAAE9yD,cAAcozD,EAAEN,UAAU50C,SAAS40C,EAAE9lE,OAAO,EAAEwmE,MAAK,EAAGzzD,KAAK,EAAA,EAAIC,KAAK,EAAA,EAAIC,MAAK,EAAA,EAAKC,MAAK,EAAA,YAAe1F,EAAE/F,EAAE8+D,EAAEP,EAAEj5D,EAAEJ,WAAW+5D,EAAC,CAAEH,EAAEP,GAAGU,EAAExkE,QAAM,MAAQ8jE,EAAEU,EAAEloC,QAAQ+nC,EAAEG,EAAEloC,QAAQzxB,GAAC,KAAO45D,EAAEJ,EAAEr4D,KAAKsxC,MAAMwmB,EAAEO,GAAGx5D,EAAE,GAAGA,EAAEgP,EAAEtU,EAAEk/D,EAAEJ,EAAEP,EAAEr5D,GAAG+5D,EAAExjE,KAAKqjE,EAAEI,EAAEA,EAAEX,WAAWtrD,EAAElc,UAAU25D,IAAG,uBAAwByO,KAAItoE,KAAM0F,KAAI,KAAM0W,EAAElc,UAAUqoE,OAAM,SAAUf,OAAOr+D,EAACnJ,KAAM0F,KAAKuiE,EAAC,OAAQp5D,EAAE24D,EAAEr+D,GAAC,OAAS8+D,UAAUP,EAAC1nE,KAAMwoE,OAAO/5D,EAAC,GAAItF,GAAC,SAAWkF,EAAE,EAAEA,EAAElF,EAAEypB,SAAShvB,OAAOyK,IAAC,KAAQ+5D,EAAEj/D,EAAEypB,SAASvkB,GAAGo6D,EAAEt/D,EAAE++D,KAAKR,EAAEU,GAAGA,EAAEv5D,EAAE24D,EAAEiB,KAAKt/D,EAAE++D,KAAKD,EAAErjE,KAAKwjE,GAAGD,EAAEX,EAAEiB,GAACzoE,KAAOsoE,KAAKF,EAAEH,GAAGx5D,EAAE7J,KAAKwjE,IAAIj/D,EAAEsF,EAAEyxB,aAAa+nC,GAAG7rD,EAAElc,UAAUwoE,SAAQ,SAAUlB,OAAOr+D,EAACnJ,KAAM0F,SAASmJ,EAAE24D,EAAEr+D,GAAC,OAAQ,UAAW8+D,EAAC,GAAI9+D,GAAC,SAAWu+D,EAAE,EAAEA,EAAEv+D,EAAEypB,SAAShvB,OAAO8jE,IAAC,KAAQj5D,EAAEtF,EAAEypB,SAAS80C,GAAG/4D,EAAExF,EAAE++D,KAAIloE,KAAMwoE,OAAO/5D,GAAGA,KAAKI,EAAE24D,EAAE74D,GAAC,IAAMxF,EAAE++D,MAAMC,EAAEX,EAAE74D,GAAC,OAAQ,EAAGs5D,EAAErjE,KAAK6J,IAAItF,EAAE8+D,EAAE/nC,aAAY,GAAI9jB,EAAElc,UAAUomC,KAAI,SAAUkhC,OAAOA,IAAIA,EAAE5jE,OAAM,OAAA5D,QAAgBwnE,EAAE5jE,OAAM5D,KAAMgoE,YAAW,SAAU7+D,EAAE,EAAEA,EAAEq+D,EAAE5jE,OAAOuF,IAACnJ,KAAQ2oE,OAAOnB,EAAEr+D,oBAAoB8+D,EAACjoE,KAAM4oE,OAAOpB,EAAE1/D,QAAQ,EAAE0/D,EAAE5jE,OAAO,EAAE,WAAW8B,KAAKktB,SAAShvB,eAAe8B,KAAKhE,SAASumE,EAAEvmE,OAAM1B,KAAM6oE,WAAU7oE,KAAM0F,KAAKuiE,gBAAgBviE,KAAKhE,OAAOumE,EAAEvmE,OAAM,KAAMonE,EAAC9oE,KAAM0F,UAAUA,KAAKuiE,EAAEA,EAAEa,OAAOC,QAAQd,EAACjoE,KAAM0F,KAAKhE,OAAOumE,EAAEvmE,OAAO,GAAE,aAAcgE,KAAKuiE,eAAe7rD,EAAElc,UAAUyoE,OAAM,SAAUnB,UAAUA,GAACxnE,KAAO+oE,QAAQvB,EAACxnE,KAAM0F,KAAKhE,OAAO,GAAC1B,MAAQoc,EAAElc,UAAUsa,MAAK,uBAAwB9U,KAAKoiE,EAAC,IAAA9nE,MAAWoc,EAAElc,UAAUw9B,OAAM,SAAU8pC,EAAEwB,OAAOxB,EAAC,OAAAxnE,aAAqBioE,EAAEgB,EAAEC,EAAEC,EAACnpE,KAAM0F,KAAK0jE,EAACppE,KAAMwoE,OAAOhB,GAAG6B,EAAC,GAAIC,EAAC,GAAIH,GAAGE,EAAEzlE,QAAM,IAAMulE,IAAIA,EAAEE,EAAEnpC,MAAM+oC,EAAEI,EAAEA,EAAEzlE,OAAO,GAAGqkE,EAAEqB,EAAEppC,MAAMgpC,GAAE,GAAIC,EAAEjB,KAAI,KAAMx5D,EAAES,EAAEq4D,EAAE2B,EAAEv2C,SAASo2C,OAAM,IAAKt6D,EAAC,OAAQy6D,EAAEv2C,SAASpL,OAAO9Y,EAAE,GAAG26D,EAAEzkE,KAAKukE,GAACnpE,KAAOupE,UAAUF,GAACrpE,KAAOkpE,GAAGC,EAAEjB,OAAOC,EAAEgB,EAAEC,GAAGH,GAAGhB,IAAIkB,EAAEF,EAAEr2C,SAASq1C,GAAGiB,GAAE,GAAIC,EAAE,MAAME,EAAEzkE,KAAKukE,GAAGG,EAAE1kE,KAAKqjE,GAAGA,EAAE,EAAEgB,EAAEE,EAAEA,EAAEA,EAAEv2C,SAAS,iBAAiBxW,EAAElc,UAAUsoE,OAAM,SAAUhB,UAAUA,GAAGprD,EAAElc,UAAUspE,YAAW,SAAUhC,EAAEwB,UAAUxB,EAAE/yD,KAAKu0D,EAAEv0D,MAAM2H,EAAElc,UAAUupE,YAAW,SAAUjC,EAAEwB,UAAUxB,EAAE9yD,KAAKs0D,EAAEt0D,MAAM0H,EAAElc,UAAUwpE,OAAM,uBAAwBhkE,MAAM0W,EAAElc,UAAUypE,SAAQ,SAAUnC,eAAe9hE,KAAK8hE,EAACxnE,MAAOoc,EAAElc,UAAUooE,KAAI,SAAUd,EAAEwB,WAAWf,EAAC,GAAIT,GAAGA,EAAEU,KAAKc,EAAEpkE,KAAKkG,MAAMk+D,EAAExB,EAAE50C,UAAUq1C,EAAErjE,KAAKkG,MAAMm9D,EAAET,EAAE50C,UAAU40C,EAAES,EAAE/nC,aAAa8oC,GAAG5sD,EAAElc,UAAU0oE,OAAM,SAAUpB,EAAEwB,EAAEf,EAAEgB,OAAOl6D,EAAEo6D,EAAElB,EAAEe,EAAE,EAAEI,EAACppE,KAAM+nE,eAAeoB,GAAGC,EAAC,OAAQ3lE,EAAEsL,EAAE+4D,EAAEN,EAAE1/D,MAAMkhE,EAAEf,EAAE,IAACjoE,KAAQwoE,QAAQz5D,EAAEk6D,IAAIA,EAAEr5D,KAAKsxC,KAAKtxC,KAAK0N,IAAI6rD,GAAGv5D,KAAK0N,IAAI8rD,IAAIA,EAAEx5D,KAAKsxC,KAAKioB,EAAEv5D,KAAK06B,IAAI8+B,EAAEH,EAAE,MAAMl6D,EAAE+4D,EAAC,KAAMI,MAAK,EAAGn5D,EAAErN,OAAOunE,MAAMI,EAAEz5D,KAAKsxC,KAAKioB,EAAEC,GAAGE,EAAED,EAAEz5D,KAAKsxC,KAAKtxC,KAAK62B,KAAK2iC,IAAIl6D,EAAEs4D,EAAEwB,EAAEf,EAAEqB,EAACtpE,KAAMwpE,qBAAqBx6D,EAAEg6D,EAAEh6D,GAAGi5D,EAAEj5D,GAAGs6D,EAAC,KAAMM,EAAEh6D,KAAKuG,IAAInH,EAAEs6D,EAAE,EAAErB,GAAG/4D,EAAEs4D,EAAEx4D,EAAE46D,EAAEP,EAACrpE,KAAMypE,qBAAqBI,EAAE76D,EAAE66D,GAAGD,EAAEC,GAAGR,EAAC,KAAM96D,EAAEqB,KAAKuG,IAAI0zD,EAAER,EAAE,EAAEO,GAAG76D,EAAE6jB,SAAShuB,KAAI5E,KAAM4oE,OAAOpB,EAAEqC,EAAEt7D,EAAE06D,EAAE,YAAYxlE,EAAEsL,EAAC/O,KAAMwoE,QAAQz5D,GAAGqN,EAAElc,UAAU4pE,eAAc,SAAUtC,EAAEwB,EAAEf,EAAEgB,QAAQA,EAAErkE,KAAKokE,IAAIA,EAAEd,MAAMe,EAAErlE,OAAO,IAAIqkE,GAAC,SAAWl5D,EAAE,EAAA,EAAIm6D,EAAE,EAAA,EAAIC,OAAC,EAAQC,EAAE,EAAEA,EAAEJ,EAAEp2C,SAAShvB,OAAOwlE,IAAC,KAAQC,EAAEL,EAAEp2C,SAASw2C,GAAGE,EAAEl6D,EAAEi6D,GAAGU,GAAGC,EAAExC,EAAEyC,EAAEZ,GAAGz5D,KAAKwG,IAAI6zD,EAAEt1D,KAAKq1D,EAAEr1D,MAAM/E,KAAKuG,IAAI8zD,EAAEx1D,KAAKu1D,EAAEv1D,QAAQ7E,KAAKwG,IAAI6zD,EAAEr1D,KAAKo1D,EAAEp1D,MAAMhF,KAAKuG,IAAI8zD,EAAEv1D,KAAKs1D,EAAEt1D,OAAO40D,GAAGS,EAAEb,GAAGA,EAAEa,EAAEh7D,EAAEu6D,EAAEv6D,EAAEu6D,EAAEv6D,EAAEo6D,EAAEE,GAAGU,IAAIb,GAAGI,EAAEv6D,IAAIA,EAAEu6D,EAAEH,EAAEE,GAAGL,EAAEG,GAAGH,EAAEp2C,SAAS,OAAOo3C,EAAEC,SAASjB,GAAG5sD,EAAElc,UAAU6oE,QAAO,SAAUvB,EAAEwB,EAAEf,OAAOgB,EAAEhB,EAAET,EAACxnE,KAAMwoE,OAAOhB,GAAG0C,EAAC,GAAIC,EAACnqE,KAAM8pE,eAAeb,EAACjpE,KAAM0F,KAAKsjE,EAAEkB,OAAOC,EAAEv3C,SAAShuB,KAAK4iE,GAAGI,EAAEuC,EAAElB,GAAGD,GAAG,GAAGkB,EAAElB,GAAGp2C,SAAShvB,OAAM5D,KAAM+nE,aAAW/nE,KAAOoqE,OAAOF,EAAElB,GAAGA,SAASqB,oBAAoBpB,EAAEiB,EAAElB,IAAI5sD,EAAElc,UAAUkqE,OAAM,SAAU5C,EAAEwB,OAAOf,EAAET,EAAEwB,GAAGC,EAAEhB,EAAEr1C,SAAShvB,OAAOsmE,EAAClqE,KAAMgoE,iBAAiBsC,iBAAiBrC,EAAEiC,EAAEjB,OAAOsB,EAACvqE,KAAMwqE,kBAAkBvC,EAAEiC,EAAEjB,GAAGwB,EAAE3C,EAAEG,EAAEr1C,SAASpL,OAAO+iD,EAAEtC,EAAEr1C,SAAShvB,OAAO2mE,IAAIE,EAAE/oE,OAAOumE,EAAEvmE,OAAO+oE,EAAEvC,KAAKD,EAAEC,KAAKzkE,EAAEwkE,EAACjoE,KAAMwoE,QAAQ/kE,EAAEgnE,EAACzqE,KAAMwoE,QAAQQ,EAAExB,EAAEwB,EAAE,GAAGp2C,SAAShuB,KAAK6lE,GAACzqE,KAAO6oE,WAAWZ,EAAEwC,IAAIruD,EAAElc,UAAU2oE,WAAU,SAAUrB,EAAEwB,QAAQtjE,KAAKoiE,EAAC,CAAEN,EAAEwB,SAAStjE,KAAKhE,OAAO8lE,EAAE9lE,OAAO,EAAC1B,KAAM0F,KAAKwiE,MAAK,EAAGzkE,EAACzD,KAAM0F,KAAI1F,KAAMwoE,SAASpsD,EAAElc,UAAUsqE,kBAAiB,SAAUhD,EAAEwB,EAAEf,WAAWgB,EAAEiB,EAAEC,EAAEM,EAAEC,EAAEC,EAAEC,EAAEZ,EAAE,EAAA,EAAIC,EAAE,EAAA,EAAIY,EAAE7B,EAAE6B,GAAG5C,EAAEe,EAAE6B,IAAC,KAAQr8D,EAAE0iB,EAAEs2C,EAAE,EAAEqD,EAAC7qE,KAAMwoE,QAAQj5D,EAAE2hB,EAAEs2C,EAAEqD,EAAE5C,EAACjoE,KAAMwoE,QAAQsC,GAAGZ,EAAE17D,EAAE27D,EAAE56D,EAAsCk7D,EAAE76D,KAAKwG,IAAI8zD,EAAEz1D,KAAK01D,EAAE11D,MAAMi2D,EAAE96D,KAAKwG,IAAI8zD,EAAEx1D,KAAKy1D,EAAEz1D,MAAMi2D,EAAE/6D,KAAKuG,IAAI+zD,EAAEv1D,KAAKw1D,EAAEx1D,MAAMi2D,EAAEh7D,KAAKuG,IAAI+zD,EAAEt1D,KAAKu1D,EAAEv1D,MAAMhF,KAAKwG,IAAI,EAAEu0D,EAAEF,GAAG76D,KAAKwG,IAAI,EAAEw0D,EAAEF,IAAIK,EAAE37D,EAAEZ,GAAGY,EAAEG,GAAGu7D,EAAEd,GAAGA,EAAEc,EAAE7B,EAAE4B,EAAEZ,EAAEc,EAAEd,EAAEc,EAAEd,GAAGa,IAAId,GAAGe,EAAEd,IAAIA,EAAEc,EAAE9B,EAAE4B,UAAU5B,GAAGhB,EAAEe,GAAG5sD,EAAElc,UAAUoqE,iBAAgB,SAAU9C,EAAEwB,EAAEf,OAAOgB,EAAEzB,EAAEU,KAAIloE,KAAMwpE,YAAYttD,EAAEguD,EAAE1C,EAAEU,KAAIloE,KAAMypE,YAAY5vD,OAAOmxD,eAAexD,EAAEwB,EAAEf,EAAEgB,GAACjpE,KAAOgrE,eAAexD,EAAEwB,EAAEf,EAAEiC,IAAI1C,EAAE50C,SAASpvB,KAAKylE,IAAI7sD,EAAElc,UAAU8qE,eAAc,SAAUxD,EAAEwB,EAAEf,EAAEgB,GAAGzB,EAAE50C,SAASpvB,KAAKylE,WAAWiB,EAAClqE,KAAMwoE,OAAO2B,EAAEj5C,EAAEs2C,EAAE,EAAEwB,EAAEkB,GAAGQ,EAAEx5C,EAAEs2C,EAAES,EAAEe,EAAEf,EAAEiC,GAAGS,EAAE9C,EAAEsC,GAAGtC,EAAE6C,GAAG17D,EAAEg6D,EAAEh6D,EAAEi5D,EAAEe,EAAEh6D,IAAC,KAAQg7D,EAAExC,EAAE50C,SAAS5jB,GAAG44D,EAAEuC,EAAE3C,EAAEU,KAAKgC,EAAEF,GAAGA,GAAGW,GAAG9C,EAAEsC,WAAWF,EAAEhC,EAAEe,EAAE,EAAEiB,GAAGjB,EAAEiB,IAAC,KAAQY,EAAErD,EAAE50C,SAASq3C,GAAGrC,EAAE8C,EAAElD,EAAEU,KAAKgC,EAAEW,GAAGA,GAAGF,GAAG9C,EAAE6C,UAAUC,GAAGvuD,EAAElc,UAAUmqE,oBAAmB,SAAU7C,EAAEwB,EAAEf,WAAWgB,EAAEhB,EAAEgB,GAAG,EAAEA,IAAIrB,EAAEoB,EAAEC,GAAGzB,IAAIprD,EAAElc,UAAUqpE,UAAS,SAAU/B,WAAWwB,EAAExB,EAAE5jE,OAAO,EAAEqkE,OAAC,EAAQe,GAAG,EAAEA,IAAI,IAAIxB,EAAEwB,GAAGp2C,SAAShvB,OAAOolE,EAAE,GAAGf,EAAET,EAAEwB,EAAE,GAAGp2C,UAAUpL,OAAOygD,EAAEp8D,QAAQ27D,EAAEwB,IAAI,GAAChpE,KAAOwa,QAAQ/W,EAAE+jE,EAAEwB,GAAChpE,KAAOwoE,SAASpsD,oBAA3xMkrD,EAAAC,QAAoCD,EAAAC,QAAexjE,IAAC,mBAAsBknE,QAAQA,OAAOC,IAAID,OAAOlnE,IAAI0Z,EAAEA,GAAG1L,MAAMo5D,MAAMpnE,yNCmJzJqnE,EAAA,WAGK,SACHC,EAAY/yC,OACJh5B,EAAUg5B,GAAW,GAKxBt4B,KACE4/D,UAAY,KAKd5/D,KACEsrE,kBAAoBC,OAEA1oE,IAArBvD,EAAQmI,UAAsBzH,KAC3BwrE,YAAYlsE,EAAQmI,UAMxBzH,KACEyrE,WAAyB5oE,IAAjBvD,EAAQosE,KAAqBpsE,EAAQosE,KAAO,KAKtD1rE,KACE2rE,YAA2B9oE,IAAlBvD,EAAQssE,MAAsBtsE,EAAQssE,MAAQ,KAKzD5rE,KACEsf,eAAiCzc,IAArBvD,EAAQusE,SAAyBvsE,EAAQusE,SAAW,KAKlE7rE,KACE8rE,aAA6BjpE,IAAnBvD,EAAQysE,OAAuBzsE,EAAQysE,OAAS,KAK5D/rE,KACEgsE,WAAyBnpE,IAAjBvD,EAAQ8uB,KAAqB9uB,EAAQ8uB,KAAO,KAKtDpuB,KACEisE,QAAU3sE,EAAQqC,cAQzB0pE,EAAAnrE,UAAA0+B,MAAK,eACCn3B,EAAQzH,KAAQg+D,qBAChBv2D,GAA2B,iBAARA,IACrBA,EAAiEA,EAAUm3B,aAElEysC,EAAK,CACd5jE,SAAUA,EACVikE,KAAI1rE,KAAOksE,UAAOlsE,KAAUksE,UAAUttC,aAAU/7B,EAChD+oE,MAAK5rE,KAAOmsE,WAAQnsE,KAAUmsE,WAAWvtC,aAAU/7B,EACnDgpE,SAAQ7rE,KAAO2F,cACfomE,OAAM/rE,KAAOosE,YAASpsE,KAAUosE,YAAYxtC,aAAU/7B,EACtDurB,KAAIpuB,KAAOqsE,UAAOrsE,KAAUqsE,UAAUztC,aAAU/7B,EAChDlB,OAAM3B,KAAOqiB,eAUjBgpD,EAAAnrE,UAAAyF,YAAW,uBACG2Z,WASd+rD,EAAAnrE,UAAAosE,YAAW,SAACT,QACLvsD,UAAYusD,GAUnBR,EAAAnrE,UAAA89D,YAAW,uBACG4B,WASdyL,EAAAnrE,UAAAqsE,oBAAmB,uBACLjB,mBAQdD,EAAAnrE,UAAAgsE,QAAO,uBACOT,OAQdJ,EAAAnrE,UAAAssE,QAAO,SAACd,QACDD,MAAQC,GAQfL,EAAAnrE,UAAAisE,SAAQ,uBACMR,QAQdN,EAAAnrE,UAAAusE,SAAQ,SAACb,QACFD,OAASC,GAQhBP,EAAAnrE,UAAAksE,UAAS,uBACKN,SAQdT,EAAAnrE,UAAAwsE,UAAS,SAACX,QACHD,QAAUC,GAQjBV,EAAAnrE,UAAAmsE,QAAO,uBACOL,OAQdX,EAAAnrE,UAAAysE,QAAO,SAACv+C,QACD49C,MAAQ59C,GAQfi9C,EAAAnrE,UAAAmiB,UAAS,uBACK4pD,SAWdZ,EAAAnrE,UAAAsrE,YAAW,SAAC/jE,GACS,mBAARA,EAAuBzH,KAC3BsrE,kBAAoB7jE,EACD,iBAARA,EAAqBzH,KAChCsrE,kBAAiB,SAAa9jE,UAC4BA,EAAQ+K,IACnE9K,IAGMA,OAEY5E,IAAb4E,IAAsBzH,KAC1BsrE,kBAAiB,kBACyC7jE,IAJ7CzH,KACbsrE,kBAAoBC,OAMtB3L,UAAYn4D,GASnB4jE,EAAAnrE,UAAAmjB,UAAS,SAAC1hB,QACHsqE,QAAUtqE,GAEnB0pE,EA/OA,YAyPgBuB,EAAWhhE,OACrBihE,KAEU,mBAAHjhE,EACTihE,EAAgBjhE,OAIb,IACCkhE,KACApiE,MAAM8B,QAAQZ,GAChBkhE,EAASlhE,OAETgF,EAAAC,OAA+C,mBAAdjF,EAAKyW,UAA2B,IAEjEyqD,EAAM,CAD8BlhE,GAGtCihE,EAAa,kBACJC,UAGJD,EAKN,IACCE,EAAgB,cAOJC,EAAmBxlE,EAASV,OAMrCimE,EAAa,KACVrB,EAAI,IAAOuB,EAAA5sE,QAAI,CACnBwa,MAAK,0BAEDkxD,EAAM,IAAOmB,EAAA7sE,QAAM,CACvBwa,MAAK,UACLpZ,MAAO,OAETsrE,EAAa,KACP3B,EAAK,CACPQ,MAAK,IAAMuB,EAAA9sE,QAAW,CACpBqrE,KAAMA,EACNK,OAAQA,EACRptB,OAAQ,IAEV+sB,KAAMA,EACNK,OAAQA,YAIPgB,EAsEN,SACMxB,EAAwB/jE,UACxBA,EAAQw2D,kBAGjBoP,EAAehC,oiBCrcfiC,EArDA,SAAAjuE,GAGK,SACHkuE,EAAYh1C,OACJh5B,EAAUg5B,GAAyB,UAEzCl5B,EAAAW,KAAAC,KAAA,CACEutE,OAAQl4D,EAAAA,EACRq2D,KAAMpsE,EAAQosE,KACd/sB,OAAQr/C,EAAQq/C,OAChBotB,OAAQzsE,EAAQysE,OAChBrhD,WAAyB7nB,IAAlBvD,EAAQorB,MAAsBprB,EAAQorB,MAAQ,EACrD3jB,cAA+BlE,IAArBvD,EAAQyH,SAAyBzH,EAAQyH,SAAW,EAC9DymE,oBAC6B3qE,IAA3BvD,EAAQkuE,gBAA+BluE,EAAQkuE,eACjDC,kBAC2B5qE,IAAzBvD,EAAQmuE,aAA6BnuE,EAAQmuE,aAAY,CAAI,EAAG,kBAjB9CC,EAAAJ,EAAAluE,GA0BxBkuE,EAAAptE,UAAA0+B,MAAK,eACGlU,EAAK1qB,KAAQ2tE,WACbpsE,EAAK,IAAO+rE,EAAW,CAC3B5B,KAAI1rE,KAAOksE,UAAOlsE,KAAUksE,UAAUttC,aAAU/7B,EAChDkpE,OAAM/rE,KAAOosE,YAASpsE,KAAUosE,YAAYxtC,aAAU/7B,EACtD87C,OAAM3+C,KAAOinD,YACbv8B,MAAOhgB,MAAM8B,QAAQke,GAASA,EAAM5iB,QAAU4iB,EAC9C3jB,SAAQ/G,KAAOkuC,cACfs/B,eAAcxtE,KAAO4tE,oBACrBH,aAAYztE,KAAO6tE,kBAAkB/lE,iBAEvCvG,EAAM4hB,WAAUnjB,KAAMuiB,cACfhhB,GAST+rE,EAAAptE,UAAA4tE,UAAS,SAACnvB,QACHovB,QAAUpvB,OACVh6C,UAET2oE,EAnDA,CAA0BU,EAAA3tE,4mBC0iB1B4tE,EA5gBA,SAAA7uE,GAGK,SACH8uE,EAAY5uE,OAAZoB,EAAAV,KAIQwtE,OACuB3qE,IAA3BvD,EAAQkuE,gBAA+BluE,EAAQkuE,sBAEjD9sE,EAAAtB,EAAAW,KAAAC,KAAA,CACEuhB,QAAS,EACTisD,eAAgBA,EAChBzmE,cAA+BlE,IAArBvD,EAAQyH,SAAyBzH,EAAQyH,SAAW,EAC9D2jB,WAAyB7nB,IAAlBvD,EAAQorB,MAAsBprB,EAAQorB,MAAQ,EACrD+iD,kBAC2B5qE,IAAzBvD,EAAQmuE,aAA6BnuE,EAAQmuE,aAAY,CAAI,EAAG,YAO/DU,QAAO,GAMZztE,EAAK0tE,oBAAsB,KAM3B1tE,EAAK+qE,WAAyB5oE,IAAjBvD,EAAQosE,KAAqBpsE,EAAQosE,KAAO,KAMzDhrE,EAAK2tE,QAAO,CAAI,EAAG,GAMnB3tE,EAAKohE,QAAUxiE,EAAQiuE,OAMvB7sE,EAAKqtE,aACgBlrE,IAAnBvD,EAAQq/C,OAAuBr/C,EAAQq/C,OAASr/C,EAAQgvE,QAM1D5tE,EAAK6tE,SAAWjvE,EAAQkvE,QAMxB9tE,EAAKqhE,YAA2Bl/D,IAAlBvD,EAAQoQ,MAAsBpQ,EAAQoQ,MAAQ,EAM5DhP,EAAKorE,aAA6BjpE,IAAnBvD,EAAQysE,OAAuBzsE,EAAQysE,OAAS,KAM/DrrE,EAAK0jE,QAAU,KAMf1jE,EAAK+tE,MAAQ,KAMb/tE,EAAKguE,WAAa,KAMlBhuE,EAAKiuE,uBAAyB,KAE9BjuE,EAAKiE,kBAnGkBiqE,EAAAV,EAAA9uE,GA2GzB8uE,EAAAhuE,UAAA0+B,MAAK,eACGlU,EAAK1qB,KAAQ2tE,WACbpsE,EAAK,IAAO2sE,EAAY,CAC5BxC,KAAI1rE,KAAOksE,UAAOlsE,KAAUksE,UAAUttC,aAAU/7B,EAChD0qE,OAAMvtE,KAAO6uE,YACblwB,OAAM3+C,KAAOinD,YACbunB,QAAOxuE,KAAO8uE,aACdp/D,MAAK1P,KAAO06D,WACZqR,OAAM/rE,KAAOosE,YAASpsE,KAAUosE,YAAYxtC,aAAU/7B,EACtDkE,SAAQ/G,KAAOkuC,cACfs/B,eAAcxtE,KAAO4tE,oBACrBljD,MAAOhgB,MAAM8B,QAAQke,GAASA,EAAM5iB,QAAU4iB,EAC9C+iD,aAAYztE,KAAO6tE,kBAAkB/lE,iBAEvCvG,EAAM4hB,WAAUnjB,KAAMuiB,cACfhhB,GAST2sE,EAAAhuE,UAAA6uE,UAAS,uBACK3K,SAQd8J,EAAAhuE,UAAAw6D,SAAQ,uBACMqH,QAQdmM,EAAAhuE,UAAAgsE,QAAO,uBACOT,OAMdyC,EAAAhuE,UAAA8uE,qBAAoB,oBACRZ,oBAAmB,KACrBa,EAAajvE,KAAQkvE,2BAEtBC,0BAA0BF,eAErBb,qBASdF,EAAAhuE,UAAAisE,SAAQ,SAAC13C,YACG05C,QAAQ15C,GAAc,GAAC,KACzBw6C,EAAajvE,KAAQkvE,sBAErBtjD,EAAU9mB,EAAAkrB,sBACdi/C,EAAcpoE,KAAO4tB,GAAc,EACnCw6C,EAAcpoE,KAAO4tB,GAAc,QAGhC26C,MAAMH,EAAerjD,EAAS,EAAG,EAAG6I,GAAc,QAElD05C,QAAQ15C,GAAc,GAAK7I,EAAQoG,mBAE9Bm8C,QAAQ15C,GAAc,IAQpCy5C,EAAAhuE,UAAAmvE,cAAa,SAAC56C,UACLA,GAMTy5C,EAAAhuE,UAAAovE,aAAY,uBACEZ,YAMdR,EAAAhuE,UAAAqvE,yBAAwB,uBACVZ,wBAMdT,EAAAhuE,UAAAsvE,cAAa,kBACJC,EAAApvE,QAAW0lC,QAQpBmoC,EAAAhuE,UAAAwvE,UAAS,uBACKrB,SAQdH,EAAAhuE,UAAA2uE,UAAS,uBACK/M,SAQdoM,EAAAhuE,UAAA+mD,UAAS,uBACK8mB,SAQdG,EAAAhuE,UAAA4uE,WAAU,uBACIP,UAQdL,EAAAhuE,UAAAi6B,QAAO,uBACOs0C,OAQdP,EAAAhuE,UAAAksE,UAAS,uBACKN,SAMdoC,EAAAhuE,UAAAyvE,kBAAiB,SAAC7pD,KAKlBooD,EAAAhuE,UAAAomC,KAAI,aAKJ4nC,EAAAhuE,UAAA0vE,oBAAmB,SAAC9pD,KAMpBooD,EAAAhuE,UAAAgvE,oBAAmB,eAMbW,EALAC,EAAUhvE,EAAAivE,eACVC,EAAWlvE,EAAAmvE,gBACXC,EAAa,EACbC,EAAW,KACXC,EAAiB,EAEjBC,EAAc,cAETvE,UAEa,QADpB+D,EAAW7vE,KAAQ8rE,QAAQwE,cAEzBT,EAAc/uE,EAAAyvE,oBAEhBV,EAAcW,EAAAC,YAAYZ,QAENhtE,KADpBwtE,EAAWrwE,KAAQ8rE,QAAQzjE,cAEzBgoE,EAAcvvE,EAAA4vE,kBAEhBP,EAAQnwE,KAAQ8rE,QAAQ6E,cACxBP,EAAcpwE,KAAQ8rE,QAAQ8E,yBAEb/tE,KADjBmtE,EAAQhwE,KAAQ8rE,QAAQ+E,iBAEtBb,EAAWlvE,EAAAmvE,sBAGGptE,KADhBitE,EAAO9vE,KAAQ8rE,QAAQgF,gBAErBhB,EAAUhvE,EAAAivE,qBAGOltE,KADnBqtE,EAAUlwE,KAAQ8rE,QAAQiF,mBAExBb,EAAapvE,EAAAkwE,qBAOfnB,YAAaA,EACbQ,YAAaA,EACbxpE,KALW,GAAC7G,KAAS+tE,QAAUsC,GAAe,EAM9CP,QAASA,EACTK,SAAUA,EACVC,eAAgBA,EAChBJ,SAAUA,EACVE,WAAYA,IAOhBhC,EAAAhuE,UAAAyE,OAAM,eACEsqE,EAAajvE,KAAQkvE,sBAErBtjD,EAAU9mB,EAAAkrB,sBACdi/C,EAAcpoE,KACdooE,EAAcpoE,WAGXuoE,MAAMH,EAAerjD,EAAS,EAAG,EAAG,QAEpCuiD,QAAO,QACPA,QAAQ,GAAKviD,EAAQoG,WAGpBnrB,EAAO+kB,EAAQoG,OAAOvwB,MACtBwvE,EAAYpqE,EACZ4mE,EAAYztE,KAAQ6tE,uBAErBc,uBAAsB,CAAIM,EAAcpoE,KAAMooE,EAAcpoE,WAC5DsoE,0BAA0BF,QAE1B7K,QAAO,CAAIv9D,EAAO,EAAI4mE,EAAa,GAAI5mE,EAAO,EAAI4mE,EAAa,SAC/DgB,MAAK,CAAI5nE,EAAMA,QACf6nE,WAAU,CAAIuC,EAAWA,IAWhC/C,EAAAhuE,UAAAkvE,MAAK,SAACH,EAAerjD,EAASrc,EAAGC,EAAGilB,OAC9B1wB,EAAGmtE,EAAQC,EAGfvlD,EAAQyF,aAAaoD,EAAY,EAAG,EAAGA,EAAY,EAAG,GAGtD7I,EAAQ+E,UAAUphB,EAAGC,GAErBoc,EAAQwlD,gBAEJ7D,EAAMvtE,KAAQ8hE,WACdyL,IAAWl4D,EAAAA,EACbuW,EAAQylD,IACNpC,EAAcpoE,KAAO,EACrBooE,EAAcpoE,KAAO,EAAC7G,KACjB+tE,QACL,EACA,EAAIn+D,KAAKwO,IACT,YAGIowD,OACc3rE,IADP7C,KACNuuE,SAAsBvuE,KAAQuuE,SAAQvuE,KAAQ+tE,YACjDS,IAAOxuE,KAAU+tE,UACnBR,GAAS,GAENxpE,EAAI,EAAGA,GAAKwpE,EAAQxpE,IACvBmtE,EAAc,EAAJntE,EAAQ6L,KAAKwO,GAAMmvD,EAAS39D,KAAKwO,GAAK,EAACpe,KAAQ+hE,OACzDoP,EAAUptE,EAAI,GAAM,EAAC/D,KAAQ+tE,QAAUS,EACvC5iD,EAAQ0lD,OACNrC,EAAcpoE,KAAO,EAAIsqE,EAAUvhE,KAAKD,IAAIuhE,GAC5CjC,EAAcpoE,KAAO,EAAIsqE,EAAUvhE,KAAKC,IAAIqhE,YAKzCzF,MAAK,KACR5wD,EAAK7a,KAAQyrE,MAAM6E,WACT,OAAVz1D,IACFA,EAAQ/Z,EAAAywE,kBAEV3lD,EAAQ4lD,UAAYhB,EAAAC,YAAY51D,GAChC+Q,EAAQ8/C,YAEDI,UACPlgD,EAAQikD,YAAcZ,EAAcY,YACpCjkD,EAAQ6lD,UAAYxC,EAAcoB,YAC9BzkD,EAAQ8lD,aAAezC,EAAckB,WACvCvkD,EAAQ8lD,YAAYzC,EAAckB,UAClCvkD,EAAQwkD,eAAiBnB,EAAcmB,gBAEzCxkD,EAAQkkD,QAAUb,EAAca,QAChClkD,EAAQokD,SAAWf,EAAce,SACjCpkD,EAAQskD,WAAajB,EAAciB,WACnCtkD,EAAQmgD,UAEVngD,EAAQ+lD,aAOVzD,EAAAhuE,UAAAivE,0BAAyB,SAACF,WACnBb,oBAAmBpuE,KAAQmsE,SAAS,QAChCV,MAAK,KACR5wD,EAAK7a,KAAQyrE,MAAM6E,WAGnB/uD,EAAU,KACE,iBAAL1G,IACTA,EAAQK,EAAA02D,QAAQ/2D,IAEJ,OAAVA,EACF0G,EAAU,EACD7W,MAAM8B,QAAQqO,KACvB0G,EAA2B,IAAjB1G,EAAMjX,OAAeiX,EAAM,GAAK,GAE5B,IAAZ0G,EAAa,KAGTqK,EAAU9mB,EAAAkrB,sBACdi/C,EAAcpoE,KACdooE,EAAcpoE,WAEXunE,oBAAsBxiD,EAAQoG,YAE9B6/C,wBAAwB5C,EAAerjD,EAAS,EAAG,MAY9DsiD,EAAAhuE,UAAA2xE,wBAAuB,SAAC5C,EAAerjD,EAASrc,EAAGC,GAEjDoc,EAAQ+E,UAAUphB,EAAGC,GAErBoc,EAAQwlD,gBAEJ7D,EAAMvtE,KAAQ8hE,WACdyL,IAAWl4D,EAAAA,EACbuW,EAAQylD,IACNpC,EAAcpoE,KAAO,EACrBooE,EAAcpoE,KAAO,EAAC7G,KACjB+tE,QACL,EACA,EAAIn+D,KAAKwO,IACT,YAGIowD,OACc3rE,IADP7C,KACNuuE,SAAsBvuE,KAAQuuE,SAAQvuE,KAAQ+tE,QACjDS,IAAOxuE,KAAU+tE,UACnBR,GAAS,OAEPxpE,OAAC,EAAEotE,OAAO,EAAED,OAAM,MACjBntE,EAAI,EAAGA,GAAKwpE,EAAQxpE,IACvBmtE,EAAc,EAAJntE,EAAQ6L,KAAKwO,GAAMmvD,EAAS39D,KAAKwO,GAAK,EAACpe,KAAQ+hE,OACzDoP,EAAUptE,EAAI,GAAM,EAAC/D,KAAQ+tE,QAAUS,EACvC5iD,EAAQ0lD,OACNrC,EAAcpoE,KAAO,EAAIsqE,EAAUvhE,KAAKD,IAAIuhE,GAC5CjC,EAAcpoE,KAAO,EAAIsqE,EAAUvhE,KAAKC,IAAIqhE,IAKlDtlD,EAAQ4lD,UAAY1wE,EAAAywE,iBACpB3lD,EAAQ8/C,YACCI,UACPlgD,EAAQikD,YAAcZ,EAAcY,YACpCjkD,EAAQ6lD,UAAYxC,EAAcoB,YAC9BpB,EAAckB,WAChBvkD,EAAQ8lD,YAAYzC,EAAckB,UAClCvkD,EAAQwkD,eAAiBnB,EAAcmB,gBAEzCxkD,EAAQmgD,UAEVngD,EAAQ+lD,aAEZzD,EA1gBA,CAA2B4D,EAAAzxE,iFChD3B0xE,EAME,CALA1rC,KAAM,EACNrc,QAAS,EACT+b,OAAQ,EACR5d,MAAO,EACP6d,MAAO,qGC0QTgsC,EA/PA,WAGK,SACHC,EAAY3yE,GAIPU,KACEkyE,SAAW5yE,EAAQiiB,QAKrBvhB,KACEmyE,gBAAkB7yE,EAAQkuE,eAK5BxtE,KACEu1D,UAAYj2D,EAAQyH,SAKtB/G,KACEoyE,OAAS9yE,EAAQorB,MAKnB1qB,KACEqyE,YAAct0C,EAAAu0C,OAAOhzE,EAAQorB,OAK/B1qB,KACEuyE,cAAgBjzE,EAAQmuE,oBAQ/BwE,EAAA/xE,UAAA0+B,MAAK,eACGlU,EAAK1qB,KAAQ2tE,sBACRsE,EAAU,CACnB1wD,QAAOvhB,KAAOuiB,aACdmI,MAAOhgB,MAAM8B,QAAQke,GAASA,EAAM5iB,QAAU4iB,EAC9C3jB,SAAQ/G,KAAOkuC,cACfs/B,eAAcxtE,KAAO4tE,oBACrBH,aAAYztE,KAAO6tE,kBAAkB/lE,WASzCmqE,EAAA/xE,UAAAqiB,WAAU,uBACI2vD,UAQdD,EAAA/xE,UAAA0tE,kBAAiB,uBACHuE,iBAQdF,EAAA/xE,UAAAguC,YAAW,uBACGqnB,WAQd0c,EAAA/xE,UAAAytE,SAAQ,uBACMyE,QAOdH,EAAA/xE,UAAAsyE,cAAa,uBACCH,aAQdJ,EAAA/xE,UAAA2tE,gBAAe,uBACD0E,eASdN,EAAA/xE,UAAA6uE,UAAS,kBACAxoE,EAAAC,YASTyrE,EAAA/xE,UAAAisE,SAAQ,SAAC13C,UACAluB,EAAAC,YAOTyrE,EAAA/xE,UAAA8uE,qBAAoB,kBACXzoE,EAAAC,YAQTyrE,EAAA/xE,UAAAmvE,cAAa,SAAC56C,UACL,GAOTw9C,EAAA/xE,UAAAsvE,cAAa,kBACJjpE,EAAAC,YAOTyrE,EAAA/xE,UAAAovE,aAAY,kBACH/oE,EAAAC,YAOTyrE,EAAA/xE,UAAAqvE,yBAAwB,kBACfhpE,EAAAC,YAQTyrE,EAAA/xE,UAAAwvE,UAAS,kBACAnpE,EAAAC,YAQTyrE,EAAA/xE,UAAAi6B,QAAO,kBACE5zB,EAAAC,YASTyrE,EAAA/xE,UAAAijB,WAAU,SAAC5B,QACJ2wD,SAAW3wD,GASlB0wD,EAAA/xE,UAAAuyE,kBAAiB,SAACjF,QACX2E,gBAAkB3E,GASzByE,EAAA/xE,UAAAmtC,YAAW,SAACtmC,QACLwuD,UAAYxuD,GAQnBkrE,EAAA/xE,UAAAwyE,SAAQ,SAAChoD,QACF0nD,OAAS1nD,OACT2nD,YAAct0C,EAAAu0C,OAAO5nD,IAO5BunD,EAAA/xE,UAAAyvE,kBAAiB,SAAC7pD,GAChBvf,EAAAC,YAOFyrE,EAAA/xE,UAAAomC,KAAI,WACF//B,EAAAC,YAOFyrE,EAAA/xE,UAAA0vE,oBAAmB,SAAC9pD,GAClBvf,EAAAC,YAEJyrE,EA7PA,qGCDgBU,EAAY93D,UACtBnQ,MAAM8B,QAAQqO,GACTK,EAAAuc,SAAS5c,GAETA,uECXR,IA+CH+3D,EA9CA,WAGK,SACHC,EAAYv6C,OACJh5B,EAAUg5B,GAAW,GAKxBt4B,KACE8yE,YAA2BjwE,IAAlBvD,EAAQub,MAAsBvb,EAAQub,MAAQ,YAQ9Dg4D,EAAA3yE,UAAA0+B,MAAK,eACG/jB,EAAK7a,KAAQswE,sBACRuC,EAAI,CACbh4D,MAAOnQ,MAAM8B,QAAQqO,GAASA,EAAM/S,QAAU+S,QAAShY,KAS3DgwE,EAAA3yE,UAAAowE,SAAQ,uBACMwC,QASdD,EAAA3yE,UAAA6yE,SAAQ,SAACl4D,QACFi4D,OAASj4D,GAElBg4D,EA5CA,uECUG,IAiNHG,EAhNA,WAGK,SACHC,EAAY36C,OACJh5B,EAAUg5B,GAAW,GAKxBt4B,KACE8yE,YAA2BjwE,IAAlBvD,EAAQub,MAAsBvb,EAAQub,MAAQ,KAKzD7a,KACEkzE,SAAW5zE,EAAQwwE,QAKrB9vE,KACEmzE,eAAiCtwE,IAArBvD,EAAQ6wE,SAAyB7wE,EAAQ6wE,SAAW,KAKlEnwE,KACEozE,gBAAkB9zE,EAAQ8wE,eAK5BpwE,KACEqzE,UAAY/zE,EAAQ0wE,SAKtBhwE,KACEszE,YAAch0E,EAAQ4wE,WAKxBlwE,KACEuzE,OAASj0E,EAAQmC,aAQxBwxE,EAAA/yE,UAAA0+B,MAAK,eACG/jB,EAAK7a,KAAQswE,sBACR2C,EAAM,CACfp4D,MAAOnQ,MAAM8B,QAAQqO,GAASA,EAAM/S,QAAU+S,QAAShY,EACvDitE,QAAO9vE,KAAO8wE,aACdX,SAAQnwE,KAAO2wE,cAAW3wE,KAAU2wE,cAAc7oE,aAAUjF,EAC5DutE,eAAcpwE,KAAO4wE,oBACrBZ,SAAQhwE,KAAO6wE,cACfX,WAAUlwE,KAAO+wE,gBACjBtvE,MAAKzB,KAAOqI,cAShB4qE,EAAA/yE,UAAAowE,SAAQ,uBACMwC,QAQdG,EAAA/yE,UAAA4wE,WAAU,uBACIoC,UAQdD,EAAA/yE,UAAAywE,YAAW,uBACGwC,WAQdF,EAAA/yE,UAAA0wE,kBAAiB,uBACHwC,iBAQdH,EAAA/yE,UAAA2wE,YAAW,uBACGwC,WAQdJ,EAAA/yE,UAAA6wE,cAAa,uBACCuC,aAQdL,EAAA/yE,UAAAmI,SAAQ,uBACMkrE,QASdN,EAAA/yE,UAAA6yE,SAAQ,SAACl4D,QACFi4D,OAASj4D,GAShBo4D,EAAA/yE,UAAAszE,WAAU,SAAC1D,QACJoD,SAAWpD,GAelBmD,EAAA/yE,UAAAwxE,YAAW,SAACvB,QACLgD,UAAYhD,GASnB8C,EAAA/yE,UAAAuzE,kBAAiB,SAACrD,QACXgD,gBAAkBhD,GASzB6C,EAAA/yE,UAAAwzE,YAAW,SAAC1D,QACLqD,UAAYrD,GASnBiD,EAAA/yE,UAAAyzE,cAAa,SAACzD,QACPoD,YAAcpD,GASrB+C,EAAA/yE,UAAA0zE,SAAQ,SAACnyE,QACF8xE,OAAS9xE,GAElBwxE,EA9MA,uqBCguBAY,EA7sBA,SAAAz0E,GAGK,SACH00E,EAAYC,OAAZrzE,EACEtB,EAAAW,KAAAC,KAAM+zE,IAAW/zE,YAGjBU,EAAKszE,6BAA+BtzE,EAAKuzE,wBAAwB9yE,KAAKT,GAKtEA,EAAKwzE,wBAMLxzE,EAAKyzE,QAAS,EAKdzzE,EAAK0zE,uBAAyB,KAK9B1zE,EAAK2zE,kBAAoB,KAMzB3zE,EAAK4zE,mBAAoB,EAMzB5zE,EAAK6zE,oBAAsBvqB,IAM3BtpD,EAAK8zE,gBAAkBpsE,EAAAihD,cAMvB3oD,EAAK+zE,kBAML/zE,EAAKg0E,gBAAkB,KAMvBh0E,EAAKi0E,oBAAsB,KAM3Bj0E,EAAKk0E,qBAAuB,KAM5Bl0E,EAAKm0E,aAAe,KAMpBn0E,EAAKo0E,oBAAqB,EAK1Bp0E,EAAKq0E,uBAAyB,KAM9Br0E,EAAKs0E,UAAW,WA9FoBC,EAAAnB,EAAA10E,GAuGtC00E,EAAA5zE,UAAAg1E,aAAY,SAACnpE,EAAQiC,EAAWuT,GAC1BA,EAAU,IACZxV,EAAS,MAEX3M,EAAAc,UAAMg1E,aAAYn1E,KAAAC,KAAC+L,EAAQiC,EAAWuT,IAQxCuyD,EAAA5zE,UAAAi1E,aAAY,SAACC,EAAe5yE,EAAY6yE,OAChC5hE,EAASjR,EAAWiR,OACpB9P,EAAYnB,EAAWmB,UACvBqD,EAASrD,EAAUqD,OACnBF,EAAanD,EAAUmD,WACvBY,EAAa/D,EAAU+D,WACvBX,EAAWpD,EAAUoD,SACrBkB,EAAmBP,EAAWQ,YAC9BotE,EAAYt1E,KAAQu1E,WAAW3sE,YAC/B6rB,EAAajyB,EAAWiyB,WACxBuH,EAAYx5B,EAAWw5B,UACvBw5C,IACJx5C,EAAUC,EAAA57B,QAAS67B,YAAcF,EAAUC,EAAA57B,QAAS87B,cAEhDvQ,EAAO5rB,KAAQ4rB,QACfnqB,EAAQmO,KAAK0S,MAAM9f,EAAWqE,KAAK,GAAK4tB,GACxC/yB,EAASkO,KAAK0S,MAAM9f,EAAWqE,KAAK,GAAK4tB,GAEzCuU,EAAassC,EAAaxsE,YAAcpB,EAAWM,WACnDG,EAAa6gC,EAAa5gC,EAAAC,SAASJ,GAAoB,KACvDwtE,EAAWzsC,EACbp5B,KAAKsxC,MAAMztC,EAAO,GAAKxL,EAAiB,IAAME,GAAc,EAC5D,EACAutE,EAAQ1sC,EACRp5B,KAAKoK,OAAOvG,EAAO,GAAKxL,EAAiB,IAAME,GAC/C,SAEI6F,EAAShO,KAAQ21E,mBACrB3uE,EACAF,EACAC,EACA0tB,EACAhzB,EACAC,EACAg0E,EAAQvtE,GAEVitE,EAAcQ,QACZhqD,EACA,EACA5d,EACAjH,EACAyuE,OACA3yE,EACAwyE,WAEOK,EAAQD,IAOrB3B,EAAA5zE,UAAA2E,gBAAe,SAACrC,QACLuyE,wBAAsB/0E,KACxBm1E,aAAYn1E,KACV+0E,uBACLvyE,EACAA,EAAW27B,gBAWjB21C,EAAA5zE,UAAAiD,YAAW,SAACX,EAAYuJ,OAChB0oB,EAAajyB,EAAWiyB,WACxBxwB,EAAazB,EAAWe,iBAAiBf,EAAW0B,YAG1DyC,EAAAkvE,UAAS71E,KAAM81E,eAAgB,EAAIrhD,EAAY,EAAIA,GACnD9tB,EAAAM,YAAWjH,KAAM2rB,sBAAqB3rB,KAAO81E,oBAEvCC,EAAkBpvE,EAAA8wB,SAAiBz3B,KAAM81E,qBAE1CZ,aAAanpE,EAAQgqE,EAAiB9xE,EAAWsd,aAChDqK,EAAO5rB,KAAQ4rB,QACfoG,EAASpG,EAAQoG,OAEjBgkD,EAAWh2E,KAAQ60E,aACnBE,EAAsB/0E,KAAQ+0E,4BAEhCiB,GAAeA,EAAYpxD,cAC3BmwD,GAA0BA,EAAuBnwD,uBAEzCqxD,iBAAmBjkD,EAAOvwB,MAAQ,IAC1CuwB,EAAOvwB,MAAQ,QAELM,cAIRN,EAAQmO,KAAK0S,MAAM9f,EAAWqE,KAAK,GAAK4tB,GACxC/yB,EAASkO,KAAK0S,MAAM9f,EAAWqE,KAAK,GAAK4tB,GAC3CzC,EAAOvwB,OAASA,GAASuwB,EAAOtwB,QAAUA,GAC5CswB,EAAOvwB,MAAQA,EACfuwB,EAAOtwB,OAASA,EACZswB,EAAOzwB,MAAMyM,YAAc+nE,IAC7B/jD,EAAOzwB,MAAMyM,UAAY+nE,SAEZE,iBACfrqD,EAAQsqD,UAAU,EAAG,EAAGz0E,EAAOC,QAG5By0E,UAAUvqD,EAASppB,OAElBmB,EAAYnB,EAAWmB,UACvB+D,EAAa/D,EAAU+D,WAGzB0uE,GAAU,KACVnyE,EAAWwP,QAAMzT,KAASg1E,SAAQ,KAC9BqB,EAAc78C,EAAAgT,eAAevoC,EAAWwP,OAAQ/L,IACtD0uE,GACGhuE,EAAAunD,eAAe0mB,EAAa7zE,EAAWiR,SACxCrL,EAAA4Q,WAAiBq9D,EAAa7zE,EAAWiR,UAChCzT,KACJs2E,cAAc1qD,EAASppB,EAAY6zE,QAIvClB,aAAaa,EAAaxzE,GAE3B4zE,GACFxqD,EAAQ8F,eAGL6kD,WAAW3qD,EAASppB,OAEnB+e,EAAUtd,EAAWsd,QACrBxf,EAAS/B,KAAQ+B,iBACnBwf,IAAY2d,WAAWn9B,EAAUR,MAAMggB,WACzCxf,EAAUR,MAAMggB,QAAsB,IAAZA,EAAa,GAAQ7T,OAAO6T,SAG/CkzD,oBAAsB9wE,EAAUoD,gBAClC0tE,kBAAoB9wE,EAAUoD,cAC9BqtE,uBAAyB,WAEpBryE,WAQd+xE,EAAA5zE,UAAA0gB,YAAW,SAACxb,cACCyb,QAIN,SACOC,YACEszD,yBAAsBp0E,KAAUk0E,wBAAuB,KACzDrtE,EAAI,MAAS+kB,QAAQoG,OAAOvwB,WAAYmqB,QAAQoG,OAAOtwB,QAC7DiF,EAAAmE,MAAK9K,KAAM81E,eAAgBjvE,OACrBG,EAAMhH,KAAQ00E,gBACd5tE,EAAU9G,KAAQu0E,oBAClBxtE,EAAQ/G,KAAQy0E,kBAChB/sE,EAAU1H,KAAQ20E,oBAClBlhE,EAAMzT,KAAQw0E,gBACd/vE,EAAKzE,KAAQu1E,WACbiB,EAAU,GACV/0E,EAAQoF,EAAK,GAAK4vE,EAAAC,sBAClBh1E,EAASmF,EAAK,GAAK4vE,EAAAC,sBACzBF,EAAW5xE,KAAI5E,KACR21E,mBACH3uE,EACAF,EACAC,EACA0vE,EAAAC,sBACAj1E,EACAC,EACA,GACAoG,aAEEa,EAASlE,EAAMmE,YACfX,EAAmBP,EAAWQ,eAElCS,EAAOG,YACPpB,EAAWM,aACVI,EAAAunD,eAAe1nD,EAAkBwL,GAAM,SAEpC0F,EAAS1F,EAAO,GACdtL,EAAaC,EAAAC,SAASJ,GACxBytE,EAAQ,EACRjlD,OAAO,EACJtX,EAASlR,EAAiB,IAE/BwoB,EAAUtoB,IADRutE,EAEFc,EAAW5xE,KAAI5E,KACR21E,mBACH3uE,EACAF,EACAC,EACA0vE,EAAAC,sBACAj1E,EACAC,EACA+uB,GACA3oB,SAEJqR,GAAUhR,MAEZutE,EAAQ,EACRv8D,EAAS1F,EAAO,GACT0F,EAASlR,EAAiB,IAE/BwoB,EAAUtoB,IADRutE,EAEFc,EAAW5xE,KAAI5E,KACR21E,mBACH3uE,EACAF,EACAC,EACA0vE,EAAAC,sBACAj1E,EACAC,EACA+uB,GACA3oB,SAEJqR,GAAUhR,OAITisE,uBAAyBqC,EAAAE,4BAC5B9vE,EACA2vE,EAAUx2E,KACLq0E,kBACL5vE,EAAMkiE,mBACNlzD,EACA3M,EACAC,GAGJ+Z,EACE21D,EAAAG,UAAUxxE,EAAKpF,KAAOq0E,kBAAiBr0E,KAAOo0E,0BAEhDjzE,KAAInB,QAaV8zE,EAAA5zE,UAAAgH,2BAA0B,SACxBC,EACA3E,EACA6C,EACAC,EACAiD,OALF7H,EAAAV,aAOY60E,kBA6CNhvE,EA1CEiB,EAAatE,EAAWmB,UAAUmD,WAClCC,EAAWvE,EAAWmB,UAAUoD,SAChCtC,EAAKzE,KAAQu1E,WAGb98C,EAAQ,GAQRo+C,EAAe,SAAarvE,EAASC,EAAU2B,OAC7CqR,EAAMlU,EAAAwd,OAAOvc,GACb+kB,EAAQkM,EAAShe,MAClB8R,OAcgB,IAAVA,GAAkBnjB,EAAamjB,EAAMnjB,WAAU,IACrC,IAAfA,SACFqvB,EAAShe,IAAO,EAChBlS,EAAQif,OAAOjf,EAAQuuE,YAAYvqD,GAAQ,GACpCjnB,EAASkC,EAAS/C,EAAOgD,GAElC8kB,EAAM9kB,SAAWA,EACjB8kB,EAAMnjB,WAAaA,OArBX,IACW,IAAfA,SACFqvB,EAAShe,IAAO,EACTnV,EAASkC,EAAS/C,EAAOgD,GAElCc,EAAQ3D,KACL6zB,EAAShe,GAAG,CACXjT,QAASA,EACT/C,MAAOA,EACPgD,SAAUA,EACV2B,WAAYA,EACZ9D,SAAUA,MAgBZyxE,EAAc,MAASlC,0BACpBE,wBACPgC,EAAenyE,KAAI5E,KAAM+0E,wBAE3BgC,EAAe1tE,MAAI,SAAE+rE,UACXvvE,EAASuvE,EAAcluE,2BAC7BC,EACAL,EACAC,EACA1B,EACAwxE,EACAzB,IAAkB10E,EAAKq0E,uBACnBvyE,EAAW27B,cAAc07B,MAAMp5D,KAAG,SAAE2/B,UAASA,EAAKvsB,SAClD,SAIDhO,IAMTiuE,EAAA5zE,UAAAq9B,mBAAkB,eACV94B,EAAKzE,KAAQu1E,WACf9wE,EAAM+d,cAAUxiB,KAAW60E,cAC7BpwE,EAAMgc,WASVqzD,EAAA5zE,UAAA+zE,wBAAuB,SAACltD,QACjBiwD,2BAQPlD,EAAA5zE,UAAA6gB,aAAY,SAACve,OACLuxE,EAAW/zE,KAAQu1E,WACnBD,EAAevB,EAAYnrE,gBAC5B0sE,EAAY,OACR,MAGH2B,EAAYz0E,EAAWw5B,UAAUC,EAAA57B,QAAS67B,WAC1Cg7C,EAAc10E,EAAWw5B,UAAUC,EAAA57B,QAAS87B,aAC5CypC,EAAuBmO,EAAYnN,0BACnCf,EAAyBkO,EAAYlN,qCAGlCsN,SAAWvO,GAAwBqR,IACxCpR,GAA0BqR,cAEvBhD,yBAA0B,GACxB,OAEJA,yBAA0B,MAEzBiD,EAAmB30E,EAAWiR,OAC9B9P,EAAYnB,EAAWmB,UACvB+D,EAAa/D,EAAU+D,WACvBZ,EAAanD,EAAUmD,WACvB2tB,EAAajyB,EAAWiyB,WACxB2iD,EAAsBrD,EAAYnuD,cAClCyxD,EAA0BtD,EAAYvN,kBACxC8Q,EAAyBvD,EAAYtN,sBAEV5jE,IAA3By0E,IACFA,EAAyBC,EAAAC,kBAGrBxwE,EAASrD,EAAUqD,OAAOc,QAC1B2L,EAASrL,EAAAqvE,OACbN,EACAE,EAA0BvwE,GAEtB4wE,EAAW,CAAIjkE,EAAO3L,SACtBG,EAAmBP,EAAWQ,eAGlCotE,EAAaxsE,YACbpB,EAAWM,aACVI,EAAAunD,eAAe1nD,EAAkBzF,EAAWiR,QAAM,KAO7CtL,EAAaC,EAAAC,SAASJ,GACtB0vE,EAAS/nE,KAAKwG,IAAIhO,EAAAC,SAASoL,GAAU,EAAGtL,GAC9CsL,EAAO,GAAKxL,EAAiB,GAAK0vE,EAClClkE,EAAO,GAAKxL,EAAiB,GAAK0vE,EAClC/vE,EAAAC,MAAgBb,EAAQU,OAClBkwE,EAAaxvE,EAAAP,MAAY6vE,EAAY,GAAIhwE,GAG7CkwE,EAAW,GAAK3vE,EAAiB,IACjC2vE,EAAW,GAAK3vE,EAAiB,GAEjCyvE,EAAY9yE,KAAI,CACdgzE,EAAW,GAAKzvE,EAChByvE,EAAW,GACXA,EAAW,GAAKzvE,EAChByvE,EAAW,KAGbA,EAAW,GAAK3vE,EAAiB,IACjC2vE,EAAW,GAAK3vE,EAAiB,IAEjCyvE,EAAY9yE,KAAI,CACdgzE,EAAW,GAAKzvE,EAChByvE,EAAW,GACXA,EAAW,GAAKzvE,EAChByvE,EAAW,cAMTzD,QAAMn0E,KACPu0E,qBAAuBztE,GAAU9G,KACjCs0E,mBAAqB8C,GAAmBp3E,KACxC40E,sBAAwB0C,GAC7BlvE,EAAAunD,eAAc3vD,KAAMw0E,gBAAiB/gE,eAEhCqhE,oBAAqB,GACnB,OAGJD,aAAe,UAEfV,QAAS,MASV0D,EAPE7B,EAAW,IAAO8B,EAAAz3E,QACtBk3E,EAAAQ,aAAmBjxE,EAAY2tB,GAC/BhhB,EACA3M,EACA2tB,QAIO8gD,WAAWhP,iBAClBsR,EAAqB,IAAOC,EAAAz3E,QAC1Bk3E,EAAAQ,aAAmBjxE,EAAY2tB,GAC/BhhB,EACA3M,EACA2tB,QAKAujD,EADEplC,EAAiBpZ,EAAAqZ,uBAEnBD,EAAc,SACP7uC,EAAI,EAAGC,EAAK0zE,EAAY9zE,OAAQG,EAAIC,IAAMD,EACjDuxE,EAAa2C,aACXz+C,EAAAsX,aAAa4mC,EAAY3zE,GAAI2D,GAC7BZ,EACA8rC,GAGJolC,EAAgBx+C,EAAA0+C,4BAA4BtlC,EAAgBlrC,YAEnD3D,EAAI,EAAGC,EAAK0zE,EAAY9zE,OAAQG,EAAIC,IAAMD,EACjDuxE,EAAa2C,aAAaP,EAAY3zE,GAAI+C,EAAYY,OAIpD69C,EAAmBgyB,EAAAY,oBAA0BrxE,EAAY2tB,GAEzD9vB,EAID,SACO6C,OACJ4wE,EACEvL,EACJrlE,EAAQm/D,oBAAsBoN,EAAYpN,sBACxCkG,IACFuL,EAASvL,EAAcrlE,EAASV,IAE9BsxE,EAAM,KACFC,EAAKr4E,KAAQs4E,cACjB9wE,EACA+9C,EACA6yB,EACApC,EACAgC,EACAH,QAEG1D,OAAMn0E,KAAQm0E,QAAUkE,IAE/Bl3E,KAAInB,MAEFu4E,EAAa/+C,EAAAsX,aAAar9B,EAAQ/L,GAElC+wB,EAAW68C,EAAakD,oBAAoBD,GAC9CjB,GACF7+C,EAASj1B,KAAK8zE,OAEPvzE,EAAI,EAAGC,EAAKy0B,EAAS70B,OAAQG,EAAIC,IAAMD,EAC9CY,EAAO8zB,EAAS10B,SAEbswE,kBAAoB57C,MAEnBggD,EAA0BzC,EAAY0C,SACtCtD,EAAa,IAAOuD,EAAAt4E,QACxBoT,EACA3M,EACA2tB,EACA6gD,EAAasD,cACbH,EACA1E,EAAYvN,0BAGVqR,IAAqB73E,KAClB+0E,uBAAsB,IAAO4D,EAAAt4E,QAChCoT,EACA3M,EACA2tB,EACA6gD,EAAasD,cACbf,EAAsBa,SACtB3E,EAAYvN,yBAIX+N,oBAAsBztE,OACtBwtE,kBAAoB8C,OACpBxC,qBAAuB0C,OACvB9C,gBAAkB/gE,OAClBihE,gBAAkB1tE,OAClB2tE,oBAAsBjtE,OACtBmtE,aAAeO,OACfhB,uBAAyB,UAEzBU,oBAAqB,GACnB,GAYThB,EAAA5zE,UAAAo4E,cAAa,SACX9wE,EACA+9C,EACA6yB,EACAS,EACAnvB,EACAovB,OAEKV,EAAM,OACF,MAELt+C,GAAU,KACVpvB,MAAM8B,QAAQ4rE,GAAM,IAAA,IACbr0E,EAAI,EAAGC,EAAKo0E,EAAOx0E,OAAQG,EAAIC,IAAMD,EAC5C+1B,EACEy9C,EAAAe,cACEO,EACArxE,EACA4wE,EAAOr0E,GACPwhD,EAAgBvlD,KACXg0E,6BACLtqB,EACAovB,IACGh/C,OAGTA,EAAUy9C,EAAAe,cACRO,EACArxE,EACA4wE,EACA7yB,EAAgBvlD,KACXg0E,6BACLtqB,EACAovB,UAGGh/C,GAEXg6C,EA3sBA,CAAwCiF,EAAA14E,kJCjClC24E,EAAkB,QACZC,EAAA54E,gBACC64E,EAAA74E,cACF84E,EAAA94E,mBACK+4E,EAAA/4E,gBACH44E,EAAA54E,aACHg5E,EAAAh5E,SAqFVi5E,EAlFA,WAMK,SACHC,EAAY33B,EAAWvB,EAAWv5C,EAAY2tB,GAIzCz0B,KACEw5E,WAAa53B,EAKf5hD,KACEy5E,WAAap5B,EAKfrgD,KACEw0B,YAAcC,EAKhBz0B,KACE05E,YAAc5yE,EAKhB9G,KACE25E,kBAAiB,UAMxBJ,EAAAr5E,UAAAw4E,OAAM,eACEkB,EAAmB,WACdC,KAAI75E,KAAS25E,kBAAiB,CACvCC,EAAoBC,GAAQD,EAAoBC,IAAI,OAC9CC,EAAQ95E,KAAQ25E,kBAAkBE,WAC7BE,KAAcD,EAAQ,KACzBE,EAAqBF,EAASC,GAAYrB,SAChDkB,EAAoBC,GAAME,GAAcC,UAGrCJ,GAQTL,EAAAr5E,UAAA+5E,WAAU,SAACt4E,EAAQu4E,OACXC,OAAuBt3E,IAAXlB,EAAuBA,EAAO81B,WAAQ,IACpD2iD,EAAOp6E,KAAQ25E,kBAAkBQ,QACrBt3E,IAAZu3E,IACFA,EAAO,QACFT,kBAAkBQ,GAAaC,OAElCC,EAASD,EAAQF,QACNr3E,IAAXw3E,IAEFA,EAAM,IAAOC,EADOtB,EAAmBkB,IACfl6E,KACjBw5E,WAAUx5E,KACVy5E,WAAUz5E,KACV05E,YAAW15E,KACXw0B,aAEP4lD,EAAQF,GAAeG,UAElBA,GAEXd,EAhFA,6oBC2jBAgB,EAljBA,SAAAn7E,GAMK,SACHo7E,EAAY54B,EAAWvB,EAAWv5C,EAAY2tB,OAA9C/zB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKkhD,UAAYA,EAOjBlhD,EAAK2/C,UAAYA,EAMjB3/C,EAAK+zB,WAAaA,EAMlB/zB,EAAK+5E,aAAe,EAOpB/5E,EAAKoG,WAAaA,EAMlBpG,EAAKg6E,2BAA6B,KAMlCh6E,EAAKi6E,2BAA6B,KAMlCj6E,EAAKk6E,mBAAqB,KAM1Bl6E,EAAKm6E,aAAY,GAMjBn6E,EAAKmI,YAAW,GAMhBnI,EAAKo6E,eAAc,GAMnBp6E,EAAKq6E,yBAAwB,GAM7Br6E,EAAK0hB,MAAK,YAxFc44D,EAAAR,EAAAp7E,GAgG1Bo7E,EAAAt6E,UAAA+6E,gBAAe,SAACC,OACRzmD,EAAUz0B,KAAQy0B,kBACH,GAAdA,EACHymD,EACAA,EAAUz6E,KAAG,SAAW06E,UACfA,EAAO1mD,MAUtB+lD,EAAAt6E,UAAAk7E,2BAA0B,SAACxlE,EAAiBE,WACpCrC,EAAMzT,KAAQq7E,uBACd7yE,EAAQxI,KAAQ86E,eAChBjyE,EAAW7I,KAAQ6I,YACrByyE,EAAQzyE,EAAYjF,OACfG,EAAI,EAAGC,EAAK4R,EAAgBhS,OAAQG,EAAIC,EAAID,GAAK+R,EACxDtN,EAAS,GAAKoN,EAAgB7R,GAC9ByE,EAAS,GAAKoN,EAAgB7R,EAAI,GAC9BqE,EAAAmzE,mBAAmB9nE,EAAQjL,KAC7BK,EAAYyyE,KAAW9yE,EAAS,GAChCK,EAAYyyE,KAAW9yE,EAAS,WAG7B8yE,GAaTd,EAAAt6E,UAAAs7E,0BAAyB,SACvB5lE,EACAC,EACAzJ,EACA0J,EACA2lE,EACAC,OAEM7yE,EAAW7I,KAAQ6I,YACrByyE,EAAQzyE,EAAYjF,OAClB6P,EAAMzT,KAAQq7E,uBAChBK,IACF7lE,GAAUC,OAOR/R,EAAG43E,EAASC,EALZC,EAAajmE,EAAgBC,GAC7BimE,EAAalmE,EAAgBC,EAAS,GACpCkmE,EAAS/7E,KAAQ86E,eACnBkB,GAAU,MAGTj4E,EAAI8R,EAASC,EAAQ/R,EAAIqI,EAAKrI,GAAK+R,EACtCimE,EAAU,GAAKnmE,EAAgB7R,GAC/Bg4E,EAAU,GAAKnmE,EAAgB7R,EAAI,IACnC63E,EAAUxzE,EAAA6zE,uBAAuBxoE,EAAQsoE,MACzBJ,GACVK,IACFnzE,EAAYyyE,KAAWO,EACvBhzE,EAAYyyE,KAAWQ,EACvBE,GAAU,GAEZnzE,EAAYyyE,KAAWS,EAAU,GACjClzE,EAAYyyE,KAAWS,EAAU,IACxBH,IAAY9mE,EAAAzU,QAAa+U,cAClCvM,EAAYyyE,KAAWS,EAAU,GACjClzE,EAAYyyE,KAAWS,EAAU,GACjCC,GAAU,GAEVA,GAAU,EAEZH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,SAIPH,GAAUO,GAAYj4E,IAAM8R,EAASC,KACxCjN,EAAYyyE,KAAWO,EACvBhzE,EAAYyyE,KAAWQ,GAElBR,GAWTd,EAAAt6E,UAAAg8E,uBAAsB,SAACtmE,EAAiBC,EAAQuvC,EAAMtvC,EAAQqmE,WACnDp4E,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACXq4E,EAAUp8E,KAAQw7E,0BACtB5lE,EACAC,EACAzJ,EACA0J,GACA,GACA,GAEFqmE,EAAYv3E,KAAKw3E,GACjBvmE,EAASzJ,SAEJyJ,GAQT2kE,EAAAt6E,UAAAm8E,WAAU,SAAC50E,EAAUD,EAASqkE,QACvByQ,cAAc70E,EAAUD,OAIzBoO,EAAiBwmE,EAAYD,EAAaI,EAC1C1mE,EAJEtT,EAAOkF,EAASgrC,UAChB38B,EAASrO,EAAS4rC,YAClBmpC,EAAYx8E,KAAQ6I,YAAYjF,UAGlCrB,GAAQmwC,EAAAryC,QAAa+1C,cAAa,CACpCxgC,EAA+EnO,EAAUo8C,6BACzF04B,EAAY,OACN7wB,EAAqEjkD,EAAUg1E,WACrF5mE,EAAS,UACA9R,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtC24E,EAAM,GACZ7mE,EAAM7V,KAAQk8E,uBACZtmE,EACAC,EACA61C,EAAM3nD,GACN+R,EACA4mE,GAEFH,EAAa33E,KAAK83E,QAEf7B,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBu8E,OAClBJ,EACAD,EACA90E,EACAokE,EACAxnB,EAAAw4B,oCAGFt6E,GAAQmwC,EAAAryC,QAAa41C,SACrB1zC,GAAQmwC,EAAAryC,QAAa81C,mBAErBgmC,EAAW,GACXvmE,EACErT,GAAQmwC,EAAAryC,QAAa41C,QACuCxuC,EAAUo8C,6BAClEp8C,EAASurC,qBACfn9B,EAAM7V,KAAQk8E,uBACZtmE,EACA,EACwGnO,EAAU88C,UAClHzuC,EACAqmE,QAEGtB,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBu8E,OAClBJ,EACAL,EACA10E,EACAokE,EACAxnB,EAAAC,2BAGF/hD,GAAQmwC,EAAAryC,QAAa01C,aACrBxzC,GAAQmwC,EAAAryC,QAAasyC,QAErB/8B,EAAkBnO,EAASurC,qBAC3BopC,EAAUp8E,KAAQw7E,0BAChB5lE,EACA,EACAA,EAAgBhS,OAChBkS,GACA,GACA,QAEG+kE,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBu8E,OAClBJ,EACAJ,EACA30E,EACAokE,EACAxnB,EAAAsD,sBAEOplD,GAAQmwC,EAAAryC,QAAa61C,aAC9BtgC,EAAkBnO,EAASurC,sBAC3BopC,EAAUp8E,KAAQo7E,2BAA2BxlE,EAAiBE,IAC7C0mE,GAAYx8E,KACtB66E,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBu8E,OAClBJ,EACAJ,EACA30E,EACAokE,EACAxnB,EAAAsD,sBAGKplD,GAAQmwC,EAAAryC,QAAay1C,QAC9BlgC,EAAkBnO,EAASurC,0BACtBnqC,YAAYjE,KAAKgR,EAAgB,GAAIA,EAAgB,IAC1DwmE,EAAUp8E,KAAQ6I,YAAYjF,YACzBi3E,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBu8E,OAClBJ,EACAJ,EACA30E,EACAokE,UAGCiR,YAAYt1E,IAQnBgzE,EAAAt6E,UAAAo8E,cAAa,SAAC70E,EAAUD,QACjBkzE,2BAA0B,CAC7BiC,EAAAt8E,QAAkB08E,eAClBv1E,EACA,EACAC,QAEGozE,aAAaj2E,KAAI5E,KAAM06E,iCACvBC,2BAA0B,CAC7BgC,EAAAt8E,QAAkB08E,eAClBv1E,EACA,EACAC,QAEGszE,yBAAyBn2E,KAAI5E,KAAM26E,6BAM1CH,EAAAt6E,UAAAw4E,OAAM,kBAEFmC,aAAY76E,KAAO66E,aACnBE,yBAAwB/6E,KAAO+6E,yBAC/BlyE,YAAW7I,KAAO6I,cAOtB2xE,EAAAt6E,UAAA88E,gCAA+B,eAKzBj5E,EAJEg3E,EAAwB/6E,KAAQ+6E,yBAEtCA,EAAyBkC,cAIrBC,EACA36E,EAFE0J,EAAI8uE,EAAyBn3E,OAG/BuI,GAAQ,MACPpI,EAAI,EAAGA,EAAIkI,IAAKlI,GAEnBxB,GADA26E,EAAcnC,EAAyBh3E,IAC+B,KAC1D44E,EAAAt8E,QAAkB88E,aAC5BhxE,EAAQpI,EACCxB,GAAQo6E,EAAAt8E,QAAkB08E,iBACnCG,EAAY,GAAKn5E,EACjB6G,EAAAwyE,gBAAep9E,KAAM+6E,yBAA0B5uE,EAAOpI,GACtDoI,GAAQ,IASdquE,EAAAt6E,UAAAm9E,mBAAkB,SAAC7L,EAAW3B,OACtBztD,EAAKpiB,KAAQoiB,SACfovD,EAAS,KACL8L,EAAiB9L,EAAUlB,WACjCluD,EAAMovD,UAAYhB,EAAAC,YAChB6M,GAAkCx8E,EAAAywE,uBAGpCnvD,EAAMovD,eAAY3uE,KAEhBgtE,EAAW,KACP0N,EAAmB1N,EAAYS,WACrCluD,EAAMytD,YAAcW,EAAAC,YAClB8M,GAAsCz8E,EAAAyvE,wBAElCiN,EAAqB3N,EAAYiB,aACvC1uD,EAAM0tD,aACmBjtE,IAAvB26E,EAAmCA,EAAqB18E,EAAAivE,mBACpD0N,EAAsB5N,EAAYc,cACxCvuD,EAAM+tD,SAAWsN,EACbA,EAAoB31E,QACpBhH,EAAA48E,oBACEC,EAA4B9N,EAAYe,oBAC9CxuD,EAAMguD,eAAiBuN,GAEnB78E,EAAA88E,0BACEC,EAAsBhO,EAAYgB,cACxCzuD,EAAM4tD,cACoBntE,IAAxBg7E,EACIA,EACA/8E,EAAAmvE,oBACA6N,EAAmBjO,EAAYxnE,WACrC+Z,EAAMqvD,eACiB5uE,IAArBi7E,EAAiCA,EAAmBh9E,EAAA4vE,qBAChDqN,EAAwBlO,EAAYkB,gBAC1C3uD,EAAM8tD,gBACsBrtE,IAA1Bk7E,EACIA,EACAj9E,EAAAkwE,kBAEF5uD,EAAMqvD,UAASzxE,KAAQy6E,oBACpBA,aAAer4D,EAAMqvD,eAErBmJ,mBAAqB,WAG5Bx4D,EAAMytD,iBAAchtE,EACpBuf,EAAM0tD,aAAUjtE,EAChBuf,EAAM+tD,SAAW,KACjB/tD,EAAMguD,oBAAiBvtE,EACvBuf,EAAM4tD,cAAWntE,EACjBuf,EAAMqvD,eAAY5uE,EAClBuf,EAAM8tD,gBAAartE,GAQvB23E,EAAAt6E,UAAA89E,WAAU,SAAC57D,OACHovD,EAAYpvD,EAAMovD,UAElByM,EAAe,CAAItB,EAAAt8E,QAAkB69E,eAAgB1M,SACvC,iBAATA,GAETyM,EAAgBr5E,MAAK,GAEhBq5E,GAMTzD,EAAAt6E,UAAAi+E,YAAW,SAAC/7D,QACLy4D,aAAaj2E,KAAI5E,KAAMo+E,aAAah8D,KAO3Co4D,EAAAt6E,UAAAk+E,aAAY,SAACh8D,UAETu6D,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UAASzxE,KAAQy0B,WACvBrS,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,gBACD+K,gBAAgB74D,EAAM+tD,UAC3B/tD,EAAMguD,eAAcpwE,KAAQy0B,aAQhC+lD,EAAAt6E,UAAAo+E,gBAAe,SAACl8D,EAAO47D,OACfxM,EAAYpvD,EAAMovD,UACJ,iBAATA,GAA0BpvD,EAAMm8D,kBAAoB/M,SAC3C3uE,IAAd2uE,GAAuBxxE,KACpB66E,aAAaj2E,KAAKo5E,EAAWj+E,KAAIC,KAAOoiB,IAE/CA,EAAMm8D,iBAAmB/M,IAQ7BgJ,EAAAt6E,UAAAs+E,kBAAiB,SAACp8D,EAAO+7D,OACjBtO,EAAcztD,EAAMytD,YACpBC,EAAU1tD,EAAM0tD,QAChBK,EAAW/tD,EAAM+tD,SACjBC,EAAiBhuD,EAAMguD,eACvBJ,EAAW5tD,EAAM4tD,SACjByB,EAAYrvD,EAAMqvD,UAClBvB,EAAa9tD,EAAM8tD,YAEvB9tD,EAAMq8D,oBAAsB5O,GAC5BztD,EAAMs8D,gBAAkB5O,GACvBK,GAAY/tD,EAAMu8D,kBAChB/zE,EAAAC,OAAOuX,EAAMu8D,gBAAiBxO,IACjC/tD,EAAMw8D,uBAAyBxO,GAC/BhuD,EAAMy8D,iBAAmB7O,GACzB5tD,EAAM08D,kBAAoBrN,GAC1BrvD,EAAM28D,mBAAqB7O,UAEPrtE,IAAhBgtE,GACFsO,EAAYp+E,KAAIC,KAAOoiB,GAEzBA,EAAMq8D,mBAAqB5O,EAC3BztD,EAAMs8D,eAAiB5O,EACvB1tD,EAAMu8D,gBAAkBxO,EACxB/tD,EAAMw8D,sBAAwBxO,EAC9BhuD,EAAMy8D,gBAAkB7O,EACxB5tD,EAAM08D,iBAAmBrN,EACzBrvD,EAAM28D,kBAAoB7O,IAO9BsK,EAAAt6E,UAAA48E,YAAW,SAACt1E,QACLkzE,2BAA2B,GAAC16E,KAAS66E,aAAaj3E,YAClD82E,2BAA6B,UAC7BC,2BAA2B,GAAC36E,KAAS+6E,yBAAyBn3E,YAC9D+2E,2BAA6B,SAC5BqE,EAAsB,CAAIrC,EAAAt8E,QAAkB88E,aAAc31E,QAC3DqzE,aAAaj2E,KAAKo6E,QAClBjE,yBAAyBn2E,KAAKo6E,IAUrCxE,EAAAt6E,UAAAm7E,qBAAoB,oBACRT,0BACHA,mBAAqBxyE,EAAAw2B,MAAK5+B,KAAMqgD,gBAC5Bo6B,aAAe,GAAC,KACjBh5E,EAAKzB,KAAS8G,YAAU9G,KAASy6E,aAAe,GAAM,EAC5DryE,EAAAqvE,OAAMz3E,KAAM46E,mBAAoBn5E,EAAKzB,KAAO46E,gCAGpCA,oBAEhBJ,EAhjBA,CAA4ByE,EAAA5+E,qPCzBzB,IACG6+E,EAAW,CACfnC,eAAgB,EAChBoC,WAAY,EACZxsC,OAAQ,EACRysC,WAAY,EACZxC,OAAQ,EACRyC,WAAY,EACZC,WAAY,EACZnC,aAAc,EACdoC,KAAM,EACNC,gBAAiB,EACjBtB,eAAgB,GAChBG,iBAAkB,GAClBoB,OAAQ,IAMGC,EAAe,CAAIR,EAAYK,MAK/BI,EAAiB,CAAIT,EAAYO,QAKjCG,EAAoB,CAAIV,EAAYC,YAKpCU,EAAoB,CAAIX,EAAYE,YAEjDU,EAAeZ,sEClCZ,IAwGHa,EAvGA,oBAAAC,YAQEA,EAAA9/E,UAAAm8E,WAAU,SAAC50E,EAAUD,EAASqkE,KAO9BmU,EAAA9/E,UAAA+/E,aAAY,SAACx4E,KAObu4E,EAAA9/E,UAAAimE,SAAQ,SAAC5kE,KAMTy+E,EAAA9/E,UAAAggF,WAAU,SAACC,EAAgB34E,KAM3Bw4E,EAAA9/E,UAAAkgF,YAAW,SAAC54E,EAASjG,KAMrBy+E,EAAA9/E,UAAAmgF,uBAAsB,SAACC,EAA4B94E,KAMnDw4E,EAAA9/E,UAAAqgF,eAAc,SAACC,EAAoBh5E,KAMnCw4E,EAAA9/E,UAAAugF,oBAAmB,SAACC,EAAyBl5E,KAM7Cw4E,EAAA9/E,UAAAygF,eAAc,SAACC,EAAoBp5E,KAMnCw4E,EAAA9/E,UAAA2gF,iBAAgB,SAACC,EAAsBt5E,KAMvCw4E,EAAA9/E,UAAA6gF,UAAS,SAACC,EAAex5E,KAMzBw4E,EAAA9/E,UAAA+gF,YAAW,SAACC,EAAiB15E,KAM7Bw4E,EAAA9/E,UAAAihF,SAAQ,SAAC15E,EAAUD,KAMnBw4E,EAAA9/E,UAAAm9E,mBAAkB,SAAC7L,EAAW3B,KAM9BmQ,EAAA9/E,UAAAkhF,cAAa,SAACC,EAAYC,KAM1BtB,EAAA9/E,UAAAqhF,aAAY,SAACC,EAAWF,KAC1BtB,EArGA,kjBC2PAyB,EA/PA,SAAAriF,GAMK,SACHsiF,EAAY9/B,EAAWvB,EAAWv5C,EAAY2tB,OAA9C/zB,EACEtB,EAAAW,KAAAC,KAAM4hD,EAAWvB,EAAWv5C,EAAY2tB,IAAUz0B,YAMlDU,EAAKihF,mBAAqB,KAM1BjhF,EAAKirE,OAAS,KAMdjrE,EAAKkhF,sBAAmB/+E,EAMxBnC,EAAKmhF,cAAWh/E,EAMhBnC,EAAKohF,cAAWj/E,EAMhBnC,EAAKqhF,aAAUl/E,EAMfnC,EAAKwxE,cAAWrvE,EAMhBnC,EAAKshF,cAAWn/E,EAMhBnC,EAAKuhF,cAAWp/E,EAMhBnC,EAAKyxE,qBAAkBtvE,EAMvBnC,EAAK60D,eAAY1yD,EAMjBnC,EAAK0xE,YAASvvE,EAMdnC,EAAK6yE,YAAS1wE,EAOdnC,EAAKwhF,6BAA0Br/E,WA7FFs/E,EAAAT,EAAAtiF,GAoG/BsiF,EAAAxhF,UAAA6gF,UAAS,SAACC,EAAex5E,WACbmkE,aAGL2Q,cAAc0E,EAAex5E,OAC5BoO,EAAkBorE,EAAchuC,qBAChCl9B,EAASkrE,EAAc3tC,YACvB+uC,EAAOpiF,KAAQ6I,YAAYjF,OAC3B03E,EAAKt7E,KAAQo7E,2BAA2BxlE,EAAiBE,QAC1D+kE,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBi/E,WAClB8C,EACA9G,OACK3P,YAEAkW,SAAQ7hF,KAAQ4hF,sBAChBE,SAAQ9hF,KAAQ4hF,iBACrBhyE,KAAKsxC,KAAIlhD,KAAM+hF,QAAO/hF,KAAQ4hF,uBACzB1P,cACA8P,cACAC,cACA9P,qBACA5c,gBAEG6c,OAAO,GAACpyE,KAASy0B,WAAUz0B,KAAS4hF,sBACpCxP,OAAO,GAACpyE,KAASy0B,WAAUz0B,KAAS4hF,kBAE5ChyE,KAAKsxC,KAAIlhD,KAAMuzE,OAAMvzE,KAAQ4hF,uBACxBM,+BAEFnH,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBi/E,WAClB8C,EACA9G,OACKqG,wBAEAE,cACAC,cACAC,aACA7P,cACA8P,cACAC,cACA9P,qBACA5c,eACA6c,YACAmB,YACA2O,+BAEFpF,YAAYt1E,KAOnBk6E,EAAAxhF,UAAAygF,eAAc,SAACC,EAAoBp5E,WACvBmkE,aAGL2Q,cAAcsE,EAAoBp5E,OACjCoO,EAAkBgrE,EAAmB5tC,qBACrCl9B,EAAS8qE,EAAmBvtC,YAC5B+uC,EAAOpiF,KAAQ6I,YAAYjF,OAC3B03E,EAAKt7E,KAAQo7E,2BAA2BxlE,EAAiBE,QAC1D+kE,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBi/E,WAClB8C,EACA9G,OACK3P,YAEAkW,SAAQ7hF,KAAQ4hF,sBAChBE,SAAQ9hF,KAAQ4hF,iBACrBhyE,KAAKsxC,KAAIlhD,KAAM+hF,QAAO/hF,KAAQ4hF,uBACzB1P,cACA8P,cACAC,cACA9P,qBACA5c,gBAEG6c,OAAO,GAACpyE,KAASy0B,WAAUz0B,KAAS4hF,sBACpCxP,OAAO,GAACpyE,KAASy0B,WAAUz0B,KAAS4hF,kBAE5ChyE,KAAKsxC,KAAIlhD,KAAMuzE,OAAMvzE,KAAQ4hF,uBACxBM,+BAEFnH,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBi/E,WAClB8C,EACA9G,OACKqG,wBAEAE,cACAC,cACAC,aACA7P,cACA8P,cACAC,cACA9P,qBACA5c,eACA6c,YACAmB,YACA2O,+BAEFpF,YAAYt1E,KAMnBk6E,EAAAxhF,UAAAw4E,OAAM,uBACCsE,uCAEA6E,cAAWh/E,OACXi/E,cAAWj/E,OACX8+E,mBAAqB,UACrBhW,OAAS,UACTiW,sBAAmB/+E,OACnBk/E,aAAUl/E,OACVuvE,YAASvvE,OACTqvE,cAAWrvE,OACXm/E,cAAWn/E,OACXo/E,cAAWp/E,OACXsvE,qBAAkBtvE,OAClB0yD,eAAY1yD,OACZ0wE,YAAS1wE,EACPzD,EAAAc,UAAMw4E,OAAM34E,KAAAC,OAOrB0hF,EAAAxhF,UAAAkhF,cAAa,SAACC,EAAYgB,OAClBh0C,EAASgzC,EAAWtS,YACpBloE,EAAOw6E,EAAWlnD,UAClBmoD,EAAoBjB,EAAWrS,uBAC/BpD,EAAQyV,EAAWlV,SAAQnsE,KAAMy0B,YACjC8tD,EAASlB,EAAW3R,iBACrBkS,iBAAmBP,EAAWhS,cAAarvE,KAAMy0B,iBACjDotD,SAAWxzC,EAAO,QAClByzC,SAAWzzC,EAAO,QAClBszC,mBAAqBW,OACrB3W,OAASC,OACTmW,QAAUl7E,EAAK,QACfqrE,SAAWmP,EAAW9+D,kBACtBy/D,SAAWO,EAAO,QAClBN,SAAWM,EAAO,QAClBpQ,gBAAkBkP,EAAWzT,yBAC7BrY,UAAY8rB,EAAWnzC,mBACvBkkC,OAASiP,EAAW7O,qBACpBe,OAAS1sE,EAAK,QACdq7E,wBAA0BG,GAEnCX,EA7PA,CAAiCxI,EAAA74E,qkBC4JjCmiF,EAxJA,SAAApjF,GAMK,SACHqjF,EAAY7gC,EAAWvB,EAAWv5C,EAAY2tB,UAC5Cr1B,EAAAW,KAAAC,KAAM4hD,EAAWvB,EAAWv5C,EAAY2tB,IAAUz0B,YARhB0iF,EAAAD,EAAArjF,GAmBpCqjF,EAAAviF,UAAAyiF,qBAAoB,SAAC/sE,EAAiBC,EAAQzJ,EAAK0J,OAC3CssE,EAAOpiF,KAAQ6I,YAAYjF,OAC3B03E,EAAKt7E,KAAQw7E,0BACjB5lE,EACAC,EACAzJ,EACA0J,GACA,GACA,GAEI8sE,EAAuB,CAC3BjG,EAAAt8E,QAAkBm/E,gBAClB4C,EACA9G,eAEGT,aAAaj2E,KAAKg+E,QAClB7H,yBAAyBn2E,KAAKg+E,GAC5Bx2E,GAOTq2E,EAAAviF,UAAAqgF,eAAc,SAACC,EAAoBh5E,OAC3B4a,EAAKpiB,KAAQoiB,MACbytD,EAAcztD,EAAMytD,YACpB4B,EAAYrvD,EAAMqvD,kBACJ5uE,IAAhBgtE,QAA2ChtE,IAAd4uE,QAG5B+M,kBAAkBp8D,EAAKpiB,KAAOm+E,kBAC9B7B,cAAckE,EAAoBh5E,QAClCuzE,yBAAyBn2E,KAAI,CAE9B+3E,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UACNrvD,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,WACNpvE,EAAA48E,gBACA58E,EAAA88E,uBAEFjB,EAAAkG,0BAEIjtE,EAAkB4qE,EAAmBxtC,qBACrCl9B,EAAS0qE,EAAmBntC,iBAC7BsvC,qBACH/sE,EACA,EACAA,EAAgBhS,OAChBkS,QAEGilE,yBAAyBn2E,KAAK+3E,EAAAmG,wBAC9BhG,YAAYt1E,KAOnBi7E,EAAAviF,UAAAugF,oBAAmB,SAACC,EAAyBl5E,OACrC4a,EAAKpiB,KAAQoiB,MACbytD,EAAcztD,EAAMytD,YACpB4B,EAAYrvD,EAAMqvD,kBACJ5uE,IAAhBgtE,QAA2ChtE,IAAd4uE,QAG5B+M,kBAAkBp8D,EAAKpiB,KAAOm+E,kBAC9B7B,cAAcoE,EAAyBl5E,QACvCuzE,yBAAyBn2E,KAAI,CAE9B+3E,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UACNrvD,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,WACN9tD,EAAM+tD,SACN/tD,EAAMguD,gBAERuM,EAAAkG,8BAEIz9B,EAAOs7B,EAAwBn8B,UAC/B3uC,EAAkB8qE,EAAwB1tC,qBAC1Cl9B,EAAS4qE,EAAwBrtC,YACnCx9B,EAAS,EACJ9R,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAC1C8R,EAAM7V,KAAQ2iF,qBACZ/sE,EACAC,EACuBuvC,EAAKrhD,GAC5B+R,QAGCilE,yBAAyBn2E,KAAK+3E,EAAAmG,wBAC9BhG,YAAYt1E,KAMnBi7E,EAAAviF,UAAAw4E,OAAM,eACEt2D,EAAKpiB,KAAQoiB,aAEGvf,MAApBuf,EAAM2gE,YACN3gE,EAAM2gE,YAAU/iF,KAAS6I,YAAYjF,QAAM5D,KAEtC66E,aAAaj2E,KAAK+3E,EAAAmG,wBAEpB9F,uCACA56D,MAAQ,KACNhjB,EAAAc,UAAMw4E,OAAM34E,KAAAC,OAMrByiF,EAAAviF,UAAAi+E,YAAW,SAAC/7D,GAEYvf,MAApBuf,EAAM2gE,YACN3gE,EAAM2gE,YAAU/iF,KAAS6I,YAAYjF,cAEhCi3E,aAAaj2E,KAAK+3E,EAAAmG,mBACvB1gE,EAAM2gE,WAAU/iF,KAAQ6I,YAAYjF,QAEtCwe,EAAM2gE,WAAa,EACnB3jF,EAAAc,UAAMi+E,YAAWp+E,KAAAC,KAACoiB,QACby4D,aAAaj2E,KAAK+3E,EAAAkG,uBAE3BJ,EAtJA,CAAsCvJ,EAAA74E,klBCsPtC2iF,EAnPA,SAAA5jF,GAMK,SACH6jF,EAAYrhC,EAAWvB,EAAWv5C,EAAY2tB,UAC5Cr1B,EAAAW,KAAAC,KAAM4hD,EAAWvB,EAAWv5C,EAAY2tB,IAAUz0B,YARnBkjF,EAAAD,EAAA7jF,GAmBjC6jF,EAAA/iF,UAAAijF,sBAAqB,SAACvtE,EAAiBC,EAAQuvC,EAAMtvC,OAC7CsM,EAAKpiB,KAAQoiB,MACbspD,OAA2B7oE,IAApBuf,EAAMovD,UACbzF,OAA+BlpE,IAAtBuf,EAAMytD,YACfuT,EAAUh+B,EAAKxhD,YAChBi3E,aAAaj2E,KAAK+3E,EAAAkG,2BAClB9H,yBAAyBn2E,KAAK+3E,EAAAkG,8BAC1B9+E,EAAI,EAAGA,EAAIq/E,IAAWr/E,EAAC,KACxBqI,EAAMg5C,EAAKrhD,GACXq+E,EAAOpiF,KAAQ6I,YAAYjF,OAC3B03E,EAAKt7E,KAAQw7E,0BACjB5lE,EACAC,EACAzJ,EACA0J,GACA,GACCi2D,GAEG6W,EAAuB,CAC3BjG,EAAAt8E,QAAkBm/E,gBAClB4C,EACA9G,QAEGT,aAAaj2E,KAAKg+E,QAClB7H,yBAAyBn2E,KAAKg+E,GAC/B7W,SAGG8O,aAAaj2E,KAAK+3E,EAAA0G,2BAClBtI,yBAAyBn2E,KAAK+3E,EAAA0G,uBAErCxtE,EAASzJ,SAEPs/D,SACGmP,aAAaj2E,KAAK+3E,EAAAsB,sBAClBlD,yBAAyBn2E,KAAK+3E,EAAAsB,kBAEjClS,SACG8O,aAAaj2E,KAAK+3E,EAAAmG,wBAClB/H,yBAAyBn2E,KAAK+3E,EAAAmG,oBAE9BjtE,GAOTotE,EAAA/iF,UAAAggF,WAAU,SAACC,EAAgB34E,OACnB4a,EAAKpiB,KAAQoiB,MACbovD,EAAYpvD,EAAMovD,UAClB3B,EAAcztD,EAAMytD,oBACRhtE,IAAd2uE,QAA2C3uE,IAAhBgtE,QAG1ByT,4BACAhH,cAAc6D,EAAgB34E,QACX3E,IAApBuf,EAAMovD,WAAuBxxE,KAC1B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkB69E,eAClBp9E,EAAAywE,wBAGsB1uE,IAAtBuf,EAAMytD,aAAyB7vE,KAC5B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UACNrvD,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,WACN9tD,EAAM+tD,SACN/tD,EAAMguD,qBAGJx6D,EAAkBuqE,EAAentC,qBACjCl9B,EAASqqE,EAAe9sC,YACxB+uC,EAAOpiF,KAAQ6I,YAAYjF,YAC5B43E,0BACH5lE,EACA,EACAA,EAAgBhS,OAChBkS,GACA,GACA,OAEIytE,EAAiB,CAAI5G,EAAAt8E,QAAkBsyC,OAAQyvC,QAChDvH,aAAaj2E,KAAK+3E,EAAAkG,qBAAsBU,QACxCxI,yBAAyBn2E,KAAK+3E,EAAAkG,qBAAsBU,QACjC1gF,IAApBuf,EAAMovD,iBACHqJ,aAAaj2E,KAAK+3E,EAAAsB,sBAClBlD,yBAAyBn2E,KAAK+3E,EAAAsB,uBAEXp7E,IAAtBuf,EAAMytD,mBACHgL,aAAaj2E,KAAK+3E,EAAAmG,wBAClB/H,yBAAyBn2E,KAAK+3E,EAAAmG,yBAEhChG,YAAYt1E,KAOnBy7E,EAAA/iF,UAAA+gF,YAAW,SAACC,EAAiB15E,OACrB4a,EAAKpiB,KAAQoiB,MACbovD,EAAYpvD,EAAMovD,UAClB3B,EAAcztD,EAAMytD,oBACRhtE,IAAd2uE,QAA2C3uE,IAAhBgtE,QAG1ByT,4BACAhH,cAAc4E,EAAiB15E,QACZ3E,IAApBuf,EAAMovD,WAAuBxxE,KAC1B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkB69E,eAClBp9E,EAAAywE,wBAGsB1uE,IAAtBuf,EAAMytD,aAAyB7vE,KAC5B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UACNrvD,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,WACN9tD,EAAM+tD,SACN/tD,EAAMguD,qBAGJhrB,EAAO87B,EAAgB38B,UACvB3uC,EAAkBsrE,EAAgBr9B,6BAClC/tC,EAASorE,EAAgB7tC,iBAC1B8vC,sBACHvtE,EACA,EAC8BwvC,EAC9BtvC,QAEGgnE,YAAYt1E,KAOnBy7E,EAAA/iF,UAAA2gF,iBAAgB,SAACC,EAAsBt5E,OAC/B4a,EAAKpiB,KAAQoiB,MACbovD,EAAYpvD,EAAMovD,UAClB3B,EAAcztD,EAAMytD,oBACRhtE,IAAd2uE,QAA2C3uE,IAAhBgtE,QAG1ByT,4BACAhH,cAAcwE,EAAsBt5E,QACjB3E,IAApBuf,EAAMovD,WAAuBxxE,KAC1B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkB69E,eAClBp9E,EAAAywE,wBAGsB1uE,IAAtBuf,EAAMytD,aAAyB7vE,KAC5B+6E,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBg+E,iBAClBj8D,EAAMytD,YACNztD,EAAMqvD,UACNrvD,EAAM0tD,QACN1tD,EAAM4tD,SACN5tD,EAAM8tD,WACN9tD,EAAM+tD,SACN/tD,EAAMguD,yBAGJ1kB,EAAQo1B,EAAqBrE,WAC7B7mE,EAAkBkrE,EAAqBj9B,6BACvC/tC,EAASgrE,EAAqBztC,YAChCx9B,EAAS,EACJ9R,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAC3C8R,EAAM7V,KAAQmjF,sBACZvtE,EACAC,EACA61C,EAAM3nD,GACN+R,QAGCgnE,YAAYt1E,KAMnBy7E,EAAA/iF,UAAAw4E,OAAM,gBACCsE,uCACA56D,MAAQ,SAKPw/B,EAAS5hD,KAAQ4hD,aACL,IAAdA,UACI/4C,EAAW7I,KAAQ6I,YAChB9E,EAAI,EAAGC,EAAK6E,EAAYjF,OAAQG,EAAIC,IAAMD,EACjD8E,EAAY9E,GAAK2hD,EAAA89B,KAAK36E,EAAY9E,GAAI69C,UAGnCxiD,EAAAc,UAAMw4E,OAAM34E,KAAAC,OAMrBijF,EAAA/iF,UAAAojF,qBAAoB,eACZlhE,EAAKpiB,KAAQoiB,WAEDvf,IADAuf,EAAMovD,WACGxxE,KACpBs+E,gBAAgBl8D,EAAKpiB,KAAOg+E,iBAETn7E,IAAtBuf,EAAMytD,aAAyB7vE,KAC5Bw+E,kBAAkBp8D,EAAKpiB,KAAOm+E,cAGzC8E,EAjPA,CAAmC/J,EAAA74E,8rBCiBtBojF,EAAU,MACb,MACD,SACG,SACD,QACA,MACF,SACG,WACC,cACG,eACC,UACL,GAsjBZC,EAnjBA,SAAAtkF,GAMK,SACHukF,EAAY/hC,EAAWvB,EAAWv5C,EAAY2tB,OAA9C/zB,EACEtB,EAAAW,KAAAC,KAAM4hD,EAAWvB,EAAWv5C,EAAY2tB,IAAUz0B,YAMlDU,EAAKkjF,QAAU,KAMfljF,EAAKsrE,MAAK,GAMVtrE,EAAKmjF,aAAe,EAMpBnjF,EAAKojF,aAAe,EAMpBpjF,EAAKqjF,yBAAsBlhF,EAM3BnC,EAAKsjF,cAAgB,EAMrBtjF,EAAKujF,eAAiB,KAKtBvjF,EAAKwjF,WAAU,GAMfxjF,EAAKyjF,iBAAmB,KAKxBzjF,EAAK0jF,aAAY,GAMjB1jF,EAAK2jF,WAAU,GAKf3jF,EAAK4jF,WAAU,GAMf5jF,EAAK6jF,SAAQ,GAMb7jF,EAAK8jF,SAAQ,GAMb9jF,EAAK+jF,WAAU,GAOf/jF,EAAKwhF,6BAA0Br/E,WAtGH6hF,EAAAf,EAAAvkF,GA4G9BukF,EAAAzjF,UAAAw4E,OAAM,eACEmC,EAAez7E,EAAAc,UAAMw4E,OAAM34E,KAAAC,aACjC66E,EAAayJ,WAAUtkF,KAAQskF,WAC/BzJ,EAAaqJ,WAAUlkF,KAAQkkF,WAC/BrJ,EAAauJ,aAAYpkF,KAAQokF,aAC1BvJ,GAOT8I,EAAAzjF,UAAAihF,SAAQ,SAAC15E,EAAUD,OACXm9E,EAAS3kF,KAAQikF,eACjBW,EAAW5kF,KAAQmkF,iBACnBU,EAAS7kF,KAAQqkF,cACT,UAALrY,OAAiB6Y,IAAeF,GAAcC,QAIjD/7E,EAAW7I,KAAQ6I,YACrBsD,EAAQtD,EAAYjF,OAElBkhF,EAAer9E,EAASgrC,UAC1B78B,EAAkB,KAClBE,EAASrO,EAAS4rC,eAGpBwxC,EAAUE,YAAcC,EAAA3kF,QAAc4kF,MACrCH,GAAgBpyC,EAAAryC,QAAa01C,aAC5B+uC,GAAgBpyC,EAAAryC,QAAa81C,mBAC7B2uC,GAAgBpyC,EAAAryC,QAAa41C,SAC7B6uC,GAAgBpyC,EAAAryC,QAAa+1C,mBAkD3B8uC,EAAiBL,EAAUlvD,SAAW,KAAI,UACtCmvD,QACDpyC,EAAAryC,QAAay1C,WACbpD,EAAAryC,QAAa61C,YAChBtgC,EAA6EnO,EAAUurC,gCAEpFN,EAAAryC,QAAa01C,YAChBngC,EAA6EnO,EAAU09E,6BAEpFzyC,EAAAryC,QAAasyC,OAChB/8B,EAAyEnO,EAAUkmC,uBAEhF+E,EAAAryC,QAAa81C,kBAChBvgC,EAAkFnO,EAAU29E,mBAC5FtvE,EAAS,aAEN48B,EAAAryC,QAAa41C,QAChBrgC,EAA0EnO,EAAU+8C,uBAC/EqgC,EAAUlvD,UACbuvD,EAAetgF,KAAKgR,EAAgB,GAAC5V,KAAS8G,YAEhDgP,EAAS,aAEN48B,EAAAryC,QAAa+1C,kBACV6Y,EAA8ExnD,EAAU49E,wBAC9FzvE,EAAe,OACN7R,EAAI,EAAGC,EAAKirD,EAAerrD,OAAQG,EAAIC,EAAID,GAAK,EAClD8gF,EAAUlvD,UACbuvD,EAAetgF,KAAKqqD,EAAelrD,EAAI,GAAC/D,KAAS8G,YAEnD8O,EAAgBhR,KAAKqqD,EAAelrD,GAAIkrD,EAAelrD,EAAI,OAE9B,IAA3B6R,EAAgBhS,OAAY,OAGhCkS,EAAS,MAIP1J,EAAGpM,KAAQo7E,2BAA2BxlE,EAAiBE,MACjD3J,EAAK,UAIf+4E,IACC94E,EAAMD,GAAS,GAAMyJ,EAAgBhS,OAASkS,EAAM,KAEjDwvE,EAAMn5E,EAAQ,EAClB+4E,EAAiBA,EAAel1C,QAAM,SAAE/e,EAAG9nB,OACnCo8E,EACJ18E,EAAwB,GAAXy8E,EAAMn8E,MAAYyM,EAAgBzM,EAAI2M,IACnDjN,EAAwB,GAAXy8E,EAAMn8E,GAAS,KAAOyM,EAAgBzM,EAAI2M,EAAS,UAC7DyvE,KACDD,EAEGC,UAINC,mBAEDX,EAAUY,gBAAkBZ,EAAUa,yBACnCrI,mBACHwH,EAAUY,eACVZ,EAAUa,kBAERb,EAAUY,sBACPnH,gBAAet+E,KAAMoiB,MAAKpiB,KAAOg+E,iBACjCjD,yBAAyBn2E,KAAI5E,KAAMg+E,WAAUh+E,KAAMoiB,SAEtDyiE,EAAUa,wBACPlH,kBAAiBx+E,KAAMoiB,MAAKpiB,KAAOm+E,kBACnCpD,yBAAyBn2E,KAAI5E,KAAMo+E,aAAYp+E,KAAMoiB,eAIzDk6D,cAAc70E,EAAUD,OAGzBooB,EAAUi1D,EAAUj1D,WAEtBA,GAAW9uB,EAAA6kF,iBACVd,EAAUn6D,MAAM,GAAK,GAAKm6D,EAAUn6D,MAAM,GAAK,GAAC,KAE7Ck7D,EAAKf,EAAUj1D,QAAQ,GACvBi7C,EAAKga,EAAUj1D,QAAQ,GACvBi2D,EAAKhB,EAAUj1D,QAAQ,GACvBk2D,EAAKjB,EAAUj1D,QAAQ,GACvBi1D,EAAUn6D,MAAM,GAAK,IACvBmgD,GAAMA,EACNib,GAAMA,GAEJjB,EAAUn6D,MAAM,GAAK,IACvBk7D,GAAMA,EACNC,GAAMA,GAERj2D,EAAO,CAAIg2D,EAAI/a,EAAIgb,EAAIC,OAMnBC,EAAU/lF,KAAQy0B,gBACnBomD,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBi/E,WAClBnzE,EACAC,EACA,KACA49C,IACAA,IACAA,IACA,EACA,EACA,OACK+5B,yBACAC,eACJ,EAAG,GACJh6B,SACKk4B,wBACLtyD,GAAW9uB,EAAA6kF,eACP7kF,EAAA6kF,eACA/1D,EAAQnvB,KAAG,SAAWqnE,UACbA,EAAIie,OAEflB,EAAUY,iBACVZ,EAAUa,sBACP1Z,WACAuY,cACAE,gBACAD,cACAX,kBACAC,aACLoB,QAEIx6D,EAAQ,EAAIq7D,OACbhL,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBi/E,WAClBnzE,EACAC,EACA,KACA49C,IACAA,IACAA,IACA,EACA,EACA,OACK+5B,yBACAC,eACJt5D,EAAOA,GACRs/B,SACKk4B,wBACLtyD,IACEi1D,EAAUY,iBACVZ,EAAUa,sBACP1Z,WACAuY,cACAE,gBACAD,cACAX,kBACAC,aACLoB,SAGGpI,YAAYt1E,OArN2B,KAEvCY,EAAA4Q,WAAUhZ,KAAMq7E,uBAAwB5zE,EAASS,aAAS,WAG3Dk9C,OAAI,KACRxvC,EAAkBnO,EAASurC,qBACvB8xC,GAAgBpyC,EAAAryC,QAAa01C,YAC/BqP,EAAI,CAAIxvC,EAAgBhS,gBACfkhF,GAAgBpyC,EAAAryC,QAAa81C,kBACtCiP,EAAuE39C,EAAU88C,kBACxEugC,GAAgBpyC,EAAAryC,QAAa41C,QACtCmP,EAA+D39C,EAC5D88C,UACAz8C,MAAM,EAAG,WACHg9E,GAAgBpyC,EAAAryC,QAAa+1C,cAAa,KAC7CsV,EAAqEjkD,EAAUg1E,WACrFr3B,EAAI,WACKrhD,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAC3CqhD,EAAKxgD,KAAK8mD,EAAM3nD,GAAG,SAGlBu4E,cAAc70E,EAAUD,WACvBw+E,EAAYnB,EAAUmB,UACxBC,EAAa,EACbC,OAAO,EACFte,EAAI,EAAGue,EAAK/gC,EAAKxhD,OAAQgkE,EAAIue,IAAMve,EAAC,IAC1B/kE,MAAbmjF,EAAsB,KAClBI,EAAQC,EAAAC,cACZzB,EAAU0B,SACV3wE,EACAqwE,EACA7gC,EAAKwiB,GACL9xD,GAEFmwE,EAAaG,EAAM,GACnBF,EAAUE,EAAM,QAEhBF,EAAU9gC,EAAKwiB,WAER7jE,EAAIkiF,EAAYliF,EAAImiF,EAASniF,GAAK+R,EACzCjN,EAAYjE,KAAKgR,EAAgB7R,GAAI6R,EAAgB7R,EAAI,QAErDqI,EAAMvD,EAAYjF,OACxBqiF,EAAa7gC,EAAKwiB,QACb4e,WAAWr6E,EAAOC,GACvBD,EAAQC,OAEL0wE,YAAYt1E,MA4KrBm8E,EAAAzjF,UAAAslF,gBAAe,eACPZ,EAAW5kF,KAAQmkF,iBACnBU,EAAS7kF,KAAQqkF,WACjBM,EAAS3kF,KAAQikF,eAEjBwC,EAASzmF,KAAQykF,WACnBG,IACI6B,KAASzmF,KAASokF,eAAYpkF,KAC7BokF,aAAaqC,GAAS,CACzB5W,YAAa+U,EAAY/U,YACzBC,QAAS8U,EAAY9U,QACrBM,eAAgBwU,EAAYxU,eAC5BqB,UAAWmT,EAAYnT,UACvBzB,SAAU4U,EAAY5U,SACtBE,WAAY0U,EAAY1U,WACxBC,SAAUyU,EAAYzU,gBAItBuW,EAAO1mF,KAAQukF,SACfmC,KAAO1mF,KAASskF,aAAUtkF,KACzBskF,WAAWoC,GAAO,CACrB33D,KAAM81D,EAAU91D,KAChBi3D,UAAWnB,EAAUmB,WAAallF,EAAA6lF,iBAClCC,aAAc/B,EAAU+B,cAAgB9lF,EAAA+lF,oBACxCn8D,MAAOm6D,EAAUn6D,YAGfo8D,EAAO9mF,KAAQwkF,SACjBG,IACImC,KAAO9mF,KAASkkF,aAAUlkF,KACzBkkF,WAAW4C,GAAO,CACrBtV,UAAWmT,EAAUnT,cAW7BmS,EAAAzjF,UAAAsmF,WAAU,SAACr6E,EAAOC,OACVw4E,EAAW5kF,KAAQmkF,iBACnBU,EAAS7kF,KAAQqkF,WAEjBoC,EAASzmF,KAAQykF,WACjBiC,EAAO1mF,KAAQukF,SACfuC,EAAO9mF,KAAQwkF,cAChBgB,sBAEC/wD,EAAUz0B,KAAQy0B,WAClBsyD,EAAWtD,EAAWoB,EAAU+B,cAEhCl2D,EAAO1wB,KAAQ8jF,aAAervD,EAC9BrG,EAAIpuB,KAAQgsE,MACZqE,EAAcuU,EACfA,EAAYnT,UAAY7hE,KAAKkO,IAAI+mE,EAAUn6D,MAAM,IAAO,EACzD,OAECmwD,aAAaj2E,KAAI,CACpB+3E,EAAAt8E,QAAkBg/E,WAClBlzE,EACAC,EACA26E,EACAlC,EAAUlvD,SACVmxD,EACAjC,EAAU0B,SACV9xD,EACA/D,EACA+1D,EACApW,EAAc57C,EACdrG,EACAs4D,EACA,SAEG3L,yBAAyBn2E,KAAI,CAChC+3E,EAAAt8E,QAAkBg/E,WAClBlzE,EACAC,EACA26E,EACAlC,EAAUlvD,SACVmxD,EACAjC,EAAU0B,SACV,EACA71D,EACA+1D,EACApW,EACAjiD,EACAs4D,EACA,EAAIjyD,KAQRkvD,EAAAzjF,UAAAqhF,aAAY,SAACC,EAAWa,OAClBwC,EAAWF,EAAWC,KACrBpD,OAGGwF,EAAgBxF,EAAUtV,UAC3B8a,IAIHrC,EAAS3kF,KAAQikF,kBAEfU,EAAS,QACJV,eAAiBU,GAExBA,EAAUnT,UAAYhB,EAAAC,YACpBuW,EAAc1W,YAAcxvE,EAAAywE,oBAT9BoT,EAAY,UACPV,eAAiBU,OAYlBsC,EAAkBzF,EAAUpV,eAC7B6a,IAIHrC,EAAW5kF,KAAQmkF,oBAEjBS,EAAW,QACNT,iBAAmBS,OAEpBzU,EAAW8W,EAAgBtW,cAC3BP,EAAiB6W,EAAgBrW,oBACjCa,EAAYwV,EAAgB5+E,WAC5B6nE,EAAa+W,EAAgBlW,gBACnC6T,EAAY9U,QAAUmX,EAAgBnW,cAAgBhwE,EAAAivE,eACtD6U,EAAYzU,SAAWA,EAAWA,EAASroE,QAAUhH,EAAA48E,gBACrDkH,EAAYxU,oBACSvtE,IAAnButE,EAA+BtvE,EAAA88E,sBAAwBxN,EACzDwU,EAAY5U,SAAWiX,EAAgBpW,eAAiB/vE,EAAAmvE,gBACxD2U,EAAYnT,eACI5uE,IAAd4uE,EAA0B3wE,EAAA4vE,iBAAmBe,EAC/CmT,EAAY1U,gBACKrtE,IAAfqtE,EAA2BpvE,EAAAkwE,kBAAoBd,EACjD0U,EAAY/U,YAAcW,EAAAC,YACxBwW,EAAgB3W,YAAcxvE,EAAAyvE,yBAtBhCqU,EAAc,UACTT,iBAAmBS,EAyB1BC,EAAS7kF,KAAQqkF,eACXt1D,EAAOyyD,EAAU0F,WAAapmF,EAAAqmF,YACpCrmF,EAAAsmF,aAAar4D,OACPs4D,EAAY7F,EAAUhP,gBAC5BqS,EAAUlvD,SAAW6rD,EAAU8F,cAC/BzC,EAAU91D,KAAOA,EACjB81D,EAAU0B,SAAW/E,EAAU+F,cAC/B1C,EAAUE,UAAYvD,EAAUgG,eAChC3C,EAAUmB,UAAYxE,EAAUiG,eAChC5C,EAAU+B,aACRpF,EAAUkG,mBAAqB5mF,EAAA+lF,oBACjChC,EAAUY,eAAiBjE,EAAUmG,oBACrC9C,EAAUa,iBAAmBlE,EAAUoG,sBACvC/C,EAAUj1D,QAAU4xD,EAAUqG,cAAgB/mF,EAAA6kF,eAC9Cd,EAAUn6D,WAAsB7nB,IAAdwkF,EAAuB,CAAI,EAAG,GAAKA,MAE/CS,EAActG,EAAUuG,aACxBC,EAAcxG,EAAUyG,aACxBC,EAAqB1G,EAAU5T,oBAC/Bua,EAAe3G,EAAUtzC,mBAC1B89B,MAAQwV,EAAUnV,WAAO,QACzBwX,kBAA+BhhF,IAAhBilF,EAA4B,EAAIA,OAC/ChE,kBAA+BjhF,IAAhBmlF,EAA4B,EAAIA,OAC/CjE,yBACoBlhF,IAAvBqlF,GAA2CA,OACxClE,mBAAiCnhF,IAAjBslF,EAA6B,EAAIA,OAEjD1D,WAAaG,GACiB,iBAAvBA,EAAY/U,YAChB+U,EAAY/U,YACZtpE,EAAAwd,OAAO6gE,EAAY/U,cACvB+U,EAAY9U,QACZ8U,EAAYxU,eAAc,IAE1BwU,EAAYnT,UACZmT,EAAY5U,SACZ4U,EAAY1U,WAAU,IAEtB0U,EAAYzU,SAASp/D,OAAI,IACtB,QAEFwzE,SACHM,EAAU91D,KACV81D,EAAUn6D,OACTm6D,EAAUmB,WAAS,MACnBnB,EAAU+B,cAAY,UACpBpC,SAAWG,EACc,iBAAnBA,EAAUnT,UACfmT,EAAUnT,UAAS,IACbjrE,EAAAwd,OAAO4gE,EAAUnT,WAAS,QA/F1BxxE,KACPgsE,MAAK,QAiGPkW,wBAA0BG,GAEnCsB,EAjjBA,CAAgCzK,EAAA74E,iFCjChC+nF,EAGE,CAFAtyC,MAAK,QACLmvC,KAAI,sDCAUoD,EAAc9B,EAAU3wE,EAAiBC,EAAQzJ,EAAK0J,OAM1D/R,EAAGukF,EAAKC,EAAKvwE,EAAII,EAAIowE,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa/yE,EACbgzE,EAAWhzE,EACXizE,EAAS,EACT5/E,EAAI,EACJ6P,EAAQlD,MAEP9R,EAAI8R,EAAQ9R,EAAIqI,EAAKrI,GAAK+R,EAAM,KAC7BmC,EAAKrC,EAAgB7R,GACrBsU,EAAKzC,EAAgB7R,EAAI,QACpBlB,IAAPmV,IACF0wE,EAAMzwE,EAAKD,EACX2wE,EAAMtwE,EAAKD,EACXmwE,EAAM34E,KAAK62B,KAAKiiD,EAAMA,EAAMC,EAAMA,QACtB9lF,IAAR2lF,IACFt/E,GAAKo/E,EACE14E,KAAKm5E,MAAMP,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IACvChC,IACLr9E,EAAI4/E,IACNA,EAAS5/E,EACT0/E,EAAa7vE,EACb8vE,EAAW9kF,GAEbmF,EAAI,EACJ6P,EAAQhV,EAAI+R,IAGhBwyE,EAAMC,EACNC,EAAME,EACND,EAAME,GAER3wE,EAAKC,EACLG,EAAKC,SAEPnP,GAAKq/E,GACMO,EAAM,CAAI/vE,EAAOhV,IAAM6kF,EAAYC,wpBCuRhDG,EA9SA,SAAA5pF,GAGK,SACH6pF,EAAYxkF,OAAZ/D,EACEtB,EAAAW,KAAAC,KAAMyE,IAAKzE,YAMXU,EAAKqB,UAAY,KAMjBrB,EAAKwoF,mBAQLxoF,EAAKyoF,cAAgBxiF,EAAAuuB,SAQrBx0B,EAAKo1E,eAAiBnvE,EAAAuuB,SAQtBx0B,EAAKirB,sBAAwBhlB,EAAAuuB,SAK7Bx0B,EAAKkrB,QAAU,KAKflrB,EAAKu1E,iBAAkB,WAnDOmT,EAAAH,EAAA7pF,GA4DhC6pF,EAAA/oF,UAAAg1E,aAAY,SAACnpE,EAAQiC,EAAWuT,OAE1Bxf,EAAW6pB,EADTy9D,EAAcrpF,KAAQu1E,WAAWrzD,eAGrCnW,GACoB,KAApBA,EAAOxK,MAAMggB,SACbxV,EAAOnK,YAAcynF,KAEfr3D,EAASjmB,EAAOu9E,6BACAC,oBACpB39D,EAAUoG,EAAOE,WAAU,YAI7BtG,GAC0B,IAAzBA,EAAQoG,OAAOvwB,OACdmqB,EAAQoG,OAAOzwB,MAAMyM,YAAcA,OAMvBioE,uBAETl0E,UAAY,UACZ6pB,QAAU,UACVqqD,iBAAkB,SAPlBl0E,UAAYgK,OACZ6f,QAAUA,OACVqqD,iBAAkB,SAOfl0E,UAAS,EACjBA,EAAYV,SAASC,cAAa,QACxBM,UAAYynF,MAClB9nF,EAAQQ,EAAUR,MACtBA,EAAMC,SAAQ,WACdD,EAAME,MAAK,OACXF,EAAMG,OAAM,WAENswB,GADNpG,EAAU9mB,EAAAkrB,yBACagC,OACvBjwB,EAAU6Z,YAAYoW,IACtBzwB,EAAQywB,EAAOzwB,OACTC,SAAQ,WACdD,EAAMuuB,KAAI,IACVvuB,EAAMioF,gBAAe,gBAChBznF,UAAYA,OACZ6pB,QAAUA,IAUnBq9D,EAAA/oF,UAAAupF,KAAI,SAAC79D,EAASppB,EAAYiR,OAClBghB,EAAajyB,EAAWiyB,WACxBi1D,EAAalnF,EAAWqE,KAAK,GAAK4tB,EAAc,EAChDk1D,EAAcnnF,EAAWqE,KAAK,GAAK4tB,EAAc,EACjD1tB,EAAWvE,EAAWmB,UAAUoD,SAChC6iF,EAAUxhF,EAAAyhF,WAAWp2E,GACrBq2E,EAAW1hF,EAAAi2D,YAAY5qD,GACvBs2E,EAAc3hF,EAAA4hF,eAAev2E,GAC7Bw2E,EAAa7hF,EAAAg2D,cAAc3qD,GAEjC9M,EAAAmE,MAAetI,EAAWiE,2BAA4BmjF,GACtDjjF,EAAAmE,MAAetI,EAAWiE,2BAA4BqjF,GACtDnjF,EAAAmE,MAAetI,EAAWiE,2BAA4BsjF,GACtDpjF,EAAAmE,MAAetI,EAAWiE,2BAA4BwjF,GAEtDr+D,EAAQuF,OACRrwB,EAAAopF,eAAet+D,GAAU7kB,EAAU2iF,EAAWC,GAC9C/9D,EAAQwlD,YACRxlD,EAAQu+D,OAAOP,EAAQ,GAAKn1D,EAAYm1D,EAAQ,GAAKn1D,GACrD7I,EAAQ0lD,OAAOwY,EAAS,GAAKr1D,EAAYq1D,EAAS,GAAKr1D,GACvD7I,EAAQ0lD,OAAOyY,EAAY,GAAKt1D,EAAYs1D,EAAY,GAAKt1D,GAC7D7I,EAAQ0lD,OAAO2Y,EAAW,GAAKx1D,EAAYw1D,EAAW,GAAKx1D,GAC3D7I,EAAQ69D,OACR3oF,EAAAopF,eAAet+D,EAAS7kB,EAAU2iF,EAAWC,IAS/CV,EAAA/oF,UAAAo2E,cAAa,SAAC1qD,EAASppB,EAAYiR,OAC3Bm2E,EAAUxhF,EAAAyhF,WAAWp2E,GACrBq2E,EAAW1hF,EAAAi2D,YAAY5qD,GACvBs2E,EAAc3hF,EAAA4hF,eAAev2E,GAC7Bw2E,EAAa7hF,EAAAg2D,cAAc3qD,GAEjC9M,EAAAmE,MAAetI,EAAWiE,2BAA4BmjF,GACtDjjF,EAAAmE,MAAetI,EAAWiE,2BAA4BqjF,GACtDnjF,EAAAmE,MAAetI,EAAWiE,2BAA4BsjF,GACtDpjF,EAAAmE,MAAetI,EAAWiE,2BAA4BwjF,OAEhDG,EAAQpqF,KAAQ2rB,sBACtBhlB,EAAAmE,MAAes/E,EAAUR,GACzBjjF,EAAAmE,MAAes/E,EAAUN,GACzBnjF,EAAAmE,MAAes/E,EAAUL,GACzBpjF,EAAAmE,MAAes/E,EAAUH,GAEzBr+D,EAAQuF,OACRvF,EAAQwlD,YACRxlD,EAAQu+D,OAAOv6E,KAAK0S,MAAMsnE,EAAQ,IAAKh6E,KAAK0S,MAAMsnE,EAAQ,KAC1Dh+D,EAAQ0lD,OAAO1hE,KAAK0S,MAAMwnE,EAAS,IAAKl6E,KAAK0S,MAAMwnE,EAAS,KAC5Dl+D,EAAQ0lD,OAAO1hE,KAAK0S,MAAMynE,EAAY,IAAKn6E,KAAK0S,MAAMynE,EAAY,KAClEn+D,EAAQ0lD,OAAO1hE,KAAK0S,MAAM2nE,EAAW,IAAKr6E,KAAK0S,MAAM2nE,EAAW,KAChEr+D,EAAQ69D,QASVR,EAAA/oF,UAAAmqF,qBAAoB,SAAC9nF,EAAMqpB,EAASppB,OAC5BiC,EAAKzE,KAAQu1E,cACf9wE,EAAM/B,YAAYH,GAAI,KAClBI,EAAK,IAAOC,EAAAvC,QAChBkC,EAAIvC,KACC2rB,sBACLnpB,EACAopB,GAEFnnB,EAAM3B,cAAcH,KASxBsmF,EAAA/oF,UAAAi2E,UAAS,SAACvqD,EAASppB,QACZ6nF,qBAAqBhnF,EAAAhD,QAAgBupB,UAAWgC,EAASppB,IAQhEymF,EAAA/oF,UAAAq2E,WAAU,SAAC3qD,EAASppB,QACb6nF,qBAAqBhnF,EAAAhD,QAAgBwpB,WAAY+B,EAASppB,IAejEymF,EAAA/oF,UAAAy1E,mBAAkB,SAChB3uE,EACAF,EACAC,EACA0tB,EACAhzB,EACAC,EACA+uB,OAEMxgB,EAAMxO,EAAQ,EACdyO,EAAMxO,EAAS,EACfyO,EAAKskB,EAAa3tB,EAClBsJ,GAAMD,EACNE,GAAOrJ,EAAO,GAAKypB,EACnBngB,GAAOtJ,EAAO,UACbL,EAAAC,QAAgB5G,KAChBmpF,cACLl5E,EACAC,EACAC,EACAC,GACCrJ,EACDsJ,EACAC,IAYJ24E,EAAA/oF,UAAA0F,eAAc,SAACR,EAAO5C,EAAY6C,OAqB5BK,EApBE4kF,EAAc3jF,EAAAmE,MAAc9K,KAC3B2rB,sBACLvmB,EAAM0C,SAEF8jB,EAAO5rB,KAAQ4rB,QAGfyqD,EADKr2E,KAAQu1E,WACOrtE,eACtBmuE,EAAW,KACPkU,EAAmB5jF,EAAAmE,MACvBtI,EAAWkE,2BACXtB,EAAM0C,SAGuC,IAC1CM,EAAAmzE,mBAAmBlF,EAAakU,GAAgB,OAC5C,aAMHh7E,EAAIK,KAAK0S,MAAMgoE,EAAY,IAC3B96E,EAAII,KAAK0S,MAAMgoE,EAAY,IAC3BE,EAAYnpF,SAASC,cAAa,UAClCmpF,EAAaD,EAAUt4D,WAAU,MACvCs4D,EAAU/oF,MAAQ,EAClB+oF,EAAU9oF,OAAS,EACnB+oF,EAAWvU,UAAU,EAAG,EAAG,EAAG,GAC9BuU,EAAWh5D,UAAU7F,EAAQoG,OAAQziB,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D9J,EAAO+kF,EAAWC,aAAa,EAAG,EAAG,EAAG,GAAGhlF,WACpCilF,SACK,kBAARA,EAAIr3E,SAEKs3E,WAENllF,SAGO,IAAZA,EAAK,GACA,KAEFA,GAEXujF,EA5SA,CAAkC4B,EAAAxqF,+lBCqKlCyqF,EAlLA,SAAA1rF,GAGK,SACH2rF,EAAYtmF,OAAZ/D,EACEtB,EAAAW,KAAAC,OAAAA,YAGAU,EAAKsqF,wBAA0BtqF,EAAKuqF,mBAAmB9pF,KAAKT,GAM5DA,EAAKwqF,OAASzmF,EAKd/D,EAAKq0E,uBAAyB,cAnBNoW,EAAAJ,EAAA3rF,GA4B1B2rF,EAAA7qF,UAAA0gB,YAAW,SAACxb,UACHmB,EAAAC,YASTukF,EAAA7qF,UAAA6gB,aAAY,SAACve,UACJ+D,EAAAC,YAUTukF,EAAA7qF,UAAAiD,YAAW,SAACX,EAAYuJ,UACfxF,EAAAC,YASTukF,EAAA7qF,UAAAkrF,mBAAkB,SAACC,EAAOxsE,EAAM4b,GACzB4wD,EAAMxsE,KACTwsE,EAAMxsE,GAAI,IAEZwsE,EAAMxsE,GAAM4b,EAAK6wD,UAAU7zD,YAAcgD,GAa3CswD,EAAA7qF,UAAAqrF,uBAAsB,SAAC5iF,EAAQjB,EAAY2jF,UAOpC,SACOxsE,EAAM2sE,OACRlmF,EAAQtF,KAAQorF,mBAAmBjqF,KAAInB,KAAOqrF,EAAOxsE,UACpDlW,EAAO8iF,kBAAkB/jF,EAAYmX,EAAM2sE,EAAWlmF,IAC7DnE,KAAInB,OAaV+qF,EAAA7qF,UAAAgH,2BAA0B,SACxBC,EACA3E,EACA6C,EACAC,EACAiD,KAcFwiF,EAAA7qF,UAAA0F,eAAc,SAACR,EAAO5C,EAAY6C,UACzBkB,EAAAC,YAMTukF,EAAA7qF,UAAAq1E,SAAQ,uBACM2V,QAOdH,EAAA7qF,UAAAq9B,mBAAkB,aAOlBwtD,EAAA7qF,UAAA+qF,mBAAkB,SAAClkE,GAC2CA,EAAMhb,OACxDwU,aAAekvD,EAAApvE,QAAW0lC,QAAM/lC,KACnCg3E,2BAWT+T,EAAA7qF,UAAAwrF,UAAS,SAAC9f,OACJ+f,EAAa/f,EAAMrrD,kBACnBorE,GAAclc,EAAApvE,QAAW0lC,QAAU4lD,GAAclc,EAAApvE,QAAW8nB,OAC9DyjD,EAAMn5D,iBAAiBiO,EAAArgB,QAAUsgB,OAAM3gB,KAAOgrF,yBAE5CW,GAAclc,EAAApvE,QAAWgmC,OAC3BulC,EAAMtlC,OACNqlD,EAAa/f,EAAMrrD,YAEdorE,GAAclc,EAAApvE,QAAW0lC,QAMlCglD,EAAA7qF,UAAA82E,wBAAuB,eACfvyE,EAAKzE,KAAQu1E,WACf9wE,EAAM+d,cAAgB/d,EAAM6b,kBAAoBhc,EAAAjE,QAAYkE,OAC9DE,EAAMgc,WAGZsqE,EAhLA,CAA4BlmE,EAAAxkB,yLCQtBurF,EAAK,CACTC,EAAAxrF,QAAY41C,QACZ41C,EAAAxrF,QAAYsyC,OACZk5C,EAAAxrF,QAAY01C,YACZ81C,EAAAxrF,QAAYyrF,MACZD,EAAAxrF,QAAY0rF,KACZF,EAAAxrF,QAAY2rF,SAGdC,EAAA,WAYK,SACHC,EACE7rC,EACAv5C,EACA2tB,EACA03D,EACAC,EACAC,GAKGrsF,KACEy5E,WAAap5B,EAKfrgD,KACEssF,UAAYH,EAKdnsF,KACEw0B,YAAcC,EAKhBz0B,KACE05E,YAAc5yE,EAKhB9G,KACEgmE,cAAgBqmB,EAKlBrsF,KACEusF,mBAAkB,GAKpBvsF,KACEwsF,qBAAuB,KAKzBxsF,KACEysF,uBAAyB9lF,EAAAuuB,cAEzBw3D,iBAAiBN,UAOxBF,EAAAhsF,UAAAupF,KAAI,SAAC79D,EAAS5d,OACN2+E,EAAc3sF,KAAQ4sF,cAAc5+E,GAC1C4d,EAAQwlD,YACRxlD,EAAQu+D,OAAOwC,EAAe,GAAIA,EAAe,IACjD/gE,EAAQ0lD,OAAOqb,EAAe,GAAIA,EAAe,IACjD/gE,EAAQ0lD,OAAOqb,EAAe,GAAIA,EAAe,IACjD/gE,EAAQ0lD,OAAOqb,EAAe,GAAIA,EAAe,IACjD/gE,EAAQ69D,QAQVyC,EAAAhsF,UAAAwsF,iBAAgB,SAACN,WACJzqF,KAAUyqF,EAAe,KAC9BS,EAAS7sF,KAAQusF,mBAAmB5qF,QACtBkB,IAAdgqF,IACFA,EAAS,QACJN,mBAAmB5qF,GAAUkrF,OAE9BC,EAAsBV,EAAgBzqF,WACjCu4E,KAAe4S,EAAmB,KACrCjS,EAAeiS,EAAoB5S,GACzC2S,EAAU3S,GAAW,IAAQ6S,EAAA1sF,QAAQL,KAC9B05E,YAAW15E,KACXw0B,YAAWx0B,KACXssF,UACLzR,MAURqR,EAAAhsF,UAAA8sF,aAAY,SAACH,WACAlrF,KAAM3B,KAASusF,2BAClBU,EAAUjtF,KAAQusF,mBAAmB5qF,GAClCoC,EAAI,EAAGC,EAAK6oF,EAAUjpF,OAAQG,EAAIC,IAAMD,KAC3C8oF,EAAU9oF,KAAMkpF,EAAU,OACrB,SAIN,GAaTf,EAAAhsF,UAAAgH,2BAA0B,SACxBC,EACAL,EACAC,EACA1B,EACAC,EACA4nF,OAGMC,EAA6B,GADnC9nF,EAAeuK,KAAK0S,MAAMjd,IACa,EACjC2I,EAAYrH,EAAAC,QAAgB5G,KAC3BysF,uBACLpnF,EAAe,GACfA,EAAe,GACf,EAAIyB,GACJ,EAAKA,GACJC,GACAI,EAAW,IACXA,EAAW,IAGRsjF,GAAUzqF,KAASwsF,qBACrB/B,IAAUzqF,KACPwsF,qBAAuB1nF,EAAAkrB,sBAC1Bm9D,EACAA,QAkBAC,EAfExhE,EAAO5rB,KAAQwsF,qBAGnB5gE,EAAQoG,OAAOvwB,QAAU0rF,GACzBvhE,EAAQoG,OAAOtwB,SAAWyrF,GAE1BvhE,EAAQoG,OAAOvwB,MAAQ0rF,EACvBvhE,EAAQoG,OAAOtwB,OAASyrF,GACd1C,GACV7+D,EAAQsqD,UAAU,EAAG,EAAGiX,EAAaA,QAOZtqF,SAAlBmjE,gBACPonB,EAAYhlF,EAAAihD,cACZjhD,EAAAilF,iBAAiBD,EAAWjmF,GAC5BiB,EAAAqvE,OACE2V,EACAtmF,GAAU9G,KAASgmE,cAAgB3gE,GACnC+nF,QAMAlT,EAFEoT,WAmKyB3uC,WACU97C,IAAvC0qF,EAA2B5uC,GAAqB,OAC3C4uC,EAA2B5uC,WAG9B93C,EAAgB,EAAT83C,EAAa,EACpB6uC,EAAgB7uC,EAASA,EACzB8uC,EAAS,IAAO/iF,MAAM8iF,EAAgB,GACnCzpF,EAAI,EAAGA,GAAK46C,IAAU56C,EAAC,IAAA,IACrB0E,EAAI,EAAGA,GAAKk2C,IAAUl2C,EAAC,KACxBW,EAAarF,EAAIA,EAAI0E,EAAIA,KAC3BW,EAAaokF,EAAa,UAG1BruC,EAAWsuC,EAAUrkF,GACpB+1C,IACHA,EAAQ,GACRsuC,EAAUrkF,GAAc+1C,GAE1BA,EAASv6C,KAA4C,IAArC+5C,EAAS56C,GAAK8C,GAAQ83C,EAASl2C,IAAU,GACrD1E,EAAI,GACNo7C,EAASv6C,KAA4C,IAArC+5C,EAAS56C,GAAK8C,GAAQ83C,EAASl2C,IAAU,GAEvDA,EAAI,IACN02C,EAASv6C,KAA4C,IAArC+5C,EAAS56C,GAAK8C,GAAQ83C,EAASl2C,IAAU,GACrD1E,EAAI,GACNo7C,EAASv6C,KAA4C,IAArC+5C,EAAS56C,GAAK8C,GAAQ83C,EAASl2C,IAAU,YAM3DilF,EAAU,GACA1pF,GAAPD,EAAI,EAAQ0pF,EAAU7pF,QAAQG,EAAIC,IAAMD,EAC3C0pF,EAAU1pF,IACZ2pF,EAAW9oF,KAAIkG,MAAf4iF,EAAmBD,EAAU1pF,WAIjCwpF,EAA2B5uC,GAAU+uC,EAC9BA,EA3MWC,CAAmBtoF,GAQhC,SACMwxE,EAAgBrvE,EAASC,WAC1BmmF,EAAYhiE,EAAQ8+D,aAAa,EAAG,EAAGyC,EAAaA,GACvDznF,KACMmoF,EAAI,EAAG7pF,EAAKspF,EAAQ1pF,OAAQiqF,EAAI7pF,EAAI6pF,IAAC,GACxCD,EAAUN,EAAQO,IAAM,EAAC,KAExBX,GACAhT,IAAgB2R,EAAAxrF,QAAYyrF,OAC3B5R,IAAgB2R,EAAAxrF,QAAY0rF,OACW,IAAzCmB,EAAoBrhF,QAAQrE,GAAe,KAErCsmF,GAAOR,EAAQO,GAAK,GAAK,EACzBt+E,EAAIlK,EAAgByoF,EAAMX,EAC1B39E,EAAInK,GAAiByoF,EAAMX,EAAe,GAC1CY,EAASzoF,EAASkC,EAASC,EAAU8H,EAAIA,EAAIC,EAAIA,MACnDu+E,EAAM,OACDA,EAGXniE,EAAQsqD,UAAU,EAAG,EAAGiX,EAAaA,UAOf,IAIxBppF,EAAG0E,EAAGokF,EAAWmB,EAAUnoF,EAHzBooF,EAAK57E,OAAO6R,KAAIlkB,KAAMusF,oBAAoB9rF,IAAIkc,YACpDsxE,EAAGzqF,KAAKoH,EAAAkkD,2BAGH/qD,EAAIkqF,EAAGrqF,OAAS,EAAGG,GAAK,IAAKA,EAAC,KAC3Bo2E,EAAY8T,EAAGlqF,GAAG0zB,eACxBo1D,EAAS7sF,KAAQusF,mBAAmBpS,GAC/B1xE,EAAImjF,EAAMhoF,OAAS,EAAG6E,GAAK,IAAKA,UAGlB5F,KADjBmrF,EAAWnB,EADX3S,EAAc0R,EAAMnjF,OAGlB5C,EAASmoF,EAASE,oBAChBtiE,EACA5d,EACAjH,EACA8vE,EACAuW,IAEQ,OACDvnF,IAYjBqmF,EAAAhsF,UAAA0sF,cAAa,SAAC5+E,OACNqyC,EAASrgD,KAAQy5E,eAClBp5B,EAAS,OACL,SAEH5rC,EAAO4rC,EAAU,GACjB3rC,EAAO2rC,EAAU,GACjB1rC,EAAO0rC,EAAU,GACjBzrC,EAAOyrC,EAAU,GACjBssC,EAAc,CAAIl4E,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,UAClEwzC,EAAAC,YAAYwkC,EAAgB,EAAG,EAAG,EAAG3+E,EAAW2+E,GACzCA,GAMTT,EAAAhsF,UAAA0kB,QAAO,kBACErlB,EAAAqlB,QAAO5kB,KAAMusF,qBAatBL,EAAAhsF,UAAA01E,QAAO,SACLhqD,EACAuiE,EACAngF,EACAogF,EACA5Y,EACA6Y,EACAhZ,GAE4B,IACtB4Y,EAAK57E,OAAO6R,KAAIlkB,KAAMusF,oBAAoB9rF,IAAIkc,QACpDsxE,EAAGzqF,KAAKoH,EAAAkkD,gCAIC2qB,aACP7tD,EAAQuF,YACHs4D,KAAK79D,EAAS5d,QAIjBjK,EAAGC,EAAIyE,EAAG2mC,EAAIgrC,EAASC,EADrBiU,EAAeD,GAAsCzC,MAEvDvW,GACF4Y,EAAGhR,UAEAl5E,EAAI,EAAGC,EAAKiqF,EAAGrqF,OAAQG,EAAIC,IAAMD,EAAC,KAC/Bo2E,EAAY8T,EAAGlqF,GAAG0zB,eACxB2iD,EAAOp6E,KAAQusF,mBAAmBpS,GAC7B1xE,EAAI,EAAG2mC,EAAKk/C,EAAa1qF,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,MAGhC5F,KADfw3E,EAASD,EADWkU,EAAa7lF,MAG/B4xE,EAAOzE,QACLhqD,EACAuiE,EACAngF,EACAogF,EACA5Y,EACAH,SAMCoE,YACP7tD,EAAQ8F,WAGdw6D,EAjVA,GAyVMqB,EAA0B,OAoDhCgB,EAAetC,0ECnafuC,EAOE,CANA77C,OAAM,SACNq5C,QAAO,UACPF,MAAK,QACL/1C,YAAW,aACXE,QAAO,UACP81C,KAAI,iOCkDA0C,EAAYrmF,EAAAihD,cAGZqlC,EAAE,GAEFC,EAAE,GAEFC,EAAE,GAEFC,EAAE,GAKL,SACMC,EAAgBC,UAChBA,EAAuB,GAAGC,iBAG7BC,EAAQ,IAAO9iE,OACmB,IAEpCze,OAAOwhF,aAAa,MAAO,IAAUxhF,OAAOwhF,aAAa,MACzDxhF,OAAOwhF,aAAa,OAAO,IAAUxhF,OAAOwhF,aAAa,OACzDxhF,OAAOwhF,aAAa,OAAO,IAAUxhF,OAAOwhF,aAAa,OACzDxhF,OAAOwhF,aAAa,OAAO,IAAUxhF,OAAOwhF,aAAa,OACzDxhF,OAAOwhF,aAAa,QAAO,IAAUxhF,OAAOwhF,aAAa,QAAO,KASjE,SACMC,EAAoB/gE,EAAMghE,SACvB,UAALA,GAA0B,QAALA,GAAqBH,EAASI,KAAKjhE,KAC3DghE,EAAa,UAALA,EAAiB,OAAS,SAE7B/V,EAAAiW,WAAWF,OAqkCpBG,EAlkCA,WAMK,SACHC,EAAY1oF,EAAY2tB,EAAY03D,EAAUtR,GAIzC76E,KACEmsF,SAAWA,EAKbnsF,KACEy0B,WAAaA,EAMfz0B,KACE8G,WAAaA,EAKf9G,KACEyvF,WAKFzvF,KACE66E,aAAeA,EAAaA,aAK9B76E,KACE6I,YAAcgyE,EAAahyE,YAK7B7I,KACE0vF,iBAAgB,GAKlB1vF,KACE2vF,mBAAqBhpF,EAAAuuB,SAKvBl1B,KACE+6E,yBAA2BF,EAAaE,yBAK1C/6E,KACE4vF,kBAAoB,KAKtB5vF,KACE6vF,cAAgB,EAIlB7vF,KACEkkF,WAAarJ,EAAaqJ,YAAU,GAItClkF,KACEokF,aAAevJ,EAAauJ,cAAY,GAI1CpkF,KACEskF,WAAazJ,EAAayJ,YAAU,GAKtCtkF,KACE8vF,QAAO,GAKT9vF,KACE4jF,QAAO,UAUd4L,EAAAtvF,UAAA6vF,YAAW,SAAC3hE,EAAMs4D,EAASI,EAASL,OAC5BhsE,EAAM2T,EAAOs4D,EAAUI,EAAUL,UAC9B7C,QAAQnpE,GAAG,OAAAza,KACN4jF,QAAQnpE,OAEhBmqE,EAAc6B,EAASzmF,KAAQokF,aAAaqC,GAAa,KACzD9B,EAAYmC,EAAO9mF,KAAQkkF,WAAW4C,GAAW,KACjDjC,EAAS7kF,KAAQskF,WAAWoC,GAC5BjyD,EAAUz0B,KAAQy0B,WAClB/J,EAAK,CACTm6D,EAAUn6D,MAAM,GAAK+J,EACrBowD,EAAUn6D,MAAM,GAAK+J,GAEjB26D,EAAQD,EACZ/gE,EACAy2D,EAAUmB,WAAallF,EAAA6lF,kBAEnBtW,EACJoW,GAAa7B,EAAYnT,UAAYmT,EAAYnT,UAAY,EAEzDrhD,EAAQhC,EAAK/a,MAAK,MAClBid,EAAWF,EAAMxsB,OACjBysB,EAAM,GACN5uB,EAAQX,EAAAkvF,kBAAkBnL,EAAU91D,KAAMqB,EAAOC,GACjD7D,EAAa1rB,EAAAmvF,kBAAkBpL,EAAU91D,MAEzCmhE,EAAczuF,EAAQ4uE,EACtB/+C,EAAmB,GAEnBL,GAAKi/D,EAAc,GAAKxlE,EAAM,GAC9BwG,GALS1E,EAAa8D,EAKR+/C,GAAe3lD,EAAM,GAEnC6G,EAAK,CACT9vB,MAAOwvB,EAAI,EAAIrhB,KAAKoK,MAAMiX,GAAKrhB,KAAKsxC,KAAKjwB,GACzCvvB,OAAQwvB,EAAI,EAAIthB,KAAKoK,MAAMkX,GAAKthB,KAAKsxC,KAAKhwB,GAC1CI,oBAAqBA,IAEP,GAAZ5G,EAAM,IAAuB,GAAZA,EAAM,IACzB4G,EAAoB1sB,KAAI,QAAU8lB,GAEpC4G,EAAoB1sB,KAAI,OAASigF,EAAU91D,MACvC03D,KACFn1D,EAAoB1sB,KAAI,cAAgBggF,EAAY/U,aACpDv+C,EAAoB1sB,KAAI,YAAcyrE,GACtC/+C,EAAoB1sB,KAAI,UAAYggF,EAAY9U,SAChDx+C,EAAoB1sB,KAAI,WAAaggF,EAAY5U,UACjD1+C,EAAoB1sB,KAAI,aAAeggF,EAAY1U,aAEnCl/D,EAAAC,wBAA0Bk/E,kCAAoCC,0BAClElwF,UAAUwxE,cACpBpgD,EAAoB1sB,KAAI,cAAc,CAAGggF,EAAYzU,WACrD7+C,EAAoB1sB,KAAI,iBAAmBggF,EAAYxU,kBAGvD0W,GACFx1D,EAAoB1sB,KAAI,YAAc+/E,EAAUnT,WAElDlgD,EAAoB1sB,KAAI,eAAe,UACvC0sB,EAAoB1sB,KAAI,YAAY,cAGhCb,EAFEssF,EAAY,GAAMjB,EAClB7/E,EAAI6/E,EAAQc,EAAcG,EAAYhgB,KAExCoW,EAAS,IACN1iF,EAAI,EAAGA,EAAIusB,IAAYvsB,EAC1ButB,EAAoB1sB,KAAI,aAAa,CACnCwrB,EAAMrsB,GACNwL,EAAI8gF,EAAYhgE,EAAOtsB,GACvB,IAAOssE,EAAc7jD,GAAczoB,EAAIyoB,OAIzCs6D,EAAO,IACJ/iF,EAAI,EAAGA,EAAIusB,IAAYvsB,EAC1ButB,EAAoB1sB,KAAI,WAAW,CACjCwrB,EAAMrsB,GACNwL,EAAI8gF,EAAYhgE,EAAOtsB,GACvB,IAAOssE,EAAc7jD,GAAczoB,EAAIyoB,gBAIxCo3D,QAAQnpE,GAAO8W,EACbA,GAYTi+D,EAAAtvF,UAAAowF,sBAAqB,SACnB1kE,EACAi/C,EACAgb,EACAC,EACAyK,EACAtS,EACA6E,GAEAl3D,EAAQwlD,YACRxlD,EAAQu+D,OAAOr/E,MAAM8gB,EAASi/C,GAC9Bj/C,EAAQ0lD,OAAOxmE,MAAM8gB,EAASi6D,GAC9Bj6D,EAAQ0lD,OAAOxmE,MAAM8gB,EAASk6D,GAC9Bl6D,EAAQ0lD,OAAOxmE,MAAM8gB,EAAS2kE,GAC9B3kE,EAAQ0lD,OAAOxmE,MAAM8gB,EAASi/C,GAC1BoT,SACGwR,WAAqCxR,EAAgB,QACrDxS,MAAM7/C,IAETk3D,SACG0N,gBACH5kE,EACyBk3D,GAE3Bl3D,EAAQmgD,WAwBZyjB,EAAAtvF,UAAAuwF,iCAAgC,SAC9BC,EACAC,EACAn9C,EACAC,EACAhyC,EACAC,EACAmpD,EACAC,EACA/5B,EACAC,EACAjqB,EACA2jB,EACA8qD,EACA5lD,EACAghE,EACAppF,OAyBIwG,EArBAuB,EAAIikC,GAFRqX,GAAWngC,EAAM,IAGblb,EAAIikC,GAFRqX,GAAWpgC,EAAM,IAIXuG,EAAIxvB,EAAQsvB,EAAU2/D,EAAaA,EAAa3/D,EAAUtvB,EAC1DyvB,EAAIxvB,EAASsvB,EAAU2/D,EAAcA,EAAc3/D,EAAUtvB,EAC7DmvF,EAAOjhE,EAAQ,GAAKqB,EAAIvG,EAAM,GAAKkF,EAAQ,GAC3CkhE,EAAOlhE,EAAQ,GAAKsB,EAAIxG,EAAM,GAAKkF,EAAQ,GAC3CmhE,EAAOxhF,EAAIqgB,EAAQ,GACnBohE,EAAOxhF,EAAIogB,EAAQ,UAErBghE,GAA2B,IAAb7pF,KAChB2nF,EAAG,GAAKqC,EACRlC,EAAG,GAAKkC,EACRrC,EAAG,GAAKsC,EACRrC,EAAG,GAAKqC,EACRrC,EAAG,GAAKoC,EAAOF,EACfjC,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAKoC,EAAOF,EACfjC,EAAG,GAAKD,EAAG,IAII,IAAb7nF,GACFiH,EAAYrH,EAAAC,QACVD,EAAAuuB,SACAse,EACAC,EACA,EACA,EACA1sC,GACCysC,GACAC,GAGH9sC,EAAAmE,MAAekD,EAAW0gF,GAC1B/nF,EAAAmE,MAAekD,EAAW2gF,GAC1BhoF,EAAAmE,MAAekD,EAAW4gF,GAC1BjoF,EAAAmE,MAAekD,EAAW6gF,GAC1BzmF,EAAA6oF,eACErhF,KAAKuG,IAAIu4E,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCj/E,KAAKuG,IAAIu4E,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCj/E,KAAKwG,IAAIs4E,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCj/E,KAAKwG,IAAIs4E,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCJ,IAGFrmF,EAAA6oF,eACErhF,KAAKuG,IAAI46E,EAAMA,EAAOF,GACtBjhF,KAAKuG,IAAI66E,EAAMA,EAAOF,GACtBlhF,KAAKwG,IAAI26E,EAAMA,EAAOF,GACtBjhF,KAAKwG,IAAI46E,EAAMA,EAAOF,GACtBrC,GAGAjZ,IACFjmE,EAAIK,KAAK0S,MAAM/S,GACfC,EAAII,KAAK0S,MAAM9S,KAGf0hF,WAAY3hF,EACZ4hF,WAAY3hF,EACZ4hF,WAAYngE,EACZogE,WAAYngE,EACZH,QAASA,EACTC,QAASA,EACTg+D,aAAY,CACVv6E,KAAMg6E,EAAU,GAChB/5E,KAAM+5E,EAAU,GAChB95E,KAAM85E,EAAU,GAChB75E,KAAM65E,EAAU,GAChB56E,MAAOrM,GAETuuE,gBAAiB/nE,EACjB0c,MAAOA,IAeX8kE,EAAAtvF,UAAAoxF,oBAAmB,SACjB1lE,EACAuiE,EACAoD,EACAC,EACAjwE,EACA08D,EACA6E,OAEM8N,KAAgB3S,IAAmB6E,GAEnC2O,EAAMD,EAAWxC,aACjBh9D,EAASpG,EAAQoG,OACjB0/D,EAAgB5O,EACjBA,EAAkB,GAAK0O,EAAW9mE,MAAM,GAAM,EAC/C,SAEF+mE,EAAIh9E,KAAOi9E,GAAiB1/D,EAAOvwB,MAAQ0sF,GAC3CsD,EAAI98E,KAAO+8E,GAAiB,GAC5BD,EAAI/8E,KAAOg9E,GAAiB1/D,EAAOtwB,OAASysF,GAC5CsD,EAAI78E,KAAO88E,GAAiB,IAGxBd,GAAU5wF,KACPswF,sBACH1kE,EACA8iE,EACAC,EACAC,EACAC,EACyB5Q,EACA6E,GAG7BhiF,EAAA6wF,iBACE/lE,EACA4lE,EAAWzb,gBACXx0D,EACAgwE,EACAC,EAAWzgE,QACXygE,EAAWxgE,QACXwgE,EAAWJ,WACXI,EAAWH,WACXG,EAAWN,WACXM,EAAWL,WACXK,EAAW9mE,SAGR,GAOT8kE,EAAAtvF,UAAAurE,MAAK,SAAC7/C,WACK6jE,WAAU,KACXmC,EAASjrF,EAAAmE,MAAc9K,KAAM2vF,mBAAkB,CAAG,EAAG,IACrDkC,EAAa,IAAG7xF,KAAQy0B,WAC9B7I,EAAQuF,OACRvF,EAAQ+E,UAAUihE,EAAO,GAAKC,EAAYD,EAAO,GAAKC,GACtDjmE,EAAQgF,OAAM5wB,KAAM6vF,eAEtBjkE,EAAQ8/C,YACC+jB,YACP7jE,EAAQ8F,WASZ89D,EAAAtvF,UAAAswF,gBAAe,SAAC5kE,EAASsxD,GACvBtxD,EACe,YAC4CsxD,EAAY,GACvEtxD,EAAQ6lD,UAAmCyL,EAAY,GACvDtxD,EAAQkkD,QAAwCoN,EAAY,GAC5DtxD,EAAQokD,SAA0CkN,EAAY,GAC9DtxD,EAAQskD,WAAoCgN,EAAY,GACpDtxD,EAAQ8lD,cACV9lD,EAAQwkD,eAAwC8M,EAAY,GAC5DtxD,EAAQ8lD,YAA0CwL,EAAY,MAYlEsS,EAAAtvF,UAAA4xF,6BAA4B,SAAC1jE,EAAMs4D,EAASD,EAAWK,OAC/CjC,EAAS7kF,KAAQskF,WAAWoC,GAE5Bn1D,EAAKvxB,KAAQ+vF,YAAY3hE,EAAMs4D,EAASI,EAASL,GAEjD7B,EAAW5kF,KAAQokF,aAAaqC,GAChChyD,EAAUz0B,KAAQy0B,WAClB26D,EAAQD,EACZ/gE,EACAy2D,EAAUmB,WAAallF,EAAA6lF,kBAEnBI,EAAW1N,EAAAiW,WAAWzK,EAAU+B,cAAgB9lF,EAAA+lF,qBAChDxW,EACJuU,GAAeA,EAAYnT,UAAYmT,EAAYnT,UAAY,SAU/DlgD,MAAOA,EACPs5B,QAPcukC,GADF79D,EAAM9vB,MAAQgzB,EAAa,EAAIowD,EAAUn6D,MAAM,IAC7B,GAAK,GAAM0kE,GAAS/e,EAQlDvlB,QANCi8B,EAAWx1D,EAAM7vB,OAAU+yB,EAC5B,GAAK,GAAMsyD,GAAY1W,IAuB3Bmf,EAAAtvF,UAAA6xF,SAAQ,SACNnmE,EACAuiE,EACAngF,EACA6sE,EACArF,EACAwc,EACAC,EACA5c,GAE4B,IACxB6c,OACKtC,mBAAqBhlF,EAAAC,OAAOmD,EAAShO,KAAO2vF,oBACnDuC,EAAgBlyF,KAAQ4vF,wBAEdA,oBAAiB5vF,KACpB4vF,kBAAiB,IAExBsC,EAAmBhqC,EAAAC,YAAWnoD,KACvB6I,YACL,EAAC7I,KACI6I,YAAYjF,OACjB,EACAoK,EAAShO,KACJ4vF,mBAEPjpF,EAAAwrF,aAAqBnyF,KAAM2vF,mBAAoB3hF,YAK7CokF,EACAvnC,EACFC,EACAunC,EACAC,EACAC,EACAC,EACA5mB,EACAx9C,EACAs4D,EACAD,EACAK,EAqBwDt/E,EACtD+H,EAAGC,EAAGijF,EApCN1uF,EAAI,EACFC,EAAK62E,EAAaj3E,OACpBsL,EAAI,EAaJwjF,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACtBC,EAAe9yF,KAAQ0vF,iBACvBtB,EAAYpuF,KAAQ6vF,cACpBkD,EACJnjF,KAAK0S,MAAgD,KAA1C1S,KAAKqvC,OAAOjxC,EAAU,GAAIA,EAAU,KAAc,KAEzDoU,EAAK,CACTwJ,QAASA,EACT6I,WAAUz0B,KAAOy0B,WACjB3tB,WAAU9G,KAAO8G,WACjBC,SAAUqnF,GAKN4E,EAAShzF,KACR66E,cAAgBA,GAAY76E,KAASmsF,SAAW,EAAI,IAGpDpoF,EAAIC,GAAE,KACLk5E,EAAcrC,EAAa92E,UAC+Bm5E,EAAY,SAErEP,EAAAt8E,QAAkB08E,eACrBv1E,EAAiE01E,EAAY,GAC7EuV,EAAkBvV,EAAY,GACzB11E,EAAQw2D,mBAGOn7D,IAAlBovF,GACC7pF,EAAA4Q,WAAWi5E,EAAeQ,EAAgBvqF,eAIzCnE,EAFFA,EAA2Bm5E,EAAY,GAAM,EAL7Cn5E,EAA2Bm5E,EAAY,cAUtCP,EAAAt8E,QAAkB8+E,WACjBuT,EAAcM,SACXvnB,MAAM7/C,GACX8mE,EAAc,GAEZC,EAAgBK,IAClBpnE,EAAQmgD,SACR4mB,EAAgB,GAEbD,GAAgBC,IACnB/mE,EAAQwlD,YACRihB,EAAQroC,IACRsoC,EAAQtoC,OAERjmD,aAEC44E,EAAAt8E,QAAkBsyC,WAEf36B,EAAKk6E,EADXhjF,EAA2BguE,EAAY,IAEjC9kE,EAAK85E,EAAiBhjF,EAAI,GAG1B+E,EAFKi+E,EAAiBhjF,EAAI,GAEhB8I,EACV9D,EAFKg+E,EAAiBhjF,EAAI,GAEhBkJ,EACVgE,EAAIxM,KAAK62B,KAAKxyB,EAAKA,EAAKC,EAAKA,GACnC0X,EAAQu+D,OAAOnyE,EAAKoE,EAAGhE,GACvBwT,EAAQylD,IAAIr5D,EAAII,EAAIgE,EAAG,EAAG,EAAIxM,KAAKwO,IAAI,KACrCra,aAEC44E,EAAAt8E,QAAkB++E,WACrBxzD,EAAQ+lD,cACN5tE,aAEC44E,EAAAt8E,QAAkBu8E,OACrB1tE,EAA2BguE,EAAY,GACvCkV,EAAKlV,EAAY,OACXz1E,EAA0Ey1E,EAAY,GACtFrR,GAAWqR,EAAY,GACvB9yE,GAA2B,GAAtB8yE,EAAYt5E,OAAcs5E,EAAY,QAAKr6E,EACtDuf,EAAM3a,SAAWA,EACjB2a,EAAM5a,QAAUA,EACVzD,KAAK+uF,IACTA,EAAgB/uF,GAAC,QAEbgvC,GAAS+/C,EAAgB/uF,GAC3BqG,GACFA,GAAG8nF,EAAkBhjF,EAAGkjF,EAAI,EAAGr/C,KAE/BA,GAAO,GAAKm/C,EAAiBhjF,GAC7B6jC,GAAO,GAAKm/C,EAAiBhjF,EAAI,GACjC6jC,GAAOnvC,OAAS,GAElBioE,GAAS94B,GAAQ3wB,KACfre,aAEC44E,EAAAt8E,QAAkBi/E,WACrBpwE,EAA2BguE,EAAY,GACvCkV,EAA4BlV,EAAY,GACxCtR,EAA4EsR,EAAY,GAGxFryB,EAAiCqyB,EAAY,GAC7CpyB,EAAiCoyB,EAAY,OACzCx7E,GAAgCw7E,EAAY,GAC1C37D,GAAiC27D,EAAY,GAC7CnsD,GAAiCmsD,EAAY,GAC7ClsD,GAAiCksD,EAAY,GAC7C1P,GAAyC0P,EAAY,IACvDn2E,GAAkCm2E,EAAY,IAC5CxyD,GAAqDwyD,EAAY,IACnEz7E,GAA+By7E,EAAY,IACzC+V,GAAuF/V,EAAY,QAEpGtR,GAASsR,EAAYt5E,QAAU,GAAE,CAEpCwqB,EAA8B8uD,EAAY,IAC1CwJ,EAAiCxJ,EAAY,IAC7CuJ,EAAmCvJ,EAAY,IAC/C4J,EAAiC5J,EAAY,QACvCgW,GAAelzF,KAAQ8xF,6BAC3B1jE,EACAs4D,EACAD,EACAK,GAEFlb,EAAQsnB,GAAgB3hE,MACxB2rD,EAAY,GAAKtR,MACXkc,GAAqC5K,EAAY,IACvDryB,GAAWqoC,GAAgBroC,QAAUi9B,IAAW9nF,KAASy0B,WACzDyoD,EAAY,GAAKryB,MACXm9B,GAAqC9K,EAAY,IACvDpyB,GAAWooC,GAAgBpoC,QAAUk9B,IAAWhoF,KAASy0B,WACzDyoD,EAAY,GAAKpyB,EACjBppD,GAASkqE,EAAMlqE,OACfw7E,EAAY,GAAKx7E,GACjBD,GAAQmqE,EAAMnqE,MACdy7E,EAAY,IAAMz7E,OAGhByjF,QAAc,EACdhI,EAAYt5E,OAAS,KACvBshF,GAAwChI,EAAY,SAGlDttD,QAAO,EAAE61D,QAAc,EAAEC,QAAgB,EACzCxI,EAAYt5E,OAAS,IACvBgsB,GAAwCstD,EAAY,IACpDuI,GAAyCvI,EAAY,IACrDwI,GAA2CxI,EAAY,MAEvDttD,GAAU9uB,EAAA6kF,eACVF,IAAiB,EACjBC,IAAmB,GAGjBlY,IAAkBulB,EAEpBhsF,IAAYqnF,EACF5gB,IAAmBulB,IAE7BhsF,IAAYqnF,WAEV+E,GAAa,EACVjkF,EAAIkjF,EAAIljF,GAAK,OAEhBg2E,IACAA,GAAeiO,MAAgB1xF,GAAKzB,KAAQy0B,iBAuBxC2Z,GAAI,CACRxiB,EACAuiE,EACAviB,EAtBI4lB,GAAUxxF,KAAQywF,iCACtB7kB,EAAMnqE,MACNmqE,EAAMlqE,OACNwwF,EAAiBhjF,GACjBgjF,EAAiBhjF,EAAI,GACrBzN,GACAC,GACAmpD,EACAC,EACA/5B,GACAC,GACAjqB,GACA2jB,GACA8qD,EACA5lD,GACA61D,IAAkBC,GAClBl+E,GAQA+Z,GACAkkE,GAC6BmN,EACzB,KACJlN,GAC6BmN,EACzB,MAEFO,QAAS,EACTC,QAAiB,KACjBhe,GAAqB4d,GAAsB,KACvC9lF,GAAQilF,EAAKljF,MACd+jF,GAAuB9lF,IAAK,CAE/B8lF,GAAuB9lF,IAASihC,eAIlCglD,GAAYH,GAAuB9lF,WAC5B8lF,GAAuB9lF,IAC9BkmF,GAAoBvE,EAAgBsE,IAChC/d,EAAkB3M,SAAS2qB,IAAiB,SAKhDhe,GACAA,EAAkB3M,SAAS8oB,GAAWxC,gBAIpCoE,KAEE/d,GACFA,EAAkB1M,OAAO0qB,SAGtB/B,oBAAoBxmF,MAAK9K,KAAOozF,KAEnC/d,GACFA,EAAkB1M,OAAO6oB,GAAWxC,mBAEjCsC,oBAAoBxmF,MAAK9K,KAAOouC,OAErCrqC,aAEC44E,EAAAt8E,QAAkBg/E,eACflzE,GAA+B+wE,EAAY,GAC3C9wE,GAA6B8wE,EAAY,GACzC6J,GAAkC7J,EAAY,GAC9CvnD,GAAkCunD,EAAY,GACpD4J,EAAiC5J,EAAY,OACvCqJ,GAAkCrJ,EAAY,GAC9CoW,GAA2CpW,EAAY,GACvDxsD,GAAiCwsD,EAAY,GACnDuJ,EAAmCvJ,EAAY,OACzC7M,GAAqC6M,EAAY,IACvD9uD,EAA8B8uD,EAAY,IAC1CwJ,EAAiCxJ,EAAY,QACvCqW,GAAe,CACIrW,EAAY,IACZA,EAAY,KAG/B2H,GAAS7kF,KAAQskF,WAAWoC,GAC5B33D,GAAO81D,GAAU91D,KACjBs4D,GAAS,CACbxC,GAAUn6D,MAAM,GAAK4oE,GACrBzO,GAAUn6D,MAAM,GAAK4oE,IAGnBE,QAAY,EACZzkE,MAAI/uB,KAAS8vF,QACf0D,GAAYxzF,KAAQ8vF,QAAQ/gE,KAE5BykE,GAAY,QACP1D,QAAQ/gE,IAAQykE,QAGjBC,GAAaC,EAAAC,iBAAiBzB,EAAkB/lF,GAAOC,GAAK,GAC5DwnF,GACJhkF,KAAKkO,IAAIupE,GAAU,IACnBvmF,EAAA+yF,yBAAyB9kE,GAAMX,EAAMolE,OACnC79D,IAAYi+D,IAAcH,GAAU,KAChCzN,GAAShmF,KAAQskF,WAAWoC,GAASV,UACrC8N,IAAUL,GAAaG,IAAcva,EAAAiW,WAAWtJ,IAChD+N,GAAQC,EAAAC,eACZ/B,EACA/lF,GACAC,GACA,EACAgiB,EACA0lE,GACAvN,GACA32E,KAAKkO,IAAIupE,GAAU,IACnBvmF,EAAA+yF,yBACA9kE,GACAykE,GACAT,EAA4B,EAAC/yF,KAAQ6vF,eAEvCqE,EAAS,GAAMH,GAAK,CAC0B,IACtChF,GAAsB,GACxB9/E,QAAC,EAAEklF,QAAE,EAAEC,QAAK,EAAE7iE,QAAK,EAAE8iE,QAAI,KACzB5N,EAAS,IACNx3E,GAAI,EAAGklF,GAAKJ,GAAMnwF,OAAQqL,GAAIklF,KAAMllF,GAAC,CAExCmlF,IADAC,GAAON,GAAM9kF,KACuB,GACpCsiB,GAAKvxB,KAAQ+vF,YAAYqE,GAAO1N,EAAO,GAAMD,GAC7C57B,EACyBwpC,GAAK,IAC3BhN,GAAU,GAAK,GAAKhX,GAAcA,IACrCvlB,EACEi8B,GAAWx1D,GAAM7vB,OACG,GAAlB,GAAMqlF,IAAgB1W,GAAcgX,GAAU,GAC9CA,GAAU,GACZ32D,OACI8gE,GAAUxxF,KAAQywF,iCACtBl/D,GAAM9vB,MACN8vB,GAAM7vB,OACN2yF,GAAK,GACLA,GAAK,GACL9iE,GAAM9vB,MACN8vB,GAAM7vB,OACNmpD,EACAC,EACA,EACA,EACAupC,GAAK,GACLd,IACA,EACAzyF,EAAA6kF,gBACA,EACAn+E,MAGA6tE,GACAA,EAAkB3M,SAAS8oB,GAAWxC,cAAY,MAE5CkF,EAERnF,GAAuBnqF,KAAI,CACzBgnB,EACAuiE,EACA58D,GACAigE,GACA,EACA,KACA,UAIF1K,EAAO,IACJ73E,GAAI,EAAGklF,GAAKJ,GAAMnwF,OAAQqL,GAAIklF,KAAMllF,GAAC,CAExCmlF,IADAC,GAAON,GAAM9kF,KACuB,GACpCsiB,GAAKvxB,KAAQ+vF,YAAYqE,GAAO1N,EAASI,EAAO,IAChDj8B,EAAiCwpC,GAAK,GACtCvpC,EAAUi8B,GAAWx1D,GAAM7vB,OAASgvB,GAC9B8gE,GAAUxxF,KAAQywF,iCACtBl/D,GAAM9vB,MACN8vB,GAAM7vB,OACN2yF,GAAK,GACLA,GAAK,GACL9iE,GAAM9vB,MACN8vB,GAAM7vB,OACNmpD,EACAC,EACA,EACA,EACAupC,GAAK,GACLd,IACA,EACAzyF,EAAA6kF,gBACA,EACAn+E,MAGA6tE,GACAA,EAAkB3M,SAAS8oB,GAAWxC,cAAY,MAE5CkF,EAERnF,GAAuBnqF,KAAI,CACzBgnB,EACAuiE,EACA58D,GACAigE,GACA,EACA,KACA,OAIFnc,GACFA,EAAkB/uC,KAChByoD,GAAuBtuF,IAAIquF,YAGtBjB,GAAI,EAAGyG,GAAKvF,GAAuBnrF,OAAQiqF,GAAIyG,KAAMzG,GAAC7tF,KACxDsxF,oBAAoBxmF,MAAK9K,KAAO+uF,GAAuBlB,QAIhE9pF,aAEC44E,EAAAt8E,QAAkB88E,qBACOt6E,IAAxBmvF,EAAiC,KAE7BnsF,GAASmsF,EADfxqF,EAAiE01E,EAAY,GACjCuV,MACxC5sF,GAAM,OACDA,KAGT9B,aAEC44E,EAAAt8E,QAAkBk/E,KACjByT,EACFN,SAEKjnB,MAAM7/C,KAEX7nB,aAEC44E,EAAAt8E,QAAkBm/E,oBACrBtwE,EAA2BguE,EAAY,GACvCkV,EAA4BlV,EAAY,GACxC3tE,EAAI2iF,EAAiBhjF,GAGrBsjF,GAFAhjF,EAAI0iF,EAAiBhjF,EAAI,IAEX,GAAO,GADrBqjF,EAAUhjF,EAAI,GAAO,KAEN8iF,GAASG,IAAWF,IACjC1mE,EAAQu+D,OAAO56E,EAAGC,GAClB6iF,EAAQE,EACRD,EAAQE,GAELtjF,GAAK,EAAGA,EAAIkjF,EAAIljF,GAAK,EAGxBqjF,GAFAhjF,EAAI2iF,EAAiBhjF,IAEP,GAAO,EACrBsjF,GAFAhjF,EAAI0iF,EAAiBhjF,EAAI,IAEX,GAAO,EACjBA,GAAKkjF,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAChD1mE,EAAQ0lD,OAAO/hE,EAAGC,GAClB6iF,EAAQE,EACRD,EAAQE,KAGVzuF,aAEC44E,EAAAt8E,QAAkB69E,eACrB0U,EAAsB1V,OACjBuS,WAAavS,EAAY,GAE1BwV,SACGjnB,MAAM7/C,GACX8mE,EAAc,EACVC,IACF/mE,EAAQmgD,SACR4mB,EAAgB,IAIpB/mE,EAAQ4lD,UAAmE0L,EAAY,KACrFn5E,aAEC44E,EAAAt8E,QAAkBg+E,iBACrBwU,EAAwB3V,EACpByV,IACF/mE,EAAQmgD,SACR4mB,EAAgB,QAEbnC,gBAAgB5kE,EAAkCsxD,KACrDn5E,aAEC44E,EAAAt8E,QAAkBo/E,OACjBuT,EACFL,IAEA/mE,EAAQmgD,WAERhoE,kBAGAA,GAIJ2uF,GAAW1yF,KACRyrE,MAAM7/C,GAET+mE,GACF/mE,EAAQmgD,UAaZyjB,EAAAtvF,UAAA01E,QAAO,SACLhqD,EACAuiE,EACAngF,EACAogF,EACA5Y,EACAH,QAEKwa,cAAgBzB,OAChB2D,SACHnmE,EACAuiE,EACAngF,EAAShO,KACJ66E,aACLrF,OACA3yE,OACAA,EACAwyE,IAcJma,EAAAtvF,UAAAguF,oBAAmB,SACjBtiE,EACA5d,EACAogF,EACA4D,EACAC,eAEKpC,cAAgBzB,OACT2D,SACVnmE,EACA,EACA5d,EAAShO,KACJ+6E,0BACL,EACAiX,EACAC,IAGNzC,EAhkCA,qHCpFgB+E,EACd3+E,EACAC,EACAzJ,EACA0J,EACAsY,EACA0lE,EACAvN,EACA77D,EACAmpE,EACA9kE,EACAhT,EACAhV,OAEIkR,EAAKrC,EAAgBC,GACrBwC,EAAKzC,EAAgBC,EAAS,GAC9BmC,EAAK,EACLI,EAAK,EACL22C,EAAgB,EAChBylC,EAAW,WAENC,IACPz8E,EAAKC,EACLG,EAAKC,EAELJ,EAAKrC,EADLC,GAAUC,GAEVuC,EAAKzC,EAAgBC,EAAS,GAC9B2+E,GAAYzlC,EACZA,EAAgBn/C,KAAK62B,MAAMxuB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,OAGpEq8E,UACO5+E,EAASzJ,EAAM0J,GAAU0+E,EAAWzlC,EAAgB+kC,WAEzDY,GAAeZ,EAASU,GAAYzlC,EAClC4lC,EAAS73E,EAAAsuC,KAAKpzC,EAAIC,EAAIy8E,GACtBE,EAAS93E,EAAAsuC,KAAKhzC,EAAIC,EAAIq8E,GAEtBG,EAAch/E,EAASC,EACvBg/E,EAAcN,EACdO,EAAOjB,EAASppE,EAAQmpE,EAAyB9kE,EAAMX,EAAMrS,GAC5DlG,EAASzJ,EAAM0J,GAAU0+E,EAAWzlC,EAAgBgmC,GACzDN,IAEFC,GAAeK,EAAOP,GAAYzlC,MAK9BkuB,EAJE5jE,EAAOyD,EAAAsuC,KAAKpzC,EAAIC,EAAIy8E,GACpBp7E,EAAOwD,EAAAsuC,KAAKhzC,EAAIC,EAAIq8E,MAItB3tF,EAAQ,KACJiuF,EAAI,CAAIL,EAAQC,EAAQv7E,EAAMC,GACpC4uC,EAAAt3B,OAAOokE,EAAM,EAAG,EAAG,EAAGjuF,EAAUiuF,EAAMA,GACtC/X,EAAU+X,EAAK,GAAKA,EAAK,QAEzB/X,EAAU0X,EAASt7E,MA2BjB47E,EAxBE72E,EAAKxO,KAAKwO,GACVvY,EAAM,GACNqvF,EAAgBL,EAAc/+E,IAAWD,KAG/Ck5C,EAAgB,EAChBylC,EAAWM,EACX78E,EAAKrC,EAHLC,EAASg/E,GAITx8E,EAAKzC,EAAgBC,EAAS,GAG1Bq/E,EAAa,CACfT,QAEIU,EAAgBvlF,KAAKqvC,MAAM5mC,EAAKD,EAAIH,EAAKD,GACzCilE,IACFkY,GAAiBA,EAAgB,GAAK/2E,EAAKA,OAEvC7O,GAAK8J,EAAOs7E,GAAU,EACtBnlF,GAAK8J,EAAOs7E,GAAU,SAC5B/uF,EAAO,GAAC,CAAK0J,EAAGC,GAAIulF,EAAOjB,GAAU,EAAGqB,EAAe/mE,GAChDvoB,UAIA9B,EAAI,EAAGC,EAAKoqB,EAAKxqB,OAAQG,EAAIC,GAAE,CACtCywF,QACI/kF,EAAQE,KAAKqvC,MAAM5mC,EAAKD,EAAIH,EAAKD,MACjCilE,IACFvtE,GAASA,EAAQ,GAAK0O,EAAKA,QAEPvb,IAAlBoyF,EAA2B,KACzB/qE,EAAQxa,EAAQulF,KACpB/qE,GAASA,EAAQ9L,GAAK,EAAKA,EAAK8L,GAAS9L,EAAK,EAAIA,EAAK,EACnDxO,KAAKkO,IAAIoM,GAASq8D,EAAQ,OACrB,KAGX0O,EAAgBvlF,UAEV0lF,EAASrxF,EACXsxF,EAAa,EACVtxF,EAAIC,IAAMD,EAAC,KAEVgiB,EAAM2E,EAAQmpE,EAAyB9kE,EAAMX,EADrC6uD,EAAUj5E,EAAKD,EAAI,EAAIA,GAC2BgY,MAE9DlG,EAASC,EAAS1J,GAClBooF,EAAWzlC,EAAgB+kC,EAASuB,EAAatvE,EAAM,EAAC,MAI1DsvE,GAActvE,KAEZhiB,IAAMqxF,OAGJhB,EAAQnX,EACV7uD,EAAKknE,UAAUtxF,EAAKoxF,EAAQpxF,EAAKD,GACjCqqB,EAAKknE,UAAUF,EAAQrxF,GAC3B2wF,GAAeZ,EAASuB,EAAa,EAAIb,GAAYzlC,EAC/Cx/C,EAAIuN,EAAAsuC,KAAKpzC,EAAIC,EAAIy8E,GACjBllF,EAAIsN,EAAAsuC,KAAKhzC,EAAIC,EAAIq8E,GACvB7uF,EAAOjB,KAAI,CAAE2K,EAAGC,EAAG6lF,EAAa,EAAG3lF,EAAO0kF,IAC1CN,GAAUuB,UAELxvF,iDCtIO0vF,EAAiB3/E,EAAiBC,EAAQzJ,EAAK0J,WACzDkC,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GAC9BjS,EAAS,EACJG,EAAI8R,EAASC,EAAQ/R,EAAIqI,EAAKrI,GAAK+R,EAAM,KAC1CmC,EAAKrC,EAAgB7R,GACrBsU,EAAKzC,EAAgB7R,EAAI,GAC/BH,GAAUgM,KAAK62B,MAAMxuB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DJ,EAAKC,EACLG,EAAKC,SAEAzU,2UCTI4xF,EAAwB,YAgBrBC,EACd5uF,EACA2vE,EACA/9C,EACAo0C,EACAp5D,EACA3M,EACAC,OAEMtF,EAAQoF,EAAK,GAAK2uF,EAClB9zF,EAASmF,EAAK,GAAK2uF,EACnB5pE,EAAU9mB,EAAAkrB,sBAAsBvuB,EAAOC,GAC7CkqB,EAAQ8pE,uBAAwB,UAC1B1jE,EAASpG,EAAQoG,OACjB65C,EAAQ,IAAO8pB,EAAAt1F,QACnBurB,EACA4pE,EACA/hF,EACA,KACA1M,GAEI6uF,EAAen9D,EAAS70B,OAExBiyF,EAAcjmF,KAAKoK,MAAO,SAAuB47E,GACjDE,EAAgB,GACb/xF,EAAI,EAAGA,GAAK6xF,IAAgB7xF,EAAC,KAC9ByD,EAAUixB,EAAS10B,EAAI,GACvBgyF,EAAuBvuF,EAAQm/D,oBAAsBkG,KACtDA,OAGDuL,EAAS2d,EAAqBvuF,EAASV,MACtCsxE,GAGA1tE,MAAM8B,QAAQ4rE,KACjBA,EAAM,CAAIA,YAGNv9D,EAAK,KAAM,UADH9W,EAAI8xF,GACoBp+D,SAAS,KAAK3vB,OAAM,GACjDW,EAAI,EAAG2mC,EAAKgpC,EAAOx0E,OAAQ6E,EAAI2mC,IAAM3mC,EAAC,KACvCutF,EAAgB5d,EAAO3vE,GACvBhB,EAAWuuF,EAAczpB,qBAAdypB,CAAoCxuF,MAChDC,GAAaW,EAAA4Q,WAAWvF,EAAQhM,EAASS,kBAGxC3G,EAAQy0F,EAAcp3D,QACtB8sC,EAAOnqE,EAAM2qE,UACfR,GACFA,EAAKqH,SAASl4D,OAEVkxD,EAASxqE,EAAM6qE,YACjBL,IACFA,EAAOgH,SAASl4D,GAChBkxD,EAAO2F,YAAY,OAErBnwE,EAAMorE,aAAQ9pE,OACR+oE,EAAQoqB,EAAc7pB,cACxBP,GAAgC,IAAvBA,EAAMrpD,aAAkB,KAC7B0zE,EAAUrqB,EAAM0D,mBACjB2mB,EAAO,aAINC,EAAapxF,EAAAkrB,sBACjBimE,EAAQ,GACRA,EAAQ,QACRpzF,EAAS,CACRszF,OAAO,IAEJC,EAAMF,EAAWlkE,OACvBkkE,EAAW1kB,UAAY32D,EACvBq7E,EAAWG,SAAS,EAAG,EAAGD,EAAI30F,MAAO20F,EAAI10F,QACzCH,EAAMkrE,SAAQ,IACR6pB,EAAAj2F,QAAI,CACN+1F,IAAKA,EACLH,QAASA,EACT5nD,OAAQu9B,EAAMmD,YACdwnB,aAAcC,EAAAn2F,QAAgBo2C,OAC9BggD,aAAcD,EAAAn2F,QAAgBo2C,OAC9B5gC,OAAQ+1D,EAAM8D,YACdnuD,QAAS,EACT1a,KAAM+kE,EAAMzxC,UACZzP,MAAOkhD,EAAM+B,WACb5mE,SAAU6kE,EAAM19B,cAChBs/B,eAAgB5B,EAAMgC,2BAItBjsE,EAASJ,EAAM8gB,aAAe,GAChCq0E,EAAiBZ,EAAiBn0F,MAEpC+0F,EAAc,GACdZ,EAAiBn0F,GAAU+0F,EAC3BA,EAAehkD,EAAAryC,QAAa41C,SAAO,GACnCygD,EAAehkD,EAAAryC,QAAasyC,QAAM,GAClC+jD,EAAehkD,EAAAryC,QAAa01C,aAAW,GACvC2gD,EAAehkD,EAAAryC,QAAay1C,OAAK,IAEnC4gD,EAAejvF,EAASgrC,UAAUyL,QAAO,QAAQ,KAAOt5C,KACtD6C,EACAlG,eAKAo1F,EAAatkF,OAAO6R,KAAK4xE,GAC5Br1F,IAAIkc,QACJnZ,KAAKoH,EAAAkkD,2BACQ9qD,GAAPD,EAAI,EAAQ4yF,EAAW/yF,QAAQG,EAAIC,IAAMD,EAAC,KAC3C2yF,EAAiBZ,EAAiBa,EAAW5yF,YACxCxB,KAAQm0F,OACXE,EAAeF,EAAen0F,OAC3BkG,EAAI,EAAG2mC,EAAKwnD,EAAahzF,OAAQ6E,EAAI2mC,EAAI3mC,GAAK,EAAC,CACtDojE,EAAS1F,SAASywB,EAAanuF,EAAI,YAC1BwV,EAAI,EAAG44E,EAAKrgB,EAAW5yE,OAAQqa,EAAI44E,IAAM54E,EAChD4tD,EAASx6C,aAAamlD,EAAWv4D,IACjC4tD,EAASoU,aAAa2W,EAAanuF,aAKpCmjB,EAAQ8+D,aAAa,EAAG,EAAG14D,EAAOvwB,MAAOuwB,EAAOtwB,iBAYzCo1F,EAAU1xF,EAAOqzB,EAAUm1D,OACnCmJ,EAAc,MAChBnJ,EAAS,KACLr+E,EAAIK,KAAKoK,MAAMpK,KAAK0S,MAAMld,EAAM,IAAMowF,GACtChmF,EAAII,KAAKoK,MAAMpK,KAAK0S,MAAMld,EAAM,IAAMowF,GAItCroF,EAGJ,GAFC2P,EAAAC,MAAMxN,EAAG,EAAGq+E,EAAUnsF,MAAQ,GAC7Bqb,EAAAC,MAAMvN,EAAG,EAAGo+E,EAAUlsF,OAAS,GAAKksF,EAAUnsF,OAE5C2a,EAAIwxE,EAAUloF,KAAKyH,GACnBkP,EAAIuxE,EAAUloF,KAAKyH,EAAQ,GAE3BpJ,EADI6pF,EAAUloF,KAAKyH,EAAQ,GACnB,KAAOkP,EAAI,IAAMD,GACzBy5E,EAAcjmF,KAAKoK,MAAO,SAAuBye,EAAS70B,QAC5DG,GAAKA,EAAI8xF,GAAgB,GAC3BkB,EAAenyF,KAAK6zB,EAAS10B,EAAI8xF,EAAc,WAG5CkB,6oBCg8BTC,EA/kCA,SAAA53F,GASK,SACH63F,EACErrE,EACA6I,EACAhhB,EACAzF,EACAogF,EACA8I,EACAC,OAPFz2F,EASEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK02F,SAAWxrE,EAMhBlrB,EAAK8zB,YAAcC,EAMnB/zB,EAAK47C,QAAU7oC,EAMf/S,EAAK22F,WAAarpF,EAMlBtN,EAAKmvF,cAAgBzB,EAMrB1tF,EAAK42F,kBAAoBJ,EAMzBx2F,EAAK62F,eAAiBJ,EAMtBz2F,EAAK82F,kBAAoB,KAMzB92F,EAAK+2F,oBAAsB,KAM3B/2F,EAAKg3F,kBAAoB,KAMzBh3F,EAAKi3F,WAAa,KAMlBj3F,EAAKk3F,aAAe,KAMpBl3F,EAAKirE,OAAS,KAMdjrE,EAAKm3F,cAAgB,EAMrBn3F,EAAKo3F,cAAgB,EAMrBp3F,EAAKq3F,aAAe,EAMpBr3F,EAAKs3F,cAAgB,EAMrBt3F,EAAKu3F,cAAgB,EAMrBv3F,EAAKw3F,cAAgB,EAMrBx3F,EAAKy3F,sBAAuB,EAM5Bz3F,EAAK03F,eAAiB,EAMtB13F,EAAK23F,YAAW,CAAI,EAAG,GAMvB33F,EAAK43F,YAAc,EAMnB53F,EAAKsrE,MAAK,GAMVtrE,EAAKmjF,aAAe,EAMpBnjF,EAAKojF,aAAe,EAMpBpjF,EAAKqjF,qBAAsB,EAM3BrjF,EAAKsjF,cAAgB,EAMrBtjF,EAAK63F,WAAU,CAAI,EAAG,GAMtB73F,EAAKujF,eAAiB,KAMtBvjF,EAAKyjF,iBAAmB,KAMxBzjF,EAAK2jF,WAAa,KAMlB3jF,EAAKkvF,kBAAiB,GAMtBlvF,EAAK83F,mBAAqB7xF,EAAAuuB,kBA/NQujE,EAAAxB,EAAA73F,GAyOpC63F,EAAA/2F,UAAAw4F,YAAW,SAAC9iF,EAAiBC,EAAQzJ,EAAK0J,WAC9B61D,YAGJumB,EAAmBhqC,EAAAC,YACvBvyC,EACAC,EACAzJ,EACA,EAACpM,KACIq3F,WAAUr3F,KACV4vF,mBAEDhkE,EAAO5rB,KAAQo3F,SACfuB,EAAc34F,KAAQw4F,mBACtBrC,EAAQvqE,EAAQwF,YACI,QAAjB4mE,gBACPpsE,EAAQwF,YAAc+kE,EAAKn2F,KAAQg4F,mBAEjCjxF,EAAQ/G,KAAQo4F,oBACXD,uBACPpxF,GAAQ/G,KAAS6vF,uBAEV9rF,EAAI,EAAGC,EAAKkuF,EAAiBtuF,OAAQG,EAAIC,EAAID,GAAK,EAAC,KACpDwL,EAAI2iF,EAAiBnuF,GAAC/D,KAAS63F,cAC/BroF,EAAI0iF,EAAiBnuF,EAAI,GAAC/D,KAAS83F,iBAE1B,IAAb/wF,GACuB,GADT/G,KACTq4F,YAAY,IACM,GADCr4F,KACnBq4F,YAAY,GAAO,KAElB7kD,EAAUjkC,EAACvP,KAAQ63F,cACnBpkD,EAAUjkC,EAACxP,KAAQ83F,cACzBnxF,EAAAC,QACE+xF,EACAnlD,EACAC,EACA,EACA,EACA1sC,GACCysC,GACAC,GAEH7nB,EAAQyF,aAAavmB,MAAM8gB,EAAS+sE,GACpC/sE,EAAQ+E,UAAU6iB,EAASC,GAC3B7nB,EAAQlB,MAAK1qB,KAAMq4F,YAAY,GAACr4F,KAAQq4F,YAAY,IACpDzsE,EAAQ6F,UAASzxB,KACV2rE,OAAM3rE,KACNi4F,cAAaj4F,KACbk4F,cAAal4F,KACbs4F,YAAWt4F,KACX+3F,cAAY/3F,KACX63F,eAAa73F,KACb83F,cAAa93F,KACds4F,YAAWt4F,KACX+3F,cAEPnsE,EAAQyF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QAEpCzF,EAAQ6F,UAASzxB,KACV2rE,OAAM3rE,KACNi4F,cAAaj4F,KACbk4F,cAAal4F,KACbs4F,YAAWt4F,KACX+3F,aACLxoF,EACAC,EAACxP,KACIs4F,YAAWt4F,KACX+3F,cAIe,QAAjBC,gBACPpsE,EAAQwF,YAAc+kE,KAW1Bc,EAAA/2F,UAAA04F,UAAS,SAAChjF,EAAiBC,EAAQzJ,EAAK0J,WAC5BuuE,YAAwB,KAAdrkF,KAASgsE,YAGpBiY,gBAAcjkF,KAChB64F,qBAAoB74F,KAAMikF,qBAExBE,kBAAgBnkF,KAClB84F,uBAAsB94F,KAAMmkF,uBAE9B4U,qBAAoB/4F,KAAMqkF,gBACzB6N,EAAmBhqC,EAAAC,YACvBvyC,EACAC,EACAzJ,EACA0J,EAAM9V,KACDq3F,WAAUr3F,KACV4vF,mBAEDhkE,EAAO5rB,KAAQo3F,SACjBrwF,EAAQ/G,KAAQgkF,uBACXD,sBACPh9E,GAAQ/G,KAAS6vF,eAEZh6E,EAASzJ,EAAKyJ,GAAUC,EAAM,KAC7BvG,EAAI2iF,EAAiBr8E,GAAM7V,KAAS6jF,aACpCr0E,EAAI0iF,EAAiBr8E,EAAS,GAAC7V,KAAS8jF,gBAE/B,IAAb/8E,GACsB,GADR/G,KACTu4F,WAAW,IACM,GADCv4F,KAClBu4F,WAAW,GAAO,KAEjBI,EAAiBhyF,EAAAC,QAAgB5G,KAChCw4F,mBACLjpF,EACAC,EACA,EACA,EACAzI,GACCwI,GACAC,GAEHoc,EAAQyF,aAAavmB,MAAM8gB,EAAS+sE,GACpC/sE,EAAQ+E,UAAUphB,EAAGC,GACrBoc,EAAQlB,MAAK1qB,KAAMu4F,WAAW,GAACv4F,KAAQu4F,WAAW,SACzCpU,kBACPv4D,EAAQotE,WAAUh5F,KAAMgsE,MAAO,EAAG,QAE3BiY,gBACPr4D,EAAQqtE,SAAQj5F,KAAMgsE,MAAO,EAAG,GAElCpgD,EAAQyF,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,aAE3B8yD,kBACPv4D,EAAQotE,WAAUh5F,KAAMgsE,MAAOz8D,EAAGC,QAE3By0E,gBACPr4D,EAAQqtE,SAAQj5F,KAAMgsE,MAAOz8D,EAAGC,MAexCynF,EAAA/2F,UAAAg5F,cAAa,SAACtjF,EAAiBC,EAAQzJ,EAAK0J,EAAQqjF,OAC5CvtE,EAAO5rB,KAAQo3F,SACflF,EAAmBhqC,EAAAC,YACvBvyC,EACAC,EACAzJ,EACA0J,EAAM9V,KACDq3F,WAAUr3F,KACV4vF,mBAEPhkE,EAAQu+D,OAAO+H,EAAiB,GAAIA,EAAiB,QACjDtuF,EAASsuF,EAAiBtuF,OAC1Bu1F,IACFv1F,GAAU,WAEHG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC/B6nB,EAAQ0lD,OAAO4gB,EAAiBnuF,GAAImuF,EAAiBnuF,EAAI,WAEvDo1F,GACFvtE,EAAQ+lD,YAEHvlE,GAWT6qF,EAAA/2F,UAAAk5F,WAAU,SAACxjF,EAAiBC,EAAQuvC,EAAMtvC,WAC/B/R,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAC1C8R,EAAM7V,KAAQk5F,cACZtjF,EACAC,EACAuvC,EAAKrhD,GACL+R,GACA,UAGGD,GAUTohF,EAAA/2F,UAAAggF,WAAU,SAACz4E,MACJW,EAAA4Q,WAAUhZ,KAAMs8C,QAAS70C,EAASS,sBAG9ByvF,YAAU33F,KAAS43F,aAAY,MAC7BD,YAAU33F,KACZ64F,qBAAoB74F,KAAM23F,iBAExBC,cAAY53F,KACd84F,uBAAsB94F,KAAM43F,kBAE7B1F,EAAmB/rC,EAAAkzC,gBACvB5xF,EAAQzH,KACHq3F,WAAUr3F,KACV4vF,mBAED37E,EAAKi+E,EAAiB,GAAKA,EAAiB,GAC5Ch+E,EAAKg+E,EAAiB,GAAKA,EAAiB,GAC5CvzC,EAAS/uC,KAAK62B,KAAKxyB,EAAKA,EAAKC,EAAKA,GAClC0X,EAAO5rB,KAAQo3F,SACrBxrE,EAAQwlD,YACRxlD,EAAQylD,IACN6gB,EAAiB,GACjBA,EAAiB,GACjBvzC,EACA,EACA,EAAI/uC,KAAKwO,SAEFu5E,YACP/rE,EAAQ8/C,YAEDksB,cACPhsE,EAAQmgD,SAGE,UAALC,OAAKhsE,KACP44F,UAAUnxF,EAASkmC,YAAa,EAAG,EAAG,KAW/CspD,EAAA/2F,UAAAimE,SAAQ,SAAC5kE,QACF87E,mBAAmB97E,EAAM2qE,UAAW3qE,EAAM6qE,kBAC1CgV,cAAc7/E,EAAM4qE,iBACpBoV,aAAahgF,EAAM8qE,YAM1B4qB,EAAA/2F,UAAAmxB,aAAY,SAACrjB,QACNqpF,WAAarpF,GAUpBipF,EAAA/2F,UAAA+/E,aAAY,SAACx4E,UACEA,EAASgrC,gBAEfC,EAAAryC,QAAay1C,WACXirC,UACmDt5E,cAGrDirC,EAAAryC,QAAa01C,iBACXwqC,eACwD94E,cAG1DirC,EAAAryC,QAAa41C,aACXgrC,YACqDx5E,cAGvDirC,EAAAryC,QAAa61C,iBACXyqC,eACwDl5E,cAG1DirC,EAAAryC,QAAa81C,uBACXsqC,oBAC6Dh5E,cAG/DirC,EAAAryC,QAAa+1C,mBACXyqC,iBAC0Dp5E,cAG5DirC,EAAAryC,QAAag2C,yBACXgqC,uBACgE54E,cAGlEirC,EAAAryC,QAAasyC,YACXutC,WACoDz4E,KAiB/DwvF,EAAA/2F,UAAAkgF,YAAW,SAAC54E,EAASjG,OACbkG,EAAWlG,EAAMgrE,qBAANhrE,CAA4BiG,GACxCC,GAAaW,EAAA4Q,WAAUhZ,KAAMs8C,QAAS70C,EAASS,oBAG/Ci+D,SAAS5kE,QACT0+E,aAAax4E,KASpBwvF,EAAA/2F,UAAAmgF,uBAAsB,SAAC54E,WACf6xF,EAAa7xF,EAAS8xF,qBACnBx1F,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAAC/D,KAC5CigF,aAAaqZ,EAAWv1F,KAUjCkzF,EAAA/2F,UAAA6gF,UAAS,SAACt5E,QACC6vF,oBACP7vF,EAAiEA,EAASmiD,oBAAmB5pD,KACtFs3F,kBAAiBt3F,KACjBu3F,qBAGH3hF,EAAkBnO,EAASurC,qBAC3Bl9B,EAASrO,EAAS4rC,iBACfs4B,QAAM3rE,KACR04F,YAAY9iF,EAAiB,EAAGA,EAAgBhS,OAAQkS,GAEjD,UAALk2D,OAAKhsE,KACP44F,UAAUhjF,EAAiB,EAAGA,EAAgBhS,OAAQkS,IAU/DmhF,EAAA/2F,UAAAygF,eAAc,SAACl5E,QACJ6vF,oBACP7vF,EAAsEA,EAASmiD,oBAAmB5pD,KAC3Fs3F,kBAAiBt3F,KACjBu3F,qBAGH3hF,EAAkBnO,EAASurC,qBAC3Bl9B,EAASrO,EAAS4rC,iBACfs4B,QAAM3rE,KACR04F,YAAY9iF,EAAiB,EAAGA,EAAgBhS,OAAQkS,GAEjD,UAALk2D,OAAKhsE,KACP44F,UAAUhjF,EAAiB,EAAGA,EAAgBhS,OAAQkS,IAU/DmhF,EAAA/2F,UAAAqgF,eAAc,SAAC94E,WACJ6vF,oBACP7vF,EAAsEA,EAASmiD,oBAAmB5pD,KAC3Fs3F,kBAAiBt3F,KACjBu3F,iBAGJnvF,EAAA4Q,WAAUhZ,KAAMs8C,QAAS70C,EAASS,sBAG9B0vF,aAAY,MACdkB,uBAAsB94F,KAAM43F,kBAC3BhsE,EAAO5rB,KAAQo3F,SACfxhF,EAAkBnO,EAASurC,qBACjCpnB,EAAQwlD,iBACH8nB,cACHtjF,EACA,EACAA,EAAgBhS,OAChB6D,EAAS4rC,aACT,GAEFznB,EAAQmgD,YAEI,UAALC,MAAK,KACNwtB,EAAe/xF,EAAS09E,uBACzByT,UAAUY,EAAc,EAAG,EAAG,MAUvCvC,EAAA/2F,UAAAugF,oBAAmB,SAACh5E,QACT6vF,oBACP7vF,EAA2EA,EAASmiD,oBAAmB5pD,KAChGs3F,kBAAiBt3F,KACjBu3F,qBAGHkC,EAAiBhyF,EAASS,eAC3BE,EAAA4Q,WAAUhZ,KAAMs8C,QAASm9C,YAGrB7B,aAAY,MACdkB,uBAAsB94F,KAAM43F,kBAC3BhsE,EAAO5rB,KAAQo3F,SACfxhF,EAAkBnO,EAASurC,qBAC7Bn9B,EAAS,EACPuvC,EAAqC39C,EAAS88C,UAC9CzuC,EAASrO,EAAS4rC,YACxBznB,EAAQwlD,oBACCrtE,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAC1C8R,EAAM7V,KAAQk5F,cACZtjF,EACAC,EACAuvC,EAAKrhD,GACL+R,GACA,GAGJ8V,EAAQmgD,YAEI,UAALC,MAAK,KACN0tB,EAAgBjyF,EAAS29E,wBAC1BwT,UAAUc,EAAe,EAAGA,EAAc91F,OAAQ,MAU3DqzF,EAAA/2F,UAAA+gF,YAAW,SAACx5E,WACD6vF,oBACP7vF,EAAmEA,EAASmiD,oBAAmB5pD,KACxFs3F,kBAAiBt3F,KACjBu3F,iBAGJnvF,EAAA4Q,WAAUhZ,KAAMs8C,QAAS70C,EAASS,sBAG9B0vF,cAAY53F,KAAS23F,WAAU,MAC7BA,YAAU33F,KACZ64F,qBAAoB74F,KAAM23F,iBAExBC,cAAY53F,KACd84F,uBAAsB94F,KAAM43F,kBAE7BhsE,EAAO5rB,KAAQo3F,SACrBxrE,EAAQwlD,iBACHgoB,WACH3xF,EAASo8C,6BACT,EAC8Bp8C,EAAS88C,UACvC98C,EAAS4rC,kBAEFskD,YACP/rE,EAAQ8/C,YAEDksB,cACPhsE,EAAQmgD,YAGE,UAALC,MAAK,KACN2tB,EAAoBlyF,EAAS+8C,4BAC9Bo0C,UAAUe,EAAmB,EAAG,EAAG,MAS5C1C,EAAA/2F,UAAA2gF,iBAAgB,SAACp5E,WACN6vF,oBACP7vF,EAAwEA,EAASmiD,oBAAmB5pD,KAC7Fs3F,kBAAiBt3F,KACjBu3F,iBAGJnvF,EAAA4Q,WAAUhZ,KAAMs8C,QAAS70C,EAASS,sBAG9B0vF,cAAY53F,KAAS23F,WAAU,MAC7BA,YAAU33F,KACZ64F,qBAAoB74F,KAAM23F,iBAExBC,cAAY53F,KACd84F,uBAAsB94F,KAAM43F,kBAE7BhsE,EAAO5rB,KAAQo3F,SACfxhF,EAAkBnO,EAASo8C,6BAC7BhuC,EAAS,EACP61C,EAAQjkD,EAASg1E,WACjB3mE,EAASrO,EAAS4rC,YACxBznB,EAAQwlD,oBACCrtE,EAAI,EAAGC,EAAK0nD,EAAM9nD,OAAQG,EAAIC,IAAMD,EAAC,KACtCqhD,EAAOsG,EAAM3nD,GACnB8R,EAAM7V,KAAQo5F,WAAWxjF,EAAiBC,EAAQuvC,EAAMtvC,QAEjD6hF,YACP/rE,EAAQ8/C,YAEDksB,cACPhsE,EAAQmgD,YAGE,UAALC,MAAK,KACN4tB,EAAqBnyF,EAAS49E,6BAC/BuT,UAAUgB,EAAoB,EAAGA,EAAmBh2F,OAAQ,MAQrEqzF,EAAA/2F,UAAA24F,qBAAoB,SAAClU,OACb/4D,EAAO5rB,KAAQo3F,SACfyC,EAAgB75F,KAAQw3F,kBACzBqC,EAMCA,EAAiBroB,WAAamT,EAAUnT,YAC1CqoB,EAAiBroB,UAAYmT,EAAUnT,UACvC5lD,EAAQ4lD,UAAYmT,EAAUnT,YAPhC5lD,EAAQ4lD,UAAYmT,EAAUnT,eACzBgmB,kBAAiB,CACpBhmB,UAAWmT,EAAUnT,aAc3BylB,EAAA/2F,UAAA44F,uBAAsB,SAAClU,OACfh5D,EAAO5rB,KAAQo3F,SACf0C,EAAkB95F,KAAQy3F,oBAC3BqC,GAoBCA,EAAmBhqB,SAAW8U,EAAY9U,UAC5CgqB,EAAmBhqB,QAAU8U,EAAY9U,QACzClkD,EAAQkkD,QAAU8U,EAAY9U,SAE5BlkD,EAAQ8lD,cACL9mE,EAAAC,OAAOivF,EAAmB3pB,SAAUyU,EAAYzU,WACnDvkD,EAAQ8lD,YACLooB,EAAmB3pB,SAAWyU,EAAYzU,UAG3C2pB,EAAmB1pB,gBAAkBwU,EAAYxU,iBACnD0pB,EAAmB1pB,eAAiBwU,EAAYxU,eAChDxkD,EAAQwkD,eAAiBwU,EAAYxU,iBAGrC0pB,EAAmB9pB,UAAY4U,EAAY5U,WAC7C8pB,EAAmB9pB,SAAW4U,EAAY5U,SAC1CpkD,EAAQokD,SAAW4U,EAAY5U,UAE7B8pB,EAAmBroB,WAAamT,EAAYnT,YAC9CqoB,EAAmBroB,UAAYmT,EAAYnT,UAC3C7lD,EAAQ6lD,UAAYmT,EAAYnT,WAE9BqoB,EAAmB5pB,YAAc0U,EAAY1U,aAC/C4pB,EAAmB5pB,WAAa0U,EAAY1U,WAC5CtkD,EAAQskD,WAAa0U,EAAY1U,YAE/B4pB,EAAmBjqB,aAAe+U,EAAY/U,cAChDiqB,EAAmBjqB,YAAc+U,EAAY/U,YAC7CjkD,EAAQikD,YAAc+U,EAAY/U,eAhDpCjkD,EAAQkkD,QAAU8U,EAAY9U,QAC1BlkD,EAAQ8lD,cACV9lD,EAAQ8lD,YAAYkT,EAAYzU,UAChCvkD,EAAQwkD,eAAiBwU,EAAYxU,gBAEvCxkD,EAAQokD,SAAW4U,EAAY5U,SAC/BpkD,EAAQ6lD,UAAYmT,EAAYnT,UAChC7lD,EAAQskD,WAAa0U,EAAY1U,WACjCtkD,EAAQikD,YAAc+U,EAAY/U,iBAC7B4nB,oBAAmB,CACtB3nB,QAAS8U,EAAY9U,QACrBK,SAAUyU,EAAYzU,SACtBC,eAAgBwU,EAAYxU,eAC5BJ,SAAU4U,EAAY5U,SACtByB,UAAWmT,EAAYnT,UACvBvB,WAAY0U,EAAY1U,WACxBL,YAAa+U,EAAY/U,eAyC/BonB,EAAA/2F,UAAA64F,qBAAoB,SAAClU,OACbj5D,EAAO5rB,KAAQo3F,SACf2C,EAAgB/5F,KAAQ03F,kBACxB1R,EAAYnB,EAAUmB,UACxBnB,EAAUmB,UACVllF,EAAA6lF,iBACCoT,GAUCA,EAAiBhrE,MAAQ81D,EAAU91D,OACrCgrE,EAAiBhrE,KAAO81D,EAAU91D,KAClCnD,EAAQmD,KAAO81D,EAAU91D,MAEvBgrE,EAAiB/T,WAAaA,IAChC+T,EAAiB/T,UAA4CA,EAC7Dp6D,EAAQo6D,UAA4CA,GAElD+T,EAAiBnT,cAAgB/B,EAAU+B,eAC7CmT,EAAiBnT,aAAkD/B,EAAU+B,aAC7Eh7D,EAAQg7D,aAAkD/B,EAAU+B,gBAnBtEh7D,EAAQmD,KAAO81D,EAAU91D,KACzBnD,EAAQo6D,UAA4CA,EACpDp6D,EAAQg7D,aAAkD/B,EAAU+B,kBAC/D8Q,kBAAiB,CACpB3oE,KAAM81D,EAAU91D,KAChBi3D,UAAWA,EACXY,aAAc/B,EAAU+B,gBAyB9BqQ,EAAA/2F,UAAAm9E,mBAAkB,SAAC7L,EAAW3B,MACvB2B,OAGG8L,EAAiB9L,EAAUlB,gBAC5BqnB,WAAU,CACbnmB,UAAWhB,EAAAC,YACT6M,GAAkCx8E,EAAAywE,wBAN1BvxE,KACP23F,WAAa,QASf9nB,OAGG0N,EAAmB1N,EAAYS,WAC/BkN,EAAqB3N,EAAYiB,aACjC2M,EAAsB5N,EAAYc,cAClCgN,EAA4B9N,EAAYe,oBACxCiN,EAAsBhO,EAAYgB,cAClCiN,EAAmBjO,EAAYxnE,WAC/B01E,EAAwBlO,EAAYkB,qBACrC6mB,aAAY,CACf9nB,aACyBjtE,IAAvB26E,EACIA,EACA18E,EAAAivE,eACNI,SAAUsN,GAA4C38E,EAAA48E,gBACtDtN,eAAgBuN,GAEZ78E,EAAA88E,sBACJ5N,cAC0BntE,IAAxBg7E,EACIA,EACA/8E,EAAAmvE,gBACNwB,UAASzxE,KACFw0B,kBACiB3xB,IAArBi7E,EACGA,EACAh9E,EAAA4vE,kBACNR,gBAC4BrtE,IAA1Bk7E,EACIA,EACAj9E,EAAAkwE,kBACNnB,YAAaW,EAAAC,YACX8M,GAAsCz8E,EAAAyvE,0BAjC5BvwE,KACT43F,aAAe,MA4CxBX,EAAA/2F,UAAAkhF,cAAa,SAACC,MACPA,OAGGpQ,EAAYoQ,EAAWlnD,aACxB82C,OAGG+oB,EAAc3Y,EAAWtS,YAEzBkrB,EAAa5Y,EAAWlV,SAAS,GACjC+tB,EAAc7Y,EAAW3R,YACzByqB,EAAa9Y,EAAW7O,qBACzBqlB,cAAgBmC,EAAY,QAC5BlC,cAAgBkC,EAAY,QAC5BjC,aAAe9mB,EAAU,QACzBtF,OAASsuB,OACTjC,cAAgB3W,EAAW9+D,kBAC3B01E,cAAgBiC,EAAY,QAC5BhC,cAAgBgC,EAAY,QAC5B/B,qBAAuB9W,EAAWzT,yBAClCwqB,eAAiB/W,EAAWnzC,mBAC5BmqD,YAAW,MACT7jE,YAAc2lE,EAAW,QACzB3lE,YAAc2lE,EAAW,SAE3B7B,YAAcrnB,EAAU,QArBjBjxE,KACP2rE,OAAS,UALH3rE,KACR2rE,OAAS,MAmClBsrB,EAAA/2F,UAAAqhF,aAAY,SAACC,MACNA,OAGGwF,EAAgBxF,EAAUtV,aAC3B8a,OAGGoT,EAAqBpT,EAAc1W,gBACpC2T,eAAc,CACjBzS,UAAWhB,EAAAC,YACT2pB,GAA0Ct5F,EAAAywE,wBAN9BvxE,KACXikF,eAAiB,SASlBgD,EAAkBzF,EAAUpV,eAC7B6a,OAGGoT,EAAuBpT,EAAgB3W,WACvCgqB,EAAyBrT,EAAgBnW,aACzCypB,EAA0BtT,EAAgBtW,cAC1C6pB,EAAgCvT,EAAgBrW,oBAChD6pB,EAA0BxT,EAAgBpW,cAC1C6pB,EAAuBzT,EAAgB5+E,WACvCsyF,EAA4B1T,EAAgBlW,qBAC7CoT,iBAAgB,CACnBrU,aAC6BjtE,IAA3By3F,EACIA,EACAx5F,EAAAivE,eACNI,SAAUoqB,GAENz5F,EAAA48E,gBACJtN,eAAgBoqB,GAEZ15F,EAAA88E,sBACJ5N,cAC8BntE,IAA5B43F,EACIA,EACA35F,EAAAmvE,gBACNwB,eAC2B5uE,IAAzB63F,EACIA,EACA55F,EAAA4vE,iBACNR,gBACgCrtE,IAA9B83F,EACIA,EACA75F,EAAAkwE,kBACNnB,YAAaW,EAAAC,YACX4pB,GAA8Cv5F,EAAAyvE,0BAlChCvwE,KACbmkF,iBAAmB,SAqCpByW,EAAWpZ,EAAU0F,UACrBY,EAActG,EAAUuG,aACxBC,EAAcxG,EAAUyG,aACxBC,EAAqB1G,EAAU5T,oBAC/Bua,EAAe3G,EAAUtzC,cACzBm5C,EAAY7F,EAAUhP,gBACtBqoB,EAAWrZ,EAAUnV,UACrByuB,EAAgBtZ,EAAUiG,eAC1BsT,EAAmBvZ,EAAUkG,uBAC9BrD,WAAU,CACbt1D,UAAmBlsB,IAAb+3F,EAAyBA,EAAW95F,EAAAqmF,YAC1CnB,eACoBnjF,IAAlBi4F,EAA8BA,EAAgBh6F,EAAA6lF,iBAChDC,kBACuB/jF,IAArBk4F,EACIA,EACAj6F,EAAA+lF,0BAEH7a,WAAqBnpE,IAAbg4F,EAAyBA,EAAQ,QACzChX,kBACahhF,IAAhBilF,EAAyB9nF,KAAQw0B,YAAcszD,EAAc,OAC1DhE,kBACajhF,IAAhBmlF,EAAyBhoF,KAAQw0B,YAAcwzD,EAAc,OAC1DjE,yBACoBlhF,IAAvBqlF,GAAmCA,OAChClE,mBAAiCnhF,IAAjBslF,EAA6BA,EAAe,OAC5DoQ,WAAU,MACR/jE,YAAc6yD,EAAU,QACxB7yD,YAAc6yD,EAAU,SAjFnBrnF,KACPgsE,MAAK,IAoFhBirB,EA7kCA,CAAsChY,EAAA5+E,iFCjCtC26F,EAWE,CANAC,SAAQ,WAKRxkD,OAAM,s9BCyaRykD,EAtYA,SAAA97F,GAGK,SACH+7F,EAAY7iE,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAW,GAKrB/W,OAA8B1e,IAApBvD,EAAQiiB,QAAwBjiB,EAAQiiB,QAAU,EAK5Dxa,OAAgClE,IAArBvD,EAAQyH,SAAyBzH,EAAQyH,SAAW,EAK/D2jB,OAA0B7nB,IAAlBvD,EAAQorB,MAAsBprB,EAAQorB,MAAQ,EAKtD8iD,OACuB3qE,IAA3BvD,EAAQkuE,gBAA+BluE,EAAQkuE,gBAEjD9sE,EAAAtB,EAAAW,KAAAC,KAAA,CACEuhB,QAASA,EACTxa,SAAUA,EACV2jB,MAAOA,EACP+iD,kBAC2B5qE,IAAzBvD,EAAQmuE,aAA6BnuE,EAAQmuE,aAAY,CAAI,EAAG,GAClED,eAAgBA,WAObpJ,aAA6BvhE,IAAnBvD,EAAQ+uC,OAAuB/uC,EAAQ+uC,OAAM,CAAI,GAAK,IAMrE3tC,EAAK06F,kBAAoB,KAMzB16F,EAAK26F,mBACsBx4F,IAAzBvD,EAAQg8F,aACJh8F,EAAQg8F,aACRC,EAAAl7F,QAAWiX,SAMjB5W,EAAK86F,mBACsB34F,IAAzBvD,EAAQi3F,aACJj3F,EAAQi3F,aACRC,EAAAn2F,QAAgB46F,SAMtBv6F,EAAK+6F,mBACsB54F,IAAzBvD,EAAQm3F,aACJn3F,EAAQm3F,aACRD,EAAAn2F,QAAgB46F,SAMtBv6F,EAAKg7F,kBACqB74F,IAAxBvD,EAAQsb,YAA4Btb,EAAQsb,YAAc,KAIzD,IACGgxD,OAAwB/oE,IAAhBvD,EAAQ82F,IAAoB92F,EAAQ82F,IAAM,KAKlDH,OAA8BpzF,IAApBvD,EAAQ22F,QAAwB32F,EAAQ22F,QAAU,KAK9Dt7E,EAAMrb,EAAQqb,IAElB/J,EAAAC,cAAiBhO,IAAR8X,GAAqBixD,GAAQ,GACtCh7D,EAAAC,QAAQ+6D,GAAUA,GAASqqB,EAAU,QAExBpzF,IAAR8X,GAAoC,IAAfA,EAAI/W,SAAiBgoE,IAC7CjxD,EAAuCixD,EAAOjxD,KAAOpU,EAAAwd,OAAO6nD,IAE9Dh7D,EAAAC,YAAehO,IAAR8X,GAAqBA,EAAI/W,OAAS,EAAG,GAIzC,IACG+nF,OACY9oF,IAAhBvD,EAAQqb,IAAoB80D,EAAApvE,QAAWgmC,KAAOopC,EAAApvE,QAAW0lC,cAM3DrlC,EAAKoyE,YAA2BjwE,IAAlBvD,EAAQub,MAAsBK,EAAA02D,QAAQtyE,EAAQub,OAAS,KAMrEna,EAAKi7F,WAAaC,EAAArpF,IAChBq5D,EACuBjxD,EACvBs7E,EACAv1F,EAAKg7F,aACL/P,EACAjrF,EAAKoyE,QAOPpyE,EAAKm7F,aAA6Bh5F,IAAnBvD,EAAQuW,OAAuBvW,EAAQuW,OAAM,CAAI,EAAG,GAKnEnV,EAAKo7F,mBACsBj5F,IAAzBvD,EAAQy8F,aACJz8F,EAAQy8F,aACRR,EAAAl7F,QAAWiX,SAMjB5W,EAAK2tE,QAAU,KAMf3tE,EAAK+tE,WAAyB5rE,IAAjBvD,EAAQuH,KAAqBvH,EAAQuH,KAAO,cA3J1Cm1F,EAAAb,EAAA/7F,GAmKjB+7F,EAAAj7F,UAAA0+B,MAAK,eACGlU,EAAK1qB,KAAQ2tE,sBACRwtB,EAAI,CACb9sD,OAAMruC,KAAOokE,QAAQt8D,QACrBwzF,aAAYt7F,KAAOq7F,cACnB9E,aAAYv2F,KAAOw7F,cACnB/E,aAAYz2F,KAAOy7F,cACnB7gF,YAAW5a,KAAO07F,aAClB7gF,MAAK7a,KACE8yE,QAAM9yE,KAAS8yE,OAAOhrE,MAAK9H,KACvB8yE,OAAOhrE,QAAK9H,KACZ8yE,aAAUjwE,EACrB8X,IAAG3a,KAAOi8F,SACVpmF,OAAM7V,KAAO67F,QAAQ/zF,QACrBi0F,aAAY/7F,KAAO87F,cACnBj1F,KAAqB,OAAjB7G,KAAOyuE,MAAczuE,KAAQyuE,MAAM3mE,aAAUjF,EACjD0e,QAAOvhB,KAAOuiB,aACdmI,MAAOhgB,MAAM8B,QAAQke,GAASA,EAAM5iB,QAAU4iB,EAC9C3jB,SAAQ/G,KAAOkuC,cACfs/B,eAAcxtE,KAAO4tE,uBAUzButB,EAAAj7F,UAAA6uE,UAAS,mBACEqsB,kBAAiB,OAAAp7F,KACZo7F,sBAEV/sD,EAAMruC,KAAQokE,QACZv9D,EAAI7G,KAAQm6B,kBAEXqhE,eAAiBhF,EAAAn2F,QAAgB46F,UAAQj7F,KACzCy7F,eAAiBjF,EAAAn2F,QAAgB46F,SAAQ,KAEzCp0F,EAAI,OACA,KAETwnC,EAAMruC,KAAQokE,QAAQt8D,aACb0zF,eAAiBhF,EAAAn2F,QAAgB46F,WACxC5sD,EAAO,IAAMxnC,EAAK,SAEX40F,eAAiBjF,EAAAn2F,QAAgB46F,WACxC5sD,EAAO,IAAMxnC,EAAK,YAIbw0F,eAAiBE,EAAAl7F,QAAWiX,SAAQ,KACtCzQ,EAAI,OACA,KAELwnC,IAAMruC,KAAUokE,UAClB/1B,EAAMruC,KAAQokE,QAAQt8D,cAGjBuzF,eAAiBE,EAAAl7F,QAAWkX,WAASvX,KACrCq7F,eAAiBE,EAAAl7F,QAAWgX,eAEjCg3B,EAAO,IAAMA,EAAO,GAAKxnC,EAAK,SAGzBw0F,eAAiBE,EAAAl7F,QAAW+W,aAAWpX,KACvCq7F,eAAiBE,EAAAl7F,QAAWgX,eAEjCg3B,EAAO,IAAMA,EAAO,GAAKxnC,EAAK,QAG5B4mE,EAAYztE,KAAQ6tE,yBAC1Bx/B,EAAO,IAAMo/B,EAAa,GAC1Bp/B,EAAO,IAAMo/B,EAAa,QAErB2tB,kBAAoB/sD,OACb+sD,mBAUdD,EAAAj7F,UAAAg8F,UAAS,SAAC7tD,QACH+1B,QAAU/1B,OACV+sD,kBAAoB,MAQ3BD,EAAAj7F,UAAAowE,SAAQ,uBACMwC,QASdqoB,EAAAj7F,UAAAisE,SAAQ,SAAC13C,eACKknE,WAAWxvB,SAAS13C,IASlC0mE,EAAAj7F,UAAAmvE,cAAa,SAAC56C,eACAknE,WAAWtsB,cAAc56C,IAMvC0mE,EAAAj7F,UAAAovE,aAAY,uBACEqsB,WAAWxhE,WAMzBghE,EAAAj7F,UAAAqvE,yBAAwB,uBACVD,gBAMd6rB,EAAAj7F,UAAAsvE,cAAa,uBACCmsB,WAAWnsB,iBAMzB2rB,EAAAj7F,UAAA8uE,qBAAoB,uBACN2sB,WAAW3sB,wBAQzBmsB,EAAAj7F,UAAAwvE,UAAS,mBACErB,QAAO,OAAAruE,KACFquE,YAEVx4D,EAAM7V,KAAQ67F,gBAETC,eAAiBP,EAAAl7F,QAAWiX,SAAQ,KACrCzQ,EAAI7G,KAAQm6B,UACZgiE,EAAan8F,KAAQ27F,WAAWxhE,cACjCtzB,IAASs1F,EAAa,OAClB,KAETtmF,EAASA,EAAO/N,aAETg0F,eAAiBP,EAAAl7F,QAAWkX,WAASvX,KACrC87F,eAAiBP,EAAAl7F,QAAWgX,eAEjCxB,EAAO,GAAKsmF,EAAc,GAAKt1F,EAAK,GAAKgP,EAAO,SAG3CimF,eAAiBP,EAAAl7F,QAAW+W,aAAWpX,KACvC87F,eAAiBP,EAAAl7F,QAAWgX,eAEjCxB,EAAO,GAAKsmF,EAAc,GAAKt1F,EAAK,GAAKgP,EAAO,gBAG/Cw4D,QAAUx4D,OACHw4D,SAQd8sB,EAAAj7F,UAAA+7F,OAAM,uBACQN,WAAWM,UAQzBd,EAAAj7F,UAAAi6B,QAAO,uBACQs0C,MAA+BzuE,KAAUyuE,MAApCzuE,KAAQ27F,WAAWxhE,WAMvCghE,EAAAj7F,UAAAyvE,kBAAiB,SAAC7pD,QACX61E,WAAWlpF,iBAAiBiO,EAAArgB,QAAUsgB,OAAQmF,IAUrDq1E,EAAAj7F,UAAAomC,KAAI,gBACGq1D,WAAWr1D,QAMlB60D,EAAAj7F,UAAA0vE,oBAAmB,SAAC9pD,QACb61E,WAAWjpF,oBAAoBgO,EAAArgB,QAAUsgB,OAAQmF,IAE1Dq1E,EApYA,CAAmBrpB,EAAAzxE,iFC7CnB+7F,EAqBE,CAhBAhlF,YAAW,cAKXC,aAAY,eAKZC,SAAQ,WAKRC,UAAS,ynBCbP8kF,EAAqB,KAEzBC,EAAA,SAAAl9F,GAQK,SACHm9F,EAAY3wB,EAAOjxD,EAAK9T,EAAM+T,EAAa+wE,EAAY9wE,OAAvDna,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKihF,mBAAqB,KAM1BjhF,EAAKirE,OAAUC,GAAK,IAAO35D,MAEP,OAAhB2I,IAC+Bla,EAAW,OAAEka,YAAcA,GAO9Dla,EAAKytE,QAAO,GAMZztE,EAAKoyE,OAASj4D,EAMdna,EAAK87F,UAAY,KAMjB97F,EAAK+7F,YAAc9Q,EAMnBjrF,EAAK+tE,MAAQ5nE,EAMbnG,EAAKg8F,KAAO/hF,EAKZja,EAAKi8F,kBAnEeC,EAAAL,EAAAn9F,GA0EtBm9F,EAAAr8F,UAAA28F,WAAU,mBACch6F,SAAb85F,UAAsB38F,KAASy8F,cAAgBhtB,EAAApvE,QAAW0lC,OAAM,CAClEs2D,IACHA,EAAqBv3F,EAAAkrB,sBAAsB,EAAG,IAEhDqsE,EAAmB5qE,UAASzxB,KAAM2rE,OAAQ,EAAG,OAE3C0wB,EAAmB3R,aAAa,EAAG,EAAG,EAAG,QACpCiS,UAAW,QACTxtF,GACPktF,EAAqB,UAChBM,UAAW,UAGK,SAAbA,UAMdJ,EAAAr8F,UAAA48F,qBAAoB,gBACbh6F,cAAc4d,EAAArgB,QAAUsgB,SAM/B47E,EAAAr8F,UAAA68F,kBAAiB,gBACVN,YAAchtB,EAAApvE,QAAW8nB,WACzB60E,sBACAF,wBAMPP,EAAAr8F,UAAA+8F,iBAAgB,gBACTR,YAAchtB,EAAApvE,QAAW0lC,YACrB0oC,YACF9C,OAAOlqE,MAAKzB,KAAQyuE,MAAM,QAC1B9C,OAAOjqE,OAAM1B,KAAQyuE,MAAM,SAE3BA,MAAK,MAAS9C,OAAOlqE,WAAYkqE,OAAOjqE,aAE1Cs7F,sBACAF,wBAOPP,EAAAr8F,UAAAisE,SAAQ,SAAC13C,eACFyoE,cAAczoE,QACP05C,QAAQ15C,GAAUz0B,KAASmuE,QAAQ15C,GAAUz0B,KAAS2rE,QAOpE4wB,EAAAr8F,UAAAmvE,cAAa,SAAC56C,eACPyoE,cAAczoE,QACP05C,QAAQ15C,GAAcA,EAAa,GAMjD8nE,EAAAr8F,UAAAsvE,cAAa,uBACCitB,aAMdF,EAAAr8F,UAAA8uE,qBAAoB,oBACR2S,2BACCkb,aAAU,KACXp7F,EAAKzB,KAAQyuE,MAAM,GACnB/sE,EAAM1B,KAAQyuE,MAAM,GACpB7iD,EAAU9mB,EAAAkrB,sBAAsBvuB,EAAOC,GAC7CkqB,EAAQyqE,SAAS,EAAG,EAAG50F,EAAOC,QACzBigF,mBAAqB/1D,EAAQoG,iBAE7B2vD,mBAAkB3hF,KAAQ2rE,mBAGvBgW,oBAOd4a,EAAAr8F,UAAAi6B,QAAO,uBACOs0C,OAMd8tB,EAAAr8F,UAAA+7F,OAAM,uBACQS,MAMdH,EAAAr8F,UAAAomC,KAAI,mBACOm2D,aAAehtB,EAAApvE,QAAWgmC,KAAI,MAChCo2D,YAAchtB,EAAApvE,QAAW2pB,YAEGhqB,KAAa,OAAE2a,IAAG3a,KAAQ08F,WAClDvtF,QACF4tF,yBAEFP,UAAYW,EAAAC,YAAWp9F,KACrB2rE,OAAM3rE,KACNi9F,iBAAiB97F,KAAInB,MAAAA,KACrB+8F,kBAAkB57F,KAAInB,SASjCu8F,EAAAr8F,UAAAg9F,cAAa,SAACzoE,WACFq+C,SAAM9yE,KAASmuE,QAAQ15C,QAI3BzC,EAAS3wB,SAASC,cAAa,eAChC6sE,QAAQ15C,GAAczC,EAE3BA,EAAOvwB,MAAQmO,KAAKsxC,KAAIlhD,KAAM2rE,OAAOlqE,MAAQgzB,GAC7CzC,EAAOtwB,OAASkO,KAAKsxC,KAAIlhD,KAAM2rE,OAAOjqE,OAAS+yB,OAEzC4oE,EAAMrrE,EAAOE,WAAU,SAC7BmrE,EAAI3yE,MAAM+J,EAAYA,GACtB4oE,EAAI5rE,UAASzxB,KAAM2rE,OAAQ,EAAG,GAE9B0xB,EAAIC,yBAAwB,WAII,aAA5BD,EAAIC,0BAAuCt9F,KAAS68F,aACtDQ,EAAI7rB,UAAYt2D,EAAAC,SAAQnb,KAAM8yE,QAC9BuqB,EAAIhH,SAAS,EAAG,EAAGrkE,EAAOvwB,MAAOuwB,EAAOtwB,QAExC27F,EAAIC,yBAAwB,iBAC5BD,EAAI5rE,UAASzxB,KAAM2rE,OAAQ,EAAG,gBAExB4xB,EAAUF,EAAI3S,aAAa,EAAG,EAAG14D,EAAOvwB,MAAOuwB,EAAOtwB,QACtDgE,EAAO63F,EAAQ73F,KACf0W,EAACpc,KAAQ8yE,OAAO,GAAK,IACrBz2D,EAACrc,KAAQ8yE,OAAO,GAAK,IACrBpvE,EAAC1D,KAAQ8yE,OAAO,GAAK,IACrBrvE,EAACzD,KAAQ8yE,OAAO,GAEb/uE,EAAI,EAAGC,EAAK0B,EAAK9B,OAAQG,EAAIC,EAAID,GAAK,EAC7C2B,EAAK3B,IAAMqY,EACX1W,EAAK3B,EAAI,IAAMsY,EACf3W,EAAK3B,EAAI,IAAML,EACfgC,EAAK3B,EAAI,IAAMN,EAEjB45F,EAAIG,aAAaD,EAAS,EAAG,MASjChB,EAAAr8F,UAAA88F,eAAc,gBACHR,iBACFA,iBACAA,UAAY,OAGvBD,EAjQA,CAAwBn2E,EAAA/lB,kBA4QRo9F,EAAI7xB,EAAOjxD,EAAK9T,EAAM+T,EAAa+wE,EAAY9wE,OACzDH,EAAY1U,EAAAC,OAAesM,IAAIoI,EAAKC,EAAaC,UAChDH,IACHA,EAAS,IAAO4hF,EAAU1wB,EAAOjxD,EAAK9T,EAAM+T,EAAa+wE,EAAY9wE,GACrE7U,EAAAC,OAAe8U,IAAIJ,EAAKC,EAAaC,EAAOH,IAEvCA,mnBCpIOgjF,EAAY9xB,EAAO+xB,EAAaC,OACxCxH,EAAuCxqB,KAEzCwqB,EAAIz7E,KAAO3J,EAAA6sF,aAAY,KACnBC,EAAU1H,EAAIlkF,SAChB6rF,GAAY,SAIhBD,EACGE,MAAI,WACCD,GACFJ,OAGHM,OAAK,SAAWtrF,GACXorF,IAIU,kBAAVprF,EAAMW,MACO,wBAAbX,EAAMQ,QAENwqF,IAEAC,QAnBM,WACZG,GAAY,OAyBVlpC,EAAY,CAChBj0D,EAAAqlB,WAAWmwE,EAAK11E,EAAArgB,QAAU0oB,KAAM40E,GAChC/8F,EAAAqlB,WAAWmwE,EAAK11E,EAAArgB,QAAU8nB,MAAOy1E,sBAGjC/oC,EAAa5rD,QAAQrI,EAAAoC,iBAxKzB,SAAA5D,GAQK,SACH8+F,EACEzqF,EACA3M,EACA2tB,EACA9Z,EACAC,EACAujF,OANFz9F,EAQEtB,EAAAW,KAAAC,KAAMyT,EAAQ3M,EAAY2tB,EAAYg7C,EAAApvE,QAAWgmC,OAAIrmC,YAMrDU,EAAKg8F,KAAO/hF,EAMZja,EAAKirE,OAAM,IAAO15D,MACE,OAAhB2I,IACFla,EAAKirE,OAAO/wD,YAAcA,GAO5Bla,EAAK87F,UAAY,KAMjB97F,EAAK0hB,MAAQqtD,EAAApvE,QAAWgmC,KAMxB3lC,EAAK09F,mBAAqBD,IAlDHE,EAAAH,EAAA9+F,GAyDzB8+F,EAAAh+F,UAAAisE,SAAQ,uBACMR,QAQduyB,EAAAh+F,UAAA68F,kBAAiB,gBACV36E,MAAQqtD,EAAApvE,QAAW8nB,WACnB60E,sBACAv8E,WAQPy9E,EAAAh+F,UAAA+8F,iBAAgB,gBACUp6F,SAAfiE,aAAwB9G,KAC1B8G,WAAasB,EAAA2hC,UAAS/pC,KAAMyT,QAAMzT,KAAS2rE,OAAOjqE,aAEpD0gB,MAAQqtD,EAAApvE,QAAW0lC,YACnBi3D,sBACAv8E,WASPy9E,EAAAh+F,UAAAomC,KAAI,gBACOlkB,OAASqtD,EAAApvE,QAAWgmC,MAAIrmC,KAASoiB,OAASqtD,EAAApvE,QAAW8nB,aACvD/F,MAAQqtD,EAAApvE,QAAW2pB,aACnBvJ,eACA29E,mBAAkBp+F,KAAAA,KAAY08F,WAC9BF,UAAYkB,EAAW19F,KACrB2rE,OAAM3rE,KACNi9F,iBAAiB97F,KAAInB,MAAAA,KACrB+8F,kBAAkB57F,KAAInB,SAQjCk+F,EAAAh+F,UAAAusE,SAAQ,SAACb,QACFD,OAASC,GAQhBsyB,EAAAh+F,UAAA88F,eAAc,gBACHR,iBACFA,iBACAA,UAAY,OAxHvB,CAA2B8B,EAAAj+F,qkBCqE3Bk+F,EAvFA,SAAAn/F,GAMK,SACHo/F,EAAY/qF,EAAQ3M,EAAY2tB,EAAYrS,OAA5C1hB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK+S,OAASA,EAMd/S,EAAK8zB,YAAcC,EAMnB/zB,EAAKoG,WAAaA,EAMlBpG,EAAK0hB,MAAQA,WAhCOq8E,EAAAD,EAAAp/F,GAsCtBo/F,EAAAt+F,UAAAugB,QAAO,gBACA3d,cAAc4d,EAAArgB,QAAUsgB,SAM/B69E,EAAAt+F,UAAAgI,UAAS,uBACKuL,QAOd+qF,EAAAt+F,UAAAisE,SAAQ,kBACC5lE,EAAAC,YAMTg4F,EAAAt+F,UAAAmvE,cAAa,uBACC76C,aAMdgqE,EAAAt+F,UAAA2tC,cAAa,uBACwB/mC,YAMrC03F,EAAAt+F,UAAAqgB,SAAQ,uBACM6B,OAOdo8E,EAAAt+F,UAAAomC,KAAI,WACF//B,EAAAC,YAEJg4F,EArFA,CAAwBp4E,EAAA/lB,8PCoBlBq+F,EAAkB,OA8TrB,SAED7lB,EACApxE,EACAlG,EACAiG,EACAsxE,OAKIma,EAHE5R,EAAa9/E,EAAM4qE,WACnBqV,EAAYjgF,EAAM8qE,UAGpByM,IACFD,EAAeC,EACfma,EACE5R,GAAcG,GAAaA,EAAUnV,UAAO,QAAUxpE,MAEtDw+E,EAAU,IACRA,EAAW7R,iBAAmBC,EAAApvE,QAAW0lC,OAAM,WAG7C44D,EAAc9lB,EAAaoB,WAC/B14E,EAAM8gB,YACNwpE,EAAAxrF,QAAYyrF,OAEd6S,EAAYvd,cAAcC,EAAY4R,GACtC0L,EAAY5d,UAAUt5E,EAAUD,MAE9Bg6E,GAAaA,EAAUnV,UAAO,KAC1BuyB,EAAa/lB,EAAaoB,WAC9B14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,EAAWyR,GACnC2L,EAAWzd,SAAS15E,EAAUD,gBAzI/B,SAEDqxE,EACApxE,EACAlG,EACAiG,EACAsxE,OAEMjJ,EAActuE,EAAM6qE,eACtByD,EAAW,KACPgvB,EAAmBhmB,EAAaoB,WACpC14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY01C,aAEd8oD,EAAiBxhB,mBAAmB,KAAMxN,GAC1CgvB,EAAiBte,eAAe94E,EAAUD,OAEtCg6E,EAAYjgF,EAAM8qE,aACpBmV,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,GACxBod,EAAWzd,SAAS15E,EAAUD,aAuK/B,SAEDqxE,EACApxE,EACAlG,EACAiG,EACAsxE,OAEMtH,EAAYjwE,EAAM2qE,UAClB2D,EAActuE,EAAM6qE,eACtBoF,GAAa3B,EAAW,KACpBivB,EAAgBjmB,EAAaoB,WACjC14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY41C,SAEd6oD,EAAczhB,mBAAmB7L,EAAW3B,GAC5CivB,EAAc7d,YAAYx5E,EAAUD,OAEhCg6E,EAAYjgF,EAAM8qE,aACpBmV,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,GACxBod,EAAWzd,SAAS15E,EAAUD,gBArE/B,SAEDqxE,EACApxE,EACAlG,EACAiG,EACAsxE,OAKIma,EAHE5R,EAAa9/E,EAAM4qE,WACnBqV,EAAYjgF,EAAM8qE,UAGpByM,IACFD,EAAeC,EACfma,EACE5R,GAAcG,GAAaA,EAAUnV,UAAO,QAAUxpE,MAEtDw+E,EAAU,IACRA,EAAW7R,iBAAmBC,EAAApvE,QAAW0lC,OAAM,WAG7C44D,EAAc9lB,EAAaoB,WAC/B14E,EAAM8gB,YACNwpE,EAAAxrF,QAAYyrF,OAEd6S,EAAYvd,cAAcC,EAAY4R,GACtC0L,EAAYhe,eAAel5E,EAAUD,MAEnCg6E,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,EAAWyR,GACnC2L,EAAWzd,SAAS15E,EAAUD,qBAnJ/B,SAEDqxE,EACApxE,EACAlG,EACAiG,EACAsxE,OAEMjJ,EAActuE,EAAM6qE,eACtByD,EAAW,KACPgvB,EAAmBhmB,EAAaoB,WACpC14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY01C,aAEd8oD,EAAiBxhB,mBAAmB,KAAMxN,GAC1CgvB,EAAiBpe,oBAAoBh5E,EAAUD,OAE3Cg6E,EAAYjgF,EAAM8qE,aACpBmV,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,GACxBod,EAAWzd,SAAS15E,EAAUD,kBAU/B,SAEDqxE,EACApxE,EACAlG,EACAiG,EACAsxE,OAEMtH,EAAYjwE,EAAM2qE,UAClB2D,EAActuE,EAAM6qE,eACtByD,GAAe2B,EAAS,KACpBstB,EAAgBjmB,EAAaoB,WACjC14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY41C,SAEd6oD,EAAczhB,mBAAmB7L,EAAW3B,GAC5CivB,EAAcje,iBAAiBp5E,EAAUD,OAErCg6E,EAAYjgF,EAAM8qE,aACpBmV,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,GACxBod,EAAWzd,SAAS15E,EAAUD,wBAzH/B,SAEDwuE,EACAvuE,EACAlG,EACAiG,EACAsxE,OAGI/0E,EAAGC,EADDs1F,EAAa7xF,EAAS8xF,yBAEvBx1F,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAAC,EAE7Cg7F,EADyBL,EAAmBpF,EAAWv1F,GAAG0uC,YAExDujC,EACAsjB,EAAWv1F,GACXxC,EACAiG,EACAsxE,YA/JH,SAEDD,EACApxE,EACAlG,EACAiG,EACAsxE,OAEMtH,EAAYjwE,EAAM2qE,UAClB2D,EAActuE,EAAM6qE,eACtBoF,GAAa3B,EAAW,KACpBmvB,EAAenmB,EAAaoB,WAChC14E,EAAM8gB,YACNwpE,EAAAxrF,QAAYsyC,QAEdqsD,EAAa3hB,mBAAmB7L,EAAW3B,GAC3CmvB,EAAa9e,WAAWz4E,EAAUD,OAE9Bg6E,EAAYjgF,EAAM8qE,aACpBmV,GAAaA,EAAUnV,UAAO,KAC1BuyB,GAAc9lB,GAA6BD,GAAcoB,WAC7D14E,EAAM8gB,YACNwpE,EAAAxrF,QAAY0rF,MAEd6S,EAAWrd,aAAaC,GACxBod,EAAWzd,SAAS15E,EAAUD,eAtDlBy3F,EAAaC,EAAUC,UAC9B3iF,SAASjW,EAAAwd,OAAOm7E,GAAW,IAAM1iF,SAASjW,EAAAwd,OAAOo7E,GAAW,aAQrDC,EAAoBt4F,EAAY2tB,OACxCmtB,EAAYy9C,EAAav4F,EAAY2tB,UACpCmtB,EAAYA,WAQLy9C,EAAav4F,EAAY2tB,SA3Cd,GA4CI3tB,EAAc2tB,WAgD7B6qE,EACdtpB,EACAxuE,EACAjG,EACAgkD,EACAz/B,EACA4jC,EACAovB,OAEIh/C,GAAU,EACRunD,EAAa9/E,EAAM4qE,cACrBkV,EAAU,KACRsK,EAAatK,EAAW7R,gBACxBmc,GAAclc,EAAApvE,QAAW0lC,QAAU4lD,GAAclc,EAAApvE,QAAW8nB,MAC9Dk5D,EAAWzR,oBAAoB9pD,IAE3B6lE,GAAclc,EAAApvE,QAAWgmC,MAC3Bg7C,EAAW/6C,OAEbqlD,EAAatK,EAAW7R,gBACxB6R,EAAW1R,kBAAkB7pD,GAC7BgU,GAAU,UAsBb,SAEDk8C,EACAxuE,EACAjG,EACAgkD,EACAmE,EACAovB,OAEMrxE,EAAWlG,EAAMgrE,qBAANhrE,CAA4BiG,OACxCC,EAAQ,WAGPohD,EAAqBphD,EAASmiD,oBAClCrE,EACAmE,MAEenoD,EAAMoE,cAErB45F,EAAevpB,EAAantB,EAAoBtnD,EAAOiG,SAGvDu3F,EADyBL,EAAmB71C,EAAmBpW,YAE7DujC,EACAntB,EACAtnD,EACAiG,EACAsxE,IA9CJ0mB,CACExpB,EACAxuE,EACAjG,EACAgkD,EACAmE,EACAovB,GAGKh/C,EA+CN,SACMylE,EAAevpB,EAAavuE,EAAUlG,EAAOiG,MAChDC,EAASgrC,WAAaC,EAAAryC,QAAag2C,oBAOxB2/B,EAAYiE,WAAW14E,EAAM8gB,YAAawpE,EAAAxrF,QAAY2rF,SAC9D3P,WACuD50E,EAC5DD,EACAjG,EAAMoE,4BAVA2zF,EAA6E7xF,EAAUg4F,gBACpF17F,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDw7F,EAAevpB,EAAasjB,EAAWv1F,GAAIxC,EAAOiG,4EChMxDk4F,EAkDE,CA5CAC,WAAU,aAOVC,cAAa,gBAObv3E,MAAK,QAQLw3E,cAAa,gBAObC,kBAAiB,oBAOjBC,gBAAe,kBAOfC,kBAAiB,s0BClBnBC,EAAA,SAAA7gG,GAKK,SACH8gG,EAAY39F,EAAM49F,EAAaC,OAA/B1/F,EACEtB,EAAAW,KAAAC,KAAMuC,IAAIvC,YAOVU,EAAK8G,QAAU24F,EAOfz/F,EAAK+3B,SAAW2nE,WArBmBC,EAAAH,EAAA9gG,GAuBvC8gG,EAvBA,CAAuCv8E,EAAAtjB,SA8/BvCigG,EA/3BA,SAAAlhG,GAGK,SACHmhG,EAAYjoE,OAAZ53B,EAAAV,KACQV,EAAUg5B,GAAW,IAE3B53B,EAAAtB,EAAAW,KAAAC,KAAA,CACE4zD,aAAct0D,EAAQs0D,aACtBlsD,gBAAY7E,EACZuf,MAAO9d,EAAAjE,QAAYkE,MACnBsD,WAAyBhF,IAAlBvD,EAAQuI,OAAsBvI,EAAQuI,eAO1C24F,QAAUj3F,EAAA8d,KAMf3mB,EAAK+/F,QAAUnhG,EAAQohG,OAMvBhgG,EAAK4rF,eAAiCzpF,IAArBvD,EAAQ6sF,UAAgC7sF,EAAQ6sF,SAMjEzrF,EAAKigG,KAAOrhG,EAAQshG,SAEG/9F,IAAnBvD,EAAQuhG,OACVngG,EAAK8/F,QAAUlhG,EAAQuhG,YACAh+F,IAAdnC,EAAKigG,OACd/vF,EAAAC,OAAOnQ,EAAK+/F,QAAS,GAErB//F,EAAK8/F,QAAUM,EAAAC,IACbrgG,EAAKigG,KACkDjgG,EAAK+/F,UAQhE//F,EAAKsgG,eACkBn+F,IAArBvD,EAAQ2hG,SAAyB3hG,EAAQ2hG,SAAWC,EAAArnC,QAuDlDsnC,EAAY1oE,EArDV2oE,OACwBv+F,IAA5BvD,EAAQ8hG,iBAAgC9hG,EAAQ8hG,uBAMlD1gG,EAAK2gG,eAAiBD,EAAe,IAAOE,EAAAjhG,QAAU,KAMtDK,EAAK6gG,oBAAmB,IAAOD,EAAAjhG,QAM/BK,EAAK8gG,qBAAuB,EAM5B9gG,EAAK+gG,sBAAqB,GAO1B/gG,EAAKghG,SAAQ,GAObhhG,EAAKihG,UAAS,GAMdjhG,EAAKkhG,mBAAkB,GAMvBlhG,EAAKmhG,oBAAsB,KAGvBn3F,MAAM8B,QAAQlN,EAAQm5B,UACxBA,EAAWn5B,EAAQm5B,SACVn5B,EAAQm5B,WAEjBA,GADA0oE,EAAa7hG,EAAQm5B,UACCvE,YAEnBktE,QAAkCv+F,IAAfs+F,IACtBA,EAAU,IAAOltE,EAAA5zB,QAAWo4B,SAEb51B,IAAb41B,GACF/3B,EAAKohG,oBAAoBrpE,QAER51B,IAAfs+F,GACFzgG,EAAKqhG,wBAAwBZ,YA3HRd,EAAAE,EAAAnhG,GA2IzBmhG,EAAArgG,UAAA8hG,WAAU,SAACx6F,QACJy6F,mBAAmBz6F,QACnBiZ,WAQP8/E,EAAArgG,UAAA+hG,mBAAkB,SAACz6F,OACX06F,EAAa37F,EAAAwd,OAAOvc,WAEhB26F,YAAYD,EAAY16F,SAO7B46F,mBAAmBF,EAAY16F,OAE9BC,EAAWD,EAAQw2D,iBACrBv2D,EAAQ,KACJgM,EAAShM,EAASS,iBACfm5F,gBAAcrhG,KAChBqhG,eAAe14B,OAAOl1D,EAAQjM,aAGhCi6F,sBAAsBS,GAAc16F,OAGtC1E,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgBs/F,WAAYn4F,cAnBzCq6F,qBAAmB7hG,KACrB6hG,oBAAoBnkE,OAAOl2B,IA2BtC+4F,EAAArgG,UAAAkiG,mBAAkB,SAACF,EAAY16F,QACxBo6F,mBAAmBM,GAAU,CAChCthG,EAAAC,OAAO2G,EAASkZ,EAAArgB,QAAUsgB,OAAM3gB,KAAOsiG,qBAAoBtiG,MAC3DY,EAAAC,OACE2G,EACAxG,EAAAX,QAAgBY,eAAcjB,KACzBsiG,qBAAoBtiG,QAa/BugG,EAAArgG,UAAAiiG,YAAW,SAACD,EAAY16F,OAClB+6F,GAAQ,EACNhrE,EAAK/vB,EAAQgwB,oBACR30B,IAAP00B,IACIA,EAAGE,aAAQz3B,KAAW0hG,SAG1Ba,GAAQ,EAH0BviG,KAC7B0hG,SAASnqE,EAAGE,YAAcjwB,GAK/B+6F,IACF3xF,EAAAC,SAASqxF,KAAUliG,KAAS2hG,WAAY,SACnCA,UAAUO,GAAc16F,GAExB+6F,GAQThC,EAAArgG,UAAAsiG,YAAW,SAAC/pE,QACLqpE,oBAAoBrpE,QACpBhY,WAQP8/E,EAAArgG,UAAA4hG,oBAAmB,SAACrpE,WACZgqE,EAAO,GACPC,EAAW,GACXC,EAAgB,GAEb5+F,EAAI,EAAG6+F,EAASnqE,EAAS70B,OAAQG,EAAI6+F,EAAQ7+F,IAAC,KAC/CyD,EAAUixB,EAAS10B,GACnBm+F,EAAa37F,EAAAwd,OAAOvc,QACjB26F,YAAYD,EAAY16F,IAC/Bk7F,EAAY99F,KAAK4C,GAIZzD,EAAI,UAAG8+F,EAASH,EAAY9+F,OAAQG,EAAI8+F,EAAQ9+F,IAAC,CAClDyD,EAAUk7F,EAAY3+F,GACtBm+F,EAAa37F,EAAAwd,OAAOvc,QACrB46F,mBAAmBF,EAAY16F,OAE9BC,EAAWD,EAAQw2D,iBACrBv2D,EAAQ,KACJgM,EAAShM,EAASS,YACxBu6F,EAAQ79F,KAAK6O,GACbkvF,EAAiB/9F,KAAK4C,aAEjBi6F,sBAAsBS,GAAc16F,OAGpC65F,gBAAcrhG,KAChBqhG,eAAe/6D,KAAKm8D,EAASE,GAG3B5+F,EAAI,UAAG++F,EAASJ,EAAY9+F,OAAQG,EAAI++F,EAAQ/+F,IAAC/D,KACnD8C,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgBs/F,WAAY+C,EAAY3+F,MASpEw8F,EAAArgG,UAAA6hG,wBAAuB,SAACZ,OAClB4B,GAAsB,OACrBtwF,iBACH4vF,EAAAhiG,QAAgBs/F,YAGb,SACO3+E,GACH+hF,IACHA,GAAsB,EACtB5B,EAAWv8F,KAAKoc,EAAIxZ,SACpBu7F,GAAsB,WAIvBtwF,iBACH4vF,EAAAhiG,QAAgBw/F,eAGb,SACO7+E,GACH+hF,IACHA,GAAsB,EACtB5B,EAAWzjE,OAAO1c,EAAIxZ,SACtBu7F,GAAsB,MAI5B5B,EAAW1uF,iBACTykB,EAAA72B,QAAoB82B,IAGjB,SACOnW,GACH+hF,IACHA,GAAsB,OACjBf,WACuDhhF,EAAItc,SAEhEq+F,GAAsB,IAExB5hG,KAAInB,OAERmhG,EAAW1uF,iBACTykB,EAAA72B,QAAoB+2B,OAGjB,SACOpW,GACH+hF,IACHA,GAAsB,OACjBC,cACuDhiF,EAAItc,SAEhEq+F,GAAsB,IAExB5hG,KAAInB,YAEH6hG,oBAAsBV,GAQ7BZ,EAAArgG,UAAAsa,MAAK,SAACyoF,MACAA,EAAQ,SACCC,KAASljG,KAAS4hG,mBAAkB,CACnC5hG,KAAQ4hG,mBAAmBsB,GAChCj6F,QAAQrI,EAAAoC,oBAEL6+F,2BACHD,mBAAkB,QAClBF,SAAQ,QACRC,UAAS,iBAGPN,uBAEI9pE,UADN8pE,eAAep4F,QAAOjJ,KAAMmjG,sBAAsBhiG,KAAInB,OAC9CA,KAASyhG,sBAAqBzhG,KACpCmjG,sBAAqBnjG,KAAMyhG,sBAAsBlqE,SAInDsqE,qBAAmB7hG,KACrB6hG,oBAAoBrnF,aAGlB6mF,gBAAcrhG,KAChBqhG,eAAe7mF,aAEjBinF,sBAAqB,OAEpB2B,EAAU,IAAOnD,EAAkBoC,EAAAhiG,QAAgBgoB,YACpDvlB,cAAcsgG,QACd3iF,WAeP8/E,EAAArgG,UAAAmjG,eAAc,SAAC/9F,WACJ+7F,eAAc,OAAArhG,KACTqhG,eAAep4F,QAAQ3D,QACrBu8F,qBAAmB7hG,KAC5B6hG,oBAAoB54F,QAAQ3D,IAgBrCi7F,EAAArgG,UAAAojG,iCAAgC,SAACn8F,EAAY7B,OACrCmO,EAAM,CAAItM,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,gBAC5Do8F,uBAAuB9vF,GAAM,SAAYjM,UAClCA,EAAQw2D,cACZ/T,qBAAqB9iD,GACzB7B,EAASkC,cA0BtB+4F,EAAArgG,UAAAqjG,uBAAsB,SAAC9vF,EAAQnO,WACpB+7F,eAAc,OAAArhG,KACTqhG,eAAemC,gBAAgB/vF,EAAQnO,QACrCu8F,qBAAmB7hG,KAC5B6hG,oBAAoB54F,QAAQ3D,IAmBrCi7F,EAAArgG,UAAAujG,iCAAgC,SAAChwF,EAAQnO,eAC3Bi+F,uBACV9vF,GAIG,SACOjM,MACSA,EAAQw2D,cACZnY,iBAAiBpyC,GAAM,KAC5B5N,EAASP,EAASkC,MACpB3B,EAAM,OACDA,OAcjB06F,EAAArgG,UAAAwjG,sBAAqB,uBACP7B,qBASdtB,EAAArgG,UAAA0gB,YAAW,eACL6X,cACKopE,oBACPppE,EAAQz4B,KAAQ6hG,oBAAoB3tE,WAAWpsB,MAAM,QACvCu5F,iBACd5oE,EAAQz4B,KAAQqhG,eAAesC,SAC1BpkG,EAAAqlB,QAAO5kB,KAAMyhG,wBAChB72F,EAAAu1B,OAAO1H,EAAUl5B,EAAAk8D,UAASz7D,KAAMyhG,yBAGoChpE,GAS1E8nE,EAAArgG,UAAA0jG,wBAAuB,SAACz8F,OAChBsxB,EAAQ,eACT6qE,iCAAiCn8F,GAAU,SAAYK,GAC1DixB,EAAS7zB,KAAK4C,MAETixB,GAeT8nE,EAAArgG,UAAAs4E,oBAAmB,SAAC/kE,eACT4tF,eAAcrhG,KACTqhG,eAAewC,YAAYpwF,QACzBouF,oBAAmB7hG,KACrB6hG,oBAAoB3tE,WAAWpsB,MAAM,OAkBrDy4F,EAAArgG,UAAA4jG,8BAA6B,SAAC38F,EAAY48F,OAQlCx0F,EAAIpI,EAAW,GACfqI,EAAIrI,EAAW,GACjB68F,EAAiB,KACf5gD,EAAY,CAAI4G,IAAKA,KACvB3G,EAAqBhuC,EAAAA,EACnB5B,EAAM,EAAK4B,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,GAC1C26B,EAAS+zD,GAA0Bx6F,EAAAC,iBACpC63F,eAAemC,gBAClB/vF,GAGG,SACOjM,MACJwoC,EAAOxoC,GAAO,KACVC,EAAWD,EAAQw2D,cACnBimC,EAA6B5gD,MACnCA,EAAqB57C,EAAS07C,eAC5B5zC,EACAC,EACA4zC,EACAC,IAEuB4gD,EAA0B,CACjDD,EAAiBx8F,MAKX08F,EAAct0F,KAAK62B,KAAK4c,GAC9B5vC,EAAO,GAAKlE,EAAI20F,EAChBzwF,EAAO,GAAKjE,EAAI00F,EAChBzwF,EAAO,GAAKlE,EAAI20F,EAChBzwF,EAAO,GAAKjE,EAAI00F,OAKjBF,GAaTzD,EAAArgG,UAAAgI,UAAS,SAAC4L,eACIutF,eAAen5F,UAAU4L,IAYvCysF,EAAArgG,UAAAikG,eAAc,SAAC5sE,OACP/vB,EAAOxH,KAAQ0hG,SAASnqE,EAAGE,wBACd50B,IAAZ2E,EAAwBA,EAAU,MAS3C+4F,EAAArgG,UAAAkkG,gBAAe,SAACC,OACR78F,EAAOxH,KAAQ2hG,UAAU0C,eACZxhG,IAAZ2E,EAAwBA,EAAU,MAS3C+4F,EAAArgG,UAAAokG,UAAS,uBACK7D,SAMdF,EAAArgG,UAAA04E,YAAW,uBACG0T,WASdiU,EAAArgG,UAAAqkG,OAAM,uBACQ5D,MAOdJ,EAAArgG,UAAAoiG,qBAAoB,SAACv7E,OACbvf,EAAoEuf,EAAMhb,OAC1Em2F,EAAa37F,EAAAwd,OAAOvc,GACpBC,EAAWD,EAAQw2D,iBACpBv2D,OAQGgM,EAAShM,EAASS,YACpBg6F,KAAUliG,KAASyhG,mCACTA,sBAAsBS,QACzBb,gBAAcrhG,KAChBqhG,eAAe14B,OAAOl1D,EAAQjM,SAG5B65F,gBAAcrhG,KAChBqhG,eAAe7mC,OAAO/mD,EAAQjM,QAfjC06F,KAAUliG,KAASyhG,6BACdJ,gBAAcrhG,KAChBqhG,eAAe3jE,OAAOl2B,QAExBi6F,sBAAsBS,GAAc16F,OAevC+vB,EAAK/vB,EAAQgwB,gBACR30B,IAAP00B,EAAgB,KACZitE,EAAMjtE,EAAGE,gBACNiqE,SAAS8C,KAASh9F,SACpBi9F,mBAAmBj9F,QACnBk6F,SAAS8C,GAAOh9F,aAGlBi9F,mBAAmBj9F,QACnBm6F,UAAUO,GAAc16F,OAE1BiZ,eACA3d,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgBu/F,cAAep4F,KAUzD+4F,EAAArgG,UAAAwkG,WAAU,SAACl9F,OACH+vB,EAAK/vB,EAAQgwB,oBACR30B,IAAP00B,EACKA,KAAEv3B,KAAS0hG,SAEXn7F,EAAAwd,OAAOvc,KAAOxH,KAAU2hG,WAOnCpB,EAAArgG,UAAA0kB,QAAO,uBACOy8E,eAAez8E,WAAarlB,EAAAqlB,QAAO5kB,KAAMyhG,wBAQvDlB,EAAArgG,UAAA+3E,aAAY,SAACxkE,EAAQ3M,EAAYY,WACzBi9F,EAAkB3kG,KAAQuhG,oBAC1BqD,EAAa5kG,KAAQghG,UAAUvtF,EAAQ3M,cACpC/C,EAAOC,OACR6gG,EAAeD,EAAc7gG,GACb4gG,EAAmBnB,gBACvCqB,GAIG,SACO/8E,UACD1f,EAAAunD,eAAe7nC,EAAOrU,OAAQoxF,UAIrCC,EAAKtD,qBACPsD,EAAKhiG,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgBy/F,oBAExCgF,EAAKtE,QAAQzgG,KAAI+kG,EAEfD,EACA/9F,EACAY,EAAU,SACA+wB,UACD+oE,0BACF1+F,cAAa,IACZm9F,EACFoC,EAAAhiG,QAAgB0/F,qBAChBl9F,EACA41B,KAGJt3B,KAAI2jG,GAAA,kBAEGtD,0BACF1+F,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgB2/F,qBAExC7+F,KAAI2jG,IAERH,EAAmBh8B,OAAOk8B,EAAY,CAAGpxF,OAAQoxF,EAAa/8F,mBAvCzD/D,EAAI,EAAGC,EAAK4gG,EAAchhG,OAAQG,EAAIC,IAAMD,IAA5CA,QA0CJ+1B,QAAO95B,KACLwgG,UAAYj3F,EAAA8d,MAAYrnB,KAAQwhG,qBAAuB,GAGhEjB,EAAArgG,UAAA6kG,QAAO,gBACAvqF,OAAM,QACN+mF,oBAAoB/mF,QACzBpb,EAAAc,UAAM6kG,QAAOhlG,KAAAC,OAQfugG,EAAArgG,UAAA8kG,mBAAkB,SAACvxF,OAEb7H,EADE+4F,EAAkB3kG,KAAQuhG,oBAEhCoD,EAAmBnB,gBAAgB/vF,GAAM,SAAYqU,MAC/C1f,EAAAyC,OAAOid,EAAOrU,OAAQA,UACxB7H,EAAMkc,GACC,KAGPlc,GACF+4F,EAAmBjnE,OAAO9xB,IAW9B20F,EAAArgG,UAAA8iG,cAAa,SAACx7F,OACN06F,EAAa37F,EAAAwd,OAAOvc,GACtB06F,KAAUliG,KAASyhG,6BAAqBzhG,KAC9ByhG,sBAAsBS,QAEzBb,gBAAcrhG,KAChBqhG,eAAe3jE,OAAOl2B,QAG1B27F,sBAAsB37F,QACtBiZ,WAQP8/E,EAAArgG,UAAAijG,sBAAqB,SAAC37F,OACd06F,EAAa37F,EAAAwd,OAAOvc,QACrBo6F,mBAAmBM,GAAYj5F,QAAQrI,EAAAoC,2BAChC4+F,mBAAmBM,OACzB3qE,EAAK/vB,EAAQgwB,aACR30B,IAAP00B,UAAgBv3B,KACN0hG,SAASnqE,EAAGE,wBAEdkqE,UAAUO,QACjBp/F,cAAa,IACZm9F,EAAkBoC,EAAAhiG,QAAgBw/F,cAAer4F,KAWzD+4F,EAAArgG,UAAAukG,mBAAkB,SAACj9F,OACby9F,GAAU,UACH1tE,KAAEv3B,KAAS0hG,SAAQ,GAAA1hG,KACnB0hG,SAASnqE,KAAQ/vB,EAAO,aACnBk6F,SAASnqE,GACrB0tE,GAAU,eAIPA,GAST1E,EAAArgG,UAAAglG,UAAS,SAACrE,QACHL,QAAUK,GAQjBN,EAAArgG,UAAAilG,OAAM,SAACvE,GACLhwF,EAAAC,OAAM7Q,KAAMygG,QAAS,QAChByE,UAAUpE,EAAAC,IAAIH,EAAG5gG,KAAOygG,WAEjCF,EA73BA,CAA2B6E,EAAA/kG,qIC4D3BglG,EAzMA,WAGK,SACHl6B,EAAYm6B,GAGPtlG,KACEulG,OAAM,IAAOz+B,EAAAC,GAAP,CAAcu+B,GAOtBtlG,KACEwlG,OAAM,UAQbr6B,EAAAjrE,UAAAyoE,OAAM,SAACl1D,EAAQI,GACO,IACdusB,EAAI,CACR3rB,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACbI,MAAOA,QAGJ0xF,OAAO58B,OAAOvoC,QACdolE,OAAOj/F,EAAAwd,OAAOlQ,IAAUusB,GAQ/B+qC,EAAAjrE,UAAAomC,KAAI,SAACm8D,EAASh+E,WACNghF,EAAK,IAAO/6F,MAAM+Z,EAAO7gB,QACtBG,EAAI,EAAG8V,EAAI4K,EAAO7gB,OAAQG,EAAI8V,EAAG9V,IAAC,KACnC0P,EAASgvF,EAAQ1+F,GACjB8P,EAAQ4Q,EAAO1gB,GAGfq8B,EAAI,CACR3rB,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACbI,MAAOA,GAET4xF,EAAM1hG,GAAKq8B,OACNolE,OAAOj/F,EAAAwd,OAAOlQ,IAAUusB,OAE1BmlE,OAAOj/D,KAAKm/D,IAQnBt6B,EAAAjrE,UAAAw9B,OAAM,SAAC7pB,OACCwwF,EAAM99F,EAAAwd,OAAOlQ,GAIbusB,EAAIpgC,KAAQwlG,OAAOnB,sBACbmB,OAAOnB,GACiB,YAAxBkB,OAAO7nE,OAAO0C,IAQ5B+qC,EAAAjrE,UAAAs6D,OAAM,SAAC/mD,EAAQI,OACPusB,EAAIpgC,KAAQwlG,OAAOj/F,EAAAwd,OAAOlQ,IAC1B6xF,EAAI,CAAItlE,EAAK3rB,KAAM2rB,EAAK1rB,KAAM0rB,EAAKzrB,KAAMyrB,EAAKxrB,MAC/CxM,EAAAyC,OAAO66F,EAAMjyF,UACXiqB,OAAO7pB,QACP80D,OAAOl1D,EAAQI,KAQxBs3D,EAAAjrE,UAAAyjG,OAAM,kBACO3jG,KAAQulG,OAAO1rC,MACbp5D,KAAG,SAAW2/B,UAClBA,EAAKvsB,UAShBs3D,EAAAjrE,UAAA2jG,YAAW,SAACpwF,GACU,IACdiyF,EAAI,CACRjxF,KAAMhB,EAAO,GACbiB,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,WAEJzT,KAAQulG,OAAOh9B,OAAOm9B,GACpBjlG,KAAG,SAAW2/B,UAClBA,EAAKvsB,UAWhBs3D,EAAAjrE,UAAA+I,QAAO,SAAC3D,eACMqgG,SAAQ3lG,KAAM2jG,SAAUr+F,IAStC6lE,EAAAjrE,UAAAsjG,gBAAe,SAAC/vF,EAAQnO,eACVqgG,SAAQ3lG,KAAM6jG,YAAYpwF,GAASnO,IASjD6lE,EAAAjrE,UAAAylG,SAAQ,SAAClhF,EAAQnf,WACXO,EACK9B,EAAI,EAAG8V,EAAI4K,EAAO7gB,OAAQG,EAAI8V,EAAG9V,OACxC8B,EAASP,EAASmf,EAAO1gB,IACf,OACD8B,SAGJA,GAMTslE,EAAAjrE,UAAA0kB,QAAO,kBACErlB,EAAAqlB,QAAO5kB,KAAMwlG,SAMtBr6B,EAAAjrE,UAAAsa,MAAK,gBACE+qF,OAAO/qF,aACPgrF,OAAM,IAObr6B,EAAAjrE,UAAAgI,UAAS,SAAC4L,OACFpO,EAAI1F,KAAQulG,OAAO77B,gBAClBthE,EAAA6oF,eACLvrF,EAAK+O,KACL/O,EAAKgP,KACLhP,EAAKiP,KACLjP,EAAKkP,KACLd,IAOJq3D,EAAAjrE,UAAA0lG,OAAM,SAACC,WAEM9hG,UADNwhG,OAAOj/D,KAAKu/D,EAAMN,OAAO1rC,OACdgsC,EAAML,OAAMxlG,KACrBwlG,OAAOzhG,GAAK8hG,EAAML,OAAOzhG,IAGpConE,EAvMA,4kBC+JG,SACM26B,EAAkBC,UACpBA,EAGDr7F,MAAM8B,QAAQu5F,GAAe,SACdvjG,UACRujG,GAIe,mBAAfA,EACFA,WAGQvjG,UACPujG,IAbD,SAiBXC,EA9JA,SAAA5mG,GAGK,SACH6mG,EAAY3mG,OAAZoB,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKgH,WAAa8xB,EAAAjnB,IAAcjT,EAAQoI,YAMxChH,EAAKwlG,cAAgBJ,EAAkBxmG,EAAQs0D,cAM/ClzD,EAAKylG,8BACiCtjG,IAApCvD,EAAQ8mG,yBACJ9mG,EAAQ8mG,wBAQd1lG,EAAKo5B,SAAU,EAMfp5B,EAAKshB,YACenf,IAAlBvD,EAAQ8iB,MAAsB9iB,EAAQ8iB,MAAQ9d,EAAAjE,QAAYkE,MAM5D7D,EAAK2lG,YAA2BxjG,IAAlBvD,EAAQuI,OAAsBvI,EAAQuI,eA9CnCy+F,EAAAL,EAAA7mG,GAqDnB6mG,EAAA/lG,UAAAyzD,gBAAe,uBACDuyC,eAMdD,EAAA/lG,UAAA2zD,2BAA0B,uBACZsyC,0BAQdF,EAAA/lG,UAAAy5B,cAAa,uBACCjyB,YAOdu+F,EAAA/lG,UAAAkxC,eAAc,kBACL7qC,EAAAC,YAQTy/F,EAAA/lG,UAAAqgB,SAAQ,uBACMyB,QAMdikF,EAAA/lG,UAAA4I,SAAQ,uBACMu9F,QAMdJ,EAAA/lG,UAAAqmG,kBAAiB,aAQjBN,EAAA/lG,UAAA6kG,QAAO,gBACAtkF,WAUPwlF,EAAA/lG,UAAAsmG,gBAAe,SAAC5yC,QACTsyC,cAAgBJ,EAAkBlyC,QAClCnzC,WAOPwlF,EAAA/lG,UAAAumG,SAAQ,SAACrkF,QACFJ,OAASI,OACT3B,WAETwlF,EApIA,CAAqBzmF,EAAAnf,uDClCLqmG,EAAIjzF,EAAQ3M,YAChBuO,EAAAA,GAAWA,EAAAA,EAAUA,EAAAA,EAAUA,EAAAA,6HCDvCsxF,GAAkB,WA0HNC,EAAIhG,EAAKF,GAUpB,OAAA,SACcjtF,EAAQ3M,EAAYY,EAAYm/F,EAASC,OAClDn+F,EAAM3I,eArFd4gG,EACAF,EACAjtF,EACA3M,EACAY,EACAm/F,EACAC,OAEM/F,EAAG,IAAOgG,eAChBhG,EAAIiG,KAAI,MAEI,mBAAHpG,EAAqBA,EAAIntF,EAAQ3M,EAAYY,GAAck5F,GAClE,GAEEF,EAAOjuD,WAAaw0D,EAAA5mG,QAAW6mG,eACjCnG,EAAIoG,aAAY,eAElBpG,EAAIqG,gBAAkBT,EAKtB5F,EAAIsG,OAAM,SAAatgF,OAEhBg6E,EAAIuG,QAAWvG,EAAIuG,QAAU,KAAOvG,EAAIuG,OAAS,IAAG,KACjD/kG,EAAOm+F,EAAOjuD,UAEhB9pC,OAAM,EACNpG,GAAQ0kG,EAAA5mG,QAAWknG,MAAQhlG,GAAQ0kG,EAAA5mG,QAAW0rF,KAChDpjF,EAASo4F,EAAIyG,aACJjlG,GAAQ0kG,EAAA5mG,QAAWonG,KAC5B9+F,EAASo4F,EAAI2G,eAEX/+F,GAAM,IAAOg/F,WAAYC,gBACvB7G,EAAIyG,aAAY,oBAIXjlG,GAAQ0kG,EAAA5mG,QAAW6mG,eAC5Bv+F,EAAqCo4F,EAAI8G,UAEvCl/F,EACFk+F,EAEGnG,EAAOoH,aAAan/F,EAAM,CACzB8K,OAAQA,EACRs0F,kBAAmBrgG,IAErBg5F,EAAOsH,eAAer/F,IAGxBm+F,SAGFA,KAMJ/F,EAAIkH,QAAUnB,EACd/F,EAAImH,OAyBFC,CACEvH,EACAF,EACAjtF,EACA3M,EACAY,GAKG,SACO+wB,EAAU2vE,GAClBz/F,EAAO65F,YAAY/pE,QACH51B,IAAZgkG,GACFA,EAAQpuE,KAGaquE,GAAoBv9F,EAAA8d,gFC5JnDghF,EAKE,CAJAnB,aAAY,cACZK,KAAI,OACJxb,KAAI,OACJ0b,IAAG,6oBC8RWa,EAAoB18F,SACpB,mBAAHA,EACFA,GAMHlB,MAAM8B,QAAQZ,GAChBkhE,EAASlhE,GAETgF,EAAAC,OAA+C,mBAAdjF,EAAKyW,UAA2B,IAEjEyqD,EAAM,CAD2DlhE,sBAI1DkhE,IAVN,IACCA,MAaRy7B,EAhQA,SAAAnpG,GAMK,SACHopG,EAAYC,OAAZ/nG,EACEtB,EAAAW,KAAAC,OAAAA,QAMAU,EAAKgoG,SAAM7lG,EAMXnC,EAAKioG,cAAa,WAOlBjoG,EAAKulE,OAAS,KAMdvlE,EAAKwlE,oBAAiBrjE,EAMtBnC,EAAKkoG,mBAAqB,KAE1BloG,EAAK+R,iBACH+M,EAAAC,mBAAmB/e,EAAKioG,eACxBjoG,EAAKmoG,wBAGHJ,KAGmE,mBAA/CA,EAA0Bn2D,sBAC9B,KAEV7qC,EAAoCghG,EAC1C/nG,EAAK8qE,YAAY/jE,QAEe,IAC1B4Z,EAAaonF,EACnB/nG,EAAKqhB,cAAcV,mBAzDLynF,EAAAN,EAAAppG,GAoEpBopG,EAAAtoG,UAAA0+B,MAAK,eACGA,EAAK,IAAO4pE,EAAOxoG,KAClBokB,gBAAapkB,KAAUmkB,gBAAkB,MAEhDya,EAAMmqE,gBAAe/oG,KAAMgpG,uBACrBvhG,EAAQzH,KAAQg+D,cAClBv2D,GACFm3B,EAAM4sC,YAAY/jE,EAASm3B,aAEvBr9B,EAAKvB,KAAQ0mE,kBACfnlE,GACFq9B,EAAMunC,SAAS5kE,GAEVq9B,GAWT4pE,EAAAtoG,UAAA89D,YAAW,uBACsCzrD,IAAGvS,KAAM2oG,gBAU1DH,EAAAtoG,UAAAs3B,MAAK,uBACSkxE,KAUdF,EAAAtoG,UAAA8oG,gBAAe,uBACDL,eASdH,EAAAtoG,UAAAwmE,SAAQ,uBACMT,QASduiC,EAAAtoG,UAAAymE,iBAAgB,uBACFT,gBAMdsiC,EAAAtoG,UAAA+oG,sBAAqB,gBACdxoF,WAMP+nF,EAAAtoG,UAAA2oG,uBAAsB,gBACXD,qBACPhoG,EAAAoC,cAAahD,KAAM4oG,yBACdA,mBAAqB,UAEtBnhG,EAAQzH,KAAQg+D,cAClBv2D,IAAQzH,KACL4oG,mBAAqBhoG,EAAAC,OACxB4G,EACAiZ,EAAArgB,QAAUsgB,OAAM3gB,KACXipG,sBAAqBjpG,YAIzBygB,WAUP+nF,EAAAtoG,UAAAsrE,YAAW,SAAC/jE,QACLsT,IAAG/a,KAAM2oG,cAAelhG,IAY/B+gG,EAAAtoG,UAAAimE,SAAQ,SAACe,QACFjB,OAASiB,OACThB,eAAkBgB,EAEnBohC,EAAoBphC,QADpBrkE,OAEC4d,WAYP+nF,EAAAtoG,UAAAgpG,MAAK,SAAC3xE,QACCmxE,IAAMnxE,OACN9W,WAUP+nF,EAAAtoG,UAAA6oG,gBAAe,SAACz1F,QACTZ,oBACH8M,EAAAC,mBAAkBzf,KAAM2oG,eAAa3oG,KAChC6oG,6BAEFF,cAAgBr1F,OAChBb,iBACH+M,EAAAC,mBAAkBzf,KAAM2oG,eAAa3oG,KAChC6oG,6BAEFA,0BAETL,EAlOA,CAAsBhpF,EAAAnf,usBC4PtB8oG,EAlSA,SAAA/pG,GAKK,SACHgqG,EAAYvgG,EAAas5C,OAAzBzhD,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAK2oG,cAAgB,KAMrB3oG,EAAK4oG,uBAAwB,EAM7B5oG,EAAK8hD,WAAY,EAMjB9hD,EAAK+hD,mBAAoB,OAEN5/C,IAAfs/C,GAA6Bz3C,MAAM8B,QAAQ3D,EAAY,IAMzDnI,EAAKmiD,eAC0Dh6C,EAC7Ds5C,GAPFzhD,EAAKkiD,mBACHT,EAC8Bt5C,YApCb0gG,EAAAH,EAAAhqG,GAmDvBgqG,EAAAlpG,UAAAspG,iBAAgB,SAACriG,QACLyO,gBAGRhL,EAAAu1B,OAAMngC,KAAM4V,gBAAiBzO,GAHNnH,KAClB4V,gBAAkBzO,EAAWW,aAI/B2Y,WAQP2oF,EAAAlpG,UAAA0+B,MAAK,eACG6qE,EAAU,IAAOL,EAAUppG,KAC1B4V,gBAAgB9N,QAAK9H,KACrBkjD,eAEPumD,EAAW/kF,gBAAe1kB,MACnBypG,GAUTL,EAAAlpG,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,UAC7BA,EAAqBj7C,EAAAk7C,yBAAwBtjD,KAAMkI,YAAaqH,EAAGC,GAC9D6zC,QAEAZ,mBAAiBziD,KAAS4lB,qBAC5B48B,UAAY5yC,KAAK62B,KACpB8c,EAAAkE,gBAAeznD,KACR4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACL,SAGC2sC,kBAAiBziD,KAAQ4lB,eAEzB29B,EAAAmE,mBAAkB1nD,KAClB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OAAM9V,KACNwiD,WACL,EACAjzC,EACAC,EACA4zC,EACAC,KAeJ+lD,EAAAlpG,UAAAwpG,eAAc,SAACpkG,UACNsqD,EAAA3mD,QAAcjJ,KACd4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACLxQ,IAkBJ8jG,EAAAlpG,UAAAypG,iBAAgB,SAACzgG,EAAG0gG,WAEX1mD,QAAU4B,EAAAzkD,QAAe0kD,KAAG/kD,KAC5BkjD,QAAU4B,EAAAzkD,QAAegnD,KAAI,OAE3B,SAEHwiD,OAAkChnG,IAApB+mG,GAAgCA,SAC7CE,EAAAC,wBAAuB/pG,KACvB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACL5M,EACA2gG,IASJT,EAAAlpG,UAAA+jD,eAAc,kBACLI,EAAAsD,mBAAkB3nD,KAClB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,SAcTszF,EAAAlpG,UAAA8pG,gBAAe,SAACx6D,EAAUyY,UACjB6hD,EAAAG,iBAAgBjqG,KAChB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACL05B,EACAyY,EAAQjoD,KACH8V,SASTszF,EAAAlpG,UAAA+/B,UAAS,kBACAyzD,EAAAC,iBAAgB3zF,KAChB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,SAOTszF,EAAAlpG,UAAAilF,gBAAe,uBACJmkB,uBAAqBtpG,KAAS4lB,qBAChCyjF,cAAarpG,KAAQgqG,gBAAgB,GAAGhqG,KAAOqpG,oBAC/CC,sBAAqBtpG,KAAQ4lB,oBAExByjF,eAQdD,EAAAlpG,UAAAolD,8BAA6B,SAACC,OACtBC,EAAyB,UAC/BA,EAA0B5hD,OAAS8hD,EAAAkC,eAAc5nD,KAC1C4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACLyvC,EACAC,EACA,OAES4jD,EAAW5jD,EAA2BV,EAAAzkD,QAAeulD,KAQlEwjD,EAAAlpG,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAa01C,aAStBqzD,EAAAlpG,UAAA2lD,iBAAgB,SAACpyC,UACRqyC,EAAAokD,qBAAoBlqG,KACpB4V,gBACL,EAAC5V,KACI4V,gBAAgBhS,OAAM5D,KACtB8V,OACLrC,IAUJ21F,EAAAlpG,UAAA2iD,eAAc,SAACh6C,EAAas5C,QACrB6D,UAAU7D,EAAYt5C,EAAa,QAC9B+M,kBAAe5V,KAClB4V,gBAAe,SAEjBA,gBAAgBhS,OAASqiD,EAAA4B,mBAAkB7nD,KACzC4V,gBACL,EACA/M,EAAW7I,KACN8V,aAEF2K,WAET2oF,EAhSA,CAAyBjjD,EAAA9lD,4NCPT8pG,EACdv0F,EACAC,EACAzJ,EACA0J,EACA05B,EACAyY,EACA5Q,OAEIuwB,EAAGnqD,EACDxR,GAAKG,EAAMyJ,GAAUC,KACjB,IAAN7J,EACF27D,EAAI/xD,UACW,IAAN5J,EACT27D,EAAI/xD,EACJ4H,EAAI+xB,UACW,IAANvjC,EAAO,SACZ+L,EAAKpC,EAAgBC,GACrBuC,EAAKxC,EAAgBC,EAAS,GAC9B+sF,EAAS,EACPwH,EAAiB,CAAI,GAClBrmG,EAAI8R,EAASC,EAAQ/R,EAAIqI,EAAKrI,GAAK+R,EAAM,KAC1CmC,EAAKrC,EAAgB7R,GACrBsU,EAAKzC,EAAgB7R,EAAI,GAC/B6+F,GAAUhzF,KAAK62B,MAAMxuB,EAAKD,IAAOC,EAAKD,IAAOK,EAAKD,IAAOC,EAAKD,IAC9DgyF,EAAkBxlG,KAAKg+F,GACvB5qF,EAAKC,EACLG,EAAKC,MAEDtM,EAASyjC,EAAWozD,EACpBz1F,EAAQvC,EAAAy/F,aAAaD,EAAmBr+F,GAC1CoB,EAAQ,GACVsQ,GACG1R,EAASq+F,GAAmBj9F,EAAQ,KACpCi9F,GAAmBj9F,EAAQ,GAAKi9F,GAAmBj9F,EAAQ,IAC9Dy6D,EAAI/xD,IAAW1I,EAAQ,GAAK2I,GAE5B8xD,EAAI/xD,EAAS1I,EAAQ2I,MAGnBimC,EAAY1E,EAAgB,EAAIA,EAAgB,EAChDsT,EAAO1C,GAAmB,IAAOv9C,MAAMqxC,OACpCh4C,EAAI,EAAGA,EAAIg4C,IAAah4C,EAC/B4mD,EAAK5mD,QACGlB,IAAN+kE,EACI5d,SACMnnD,IAAN4a,EACA7H,EAAgBgyD,EAAI7jE,GACpB+Y,EAAAsuC,KAAKx1C,EAAgBgyD,EAAI7jE,GAAI6R,EAAgBgyD,EAAI9xD,EAAS/R,GAAI0Z,UAE/DktC,WAYO2/C,EACd10F,EACAC,EACAzJ,EACA0J,EACA5M,EACA2gG,MAEIz9F,GAAOyJ,EAAM,OACR,SAEL1O,KACA+B,EAAI0M,EAAgBC,EAASC,EAAS,UACpC+zF,IACF1iG,EAAayO,EAAgB9N,MAAM+N,EAAQA,EAASC,IACzCA,EAAS,GAAK5M,EAClB/B,GAEA,QAEAyO,EAAgBxJ,EAAM,GAAKlD,SAChC2gG,IACF1iG,EAAayO,EAAgB9N,MAAMsE,EAAM0J,EAAQ1J,IACtC0J,EAAS,GAAK5M,EAClB/B,GAEA,QAIP+B,GAAK0M,EAAgBC,EAASC,EAAS,GAAC,OACnCF,EAAgB9N,MAAM+N,EAAQA,EAASC,WAE5Cy0F,EAAK10F,EAASC,EACd00F,EAAKp+F,EAAM0J,EACRy0F,EAAKC,GAAE,KACNr/F,EAAOo/F,EAAKC,GAAO,EACrBthG,EAAI0M,GAAiBzK,EAAM,GAAK2K,EAAS,GAC3C00F,EAAKr/F,EAELo/F,EAAKp/F,EAAM,MAGTs/F,EAAK70F,EAAgB20F,EAAKz0F,EAAS,MACrC5M,GAAKuhG,EAAE,OACF70F,EAAgB9N,OAAOyiG,EAAK,GAAKz0F,GAASy0F,EAAK,GAAKz0F,EAASA,OAGhE2H,GAAKvU,EAAIuhG,IADJ70F,GAAiB20F,EAAK,GAAKz0F,EAAS,GACpB20F,GAC3BtjG,EAAU,WACDpD,EAAI,EAAGA,EAAI+R,EAAS,IAAK/R,EAChCoD,EAAWvC,KACTkY,EAAAsuC,KACEx1C,GAAiB20F,EAAK,GAAKz0F,EAAS/R,GACpC6R,EAAgB20F,EAAKz0F,EAAS/R,GAC9B0Z,WAINtW,EAAWvC,KAAKsE,GACT/B,WAaOujG,EACd90F,EACAC,EACAuvC,EACAtvC,EACA5M,EACA2gG,EACAnV,MAEIA,EAAW,OACN4V,EACL10F,EACAC,EACAuvC,EAAKA,EAAKxhD,OAAS,GACnBkS,EACA5M,EACA2gG,OAGA1iG,KACA+B,EAAI0M,EAAgBE,EAAS,UAC3B+zF,IACF1iG,EAAayO,EAAgB9N,MAAM,EAAGgO,IAC3BA,EAAS,GAAK5M,EAClB/B,GAEA,QAGPyO,EAAgBA,EAAgBhS,OAAS,GAAKsF,SAC5C2gG,IACF1iG,EAAayO,EAAgB9N,MAAM8N,EAAgBhS,OAASkS,IACjDA,EAAS,GAAK5M,EAClB/B,GAEA,aAGFpD,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,MACb8R,GAAUzJ,MAGVlD,EAAI0M,EAAgBC,EAASC,EAAS,GAAC,OAClC,QACE5M,GAAK0M,EAAgBxJ,EAAM,GAAC,OAC9Bk+F,EACL10F,EACAC,EACAzJ,EACA0J,EACA5M,GACA,GAGJ2M,EAASzJ,UAEJ,urBCkJTu+F,EAzUA,SAAAvrG,GAOK,SACHwrG,EAAY/hG,EAAas5C,EAAYC,OAArC1hD,EACEtB,EAAAW,KAAAC,OAAAA,QAMAU,EAAK2hD,MAAK,GAMV3hD,EAAK8hD,WAAY,EAMjB9hD,EAAK+hD,mBAAoB,EAErB/3C,MAAM8B,QAAQ3D,EAAY,IAC5BnI,EAAKmiD,eACiEh6C,EACpEs5C,gBAEsBt/C,IAAfs/C,GAA4BC,EACrC1hD,EAAKkiD,mBACHT,EAC8Bt5C,GAEhCnI,EAAK2hD,MAAQD,eAETc,EAASxiD,EAAKomD,YACZ+jD,EAAgDhiG,EAChD+M,EAAe,GACfwvC,EAAI,GACDrhD,EAAI,EAAGC,EAAK6mG,EAAYjnG,OAAQG,EAAIC,IAAMD,EAAC,KAC5C0lG,EAAaoB,EAAY9mG,GACrB,IAANA,IACFm/C,EAASumD,EAAW3iD,aAEtBl8C,EAAAu1B,OAAOvqB,EAAiB6zF,EAAWz2D,sBACnCoS,EAAKxgD,KAAKgR,EAAgBhS,QAE5BlD,EAAKkiD,mBAAmBM,EAAQttC,GAChClV,EAAK2hD,MAAQ+C,kBAtDW0lD,EAAAF,EAAAxrG,GA+D5BwrG,EAAA1qG,UAAA6qG,iBAAgB,SAACtB,QACL7zF,gBAGRhL,EAAAu1B,OAAMngC,KAAM4V,gBAAiB6zF,EAAWz2D,qBAAqBlrC,SAHtC9H,KAClB4V,gBAAkB6zF,EAAWz2D,qBAAqBlrC,aAIpDu6C,MAAMz9C,KAAI5E,KAAM4V,gBAAgBhS,aAChC6c,WAQPmqF,EAAA1qG,UAAA0+B,MAAK,eACGosE,EAAe,IAAOJ,EAAe5qG,KACpC4V,gBAAgB9N,QAAK9H,KACrBkjD,OAAMljD,KACNqiD,MAAMv6C,gBAEbkjG,EAAgBtmF,gBAAe1kB,MACxBgrG,GAUTJ,EAAA1qG,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,UAC7BA,EAAqBj7C,EAAAk7C,yBAAwBtjD,KAAMkI,YAAaqH,EAAGC,GAC9D6zC,QAEAZ,mBAAiBziD,KAAS4lB,qBAC5B48B,UAAY5yC,KAAK62B,KACpB8c,EAAAC,qBAAoBxjD,KACb4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACL,SAGC2sC,kBAAiBziD,KAAQ4lB,eAEzB29B,EAAAE,wBAAuBzjD,KACvB4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OAAM9V,KACNwiD,WACL,EACAjzC,EACAC,EACA4zC,EACAC,KA0BJunD,EAAA1qG,UAAAypG,iBAAgB,SAACzgG,EAAG0gG,EAAiBqB,WAE3B/nD,QAAU4B,EAAAzkD,QAAe0kD,KAAG/kD,KAC3BkjD,QAAU4B,EAAAzkD,QAAegnD,MACA,IADIrnD,KAC/B4V,gBAAgBhS,OAAY,OAE1B,SAEHimG,OAAkChnG,IAApB+mG,GAAgCA,EAC9ClV,OAAkC7xF,IAApBooG,GAAgCA,SAC7CnB,EAAAoB,yBAAwBlrG,KACxB4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACL5M,EACA2gG,EACAnV,IASJkW,EAAA1qG,UAAA+jD,eAAc,kBACLI,EAAAC,wBAAuBtkD,KACvB4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,SAOT80F,EAAA1qG,UAAAqkD,QAAO,uBACOlC,OASduoD,EAAA1qG,UAAAirG,cAAa,SAACh+F,UACRA,EAAQ,GAACnN,KAASqiD,MAAMz+C,QAAUuJ,EAC7B,SAEEi+F,EAAA/qG,QAAUL,KACd4V,gBAAgB9N,MACT,IAAVqF,EAAc,EAACnN,KAAQqiD,MAAMl1C,EAAQ,GAACnN,KACjCqiD,MAAMl1C,IAAKnN,KAEbkjD,SAST0nD,EAAA1qG,UAAAmrG,eAAc,mBACNz1F,EAAe5V,KAAQ4V,gBACvBwvC,EAAIplD,KAAQqiD,MACZa,EAAMljD,KAAQkjD,OAEd2nD,EAAW,GACbh1F,EAAS,EACJ9R,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACX0lG,EAAU,IAAO2B,EAAA/qG,QACrBuV,EAAgB9N,MAAM+N,EAAQzJ,GAC9B82C,GAEF2nD,EAAYjmG,KAAK6kG,GACjB5zF,EAASzJ,SAEJy+F,GAMTD,EAAA1qG,UAAAklF,iBAAgB,mBACRkmB,EAAS,GACT11F,EAAe5V,KAAQ4V,gBACzBC,EAAS,EACPuvC,EAAIplD,KAAQqiD,MACZvsC,EAAM9V,KAAQ8V,OACX/R,EAAI,EAAGC,EAAKohD,EAAKxhD,OAAQG,EAAIC,IAAMD,EAAC,KACrCqI,EAAMg5C,EAAKrhD,GACXwnG,EAAWzB,EAAAG,iBACfr0F,EACAC,EACAzJ,EACA0J,EACA,IAEFlL,EAAAu1B,OAAOmrE,EAAWC,GAClB11F,EAASzJ,SAEJk/F,GAQTV,EAAA1qG,UAAAolD,8BAA6B,SAACC,OACtBC,EAAyB,GACzBC,EAAc,UACpBD,EAA0B5hD,OAAS8hD,EAAA8lD,oBAAmBxrG,KAC/C4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACLyvC,EACAC,EACA,EACAC,OAESmlD,EACTplD,EACAV,EAAAzkD,QAAeulD,GACfH,IASJmlD,EAAA1qG,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAa81C,mBAStBy0D,EAAA1qG,UAAA2lD,iBAAgB,SAACpyC,UACRqyC,EAAA2lD,0BAAyBzrG,KACzB4V,gBACL,EAAC5V,KACIqiD,MAAKriD,KACL8V,OACLrC,IAUJm3F,EAAA1qG,UAAA2iD,eAAc,SAACh6C,EAAas5C,QACrB6D,UAAU7D,EAAYt5C,EAAa,QAC9B+M,kBAAe5V,KAClB4V,gBAAe,QAEhBwvC,EAAOa,EAAAC,wBAAuBlmD,KAC7B4V,gBACL,EACA/M,EAAW7I,KACN8V,OAAM9V,KACNqiD,YAEFzsC,gBAAgBhS,OAAyB,IAAhBwhD,EAAKxhD,OAAe,EAAIwhD,EAAKA,EAAKxhD,OAAS,QACpE6c,WAETmqF,EAvUA,CAA8BzkD,EAAA9lD,+lBC4Q9BqrG,EApRA,SAAAtsG,YACEusG,QAAAjrG,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKkrG,eAAiBC,EAAAC,4BARDC,EAAAJ,EAAAvsG,GAcvBusG,EAAAzrG,UAAAuyC,QAAO,kBACEw0D,EAAA5mG,QAAWonG,KAWpBkE,EAAAzrG,UAAA8rG,YAAW,SAACrjG,EAAQ2vB,MACb3vB,MAEmB,iBAANA,EAAmB,KAC7ByyB,EAAMywE,EAAAI,MAAMtjG,eACNujG,wBAAwB9wE,EAAK9C,UAChCuzE,EAAAM,WAAWxjG,GAAM3I,KACdksG,wBACevjG,EACzB2vB,QAGU8zE,oBACczjG,EACxB2vB,GAbO,OACF,MAsBXqzE,EAAAzrG,UAAAgsG,wBAAuB,SAAC9wE,EAAK9C,OACrBG,EAAQz4B,KAAQqsG,yBAAyBjxE,EAAK9C,UAChDG,EAAS70B,OAAS,EACb60B,EAAS,GAET,MASXkzE,EAAAzrG,UAAAksG,oBAAmB,SAACl7F,EAAMonB,UACjB,MAWTqzE,EAAAzrG,UAAA4nG,aAAY,SAACn/F,EAAQ2vB,MACd3vB,MAEmB,iBAANA,EAAmB,KAC7ByyB,EAAMywE,EAAAI,MAAMtjG,eACN0jG,yBAAyBjxE,EAAK9C,UACjCuzE,EAAAM,WAAWxjG,GAAM3I,KACdqsG,yBACe1jG,EACzB2vB,QAGUg0E,qBACc3jG,EACxB2vB,GAbO,MAAA,IAwBbqzE,EAAAzrG,UAAAmsG,yBAAwB,SAACjxE,EAAK9C,OACyB,IAC/CG,EAAQ,GACLxsB,EAAImvB,EAAIl5B,WAAY+J,EAAGA,EAAIA,EAAEsgG,YAChCtgG,EAAEugG,UAAYC,KAAKC,cACrB9hG,EAAAu1B,OACE1H,EAAQz4B,KACHssG,qBAA6CrgG,EAAIqsB,WAIrDG,GAUTkzE,EAAAzrG,UAAAosG,qBAAoB,SAACp7F,EAAMonB,UAClB/xB,EAAAC,YAUTmlG,EAAAzrG,UAAAysG,aAAY,SAAChkG,EAAQ2vB,MACd3vB,MAEmB,iBAANA,EAAmB,KAC7ByyB,EAAMywE,EAAAI,MAAMtjG,eACNikG,yBAAyBxxE,EAAK9C,UACjCuzE,EAAAM,WAAWxjG,GAAM3I,KACd4sG,yBACejkG,EACzB2vB,QAGUu0E,qBACclkG,EACxB2vB,GAbO,OACF,MAuBXqzE,EAAAzrG,UAAA0sG,yBAAwB,SAACxxE,EAAK9C,UACrB,MASTqzE,EAAAzrG,UAAA2sG,qBAAoB,SAAC37F,EAAMonB,UAClB,MAUTqzE,EAAAzrG,UAAA8nG,eAAc,SAACr/F,MACRA,MAEmB,iBAANA,EAAmB,KAC7ByyB,EAAMywE,EAAAI,MAAMtjG,eACNmkG,2BAA2B1xE,UAC9BywE,EAAAM,WAAWxjG,GAAM3I,KACd8sG,2BAAoDnkG,QAEpDokG,uBAA+CpkG,GARlD,OACF,MAgBXgjG,EAAAzrG,UAAA4sG,2BAA0B,SAAC1xE,eACbgtE,gBAQduD,EAAAzrG,UAAA6sG,uBAAsB,SAAC77F,eACTk3F,gBAUduD,EAAAzrG,UAAA8sG,aAAY,SAACxlG,EAAS8wB,OACdpnB,EAAIlR,KAAQitG,iBAAiBzlG,EAAS8wB,eAChCszE,eAAesB,kBAAkBh8F,IAS/Cy6F,EAAAzrG,UAAA+sG,iBAAgB,SAACzlG,EAAS8wB,UACjB,MAWTqzE,EAAAzrG,UAAAitG,cAAa,SAAC10E,EAAUH,OAChBpnB,EAAIlR,KAAQotG,kBAAkB30E,EAAUH,eAClCszE,eAAesB,kBAAkBh8F,IAQ/Cy6F,EAAAzrG,UAAAktG,kBAAiB,SAAC30E,EAAUH,UACnB,MAUTqzE,EAAAzrG,UAAAmtG,cAAa,SAAC5lG,EAAU6wB,OAChBpnB,EAAIlR,KAAQstG,kBAAkB7lG,EAAU6wB,eAClCszE,eAAesB,kBAAkBh8F,IAQ/Cy6F,EAAAzrG,UAAAotG,kBAAiB,SAAC7lG,EAAU6wB,UACnB,MAEXqzE,EAlRA,CAAyB4B,EAAAltG,yLC2MzBmtG,EA3JA,oBACEC,IAIKztG,KACEooG,oBAAiBvlG,EAKnB7C,KACE0tG,8BAA2B7qG,SAUlC4qG,EAAAvtG,UAAAytG,eAAc,SAAChlG,EAAQ2vB,OACjBh5B,KACAg5B,EAAW,KACT8vE,EAAiB9vE,EAAY8vE,eAC7B5uE,EAAAjnB,IAAc+lB,EAAY8vE,gBAAcpoG,KACnCgoG,eAAer/F,GAEtB2vB,EAAY7kB,QACZ20F,GACAA,EAAejwD,aAAenO,EAAA3pC,QAAMq2C,cAEpC0xD,EAAiB5uE,EAAAjnB,IAAc61F,IAChB/qD,eAAe/kB,EAAY7kB,QAE5CnU,EAAO,CACL8oG,eAAgBA,EAChBL,kBAAmBzvE,EAAYyvE,+BAGvB6F,aAAatuG,IAY3BmuG,EAAAvtG,UAAA0tG,aAAY,SAACtuG,UACJC,EAAAC,OAAM,CAET4oG,eAAcpoG,KAAOooG,eACrBL,kBAAiB/nG,KAAO0tG,0BAE1BpuG,IAQJmuG,EAAAvtG,UAAAuyC,QAAO,kBACElsC,EAAAC,YAWTinG,EAAAvtG,UAAA8rG,YAAW,SAACrjG,EAAQ2vB,UACX/xB,EAAAC,YAWTinG,EAAAvtG,UAAA4nG,aAAY,SAACn/F,EAAQ2vB,UACZ/xB,EAAAC,YAWTinG,EAAAvtG,UAAAysG,aAAY,SAAChkG,EAAQ2vB,UACZ/xB,EAAAC,YAUTinG,EAAAvtG,UAAA8nG,eAAc,SAACr/F,UACNpC,EAAAC,YAWTinG,EAAAvtG,UAAA8sG,aAAY,SAACxlG,EAAS8wB,UACb/xB,EAAAC,YAWTinG,EAAAvtG,UAAAitG,cAAa,SAAC10E,EAAUH,UACf/xB,EAAAC,YAWTinG,EAAAvtG,UAAAmtG,cAAa,SAAC5lG,EAAU6wB,UACf/xB,EAAAC,YAEXinG,EAzJA,YAmKgBI,EAA6BpmG,EAAUqmG,EAAOx1E,OAQxDy1E,EAPEhG,EAAoBzvE,EACtBkB,EAAAjnB,IAAc+lB,EAAYyvE,mBAC1B,KACEK,EAAiB9vE,EACnBkB,EAAAjnB,IAAc+lB,EAAY8vE,gBAC1B,QAQF2F,EAJAhG,GACAK,IACC5uE,EAAAw0E,WAAqBjG,EAAmBK,IAE1B0F,EAAQrmG,EAASm3B,QAAUn3B,GAAUuG,UAClD8/F,EAAQ/F,EAAoBK,EAC5B0F,EAAQ1F,EAAiBL,GAGbtgG,EAGdqmG,GACAx1E,QACuDz1B,IAA1By1B,EAAa21E,SAAsB,KAE1DC,EAAQt+F,KAAK06B,IACjB,GAC6BhS,EAAa21E,UAaxCF,IAAgBtmG,IAClBsmG,EAActmG,EAASm3B,SAEzBmvE,EAAYh0D,gBATG,SAAalxC,WACjB9E,EAAI,EAAGC,EAAK6E,EAAYjF,OAAQG,EAAIC,IAAMD,EACjD8E,EAAY9E,GAAK6L,KAAK0S,MAAMzZ,EAAY9E,GAAKmqG,GAASA,SAEjDrlG,YAOJklG,y1BC1PII,EAAuB,qDAQpBC,EAAgBC,EAAcC,UACrCC,IAAcC,gBAAgBH,EAAcC,YAWrCG,EAAkBv9F,EAAMw9F,UAC/BC,EAAmBz9F,EAAMw9F,EAAmB,IAAM39F,KAAI,aAY/C49F,EAAmBz9F,EAAMw9F,EAAqBE,MAE1D19F,EAAKs7F,UAAYC,KAAKoC,oBACtB39F,EAAKs7F,UAAYC,KAAKqC,UAElBJ,EACFE,EAAYhqG,KAAK8I,OAAOwD,EAAK69F,WAAW7wD,QAAO,gBAAA,KAE/C0wD,EAAYhqG,KAAKsM,EAAK69F,oBAGpB9iG,OAAC,MACAA,EAAIiF,EAAKhP,WAAY+J,EAAGA,EAAIA,EAAEsgG,YACjCoC,EAAmB1iG,EAAGyiG,EAAqBE,UAGxCA,WAOOI,EAAWlnF,6BACGA,WAmBdmnF,EAAMC,cACTvH,WAAYC,gBAAgBsH,EAAG,4BAW5BC,EAAkBC,EAAahmF,mBAMjClY,EAAMm+F,OACRx7F,EAAQu7F,EAAYrvG,UACX8C,IAAbumB,EAAyBA,EAAQppB,KACjCkR,EACAm+F,WAEYxsG,IAAVgR,EAAmB,KACfoM,EAAiCovF,EACrCA,EAAYzrG,OAAS,GAEvBgH,EAAAu1B,OAAOlgB,EAAOpM,cAcNy7F,EAAgBF,EAAahmF,mBAM/BlY,EAAMm+F,OACRx7F,EAAQu7F,EAAYrvG,UACX8C,IAAbumB,EAAyBA,EAAQppB,KACjCkR,EACAm+F,QAEYxsG,IAAVgR,GACqCw7F,EACrCA,EAAYzrG,OAAS,GAEjBgB,KAAKiP,aAcH07F,EAAaH,EAAahmF,mBAM5BlY,EAAMm+F,OACRx7F,EAAQu7F,EAAYrvG,UACX8C,IAAbumB,EAAyBA,EAAQppB,KACjCkR,EACAm+F,QAEYxsG,IAAVgR,IACFw7F,EAAYA,EAAYzrG,OAAS,GAAKiQ,aAsD9B27F,EAAyBJ,EAAaK,EAAcrmF,mBAMtDlY,EAAMm+F,OACRx7F,EAAQu7F,EAAYrvG,UACX8C,IAAbumB,EAAyBA,EAAQppB,KACjCkR,EACAm+F,QAEYxsG,IAAVgR,IACqCw7F,EACrCA,EAAYzrG,OAAS,QAGJf,IAAjB4sG,EAA6BA,EAAev+F,EAAKw+F,WAChC77F,aAeX87F,EAAkBC,EAAYxmF,mBAC3BlY,EAAM2C,EAAOw7F,GAC5BO,EAAW7vG,UACI8C,IAAbumB,EAAyBA,EAAQppB,KACjCkR,EACA2C,EACAw7F,GAE2CA,EAC3CA,EAAYzrG,OAAS,GAEGsN,KACf0K,YAAY1K,aAgBX2+F,EAAoBD,EAAYxmF,OAC1C0mF,EAAeC,kBACF7+F,EAAM2C,EAAOw7F,WACNxsG,IAAlBitG,EAA2B,CAC7BA,EAAa,OACPE,EAAW,GACjBA,EAAY9+F,EAAKw+F,WAAaE,EAC9BE,EAAc5+F,EAAKm9F,cAAgB2B,EACnCD,EAAcE,EAAsB/+F,EAAKw+F,WAE3CQ,EAAUJ,EAAeC,EAAal8F,EAAOw7F,aAiBjCY,EAAsBE,EAAcC,OAC5CC,EAAgBF,kBAQVt8F,EAAOw7F,EAAaiB,OAItBp/F,EAHwCm+F,EAC5CA,EAAYzrG,OAAS,GAEFsN,KACjBq/F,EAAWF,cACExtG,IAAb0tG,IACFA,EAAWD,GAKNlC,OADgBvrG,IAArButG,EAAiCA,EAAmBl/F,EAAKm9F,aACCkC,QAYrDC,EAA+BP,aAa5BQ,EAAa3oF,EAAQ4oF,WAC7B9sG,EAAS8sG,EAAY9sG,OACrB+sG,EAAQ,IAAOjmG,MAAM9G,GAClBG,EAAI,EAAGA,EAAIH,IAAUG,EAC5B4sG,EAAS5sG,GAAK+jB,EAAO4oF,EAAY3sG,WAE5B4sG,WAaOC,EAAgBC,EAAeC,EAAWC,GAGrD,IAEChtG,EAAGC,EADDgtG,OAAkCnuG,IAApBkuG,EAAgCA,EAAe,OAE9DhtG,EAAI,EAAGC,EAAK6sG,EAAcjtG,OAAQG,EAAIC,IAAMD,EAC/CitG,EAAYH,EAAc9sG,IAAM+sG,SAE3BE,WAWOC,EAAUC,EAAWhgG,EAAMm+F,EAAajmF,OAClDnd,MACCA,EAAIiF,EAAKo4E,kBAAmBr9E,EAAGA,EAAIA,EAAEklG,mBAAkB,KACpDC,EAAUF,EAAUjlG,EAAEoiG,sBACZxrG,IAAZuuG,EAAqB,KACjBC,EAASD,EAAQnlG,EAAEyjG,gBACV7sG,IAAXwuG,GACFA,EAAOtxG,KAAKqpB,EAAUnd,EAAGojG,cAiBjBiC,EACdxpF,EACAopF,EACAhgG,EACAm+F,EACAjmF,UAEAimF,EAAYzqG,KAAKkjB,GACjBmpF,EAAUC,EAAWhgG,EAAMm+F,EAAajmF,GACfimF,EAAYnvE,eAyBvBgwE,EACdJ,EACAC,EACAtrF,EACA4qF,EACAkC,EACAnoF,WAGIvV,EAAO3C,EADLtN,QAAuBf,IAAb0uG,EAAyBA,EAAW9sF,GAAQ7gB,OAEnDG,EAAI,EAAGA,EAAIH,IAAUG,OAEdlB,KADdgR,EAAQ4Q,EAAO1gB,UAQAlB,KANbqO,EAAO6+F,EAAYhwG,UACJ8C,IAAbumB,EAAyBA,EAAQppB,KACjC6T,EACAw7F,OACaxsG,IAAb0uG,EAAyBA,EAASxtG,QAAKlB,KAGvCitG,EAAc5+F,EAAKm9F,cAAcn9F,EAAKw+F,WAAW3vG,KAC/CqpB,EACAlY,EACA2C,EACAw7F,YA8BMmC,EACd1pF,EACAgoF,EACAC,EACAtrF,EACA4qF,EACAkC,EACAnoF,UAEAimF,EAAYzqG,KAAKkjB,GACjBooF,EACEJ,EACAC,EACAtrF,EACA4qF,EACAkC,EACAnoF,GAEiCimF,EAAYnvE,UAG7CuxE,OAAiB5uG,WAgBL6uG,gBACS7uG,IAAnB4uG,GAAoD,oBAAbE,gBACzCF,EAAc,IAAOE,eAEhBF,MAGLG,OAAY/uG,WAiBA0rG,gBACI1rG,IAAd+uG,GAA0C,oBAARvwG,WACpCuwG,EAAYvwG,SAASwwG,eAAeC,eAAc,GAAA,GAAS,OAEtDF,yhBCnkBOG,EAAY7gG,OAUpBhI,EATAgT,EAAI2vF,EAAAmG,kBAAkB9gG,GAAM,UAS5BhI,EAAC,6BAAgCoT,KARdJ,SAUPrZ,IAATqG,EAAE,KAAoB,kBAUjB+oG,EAAa/gG,OACrBgL,EAAI2vF,EAAAmG,kBAAkB9gG,GAAM,GAC5BghG,EAAWn9E,KAAKk3E,MAAM/vF,UACrBoT,MAAM4iF,QAAYrvG,EAAYqvG,EAAW,aAOlCC,EAAYjhG,OAWpBhI,EAVAgT,EAAI2vF,EAAAmG,kBAAkB9gG,GAAM,UAU5BhI,EAAC,4CAA+CoT,KAT7BJ,IAWhBgjB,WAAWh2B,EAAE,oBAURkpG,EAAuBlhG,OAU/BhI,EATAgT,EAAI2vF,EAAAmG,kBAAkB9gG,GAAM,UAS5BhI,EAAC,gBAAmBoT,KARUJ,IAU3BM,SAAStT,EAAE,GAAI,oBAUVmpG,EAAWnhG,UAClB26F,EAAAmG,kBAAkB9gG,GAAM,GAAOohG,gBAOxBC,EAAqBrhG,EAAMshG,GACzCC,EAAoBvhG,EAAMshG,EAAI,IAAM,cAOtBE,EAAkBxhG,EAAMyhG,GACtCzhG,EAAK0K,YAAYiwF,EAAA+G,cAAcC,mBAAmBF,aAOpCG,EAAsB5hG,EAAMghG,OACpCa,EAAI,IAAOh+E,KAAgB,IAAXm9E,GAChBS,EACJI,EAAKC,iBAAc,IAEnBC,EAAAC,UAAUH,EAAKI,cAAgB,EAAG,GAAC,IAEnCF,EAAAC,UAAUH,EAAKK,aAAc,GAAC,IAE9BH,EAAAC,UAAUH,EAAKM,cAAe,GAAC,IAE/BJ,EAAAC,UAAUH,EAAKO,gBAAiB,GAAC,IAEjCL,EAAAC,UAAUH,EAAKQ,gBAAiB,GAAC,IAEnCriG,EAAK0K,YAAYiwF,EAAA+G,cAAcx8C,eAAeu8C,aAOhCa,EAAqBtiG,EAAMma,OACnCsnF,EAAStnF,EAAQooF,cACvBviG,EAAK0K,YAAYiwF,EAAA+G,cAAcx8C,eAAeu8C,aAOhCe,EAAgCxiG,EAAMyiG,OAC9ChB,EAASgB,EAAmBl8E,WAClCvmB,EAAK0K,YAAYiwF,EAAA+G,cAAcx8C,eAAeu8C,aAOhCF,EAAoBvhG,EAAMyhG,GACxCzhG,EAAK0K,YAAYiwF,EAAA+G,cAAcx8C,eAAeu8C,2lBCyL7C,SACMiB,EAAgBta,WACjBua,EAAgB,GACb9vG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChD8vG,EAAiBjvG,KAAK00F,EAAWv1F,GAAG66B,gBAE/Bi1E,MAGTC,EAtUA,SAAA10G,GAGK,SACH20G,EAAYC,OAAZtzG,EACEtB,EAAAW,KAAAC,OAAAA,YAMAU,EAAKuzG,YAAcD,GAAkC,KAKrDtzG,EAAKwzG,kBAAiB,GAEtBxzG,EAAKyzG,mCAlBwBC,EAAAL,EAAA30G,GAwB/B20G,EAAA7zG,UAAAm0G,0BAAyB,gBAClBH,kBAAkBjrG,QAAQrI,EAAAoC,oBAC1BkxG,kBAAkBtwG,OAAS,GAMlCmwG,EAAA7zG,UAAAi0G,wBAAuB,mBACXF,oBAGDlwG,EAAI,EAAGC,EAAEhE,KAAQi0G,YAAYrwG,OAAQG,EAAIC,IAAMD,EAAC/D,KAClDk0G,kBAAkBtvG,KACrBhE,EAAAC,OAAMb,KAAMi0G,YAAYlwG,GAAI2c,EAAArgB,QAAUsgB,OAAM3gB,KAAOygB,QAAOzgB,QAUhE+zG,EAAA7zG,UAAA0+B,MAAK,eACG01E,EAAkB,IAAOP,EAAmB,aAClDO,EAAmBC,cAAav0G,KAAMi0G,aACtCK,EAAmB5vF,gBAAe1kB,MAC3Bs0G,GAUTP,EAAA7zG,UAAAijD,eAAc,SAAC5zC,EAAGC,EAAG4zC,EAAcC,MAC7BA,EAAqBj7C,EAAAk7C,yBAAwBtjD,KAAMkI,YAAaqH,EAAGC,GAAC,OAC/D6zC,UAEHi2C,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDs/C,EAAqBi2C,EAAWv1F,GAAGo/C,eACjC5zC,EACAC,EACA4zC,EACAC,UAGGA,GAQT0wD,EAAA7zG,UAAAwjD,WAAU,SAACn0C,EAAGC,WACN8pF,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,KAC5Cu1F,EAAWv1F,GAAG2/C,WAAWn0C,EAAGC,GAAC,OACxB,SAGJ,GAQTukG,EAAA7zG,UAAAqoD,cAAa,SAAC90C,GACZrL,EAAAs2B,oBAAoBjrB,WACd6lF,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDqE,EAAA+3B,OAAO1sB,EAAQ6lF,EAAWv1F,GAAGmE,oBAExBuL,GAQTsgG,EAAA7zG,UAAAu/F,cAAa,kBACJmU,EAAe5zG,KAAMi0G,cAM9BF,EAAA7zG,UAAAq5F,mBAAkB,uBACJ0a,aAMdF,EAAA7zG,UAAAs0G,4BAA2B,eACK,IAC1BC,EAAe,GACbnb,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAC5Cu1F,EAAWv1F,GAAG0uC,YAAOzyC,KAAYyyC,UACnCgiE,EAAkBA,EAAgB7O,OACGtM,EACjCv1F,GACCywG,+BAGLC,EAAgB7vG,KAAK00F,EAAWv1F,WAG7B0wG,GAQTV,EAAA7zG,UAAAoyC,sBAAqB,SAACiT,WACXoD,6BAA0B3oD,KAAU4lB,qBACtCgjC,yCAA2C,OAC3CD,2BAA0B3oD,KAAQ4lB,eAGvC2/B,EAAmB,GACgC,IAD/BvlD,KACd4oD,0CACJrD,EAAgBvlD,KAAQ4oD,yCAAwC,OAAA5oD,aAK9D00G,EAAoB,GACpBpb,EAAUt5F,KAAQi0G,YACpBU,GAAa,EACR5wG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAAC,KAC3C0D,EAAW6xF,EAAWv1F,GACtB8kD,EAAqBphD,EAAS6qC,sBAClCiT,GAEFmvD,EAAqB9vG,KAAKikD,GACtBA,IAAuBphD,IACzBktG,GAAa,MAGbA,EAAU,KACNC,EAA4B,IAAOb,EAAmB,aAC5Da,EAA6BC,mBAAmBH,GACzCE,cAEFhsD,yCAA2CrD,QAUpDwuD,EAAA7zG,UAAAuyC,QAAO,kBACEC,EAAAryC,QAAag2C,qBAStB09D,EAAA7zG,UAAA2lD,iBAAgB,SAACpyC,WACT6lF,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,KAC5Cu1F,EAAWv1F,GAAG8hD,iBAAiBpyC,GAAM,OAChC,SAGJ,GAMTsgG,EAAA7zG,UAAA0kB,QAAO,kBAC8B,SAAvBqvF,YAAYrwG,QAU1BmwG,EAAA7zG,UAAA0wB,OAAM,SAAClhB,EAAO2+B,WACNirD,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDu1F,EAAWv1F,GAAG6sB,OAAOlhB,EAAO2+B,QAEzB5tB,WAaPszF,EAAA7zG,UAAAwqB,MAAK,SAACva,EAAI64C,EAAQ1U,OACZjG,EAASiG,EACRjG,IACHA,EAASjmC,EAAAulC,UAAS3tC,KAAMkI,sBAEpBoxF,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDu1F,EAAWv1F,GAAG2mB,MAAMva,EAAI64C,EAAQ3a,QAE7B5tB,WAQPszF,EAAA7zG,UAAAq0G,cAAa,SAACjb,QACPub,mBAAmBjB,EAAgBta,KAM1Cya,EAAA7zG,UAAA20G,mBAAkB,SAACvb,QACZ+a,iCACAJ,YAAc3a,OACd6a,+BACA1zF,WAYPszF,EAAA7zG,UAAA65C,eAAc,SAACtgC,WACP6/E,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDu1F,EAAWv1F,GAAGg2C,eAAetgC,QAE1BgH,WAUPszF,EAAA7zG,UAAAywB,UAAS,SAAC/X,EAAQC,WACVygF,EAAUt5F,KAAQi0G,YACflwG,EAAI,EAAGC,EAAKs1F,EAAW11F,OAAQG,EAAIC,IAAMD,EAChDu1F,EAAWv1F,GAAG4sB,UAAU/X,EAAQC,QAE7B4H,WAMPszF,EAAA7zG,UAAA6C,gBAAe,gBACRsxG,4BACLj1G,EAAAc,UAAM6C,gBAAehD,KAAAC,OAEzB+zG,EAxTA,CAAiC9qD,EAAA5oD","sources":["node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/util.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/color.js","node_modules/ol/src/math.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/dom.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/View.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/size.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/format/XMLFeature.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/xml.js","node_modules/ol/src/format/xsd.js","node_modules/ol/src/geom/GeometryCollection.js"],"sourcesContent":["/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext(\n    '2d',\n    opt_Context2DSettings\n  ));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n"],"names":["$976448907138da16f7612e32ecc55ac7$export$9099ad97b570f7c","_super","Map1","options","$6RQ94","assign","controls","$5ScHR","defaults","interactions","$5h33g","onFocusOnly","call","this","$976448907138da16f7612e32ecc55ac7$var$__extends","prototype","createRenderer","$1iV0Z","default","$5p7rl","$2ae21f590be041e7827bf48426c0766a$export$9099ad97b570f7c","CompositeMapRenderer","map","_this","fontChangeListenerKey_","$3H2uZ","listen","$6yQsI","checkedFonts","$5PWvX","PROPERTYCHANGE","redrawText","bind","element_","document","createElement","style","position","width","height","zIndex","className","$3Rx15","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2ae21f590be041e7827bf48426c0766a$var$__extends","dispatchRenderEvent","type","frameState","getMap","hasListener","event_1","$OadRJ","undefined","dispatchEvent","disposeInternal","unlistenByKey","parentNode","removeChild","renderFrame","calculateMatrices2D","$4uxJu","PRECOMPOSE","layerStatesArray","sort","a","b","viewState","length","declutterLayers","previousElement","i","ii","layerState","layerIndex","$Lzmdv","inView","sourceState","$4atwc","READY","UNDEFINED","layer","element","render","push","renderDeclutter","$4eVqD","replaceChildren","POSTCOMPOSE","display","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","callback","layerFilter","layerStates","hasRenderer","data","getRenderer","getDataAtPixel","result","$2vgwj","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$3U9Yj","shared","expire","$52488a0195cf0e38344877f5a3896831$export$9099ad97b570f7c","MapRenderer","map_","$52488a0195cf0e38344877f5a3896831$var$__extends","$6fegY","abstract","coordinateToPixelTransform","pixelToCoordinateTransform","$5ljS4","compose","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","checkWrapped","thisArg","thisArg2","managed","feature","geometry","projection","translatedCoordinate","$1gmYD","wrapX","slice","offsets","canWrapX","projectionExtent","getExtent","worldWidth","$4lmw7","getWidth","numLayers","matches","tmpCoord","j","layerRenderer","source","getSource","coordinates","getWrapX","callback_1","order","forEach","m","i1","distanceSq","some","hasFeatureAtCoordinate","$4nF2G","TRUE","canExpireCache","postRenderFunctions","$7xsVg","$f7bbc97715b7cef936b659025f276afb$export$9099ad97b570f7c","Disposable","disposed","dispose","$8ff7925ef9afa7e69604ab9620edac22$export$ad8dd69aa6772cd0","$8ff7925ef9afa7e69604ab9620edac22$export$5c50afa32081505e","$8ff7925ef9afa7e69604ab9620edac22$export$3850addf0fb4e6a7","$8ff7925ef9afa7e69604ab9620edac22$export$1bd42086bda9cade","fn","lastResult","lastArgs","lastThis","called","nextArgs","Array","arguments","$3MevS","equals","apply","$7c21d7646a0313abf7b847efa68bfceb$export$26b1c556c0e0f127","haystack","needle","opt_comparator","mid","cmp","comparator","$7c21d7646a0313abf7b847efa68bfceb$export$8eda8fbd1364c8a1","low","high","found","$7c21d7646a0313abf7b847efa68bfceb$export$627ad4a8fadf1912","arr","obj","indexOf","$7c21d7646a0313abf7b847efa68bfceb$export$45934da9231b7323","target","direction","n","$7c21d7646a0313abf7b847efa68bfceb$export$1f4f991ce94838ce","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$46e35401bc090c62","extension","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$bcc761834e33d339","arr1","arr2","len1","$7c21d7646a0313abf7b847efa68bfceb$export$fd1d1d368f0c3e6f","opt_func","opt_strict","compare","every","currentVal","index","res","$cd365e7aabd14aaf6df378f6a61e84d7$export$18e1b4ff5b3c2297","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$604e9536b9e0488a","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$f2eb173e8f6e4130","$af95442a94d1862a138c401177ef0c4b$var$transformStringDiv","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$83abccee78a744ce","$af95442a94d1862a138c401177ef0c4b$export$6cfa4eec14fd8155","transform","$af95442a94d1862a138c401177ef0c4b$export$77f8d2fc923b14e3","$af95442a94d1862a138c401177ef0c4b$export$4739cf887d3ac19b","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$af95442a94d1862a138c401177ef0c4b$export$d259b918f3750573","$af95442a94d1862a138c401177ef0c4b$export$6af9bbf310c9e4bf","x","y","$af95442a94d1862a138c401177ef0c4b$export$d40e2456b1281660","angle","cos","Math","sin","$af95442a94d1862a138c401177ef0c4b$export$8f869025bba9609b","$af95442a94d1862a138c401177ef0c4b$export$e7468c0ae08395df","$af95442a94d1862a138c401177ef0c4b$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$af95442a94d1862a138c401177ef0c4b$export$f37782ea24d4d643","$af95442a94d1862a138c401177ef0c4b$export$47bee913e0e80eb4","$af95442a94d1862a138c401177ef0c4b$export$6e6aac0f60e83c70","mat","det","$1mHUI","assert","transformString","join","$YyeWG","WORKER_OFFSCREEN_CANVAS","node","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$543c908bf17a24fb","$2016f251f21b02e27a5ca36c37510540$export$bccc8605349feea7","$2016f251f21b02e27a5ca36c37510540$export$f16ffc71033a7aaa","$2016f251f21b02e27a5ca36c37510540$export$1940d5d2b4cf824d","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$9544418e5c6fedfe","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$700ce540937d8c69","passive","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$2ce41f61858dd350a0b2670bdab4e597$export$b8795f4f643ce74f","assertion","errorCode","$7I9hv","$fd652548d0f540d94aaff6aa830746d2$export$9099ad97b570f7c","AssertionError","code","message","VERSION","split","name","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$8ebfb36ef5532881c5652b708da2c120$export$a7ecbd362d65c1fe","extent","$8ebfb36ef5532881c5652b708da2c120$export$dbb3d72606cdc11","$8ebfb36ef5532881c5652b708da2c120$export$2852acc8f8b94686","$8ebfb36ef5532881c5652b708da2c120$export$14e1765886db335a","value","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$d6a0542127b96c83","$8ebfb36ef5532881c5652b708da2c120$export$c7d6a927f416dd39","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$c422a9fcb5f1ee5c","$8ebfb36ef5532881c5652b708da2c120$export$cc70e7e516e4370f","$8ebfb36ef5532881c5652b708da2c120$export$4f55e2d709659e7b","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","$4aF1u","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$ea8082d0226d35a5","$8ebfb36ef5532881c5652b708da2c120$export$80741250c74fd4fa","$8ebfb36ef5532881c5652b708da2c120$export$b6ab620e694fb080","$8ebfb36ef5532881c5652b708da2c120$export$303e7fab357a87ae","$8ebfb36ef5532881c5652b708da2c120$export$bfc2e43ae5c3c00c","$8ebfb36ef5532881c5652b708da2c120$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$4b116deb3079b147","$8ebfb36ef5532881c5652b708da2c120$export$bcc761834e33d339","$8ebfb36ef5532881c5652b708da2c120$export$46e35401bc090c62","$8ebfb36ef5532881c5652b708da2c120$export$8696fee511ea7c7a","min","max","$8ebfb36ef5532881c5652b708da2c120$export$c26f7b9c5adc34b4","val","$8ebfb36ef5532881c5652b708da2c120$export$3932426cd8118930","$8ebfb36ef5532881c5652b708da2c120$export$4e2fc25ce97f3583","$8ebfb36ef5532881c5652b708da2c120$export$35aedeaeee8be6cd","$8ebfb36ef5532881c5652b708da2c120$export$5100f0815ea32995","$8ebfb36ef5532881c5652b708da2c120$export$ab4e37d31d15614d","area","$8ebfb36ef5532881c5652b708da2c120$export$988399e568471db1","$8ebfb36ef5532881c5652b708da2c120$export$3dc3550566517965","$8ebfb36ef5532881c5652b708da2c120$export$e178c8044d3d0a05","$8ebfb36ef5532881c5652b708da2c120$export$339e303bf205caae","$8ebfb36ef5532881c5652b708da2c120$export$38622892ed79bdc7","corner","$4nuo6","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$8ebfb36ef5532881c5652b708da2c120$export$3212225221d5bc14","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$c491031eb9adcc3a","intersection","$8ebfb36ef5532881c5652b708da2c120$export$c3bd2c3b798b0350","$8ebfb36ef5532881c5652b708da2c120$export$d1e01ccfd06bf8ee","$8ebfb36ef5532881c5652b708da2c120$export$9f54817615211741","deltaX","deltaY","$8ebfb36ef5532881c5652b708da2c120$export$525a75abb91115e3","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$8ebfb36ef5532881c5652b708da2c120$export$76e02248c0889c3e","transformFn","opt_stops","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$8ebfb36ef5532881c5652b708da2c120$export$5a0d9577a24f3c5b","floor","$8fe041eefe2f7aaeb97e4d98623d5d5e$export$9099ad97b570f7c","$8913dbc1b585601bf0ecb482246c0b4c$export$9099ad97b570f7c","$80553d92e1fbcb82d752b6de833f9cf3$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","key","iconImage","src","crossOrigin","color","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","set","setSize","maxCacheSize","$6KuGy","asString","$80553d92e1fbcb82d752b6de833f9cf3$export$601b9e2be44c7cb2","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$9fe004474d6f7f65","$ddc7f5de3664aab559d1c545c366e59d$export$47bee913e0e80eb4","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$21528ce64591bf2","s","hasOwnProperty","r","g","exec","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$2e33abec8aecd572","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$7266a24c0caa2a8","$4qq0p","clamp","$916dab65013919ad0345478f9a9f4e0f$export$4b8705656de00c72","$916dab65013919ad0345478f9a9f4e0f$export$4a376e0f60d976ee","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$e08236045caaa3e1","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$fd0b1e5ac4df516c","t","$916dab65013919ad0345478f9a9f4e0f$export$8b6706701cd75ea9","$916dab65013919ad0345478f9a9f4e0f$export$27dc5719ceda6735","maxRow","maxEl","abs","absValue","coef","k","$916dab65013919ad0345478f9a9f4e0f$export$11468133b1231643","angleInRadians","PI","$916dab65013919ad0345478f9a9f4e0f$export$4fc80c88d72f096","angleInDegrees","$916dab65013919ad0345478f9a9f4e0f$export$3334706ffb3dccb1","$916dab65013919ad0345478f9a9f4e0f$export$45ca8e7f50ccf2e0","$1935b85c22cfc539ea58e141ab0b37d6$export$16970faadcd3f29b","visible","minResolution","maxResolution","zoom","minZoom","maxZoom","$1935b85c22cfc539ea58e141ab0b37d6$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","$4ZHam","getChangeEventType","$3mjx6","SOURCE","handleSourcePropertyChange_","setSource","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","getState","handleSourceChange_","changed","$65ADj","CHANGE","getFeatures","Promise","resolve","prepareFrame","evt","arrayLayerState","$1Mpeg","$3a8294651627eb74246351f5b596cf68$export$9099ad97b570f7c","BaseLayer","properties","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","$3a8294651627eb74246351f5b596cf68$var$__extends","getClassName","opt_managed","state","getZIndex","round","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$a41f90da440d5a4a421775ee47a2c536$export$b902cfd711fa7f06","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$0qSof","$a41f90da440d5a4a421775ee47a2c536$var$BaseObject","BaseObject","opt_values","getUid","values_","getKeys","keys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$b958104f5d8e9527","opt_silent","values","applyProperties","unset","isEmpty","$5u1mN","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$a41f90da440d5a4a421775ee47a2c536$export$9099ad97b570f7c","$003acff01e79c0a73122c747343d2e59$export$9099ad97b570f7c","BaseEvent","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$bfcfd5d9960b75cc9cb78b58301ad8a4$export$9099ad97b570f7c","$02e80757fefec0a9636ae28d17c9fab2$export$21f63b82add5980c","$02e80757fefec0a9636ae28d17c9fab2$export$9099ad97b570f7c","Observable","revision_","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","getRevision","on","listener","len","once","listenOnce","ol_key","un","$4GA14","$99fe3f3343ef18166bd431edc467d890$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$99fe3f3343ef18166bd431edc467d890$var$__extends","listeners","listenersForType","event","propagate","dispatching","pendingRemovals","handleEvent","pr","VOID","getListeners","opt_type","splice","$e1ac967f910869e98e549bfd20a1853c$export$f3c88f5a058bec38","var_sources","TypeError","output","$e1ac967f910869e98e549bfd20a1853c$export$97fff7491bd246bd","object","property","$e1ac967f910869e98e549bfd20a1853c$export$207c30846165e93a","$e1ac967f910869e98e549bfd20a1853c$export$988399e568471db1","$c81aa09fb137106970dbc142b1e89ec3$export$9099ad97b570f7c","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$7961378a294a4943979a10a4df4a3fcf$export$ff95bcce2965a200","opt_this","opt_once","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$d2df825b2d8bc2ba","$7961378a294a4943979a10a4df4a3fcf$export$6dee5fd4fdf600ff","$6e657bb9f80dab756c945a825e2a2cee$export$9099ad97b570f7c","$939d3f0e5ddda81ef3d6b6e4c37a0795$export$9099ad97b570f7c","PRERENDER","POSTRENDER","RENDERCOMPLETE","$88faaf1879d30d470a1b447dd4b5a77a$export$9099ad97b570f7c","LOADING","$29884e9b826cd25109649ab0c360e769$export$568ed88074851180","delta","$29884e9b826cd25109649ab0c360e769$export$bcc761834e33d339","coordinate1","coordinate2","$29884e9b826cd25109649ab0c360e769$export$d40e2456b1281660","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$8f869025bba9609b","scale","$29884e9b826cd25109649ab0c360e769$export$5a0d9577a24f3c5b","worldsAway","$29884e9b826cd25109649ab0c360e769$export$c8ebaff90a21375a","opt_sourceExtentWidth","sourceExtentWidth","$9d44b4ae0ee335a0d47ee14b2c70e04c$export$ce10beeb24f5e243","number","opt_precision","numberString","toFixed","decimal","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$7ef0aa4943b3f1208e19af1336a3f8f6$export$4b206f1dd0085e9f","$7ef0aa4943b3f1208e19af1336a3f8f6$export$2fbf9d496fb0d5a8","$7ef0aa4943b3f1208e19af1336a3f8f6$export$6cfb92f3ca39d412","$7ef0aa4943b3f1208e19af1336a3f8f6$export$a6463a3b3793c500","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$18c07a12203603b5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$55c06ab37ead2f5d","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ffc0c15ee0fd31b3","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6ad0413f8fea3c71","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3786c39de7e14bd0","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4f3c27e569bdb39e","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b1e2f63226064044","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$b679e5c5d4b15cf5","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$d721e051424a5865","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6f57224ec3df03c9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70c5a077e5d6beb9","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$70a70bbc0da51900","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$907cf5cff4a8acb1","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","measureElement","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$384c0f09c94ed6cc","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","getFontParameters","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$a2bf16790cd8f004","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","left","offsetHeight","createCanvasContext2D","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$4b2ca35321179b27","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$ba197a5e917e3183","lines","widths","numLines","currentWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$8b566ca8fd3b2d9c184057ba73cbf345$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$495cfc7e7a2968e6","newNode","oldNode","parent","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$47503d53c08beb29","$8b566ca8fd3b2d9c184057ba73cbf345$export$f0994cfd84ab1152","lastChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$439ebc2b0f0ec9f4","children","oldChildren","childNodes","oldChild","newChild","$b198bbb8a7fca092de94dd3a772c1343$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","overlays","layerGroup","layers","getLayers","$6wBEG","$3sAUp","LAYERGROUP","TARGET","VIEW","view","$N1rY5","$71dVn","getArray","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","create","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$3hMgG","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","control","$4FhyO","ADD","REMOVE","interaction","addOverlayInternal_","id","getId","toString","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","opt_options","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","top","getTarget","getTargetElement","$2vjin","toUserCoordinate","getView","getProjection","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","$2tPaw","handleMapBrowserEvent","originalEvent","$5e2TO","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","$3dwRD","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","getAnimating","resolveConstraints","removeNode","$3AwuN","$3Jpg2","PASSIVE_EVENT_LISTENERS","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","previousFrameState","$43BI1","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","wantedTiles","$7zDcU","$41hqu","MOVESTART","createOrUpdateEmpty","MOVEEND","clone","setTimeout","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","setViewportSize","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","item","insertAt","elem","removeAt","prev","setAt","opt_except","$994e322493abe750f187f7e3835dca5c$export$9099ad97b570f7c","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$9099ad97b570f7c","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","getIntersection","$5185059e8a82c1ae03c4e1ba7159b318$export$9099ad97b570f7c","MapBrowserEvent","opt_dragging","pixel_","coordinate_","dragging","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$9099ad97b570f7c","MapEvent","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$9099ad97b570f7c","MapBrowserEventHandler","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","emulateClick_","pointerEvent","newEvent","newEvent1","SINGLECLICK","updateActivePointers_","POINTERUP","POINTERCANCEL","pointerId","handlePointerUp_","isMouseActionButton_","button","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","$7aa259efacd921e7e7d327d1aea40a76$export$9099ad97b570f7c","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","$abba75ad998e5558d931e97019b1ab4c$export$9099ad97b570f7c","$841b38a534c9217d8aceb4320d3d91b5$export$9099ad97b570f7c","$71b981cc74aab5981a718ea8e06b800b$export$9099ad97b570f7c","$6bfe069e85349c527971d875462feeac$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$6bfe069e85349c527971d875462feeac$var$__extends","enqueue","added","hifi","$dgki0","LOADED","EMPTY","tileKey","newLoads","getCount","dequeue","IDLE","load","$7gsLl","$6bfe069e85349c527971d875462feeac$export$f7de9366327711a7","sqrt","$eeb9190850355aed8fc5d92349a26bc6$export$55b8074a560bbdf4","$eeb9190850355aed8fc5d92349a26bc6$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","$070765ef09fbcd82a0016eb3aec41934$export$9099ad97b570f7c","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","returnValue","$19fadbefe1b7e34cc76223b5c3e441cc$export$535fae5a159fbda4","smooth","smoothExtentConstraint","$2YpsA","createExtent","constrainOnlyCenter","createProjection","multiWorld","isGlobal","none","$19fadbefe1b7e34cc76223b5c3e441cc$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","showFullExtent","projExtent","resolutions","constrainResolution","$3AiXN","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","getHeight","$6MSva","METERS_PER_UNIT","DEGREES","getMetersPerUnit","$5TQMR","DEFAULT_TILE_SIZE","pow","defaultMinResolution","defaultMaxZoom","createSnapToPower","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$9665b691bc2d5ca0","enableRotation","constrainRotation","$2kc5F","createSnapToZero","createSnapToN","disable","$19fadbefe1b7e34cc76223b5c3e441cc$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","rotX","rotY","$19fadbefe1b7e34cc76223b5c3e441cc$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","fromUserExtent","applyOptions_","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","getCenter","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","anchor","animateInternal","animationCount","series","complete","duration","easing","$46UD2","inAndOut","getResolutionForZoom","modulo","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","add","currentResolution","opt_rotation","opt_size","$3pdCC","CENTER","getConstraints","getConstrainResolution","opt_hints","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","RESOLUTION","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","nearest","linearFindNearest","baseLevel","fit","geometryOrExtent","getSimplifiedGeometry","$5QgBH","fromExtent","getType","$1gVIf","CIRCLE","userProjection","getUserProjection","fitInternal","coords","getFlatCoordinates","minRotX","minRotY","maxRotX","maxRotY","getStride","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","opt_anchor","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$29d4509fdec4b1b2fe8c71c42629ef39$export$9099ad97b570f7c","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","$df0b68b08946bf3d8de6eeca4fba3a5f$var$Units","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$df0b68b08946bf3d8de6eeca4fba3a5f$export$af68584dedf5e52c","$df0b68b08946bf3d8de6eeca4fba3a5f$export$9099ad97b570f7c","$69bda6b48e87f8072533951cf5cd4b41$export$9099ad97b570f7c","$6fef8cd20559fa789cc7c5f681ed5561$export$9099ad97b570f7c","$c1e1f889297e115e83bec772196e32bf$export$33cb2b2277c1ea0c","$c1e1f889297e115e83bec772196e32bf$export$6c563273fc39e165","$524e9c84a4c58bd58490804da4c772c6$export$3fbbaef54e2e9d28","input","opt_output","opt_dimension","$524e9c84a4c58bd58490804da4c772c6$export$678028d364072132","$524e9c84a4c58bd58490804da4c772c6$export$6308908a0016f099","$lXcXx","getCode","$3j6d5","$524e9c84a4c58bd58490804da4c772c6$export$7eb84799c931fe91","projectionLike","$524e9c84a4c58bd58490804da4c772c6$export$75cdc5d556e3d9b2","point","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","metersPerUnit","units","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$747af4f49bde2f53","vertices","$2vjZk","getDistance","$524e9c84a4c58bd58490804da4c772c6$export$a42db349809b0c24","projections","$524e9c84a4c58bd58490804da4c772c6$export$fd4cd3535c7ea97f","destination","$524e9c84a4c58bd58490804da4c772c6$export$f704437a72056fb8","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$13550698a4b6771e","opt_projection","$524e9c84a4c58bd58490804da4c772c6$export$4b169b49e1a4823b","$524e9c84a4c58bd58490804da4c772c6$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$9336879ef6599bf5","$524e9c84a4c58bd58490804da4c772c6$export$f2a2f51d8aa8d6b0","applyTransform","projections1","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$352fd07bdd93dc1e","$524e9c84a4c58bd58490804da4c772c6$export$4a182a4d53d7595c","$524e9c84a4c58bd58490804da4c772c6$export$b5d00774755783fc","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$a7d473ff80a6a3b","$524e9c84a4c58bd58490804da4c772c6$export$f87215506b474b9e","$3OsOH","PROJECTIONS","$35e5h","fromEPSG4326","toEPSG4326","$7d5079714e2786ec6bee07910f0d8a86$export$8c5f77743cd0e8b7","$7d5079714e2786ec6bee07910f0d8a86$export$bb1f4f75177e5528","$7d5079714e2786ec6bee07910f0d8a86$export$6fd015d56b8406c9","$7d5079714e2786ec6bee07910f0d8a86$export$64afaa717a0c4932","$7d5079714e2786ec6bee07910f0d8a86$export$2126dea64bc40b7b","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","global","worldExtent","getPointResolution","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$DMlk4","$7d5079714e2786ec6bee07910f0d8a86$export$850c9b527a5298aa","$7d5079714e2786ec6bee07910f0d8a86$export$128bedc7a8a0ae2c","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$f361696640082386","atan","$1514cc7c23ad291d61b727f0ef5e4246$export$9099ad97b570f7c","Projection","code_","units_","extent_","worldExtent_","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getWorldExtent","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","$655738a66489cc3574c072262645bff6$export$6fd015d56b8406c9","$655738a66489cc3574c072262645bff6$export$af68584dedf5e52c","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$850c9b527a5298aa","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$0ba2913765cbb83278246e730dbcdcdf$export$97fff7491bd246bd","$0ba2913765cbb83278246e730dbcdcdf$export$7eb84799c931fe91","replace","$0ba2913765cbb83278246e730dbcdcdf$export$568ed88074851180","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$97fff7491bd246bd","$6cb154572a1cc3d19ea74b1e9a3a7861$export$568ed88074851180","$6cb154572a1cc3d19ea74b1e9a3a7861$export$7eb84799c931fe91","$525020a649871896a05d6fe288616b91$export$761de677acb0d085","$525020a649871896a05d6fe288616b91$export$aec7b6756585c081","opt_radius","radius","lat1","toRadians","lat2","deltaLatBy2","deltaLonBy2","atan2","$525020a649871896a05d6fe288616b91$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","lon","toDegrees","$61ba71c2b15c8b7e6577526180db0da5$export$33d0cf822839cfa8","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$61ba71c2b15c8b7e6577526180db0da5$export$eaafe0fae18e32b1","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$d1041fa75d07f305","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$75cf935c4655e9fc21b1ade56ed27175$export$7690ad4e930f454b","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$75cf935c4655e9fc21b1ade56ed27175$export$56cba9b4a749f219","$4c6a822b604dbfa9a10722399f7335d0$export$e97ec87d2336bd4e","$4c6a822b604dbfa9a10722399f7335d0$export$eaafe0fae18e32b1","$4c6a822b604dbfa9a10722399f7335d0$export$37e537ca821cbb20","theta","$4c6a822b604dbfa9a10722399f7335d0$export$fdc0b3988dd5aafc","opt_tolerance","tolerance","$8717569d70d85bd7f28c8c1b2c37daee$export$9fbc3b1d6b2da9ec","$8717569d70d85bd7f28c8c1b2c37daee$export$673b9849e2bc032c","$8717569d70d85bd7f28c8c1b2c37daee$export$1b5c1277e30d397d","$8717569d70d85bd7f28c8c1b2c37daee$export$5523e35ab8ae283a","$bffbcd35af658c4477627697774de1c2$var$Polygon","Polygon","opt_layout","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setFlatCoordinates","setCoordinates","$bffbcd35af658c4477627697774de1c2$var$__extends","appendLinearRing","linearRing","polygon","layout","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","$3QyYH","arrayMaxSquaredDelta","assignClosestArrayPoint","containsXY","$3v8bp","linearRingsContainsXY","getOrientedFlatCoordinates","getArea","$3B90O","linearRings","getCoordinates","opt_right","$2wxLi","orientLinearRings","$5X4hW","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","$39fh1","getInteriorPointOfArray","getInteriorPoint","$5g6wp","$3dG11","XYM","getLinearRingCount","getLinearRing","$6iGbz","getLinearRings","ends","linearRingsAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","$4YdW9","quantizeArray","XY","intersectsExtent","$1xC0k","intersectsLinearRingArray","setLayout","$6X6IT","deflateCoordinatesArray","$2FGG8","$bffbcd35af658c4477627697774de1c2$export$9099ad97b570f7c","$bffbcd35af658c4477627697774de1c2$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$bffbcd35af658c4477627697774de1c2$export$b50d271c6e9656cd","$bffbcd35af658c4477627697774de1c2$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getLayout","arrayLength","$bffbcd35af658c4477627697774de1c2$export$5d1798f0e1df079","getRadius","startAngle","$01b4ee2590431d23f431f1e9785f436f$export$9099ad97b570f7c","XYZ","XYZM","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$9099ad97b570f7c","LinearRing","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","maxSquaredDelta","assignClosestPoint","inflateCoordinates","douglasPeucker","deflateCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$2a65008b73824080","$57ce72c0539154dec2abdc81ffcff6df$export$36912b83e488cd77","simpleGeometry","opt_dest","$1VsH2","transform2D","$57ce72c0539154dec2abdc81ffcff6df$export$9099ad97b570f7c","SimpleGeometry","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","computeExtent","createOrUpdateFromFlatCoordinates","getFirstCoordinate","getLastCoordinate","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","opt_sy","$4UIww","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$9099ad97b570f7c","Geometry","createEmpty","extentRevision_","simplifyTransformedInternal","memoizeOne","revision","opt_transform","$a17c336463d573a615343832f6e09aa8$var$__extends","simplifyTransformed","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","returnOrUpdate","simplify","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getTransform","$3f4f29b0a4be88d8241f933ff6121a33$export$92106241c01aa541","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$d40e2456b1281660","anchorX","anchorY","$3f4f29b0a4be88d8241f933ff6121a33$export$8f869025bba9609b","$3f4f29b0a4be88d8241f933ff6121a33$export$41b0d7466cde8385","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","lerp","$020a0553c73896bfe8e0cfb3e7ff136b$export$acf7548d1f0e8581","squaredDelta","squaredDistance","$020a0553c73896bfe8e0cfb3e7ff136b$export$ba38095f6bb45df2","$020a0553c73896bfe8e0cfb3e7ff136b$export$7bbfd5f5d0d7544b","endss","$020a0553c73896bfe8e0cfb3e7ff136b$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$3dd3914e22f9012e","$020a0553c73896bfe8e0cfb3e7ff136b$export$6564f135364e210c","$e477329667689b6619ea04e4a51dbccc$export$a53e62528b652807","$e477329667689b6619ea04e4a51dbccc$export$e175f505890ac90f","$e477329667689b6619ea04e4a51dbccc$export$ab1a51db55485752","coordinatess","$e477329667689b6619ea04e4a51dbccc$export$abe2fb3e7ce9556","coordinatesss","opt_endss","$a357f0a07bdcadd773e93ca791a42f7b$export$a5f6a1911260c251","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","squaredSegmentDistance","$a357f0a07bdcadd773e93ca791a42f7b$export$ade7859c9eb393ec","$a357f0a07bdcadd773e93ca791a42f7b$export$383ea8a1f2974dfb","$a357f0a07bdcadd773e93ca791a42f7b$export$e29de4fdb2175738","$a357f0a07bdcadd773e93ca791a42f7b$export$1df19a1eb5514c2f","$a357f0a07bdcadd773e93ca791a42f7b$export$503109e33f5b8344","simplifiedEndss","$c39683e7fcea5e9dae135d728d60cf52$export$92f32d891164b0ac","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$d82a8a3167f968d","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$db289937da1f5213","opt_coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$9bf2059fd656d5e9","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$99cb92d00fd73c87","$7641779008ab07f3e708dabdbbb046eb$export$3ed76a8ff8a671c","$acd1b863667085614d305475fd6c1d27$export$9099ad97b570f7c","Point","$acd1b863667085614d305475fd6c1d27$var$__extends","createOrUpdateFromCoordinate","deflateCoordinate","$67787df47ebd352536b767ba5aa6ea83$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","numberSafeCompareFunction","segmentLength","$67787df47ebd352536b767ba5aa6ea83$export$2bd6b2f516920f59","interiorPoints","$7311a6a51d57e65f0d3a69bd7a380356$export$f7b55b637f92fd7","forEachCorner","$7311a6a51d57e65f0d3a69bd7a380356$export$e2ed757909b25f63","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$51e46a3625992b91","$7311a6a51d57e65f0d3a69bd7a380356$export$664b9cb38de51b70","$32ab876027ca0904f46063bee68b73aa$export$26f047a5bfac4b1a","coordinatesExtent","extendFlatCoordinates","containsExtent","$1ZN49","point1","point2","intersectsSegment","$32ab876027ca0904f46063bee68b73aa$export$414b603e1c51ecd4","$32ab876027ca0904f46063bee68b73aa$export$717c2c7c46a5bf3d","linearRingContainsXY","$32ab876027ca0904f46063bee68b73aa$export$f14bd9270666b480","linearRingContainsExtent","$32ab876027ca0904f46063bee68b73aa$export$eae4874c99627698","$419a691625de72e89acadcc033e1165f$export$40f3d9558cf6e846","ret","$52f5ef13e882c7db8132623a2b51ee49$export$add61ad31d0a68b4","edge","$52f5ef13e882c7db8132623a2b51ee49$export$586adaf930d9fdb6","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$9ae9bd8fe57776c1","$52f5ef13e882c7db8132623a2b51ee49$export$325e57738fd8b321","$12olT","$52f5ef13e882c7db8132623a2b51ee49$export$4efd43868de93336","$221ffa684d4ba252080508824e602b78$export$c77fe031a1447f2e","$8556eff40cf4f1624cd78ff7ea054c5b$export$c563c2b7121f8771","$8556eff40cf4f1624cd78ff7ea054c5b$export$8f869025bba9609b","$8556eff40cf4f1624cd78ff7ea054c5b$export$48d31d2725e4d98b","$c10299a05f898a09c43f788b5b6dfdbd$export$b403fbac94228e09","$4CXoP","zoomOptions","$5k8Oh","rotateOptions","attribution","$LJZZH","attributionOptions","$194d017bd833b991c2c712fa2ff5b0e5$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","$3Zmpd","$8316c877d328ebfc4f4b917229eec057$export$9099ad97b570f7c","Control","target_","listenerKeys","$8316c877d328ebfc4f4b917229eec057$var$__extends","$aef56543978371a8090d728a4f107ac0$export$9099ad97b570f7c","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","$aef56543978371a8090d728a4f107ac0$var$__extends","resetNorth_","$9812beea87bdcda9027d52b89085c87c$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$9812beea87bdcda9027d52b89085c87c$var$__extends","zoomByDelta_","currentZoom","newZoom","$ad51cb5d42c2f2a2874b19907e742966$export$b403fbac94228e09","kinetic","$2poDG","altShiftDragRotate","$3sou6","doubleClickZoom","$2oWyR","zoomDelta","zoomDuration","dragPan","$4ykpl","pinchRotate","$3ydco","pinchZoom","$2VlPI","keyboard","$5Km6o","$2C7wu","mouseWheelZoom","$7xkCb","shiftDragZoom","$5x3un","$4eeedd039b7e6d5b8277b175715f9541$export$9099ad97b570f7c","DoubleClickZoom","delta_","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","stopEvent","shiftKey","$OBe42","zoomByDelta","$1ad0cf5090e3852174414bfc8cc27b9e$export$63568b31cb17dd4d","linear","$1ad0cf5090e3852174414bfc8cc27b9e$export$d2c07614bfd6a817","$1ad0cf5090e3852174414bfc8cc27b9e$export$9099ad97b570f7c","Interaction","setActive","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$5SIlX","ACTIVE","active","$c147d956996cb96e879ea56bdc9c5d5d$export$9099ad97b570f7c","$959ec1b544453a9fa4f0e9221c3bb0b0$export$9099ad97b570f7c","DragPan","stopDown","FALSE","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","$9XrHo","all","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","handleDragEvent","targetPointers","centroid","$dmoHp","update","handleUpEvent","getAngle","centerpx","handleDownEvent","$0714aed143b912743afff175db44c1dc$export$e61edea4dfe4ed9b","$0714aed143b912743afff175db44c1dc$export$9099ad97b570f7c","PointerInteraction","handleMoveEvent","handlingDownUpSequence","trackedPointers_","$0714aed143b912743afff175db44c1dc$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","getValues","$054715504eaffdc825d0a6ada99ec596$export$8dbdea330bbd6b3c","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$584a07df7b145c47","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$363947888fb85da6","$054715504eaffdc825d0a6ada99ec596$export$a8612972eacfc116","$054715504eaffdc825d0a6ada99ec596$export$9f5e19851eeaf2c1","WEBKIT","MAC","$054715504eaffdc825d0a6ada99ec596$export$1734dfcac3c09b2f","$054715504eaffdc825d0a6ada99ec596$export$59c8376875f673f8","$054715504eaffdc825d0a6ada99ec596$export$5bbcce8021828272","tagName","$054715504eaffdc825d0a6ada99ec596$export$d31d3f3aa38542a8","pointerType","$054715504eaffdc825d0a6ada99ec596$export$45cd27c0322d6513","isPrimary","$719e5208cd50905e41bacbcae2219883$export$9099ad97b570f7c","DragRotate","altShiftKeysOnly","lastAngle_","$719e5208cd50905e41bacbcae2219883$var$__extends","mouseOnly","mouseActionButton","$b5cd6c68e27395a36aa4c8d3c5395250$export$9099ad97b570f7c","DragZoom","shiftKeyOnly","minArea","out_","out","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","onBoxEnd","getGeometry","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","getBottomLeft","getTopRight","factor","scaleFromCenter","$1cgm4","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$4d9b552836937ca2","DragBoxEvent","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$export$9099ad97b570f7c","DragBox","box_","$6kwQG","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","$d0055a036577a61fd8306330947568c7$export$9099ad97b570f7c","RenderBox","geometry_","endPixel_","$d0055a036577a61fd8306330947568c7$var$__extends","render_","px","createOrUpdateGeometry","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","targetNotEditable","pixelDelta_","pixelDelta","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","keyEvent","keyCode","$4iJoZ","DOWN","UP","mapUnitsDelta","pan","$8d5ac6bc9707ee873610cb367c0dab7f$export$9099ad97b570f7c","$55ea853e77e2fe25fa1a8793cb31a3bf$export$9099ad97b570f7c","KeyboardZoom","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$export$9658e13a40f6ce34","TRACKPAD","$f7a99b9e7b1a72242a3eb408b28d3563$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","always","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$601b81cfcc535d77832cc96f04e942a1$var$__extends","scaleDelta","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$9099ad97b570f7c","VectorLayer","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$5Ul36","$6isWD","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","$51t4G","setRenderOrder","renderOrder","opt_style","$5w8pN","createDefaultStyle","toFunction","module","exports","t1","t2","r1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","_all","search","toBBox","o2","collides","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","_condense","compareMinX","compareMinY","toJSON","fromJSON","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","v","M","_allDistMargin","define","amd","RBush","$b550892c9c7d6707a4415bf7976deb12$var$Style","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","setGeometry","fill_","fill","image_","image","renderer","stroke_","stroke","text_","zIndex_","getFill","getImage","getStroke","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$export$4aaa4bacaec09e94","styleFunction","styles_1","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$33d0043adf82cc14","$6Spvy","$2k3WA","$MJAOB","$b550892c9c7d6707a4415bf7976deb12$export$9099ad97b570f7c","$19d3c8bef588e205c4ab8014047de833$export$9099ad97b570f7c","CircleStyle","points","rotateWithView","displacement","$19d3c8bef588e205c4ab8014047de833$var$__extends","getScale","getRotateWithView","getDisplacement","setRadius","radius_","$4uuiL","$9395bcf7fa5c622dff9d678b4abf4bba$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","origin_","radius1","radius2_","radius2","size_","imageSize_","hitDetectionImageSize_","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","getPoints","getRadius2","getAnchor","getHitDetectionImage","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","getPixelRatio","getImageSize","getHitDetectionImageSize","getImageState","$6KqPC","getOrigin","listenImageChange","unlistenImageChange","strokeStyle","lineCap","defaultLineCap","lineJoin","defaultLineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","defaultStrokeStyle","$3R4vQ","asColorLike","defaultLineWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","defaultMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","defaultFillStyle","fillStyle","lineWidth","setLineDash","closePath","asArray","drawHitDetectionCanvas_","$4ASaK","$ddbf871807cbdb80f3672c8008047cee$export$9099ad97b570f7c","$96f7f946d494434256fc7391bfca3d81$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","scale_","scaleArray_","toSize","displacement_","getScaleArray","setRotateWithView","setScale","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$55029509b82b2e2b","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$9099ad97b570f7c","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$c2243072b6513ba407326b2a30b1374a$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","$c2243072b6513ba407326b2a30b1374a$var$__extends","useContainer","renderWorlds","executorGroup","opt_declutterTree","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","makeScale","pixelTransform","canvasTransform","replayGroup","containerReused","clearRect","preRender","clipped","layerExtent","clipUnrotated","postRender","transforms","$4R5ve","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","$25giy","defaultOrder","buffer","loadExtents","gutter","loadExtent","declutterBuilderGroup","$2pH9f","getTolerance","userTransform","loadFeatures","getTransformFromProjections","getSquaredTolerance","styles","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","finish","$63iR2","getOverlaps","builderGroup","opt_declutterBuilderGroup","$5eOHj","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","$7ubxS","$69VVD","$dxG9z","$1f0fO","$3QAmu","$4f54cdaa0352e7689a6e30aa9d8207ec$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$ca67e4c506ae561bc3174e981b55d257$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$ca67e4c506ae561bc3174e981b55d257$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","containsCoordinate","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","coordinateRelationship","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","$3AEwg","CUSTOM","inflateMultiCoordinatesArray","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","reverseSubArray","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$4EgJy","$75febe525c6e0d71892cea5e044a142c$var$Instruction","BEGIN_PATH","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","$75febe525c6e0d71892cea5e044a142c$export$c649c04369bd3370","$75febe525c6e0d71892cea5e044a142c$export$2513c58bc344fc5c","$75febe525c6e0d71892cea5e044a142c$export$84e3c67fd41b07f5","$75febe525c6e0d71892cea5e044a142c$export$6cd4b1e0c0e7240c","$75febe525c6e0d71892cea5e044a142c$export$9099ad97b570f7c","$98c4b84222a5e84ec508cd638c4e0b8c$export$9099ad97b570f7c","VectorContext","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$072d5e6cee1f9ae87cd55eb588566cc6$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$28ceeb2640c662153e0cc1bb27e7eea9$export$9099ad97b570f7c","CanvasLineStringBuilder","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","beginPathInstruction","strokeInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$9099ad97b570f7c","CanvasPolygonBuilder","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","drawFlatCoordinatess_","numEnds","closePathInstruction","setFillStrokeStyles_","circleInstruction","snap","$7e7051822986fcb02ea0e43ac0707b32$export$3964e67694391753","$7e7051822986fcb02ea0e43ac0707b32$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","fillState","strokeState","textState","geometryType","placement","$7iFu4","LINE","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","$7lVD1","matchingChunk","maxAngle","drawChars_","strokeKey","textKey","defaultTextAlign","textBaseline","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$efe444a788e44e26b0fd0d03352a7cb8$export$9099ad97b570f7c","$f19e98a3c9584b88eb9c26a752a19276$export$e8c34bbbade92a3a","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$ac230d10056414a40eb774bd091234f1$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","$ac230d10056414a40eb774bd091234f1$var$__extends","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","getTopLeft","topRight","bottomRight","getBottomRight","bottomLeft","rotateAtOffset","moveTo","inverted","dispatchRenderEvent_","renderPixel","renderCoordinate","newCanvas","newContext","getImageData","err","Uint8Array","$5iuGx","$ae15ed96a99c1303ea67938747c94fca$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","$ae15ed96a99c1303ea67938747c94fca$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","loadImage","imageState","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","$1hA4d","IMAGE","TEXT","DEFAULT","$c6e46405591acfe99e5a94d22fbe8573$var$ExecutorGroup","ExecutorGroup","overlaps","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","$3jzsB","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","extendCoordinate","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$f610334c339a4991","imageData","i_1","idx","result_1","executor","zs","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","$c6e46405591acfe99e5a94d22fbe8573$export$9099ad97b570f7c","$2a2c9e207ab3a32ae55e264c8b11e252$export$9099ad97b570f7c","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$9099ad97b570f7c","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","measureTextWidths","measureTextHeight","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","createOrUpdate","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","setFromArray","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","$5QB2H","lineStringLength","textLength","measureAndCacheTextWidth","startM","parts","$2DI6J","drawTextOnPath","drawChars","cc","chars","part","ii_1","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$1829060502283fb8","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","substring","$c028848ec55b72b61f5eaf0ec6396be2$export$7326ac1b36a49776","$9f8fd0aab32ac5c353b56f527e1d00a9$export$5d244421488756f8","$9f8fd0aab32ac5c353b56f527e1d00a9$export$9fd146a6491490e3","imageSmoothingEnabled","$4R4Ev","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","alpha","img","fillRect","$2mZBT","anchorXUnits","$17PKZ","anchorYUnits","byGeometryType","zIndexKeys","geomAndStyle","kk","$9f8fd0aab32ac5c353b56f527e1d00a9$export$57fd269e987b81b8","resultFeatures","$9f8df4495769241e9ec70201b90e0eaa$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$250247a34cdb6d9c26d2c6d3640e511f$export$9099ad97b570f7c","FRACTION","$4de6336f82b6fd9bc7cf688bb41b8b96$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","$67wV0","anchorXUnits_","anchorYUnits_","crossOrigin_","iconImage_","$4sICh","offset_","offsetOrigin_","offsetOrigin","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","getSrc","setAnchor","iconImageSize","$c921d54e03c98d7c23acffcfb75264d3$export$9099ad97b570f7c","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$var$IconImage","IconImage","unlisten_","imageState_","src_","tainted_","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","$1s8C5","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$7eb84799c931fe91","$2fc4e1887f4ffa14e16ea647fd21482c$export$469eb8ba3f45955e","loadHandler","errorHandler","IMAGE_DECODE","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","imageLoadFunction_","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","$70FsU","$e65a38a3837120ad833711b5930f5912$export$9099ad97b570f7c","ImageBase","$e65a38a3837120ad833711b5930f5912$var$__extends","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$65a5cfeed6fd0c33","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f3b3f9822f340683","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$f0ea347488340e3d","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$522dfd100dd96ba1","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","getGeometries","$4b7d9e079415657c49d05e16783d2ed4$export$9099ad97b570f7c","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","$76e99b295c09c7c5e340e251e89879b1$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$9099ad97b570f7c","VectorSource","loader_","format_","format","url_","url","loader","$1qBP9","xhr","strategy_","strategy","$1b3V9","collection","useSpatialIndex","featuresRtree_","$6Utth","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","$2irPz","handleFeatureChange_","valid","addFeatures","extents","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","uid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","refresh","removeLoadedExtent","removed","setLoader","setUrl","$3f7LD","$e311f93de68f58225dfc37d89d1dcffc$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","items","bbox","forEach_","concat","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionLike","$6a9611a0560ac769e67fadc6cfef9a2c$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","getContextOptions","setAttributions","setState","$26b846260444bc742bddf88d96721338$export$8dbdea330bbd6b3c","$2ef5772bb5b0926a9ba82fc2a88f3163$var$withCredentials","$2ef5772bb5b0926a9ba82fc2a88f3163$export$52988233cf090939","success","failure","XMLHttpRequest","open","$6SnQ2","ARRAY_BUFFER","responseType","withCredentials","onload","status","JSON","responseText","XML","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$4355fa6d12274ca5","dataProjection","$e1f6506982452a68a8aaa230bb78068a$export$9099ad97b570f7c","$fe05caf5f991aea82bd67c9bebabc467$export$7cf753b6a6534915","$fe05caf5f991aea82bd67c9bebabc467$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$f3208b74dbadea817236410092d4ed69$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$f3208b74dbadea817236410092d4ed69$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","$GvdFY","lineStringCoordinateAtM","getCoordinateAt","interpolatePoint","intersectsLineString","$168654b72fccbd53f77518b62ff915e1$export$55be7a9e3fef4787","cumulativeLengths","binarySearch","$168654b72fccbd53f77518b62ff915e1$export$1a804b04fa5a0253","lo","hi","m0","$168654b72fccbd53f77518b62ff915e1$export$8958f67b085a89b1","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$9099ad97b570f7c","MultiLineString","lineStrings","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","appendLineString","multiLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","$7oM0w","getLineStrings","midpoints","midpoint","douglasPeuckerArray","intersectsLineStringArray","$dec84ce654dad439cc55f11914ce0714$export$9099ad97b570f7c","XMLFeature","xmlSerializer_","$6u7wO","getXMLSerializer","$dec84ce654dad439cc55f11914ce0714$var$__extends","readFeature","parse","readFeatureFromDocument","isDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","writeGeometryNode","$2rUWQ","$508255911b6472d9d16e9a97599ab01e$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","$508255911b6472d9d16e9a97599ab01e$export$534b7b915a5ec453","write","transformed","equivalent","decimals","power_1","$d51a9db7ffbc5351b0298bfe2864dc58$export$f6c9fc7378d5d6a6","$d51a9db7ffbc5351b0298bfe2864dc58$export$a5039740b67a9c","namespaceURI","qualifiedName","$d51a9db7ffbc5351b0298bfe2864dc58$export$46d2d1e7bcdd99a3","createElementNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$4131dc4da57aa0c8","normalizeWhitespace","$d51a9db7ffbc5351b0298bfe2864dc58$export$970c25ea2962a3d2","accumulator","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","$d51a9db7ffbc5351b0298bfe2864dc58$export$77e37c6e8311f1ce","$d51a9db7ffbc5351b0298bfe2864dc58$export$a43e9d683f52ab7c","xml","$d51a9db7ffbc5351b0298bfe2864dc58$export$c9b84e3d2c8a2745","valueReader","objectStack","$d51a9db7ffbc5351b0298bfe2864dc58$export$5a6c4415b7f496d8","$d51a9db7ffbc5351b0298bfe2864dc58$export$a228533eec35683a","$d51a9db7ffbc5351b0298bfe2864dc58$export$73d853215f0c71e8","opt_property","localName","$d51a9db7ffbc5351b0298bfe2864dc58$export$2deb56b7ae029e3","nodeWriter","$d51a9db7ffbc5351b0298bfe2864dc58$export$3a8407fea04ebe5f","serializersNS","nodeFactory","serializers","$d51a9db7ffbc5351b0298bfe2864dc58$export$8ebe38e76aa85d36","$d51a9db7ffbc5351b0298bfe2864dc58$export$2e67c97dae900dc9","opt_nodeName","opt_namespaceURI","fixedNodeName","opt_nodeName1","nodeName","$d51a9db7ffbc5351b0298bfe2864dc58$export$81a68ea3ed99d298","$d51a9db7ffbc5351b0298bfe2864dc58$export$56f187f00ba8a12b","orderedKeys","sequence","$d51a9db7ffbc5351b0298bfe2864dc58$export$7567597de432f7e7","namespaceURIs","structure","opt_structureNS","structureNS","$d51a9db7ffbc5351b0298bfe2864dc58$export$d2d9da5f39026f12","parsersNS","nextElementSibling","parsers","parser","$d51a9db7ffbc5351b0298bfe2864dc58$export$606fcd4c4e16fe20","opt_keys","$d51a9db7ffbc5351b0298bfe2864dc58$export$cfa8ff2fe3336fdf","$d51a9db7ffbc5351b0298bfe2864dc58$var$xmlSerializer_","$d51a9db7ffbc5351b0298bfe2864dc58$export$9dbe9ee05a7dfce3","XMLSerializer","$d51a9db7ffbc5351b0298bfe2864dc58$var$document_","implementation","createDocument","$90d80a364a39de433c7f5cd490d4f896$export$2d9b5243090e006a","getAllTextContent","$90d80a364a39de433c7f5cd490d4f896$export$e677ee4949375ba1","dateTime","$90d80a364a39de433c7f5cd490d4f896$export$39fa0db44f151f9d","$90d80a364a39de433c7f5cd490d4f896$export$1840c252c524643f","$90d80a364a39de433c7f5cd490d4f896$export$286b7b22a1a791c7","trim","$90d80a364a39de433c7f5cd490d4f896$export$bbbe78f39d89b09c","bool","$90d80a364a39de433c7f5cd490d4f896$export$8546427d900bb9d0","$90d80a364a39de433c7f5cd490d4f896$export$53afd9ae5847fbf6","string","getDocument","createCDATASection","$90d80a364a39de433c7f5cd490d4f896$export$f902c1d17808b7b1","date","getUTCFullYear","$4MLc1","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$90d80a364a39de433c7f5cd490d4f896$export$3ff1a647d173b6de","toPrecision","$90d80a364a39de433c7f5cd490d4f896$export$ba7d4076978bd372","nonNegativeInteger","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","clonedGeometries","$8af1af76f23419d9d724a1b0182ffb00$export$9099ad97b570f7c","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray"],"version":3,"file":"mixed-renderers.88cf3e0b.js.map"}